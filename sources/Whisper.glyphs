{
.appVersion = "1352";
DisplayStrings = (
noHot,
"aá/abreve/brevecomb/brevecomb_acutecomb/abreveacute/abrevedotbelow/brevecomb_gravecomb/abrevegrave/brevecomb/abreve/abrevedotbelow/ebreve/gbreve/ibreve/obreve/ubreve/breve/brevecomb/brevecomb_acutecomb/brevecomb_gravecomb/hookabovecomb/brevecomb_hookabovecomb/brevecomb_tildecomb/hookabovecomb/brevecomb_hookabovecomb/abrevehookabove/abrevetilde/acaron â/space/acutecomb/circumflexcomb_acutecomb/acircumflexacute/acircumflexdotbelow/circumflexcomb/gravecomb/circumflexcomb_gravecomb/acircumflexgrave/circumflexcomb_hookabovecomb/acircumflexhookabove/acircumflextilde/adblgrave ä/adotbelow à/ahookabove/ainvertedbreve/amacron/aogonek å/aringacute ã",
"a/Placeholder b/Placeholder c/Placeholder d/Placeholder e/Placeholder f/Placeholder g/Placeholder h/Placeholder i/Placeholder j/Placeholder k/Placeholder l/Placeholder m/Placeholder n/Placeholder o/Placeholder p/Placeholder q/Placeholder r/Placeholder s/Placeholder t/Placeholder u/Placeholder v/Placeholder w/Placeholder x/Placeholder y/Placeholder z/Placeholder \012nn/Placeholder no/Placeholder oo/space HH/Placeholder HO/Placeholder OO\012onmw.,:;/ellipsis !¡?¿nn?·/bullet *#/////backslash/space/periodcentered.loclCAT.case/periodcentered.loclCAT (){}[]-­/endash/emdash/hyphentwo _\012o/quotesinglbase/quotedblbase n/quotedblleft d/quotedblright/quoteleft/quoteright «»/guilsinglleft/guilsinglright \"'/leftanglebracket-math/rightanglebracket-math f@",
"eé/ebreve/ecaron/circumflexcomb ê/circumflexcomb_acutecomb/ecircumflexacute/ecircumflexdotbelow/circumflexcomb_gravecomb/ecircumflexgrave/ecircumflexhookabove/ecircumflextilde/edblgrave ë/edotaccent/edotbelow è/ehookabove/einvertedbreve/emacron/eogonek/etilde",
"/tildecomb_dotaccentcomb.case/tildecomb_macroncomb.case/macroncomb.case/hookabovecomb.case/dblgravecomb.case/breveinvertedcomb.case/commaturnedabovecomb.case/horncomb.case/dotbelowcomb.case/dieresisbelowcomb.case/commaaccentcomb.case/cedillacomb.case/ogonekcomb.case/brevebelowcomb.case/macronbelowcomb.case/strokeshortcomb.case/brevecomb_acutecomb/brevecomb_gravecomb/brevecomb_hookabovecomb/brevecomb_tildecomb/circumflexcomb_acutecomb/circumflexcomb_gravecomb/circumflexcomb_hookabovecomb/circumflexcomb_tildecomb/brevecomb.case/acutecomb.case/brevecomb_acutecomb.case/gravecomb.case/brevecomb_gravecomb.case/hookabovecomb.case/brevecomb_hookabovecomb.case/tildecomb.case/brevecomb.case/brevecomb_tildecomb.case/circumflexcomb.case/circumflexcomb_acutecomb.case/circumflexcomb_gravecomb.case/circumflexcomb_hookabovecomb.case/circumflexcomb.case/circumflexcomb_tildecomb.case",
"eé/ebreve/ecaron/circumflexcomb ê/circumflexcomb_acutecomb/ecircumflexacute/ecircumflexdotbelow/ecircumflexgrave/ecircumflexhookabove/ecircumflextilde/edblgrave ë/edotaccent/edotbelow è/ehookabove/einvertedbreve/emacron/eogonek",
"/dieresiscomb/dotaccentcomb/gravecomb/acutecomb/hungarumlautcomb/caroncomb.alt/circumflexcomb/caroncomb/brevecomb/ringcomb/ringcomb_acutecomb/tildecomb/tildecomb_dotaccentcomb/tildecomb_macroncomb/macroncomb/hookabovecomb/dblgravecomb/breveinvertedcomb/commaturnedabovecomb/horncomb/dotbelowcomb/dieresisbelowcomb/commaaccentcomb/cedillacomb/ogonekcomb/brevebelowcomb/macronbelowcomb/strokeshortcomb"
);
classes = (
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adblgrave Adieresis Adotbelow Agrave Ahookabove Ainvertedbreve Amacron Aogonek Aring Aringacute Atilde AE AEacute B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D DZcaron Eth Dcaron Dcroat Dzcaron E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edblgrave Edieresis Edotaccent Edotbelow Egrave Ehookabove Einvertedbreve Emacron Eogonek Etilde F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent H Hbar Hcircumflex I Iacute Ibreve Icaron Icircumflex Idblgrave Idieresis Idotaccent Idotbelow Igrave Ihookabove Iinvertedbreve Imacron Iogonek Itilde J Jcircumflex K Kcommaaccent L LJ Lacute Lcaron Lcommaaccent Ldot Lj Lslash M N NJ Nacute Ncaron Ncommaaccent Eng Nj Ntilde O Oacute Obreve Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odblgrave Odieresis Odieresismacron Odotaccentmacron Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Oinvertedbreve Omacron Oogonek Oslash Oslashacute Otilde Otildemacron OE P Thorn Q R Racute Rcaron Rcommaaccent Rdblgrave Rinvertedbreve S Sacute Scaron Scedilla Scircumflex Scommaaccent Germandbls Schwa T Tbar Tcaron Tcedilla Tcommaaccent U Uacute Ubreve Ucaron Ucircumflex Udblgrave Udieresis Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Uinvertedbreve Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhookabove Ymacron Ytilde Z Zacute Zcaron Zdotaccent Omega";
name = Uppercase;
}
);
copyright = "Copyright 1993-2022 The Whisper Project Authors (https://github.com/googlefonts/whisper)";
customParameters = (
{
name = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
name = license;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
},
{
name = vendorID;
value = GOOG;
},
{
name = "Disable Subroutines";
value = 1;
},
{
name = glyphOrder;
value = (
.notdef,
CR,
.null,
space,
nbspace
);
},
{
name = fsType;
value = (
);
},
{
name = "Use Typo Metrics";
value = 1;
}
);
date = "2022-03-18 05:15:50 +0000";
designer = "Robert E. Leuschke";
designerURL = www.typesetit.com;
familyName = Whisper;
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012\012languagesystem latn dflt;\012languagesystem latn AZE;\012languagesystem latn CRT;\012languagesystem latn KAZ;\012languagesystem latn TAT;\012languagesystem latn TRK;\012languagesystem latn ROM;\012languagesystem latn MOL;\012languagesystem latn CAT;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;\012feature sups;\012feature frac;\012feature ordn;\012feature case;\012";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {\012	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];\012	@CombiningNonTopAccents = [brevebelowcomb cedillacomb dieresisbelowcomb dotbelowcomb macronbelowcomb ogonekcomb horncomb strokeshortcomb];\012	sub [i j]' @CombiningTopAccents by [idotless jdotless];\012	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];\012	@Markscomb = [dieresiscomb dotaccentcomb gravecomb acutecomb hungarumlautcomb caroncomb.alt circumflexcomb caroncomb brevecomb ringcomb ringcomb_acutecomb tildecomb tildecomb_dotaccentcomb tildecomb_macroncomb macroncomb hookabovecomb dblgravecomb breveinvertedcomb commaturnedabovecomb horncomb dotbelowcomb dieresisbelowcomb commaaccentcomb cedillacomb ogonekcomb brevebelowcomb macronbelowcomb strokeshortcomb brevecomb_acutecomb brevecomb_gravecomb brevecomb_hookabovecomb brevecomb_tildecomb circumflexcomb_acutecomb circumflexcomb_gravecomb circumflexcomb_hookabovecomb circumflexcomb_tildecomb];\012	@MarkscombCase = [dieresiscomb.case dotaccentcomb.case gravecomb.case acutecomb.case hungarumlautcomb.case caroncomb.alt.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case ringcomb_acutecomb.case tildecomb.case tildecomb_dotaccentcomb.case tildecomb_macroncomb.case macroncomb.case hookabovecomb.case dblgravecomb.case breveinvertedcomb.case commaturnedabovecomb.case horncomb.case dotbelowcomb.case dieresisbelowcomb.case commaaccentcomb.case cedillacomb.case ogonekcomb.case brevebelowcomb.case macronbelowcomb.case strokeshortcomb.case brevecomb_acutecomb.case brevecomb_gravecomb.case brevecomb_hookabovecomb.case brevecomb_tildecomb.case circumflexcomb_acutecomb.case circumflexcomb_gravecomb.case circumflexcomb_hookabovecomb.case circumflexcomb_tildecomb.case];\012	sub @Markscomb @Markscomb' by @MarkscombCase;\012	sub @Uppercase @Markscomb' by @MarkscombCase;\012} ccmp_Other_1;\012\012lookup ccmp_Other_2 {\012	sub @Markscomb' @MarkscombCase by @MarkscombCase;\012	sub @MarkscombCase @Markscomb' by @MarkscombCase;\012} ccmp_Other_2;\012\012lookup ccmp_Other_3 {\012	lookupflag 0;\012	sub ringcomb acutecomb by ringcomb_acutecomb;\012	sub ringcomb.case acutecomb.case by ringcomb_acutecomb.case;\012	sub tildecomb dotaccentcomb by tildecomb_dotaccentcomb;\012	sub tildecomb.case dotaccentcomb.case by tildecomb_dotaccentcomb.case;\012	sub tildecomb macroncomb by tildecomb_macroncomb;\012	sub tildecomb.case macroncomb.case by tildecomb_macroncomb.case;\012} ccmp_Other_3;\012\012lookup ccmp_latn_1 {\012	lookupflag 0;\012	sub brevecomb acutecomb by brevecomb_acutecomb;\012	sub brevecomb.case acutecomb.case by brevecomb_acutecomb.case;\012	sub brevecomb gravecomb by brevecomb_gravecomb;\012	sub brevecomb.case gravecomb.case by brevecomb_gravecomb.case;\012	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;\012	sub brevecomb.case hookabovecomb.case by brevecomb_hookabovecomb.case;\012	sub brevecomb tildecomb by brevecomb_tildecomb;\012	sub brevecomb.case tildecomb.case by brevecomb_tildecomb.case;\012	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;\012	sub circumflexcomb.case acutecomb.case by circumflexcomb_acutecomb.case;\012	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;\012	sub circumflexcomb.case gravecomb.case by circumflexcomb_gravecomb.case;\012	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;\012	sub circumflexcomb.case hookabovecomb.case by circumflexcomb_hookabovecomb.case;\012	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;\012	sub circumflexcomb.case tildecomb.case by circumflexcomb_tildecomb.case;\012} ccmp_latn_1;\012\012script latn;\012lookup ccmp_latn_1;\012";
name = ccmp;
},
{
automatic = 1;
code = "lookup locl_latn_0 {\012	script latn;\012	language AZE;\012	language CRT;\012	language KAZ;\012	language TAT;\012	language TRK;\012	sub i by idotaccent;\012} locl_latn_0;\012\012lookup locl_latn_1 {\012	script latn;\012	language ROM;\012	language MOL;\012	sub Scedilla by Scommaaccent;\012	sub scedilla by scommaaccent;\012	sub Tcedilla by Tcommaaccent;\012	sub tcedilla by tcommaaccent;\012} locl_latn_1;\012\012lookup locl_latn_2 {\012	script latn;\012	language CAT;\012	sub l periodcentered' l by periodcentered.loclCAT;\012	sub L periodcentered' L by periodcentered.loclCAT.case;\012} locl_latn_2;\012";
name = locl;
},
{
automatic = 1;
code = "sub one by onesuperior;\012sub two by twosuperior;\012sub three by threesuperior;\012sub four by foursuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;\012sub one slash two by onehalf;\012sub three slash four by threequarters;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012sub N o period by numero;\012";
name = ordn;
},
{
automatic = 1;
code = "sub periodcentered.loclCAT by periodcentered.loclCAT.case;\012sub dieresiscomb by dieresiscomb.case;\012sub dotaccentcomb by dotaccentcomb.case;\012sub gravecomb by gravecomb.case;\012sub acutecomb by acutecomb.case;\012sub hungarumlautcomb by hungarumlautcomb.case;\012sub caroncomb.alt by caroncomb.alt.case;\012sub circumflexcomb by circumflexcomb.case;\012sub caroncomb by caroncomb.case;\012sub brevecomb by brevecomb.case;\012sub ringcomb by ringcomb.case;\012sub ringcomb_acutecomb by ringcomb_acutecomb.case;\012sub tildecomb by tildecomb.case;\012sub tildecomb_dotaccentcomb by tildecomb_dotaccentcomb.case;\012sub tildecomb_macroncomb by tildecomb_macroncomb.case;\012sub macroncomb by macroncomb.case;\012sub hookabovecomb by hookabovecomb.case;\012sub dblgravecomb by dblgravecomb.case;\012sub breveinvertedcomb by breveinvertedcomb.case;\012sub commaturnedabovecomb by commaturnedabovecomb.case;\012sub horncomb by horncomb.case;\012sub dotbelowcomb by dotbelowcomb.case;\012sub dieresisbelowcomb by dieresisbelowcomb.case;\012sub commaaccentcomb by commaaccentcomb.case;\012sub cedillacomb by cedillacomb.case;\012sub ogonekcomb by ogonekcomb.case;\012sub brevebelowcomb by brevebelowcomb.case;\012sub macronbelowcomb by macronbelowcomb.case;\012sub strokeshortcomb by strokeshortcomb.case;\012sub brevecomb_acutecomb by brevecomb_acutecomb.case;\012sub brevecomb_gravecomb by brevecomb_gravecomb.case;\012sub brevecomb_hookabovecomb by brevecomb_hookabovecomb.case;\012sub brevecomb_tildecomb by brevecomb_tildecomb.case;\012sub circumflexcomb_acutecomb by circumflexcomb_acutecomb.case;\012sub circumflexcomb_gravecomb by circumflexcomb_gravecomb.case;\012sub circumflexcomb_hookabovecomb by circumflexcomb_hookabovecomb.case;\012sub circumflexcomb_tildecomb by circumflexcomb_tildecomb.case;\012";
name = case;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;\012sub f f i by f_f_i;\012sub f f l by f_f_l;\012sub f f by f_f;\012sub f i by fi;\012sub f l by fl;\012";
name = liga;
}
);
fontMaster = (
{
alignmentZones = (
"{620, 16}",
"{554, 16}",
"{300, 16}",
"{0, -15}",
"{-310, -16}"
);
ascender = 554;
capHeight = 620;
customParameters = (
{
name = typoAscender;
value = 880;
},
{
name = typoDescender;
value = -360;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaAscender;
value = 880;
},
{
name = hheaDescender;
value = -360;
},
{
name = hheaLineGap;
value = 0;
},
{
name = winAscent;
value = 930;
},
{
name = winDescent;
value = 407;
},
{
name = strikeoutPosition;
value = 259;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0125 1066 12 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0121065 190 164 132 102 49 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121066 250 206 165 102 69 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121067 230 206 132 102 69 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121068 167 126 99 70 49 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121069 153 126 99 70 49 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121070 142 126 99 70 49 0 18 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0121061 250 206 165 102 69 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121062 275 206 165 125 69 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121063 212 164 132 102 49 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121064 197 164 132 102 49 0 18 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0121071 4 17 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012NPUSHB[ ]	/* 33 values pushed */\01219 19 18 18 17 17 16 16 15 15 14 14 13 13 12 12 11 11 10 10 9 9 8 8 7 7 2 2 1 1 0 0 1 \012SCANTYPE[ ]	/* ScanType */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0124 3 70 0 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0126 5 70 0 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0123 3 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\0125 5 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "NPUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012SROUND[ ]	/* SuperRound */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ROUND[00]	/* Round */\012RTG[ ]	/* RoundToGrid */\012SWAP[ ]	/* SwapTopStack */\012ROUND[00]	/* Round */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0123 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHW[ ]	/* 2 values pushed */\0123 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01211 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
126,
251,
24,
33,
17,
21,
15,
176,
202,
308,
261,
423,
29,
329,
266,
294,
143,
367,
489,
-28886,
-10132,
-21689,
919,
20199,
-24271,
-3317,
-8637,
6035,
24801,
-24011,
-29940,
-15521,
954,
3493,
-192,
-14934,
29899,
-2720,
-9925,
27814,
-7356,
-24858,
16675,
-12711,
-18521,
6032,
12668,
-19729,
23247,
-31159,
-22725,
17401,
-29772,
-24011,
19152,
-9917,
27114,
-382,
8575,
28432,
7047,
-30926,
32156,
10478,
6974,
26654,
-9167,
-32088,
12614,
-27165,
-1077,
18542,
9475,
-22901,
16942,
-19299,
-26115,
-19051,
24342,
-16450,
-20656,
23436,
-13633,
11601,
17113,
-17038,
-10987,
22448,
-4261,
32254,
-23967,
-13307,
12456,
20555,
-19771,
-9107,
751,
10191,
-13472,
31511,
7811,
-12949,
32260,
-4930,
-16098,
32055,
3763,
-31918,
465,
-19844,
24158,
-3604,
11875,
18146,
-7039,
28009,
6656,
-28486,
31050,
7384,
-19851,
16374,
-10601,
18247,
-3595,
-28012,
19745,
-6967,
-28034,
12972,
-5403,
-31594,
30584,
-22706,
-30744,
-22394,
21279,
-1862,
-8439,
32511,
-4211,
-9135,
20453,
24101,
-8883,
-32513,
11930,
-9116,
8804,
4949,
25248,
-19717,
-32037,
-10667,
30980,
7404,
-163,
-25041,
3055,
-29053,
24894,
-3149,
-11242,
23338,
1264,
-5296,
-15339,
31694,
6498,
-15935,
28328,
339,
-28694,
28713,
13918,
-10028,
7988,
6491,
-13353,
22904,
4065,
-21857,
3852,
3264,
-17836,
18612,
-31865,
-15447,
27463,
7878,
-29400,
26726,
7426,
-30583,
11895,
-28476,
-16454,
14664,
-12085,
19303,
-21578,
-28031,
-12079,
23408,
8786,
-27140,
32621,
7705,
-30322,
9328,
-3810,
25328,
17741,
-5855,
-11797,
31596,
4870,
-28474,
1379,
-9714,
28326,
-5598,
-9558,
8874,
25029,
5728,
-23301,
12179,
-15293,
5562,
27784,
-20814,
-12725,
12522,
24197,
-3532,
30943,
-4495,
-12092,
32437,
20761,
-5067,
-32027,
2188,
-13786,
24773,
-22149,
-13304,
27548,
517,
-28949,
20211,
6581,
-5362,
-15552,
3728,
24806,
-19664,
-25076,
-10404,
8366,
25598,
19655,
-31994,
-15539,
19948,
15499,
-31373,
-19438,
13503,
-26254,
-21271,
8861,
-8657,
234,
3974,
-2212,
-10265,
32389,
-3546,
-25960,
18334,
-6288,
-31818,
19335,
-8077,
-29950,
6356,
-26245,
19447,
-880,
28991,
1495,
-31915,
27565,
17916,
-18003,
-9949,
29875,
-3309,
-14240,
3784,
8614,
-11481,
18311,
-19831,
-11679,
17898,
-3882,
-9371,
29721,
-3157,
27948,
1478,
-2537,
-12434,
7088,
8657,
-8399,
24159,
2546,
-21640,
17135,
-1329,
19041,
12115,
-28694,
-23680,
7178,
13773,
-20891,
23973,
-3136,
-30865,
5401,
-17279,
4425,
27977,
14863,
-30280,
8694,
27846,
24336,
-21142,
-862,
-13838,
704,
16404,
-21139,
-7748,
8603,
28546,
7457,
-6263,
23208,
5953,
-2088,
-32121,
299,
-17215,
7936,
4152,
-13946,
13745,
24415,
-4880,
32046,
-23448,
-14054,
25048,
-21937,
-14051,
25745,
881,
-10174,
16106,
20864,
-15611,
30693,
-23893,
-15801,
30148,
-7376,
-13561,
25847,
901,
-25330,
13732,
-6539,
-8372,
11150,
4527,
-4337,
20001,
14800,
-9378,
29425,
-5331,
-17853,
24501,
-16504,
-21402,
3108,
9647,
-8613,
28035,
-15450,
-26803,
9723,
-20633,
359,
23911,
27734,
-16467,
-30212,
-12834,
2896,
12801,
-11805,
14943,
23341,
-5903,
23700,
2354,
-21304,
3849,
35,
-1543,
9641,
2332,
13557,
-11653,
15416,
21459,
-9142,
29429,
-21728,
-4795,
-24595,
23085,
-9150,
-28952,
639,
-3560,
28564,
18969,
-14344,
28063,
-19946,
-14647,
19296,
-4014,
-11300,
29844,
-7625,
-28275,
31154,
5444,
-28458,
2673,
-23543,
5312,
27675,
-17797,
-32742,
32252,
15506,
-10745,
18851,
-7388,
-25190,
10420,
-14234,
11831,
17115,
-17551,
-11758,
19624,
-400,
21013,
8624,
-19380,
24020,
-20460,
-13292,
-25774,
28269,
16545,
-29199,
-569,
-13295,
7533,
27325,
-23665,
-6433,
-12762,
105,
16556,
-12593,
-23958,
1620,
15349,
-20066,
5677,
9160,
-24450,
23820,
-16939,
-3737,
27325,
21638,
-918,
-29435,
8185,
-1345,
27217,
151,
-14170,
25948,
1765,
-26059,
6746,
-13104,
32383,
-3554,
-32120,
1594,
-6002,
-14625,
14174,
23041,
-8540,
16239,
19214,
-8263,
17177,
-23017,
-14381,
29048,
-7100,
-14597,
27019,
3865,
-31046,
12592,
-7799,
-10032,
12034,
3363,
-6013,
19373,
9564,
-11030,
32381,
-4447,
-22577,
23329,
-17540,
-10478,
1976,
8539,
-9769,
26935,
-8366,
-21255,
8567,
-24557,
1243,
22747,
3997,
-746,
-12952,
184,
27278,
-18216,
-28652,
-8860,
5814,
30086,
-19745,
-29394,
-12939,
17172,
14003,
-3301,
20026,
8919,
-7318,
-27119,
13493,
-24521,
2706,
1454,
-652,
8655,
18605,
-1954,
-28544,
18822,
-664,
30030,
21999,
-1906,
31029,
24060,
-5729,
32310,
7656,
-15194,
26690,
8137,
-31433,
25860,
2810,
-21112,
9995,
-8281,
118,
31041,
19857,
-4176,
-30446,
10300,
-15443,
30041,
7374,
-20176,
1118,
-2640,
-9843,
30305,
-22997,
-12372,
30790,
2950,
-18013,
19790,
-15386,
16738,
-22678,
-18582,
-31141,
-10068,
12007,
30247,
-21143,
-13288,
27608,
21582,
-9428,
-15364,
18089,
6674,
-11041,
-24065,
3248,
15657,
-1131,
-20582,
28784,
14397,
-26374,
-27317,
30474,
22499,
-11813,
-26284,
24906,
19660,
-7746,
-30204,
21053,
-5395,
25699,
3604,
-15432,
31067,
-2865,
-27011,
30884,
14025,
-19588,
22555,
-23357,
-26004,
27659,
-382,
-26564,
4764,
-3393,
10783,
7526,
25772,
-17684,
-3115,
-13040,
3355,
10740,
-12177,
13372,
19889,
-9648,
20457,
-20412,
-8651,
29131,
-444,
-29445,
1182,
-32434,
27054,
10434,
-14534,
17747,
3787,
-23176,
25900,
163,
-20943,
18128,
-15564,
20016,
28816,
7806,
-27631,
29828,
1654,
-30378,
15844,
-8340,
31233,
-6741,
-29333,
15885,
-8048,
-31363,
10212,
-30795,
-20150,
13769,
-9374,
973,
11694,
-8894,
20941,
-8080,
28695,
7415,
-19579,
27648,
6305,
-16074,
29914,
1139,
-28950,
12190,
-9925,
27363,
-4723,
-30095,
16144,
-14606,
23191,
-17627,
-8530,
18499,
-314,
-29331,
5485,
-10899,
-7076,
13993,
224,
21546,
-31900,
-21995,
18911,
-19891,
-8941,
17569,
-3227,
-16821,
24799,
1450,
-19145,
20956,
-14590,
8717,
24310,
-23336,
-29321,
3571,
9630,
-27097,
-17720,
12655,
-27168,
-19490,
31601,
-6227,
-15637,
25501,
2139,
-12077,
32655,
-5066,
-25683,
3423,
-22065,
23950,
-2242,
10139,
27020,
571,
-30242,
29696,
-13553,
-25642,
18849,
10617,
-7847,
19658,
7593,
-4507,
-21595,
32736,
11192,
-27281,
20699,
31407,
12139,
-7841,
-8786,
9449,
25129,
-29655,
-17128,
-29331,
-9308,
6886,
31144,
-7335,
-31077,
26761,
1615,
-16899,
18977,
-2289,
-10493,
29422,
3699,
-26600,
15870,
-26447,
-28374,
28564,
-9285,
-15305,
27858,
19803,
-7924,
-29781,
19492,
-5478,
-19019,
24169,
-17617,
-21311,
18215,
-30954,
-18456,
21613,
-31698,
-21539,
17512,
-12041,
27351,
-15502,
-16630,
23174,
-13307,
28649,
15756,
-23237,
17826,
-7164,
11530,
17126,
-2971,
25427,
19210,
-21379,
-27324,
-10853,
11474,
28501,
7973,
-19552,
27753,
768,
-21585,
14378,
-19820,
31674,
8044,
-39,
8232,
6514,
26786,
-14645,
-18076,
12547,
-13930,
2585,
3513,
14489,
3040,
21794,
-30597,
-7333,
22498,
10353,
-6102,
-30816,
11596,
-23357,
22888,
-31289,
-21580,
6714,
25146,
-13557,
12882,
30596,
9643,
-22442,
24300,
-16567,
-28303,
-24300,
19621,
-13279,
31188,
24123,
-19613,
-24821,
30392,
-22184,
-14646,
27954,
-7103,
-10549,
30823,
-22828,
-12613,
32094,
-2367,
-29852,
19207,
-6749,
-9658,
31713,
23679,
-3317,
11153,
18805,
-3558,
-31603,
41,
-6511,
-31298,
1572,
-1404,
26285,
5209,
-22328,
12159,
-9446,
18372,
-6282,
-10491,
32648,
-3537,
-26993,
8614,
-17840,
11733,
-14795,
22096,
-6921,
24692,
275,
-30067,
30007,
2008,
-31482,
4655,
-1846,
28282,
23714,
-10804,
-31426,
26910,
22639,
-20817,
-32064,
30073,
-22044,
-14462,
14365,
20943,
-14746,
26655,
21645,
-1456,
24766,
18669,
-705,
-8849,
30971,
-6543,
-25767,
31724,
13518,
-707,
12918,
600,
19149,
-9812,
-387,
-25613,
2706,
-24204,
30465,
-5493,
-28615,
31389,
19600,
-6119,
15471,
1724,
-13935,
-7077,
23639,
27352,
-23627,
-15303,
-29608,
31978,
1066,
-32168,
3061,
-24458,
6156,
14284,
-20125,
13397,
13,
1040,
20,
22,
20,
26,
28,
29,
22,
24,
33,
36,
39,
0,
21,
-282,
30,
312,
0,
658,
0
);
}
);
descender = -310;
guideLines = (
{
name = "lc top";
position = "{-149, -122}";
},
{
name = "lc bottom";
position = "{-155, -224}";
},
{
position = "{-99, 609}";
},
{
position = "{-94, 759}";
},
{
name = "Numerals-height";
position = "{708, 404}";
},
{
name = "ordinal bottom";
position = "{-13, 270}";
},
{
angle = 90;
locked = 1;
position = "{250, 167}";
},
{
locked = 1;
position = "{47, 346}";
},
{
locked = 1;
position = "{404, -56}";
}
);
horizontalStems = (
25,
35
);
id = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
userData = {
GSOffsetHorizontal = 2;
GSOffsetVertical = 2;
};
verticalStems = (
28,
36
);
weightValue = 400;
widthValue = 5;
xHeight = 300;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"320 0 LINE",
"320 534 LINE",
"50 534 LINE"
);
},
{
closed = 1;
nodes = (
"103 53 LINE",
"183 236 LINE",
"263 53 LINE"
);
},
{
closed = 1;
nodes = (
"94 439 LINE",
"167 271 LINE",
"94 106 LINE"
);
},
{
closed = 1;
nodes = (
"272 104 LINE",
"198 271 LINE",
"272 441 LINE"
);
},
{
closed = 1;
nodes = (
"106 480 LINE",
"259 480 LINE",
"183 307 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */\0121 8 8 64 9 2 7 4 4 1 0 6 5 4 3 2 5 4 6 0 7 6 6 1 2 1 3 0 0 1 0 70 \012SROUND[ ]	/* SuperRound */\012MDAP[1]	/* MoveDirectAbsPt */\012SHZ[1]	/* ShiftZoneByLastPoint */\012RTG[ ]	/* RoundToGrid */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MIAP[1]	/* MoveIndirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MDAP[1]	/* MoveDirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SRP0[ ]	/* SetRefPoint0 */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SRP0[ ]	/* SetRefPoint0 */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MDAP[1]	/* MoveDirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MDAP[1]	/* MoveDirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012IUP[1]	/* InterpolateUntPts */\012IUP[0]	/* InterpolateUntPts */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MD[0]	/* MeasureDistance */\012ROUND[00]	/* Round */\012PUSHW[ ]	/* 2 values pushed */\0120 8 \012MD[0]	/* MeasureDistance */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SRP1[ ]	/* SetRefPoint1 */\012SHZ[1]	/* ShiftZoneByLastPoint */\012PUSHW[ ]	/* 2 values pushed */\0128 -64 \012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */";
};
width = 370;
}
);
note = .notdef;
},
{
glyphname = CR;
lastChange = "2022-03-18 05:58:50 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 171;
}
);
note = CR;
unicode = 000D;
},
{
glyphname = .null;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 0;
}
);
note = NULL;
},
{
glyphname = space;
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 171;
}
);
note = space;
unicode = 0020;
},
{
glyphname = nbspace;
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 171;
}
);
widthMetricsKey = space;
unicode = 00A0;
},
{
color = 3;
glyphname = A;
lastChange = "2022-03-22 12:56:52 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{533, 0}";
},
{
name = ogonek;
position = "{808, -8}";
},
{
name = top;
position = "{1113, 620}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"164 -132 OFFCURVE",
"254 -100 OFFCURVE",
"359 -37 CURVE SMOOTH",
"437 10 OFFCURVE",
"514 67 OFFCURVE",
"590 135 CURVE SMOOTH",
"681 217 LINE",
"722 228 OFFCURVE",
"761 235 OFFCURVE",
"798 237 CURVE",
"751 142 OFFCURVE",
"727 66 OFFCURVE",
"727 8 CURVE SMOOTH",
"727 2 OFFCURVE",
"728 -3 OFFCURVE",
"728 -9 CURVE SMOOTH",
"729 -25 OFFCURVE",
"751 -41 OFFCURVE",
"768 -41 CURVE SMOOTH",
"775 -41 OFFCURVE",
"780 -39 OFFCURVE",
"783 -35 CURVE SMOOTH",
"800 -13 OFFCURVE",
"826 10 OFFCURVE",
"861 35 CURVE SMOOTH",
"892 56 OFFCURVE",
"917 70 OFFCURVE",
"936 77 CURVE SMOOTH",
"942 79 OFFCURVE",
"944 81 OFFCURVE",
"944 83 CURVE SMOOTH",
"944 85 LINE SMOOTH",
"944 88 OFFCURVE",
"942 89 OFFCURVE",
"938 88 CURVE",
"910 76 OFFCURVE",
"888 64 OFFCURVE",
"869 53 CURVE",
"866 52 OFFCURVE",
"854 44 OFFCURVE",
"833 29 CURVE SMOOTH",
"816 18 OFFCURVE",
"805 12 OFFCURVE",
"798 12 CURVE SMOOTH",
"794 12 OFFCURVE",
"791 13 OFFCURVE",
"789 16 CURVE SMOOTH",
"786 22 OFFCURVE",
"785 32 OFFCURVE",
"785 46 CURVE SMOOTH",
"785 93 OFFCURVE",
"802 154 OFFCURVE",
"835 229 CURVE",
"856 239 OFFCURVE",
"873 244 OFFCURVE",
"887 244 CURVE SMOOTH",
"890 244 OFFCURVE",
"893 243 OFFCURVE",
"896 243 CURVE SMOOTH",
"908 244 OFFCURVE",
"914 246 OFFCURVE",
"914 251 CURVE SMOOTH",
"914 256 OFFCURVE",
"907 258 OFFCURVE",
"892 258 CURVE SMOOTH",
"872 258 LINE SMOOTH",
"865 258 OFFCURVE",
"856 258 OFFCURVE",
"847 257 CURVE",
"859 284 OFFCURVE",
"876 313 OFFCURVE",
"897 346 CURVE SMOOTH",
"972 462 OFFCURVE",
"1034 539 OFFCURVE",
"1085 582 CURVE SMOOTH",
"1090 586 OFFCURVE",
"1092 589 OFFCURVE",
"1092 592 CURVE SMOOTH",
"1092 594 OFFCURVE",
"1090 595 OFFCURVE",
"1087 595 CURVE SMOOTH",
"1081 595 OFFCURVE",
"1074 592 OFFCURVE",
"1067 585 CURVE SMOOTH",
"1032 556 OFFCURVE",
"998 523 OFFCURVE",
"967 483 CURVE SMOOTH",
"875 362 LINE SMOOTH",
"849 328 OFFCURVE",
"827 293 OFFCURVE",
"808 256 CURVE",
"767 256 LINE",
"758 255 OFFCURVE",
"751 255 OFFCURVE",
"744 255 CURVE SMOOTH",
"726 255 LINE",
"782 312 OFFCURVE",
"830 362 OFFCURVE",
"871 403 CURVE SMOOTH",
"912 444 OFFCURVE",
"945 478 OFFCURVE",
"970 504 CURVE SMOOTH",
"974 508 OFFCURVE",
"976 512 OFFCURVE",
"976 516 CURVE SMOOTH",
"976 519 OFFCURVE",
"975 520 OFFCURVE",
"973 520 CURVE SMOOTH",
"970 520 OFFCURVE",
"966 517 OFFCURVE",
"961 512 CURVE SMOOTH",
"936 485 OFFCURVE",
"894 446 OFFCURVE",
"834 393 CURVE SMOOTH",
"674 253 LINE",
"668 253 OFFCURVE",
"664 253 OFFCURVE",
"662 252 CURVE",
"589 251 OFFCURVE",
"524 250 OFFCURVE",
"467 250 CURVE SMOOTH",
"465 250 OFFCURVE",
"468 253 OFFCURVE",
"477 258 CURVE SMOOTH",
"484 262 OFFCURVE",
"488 265 OFFCURVE",
"488 266 CURVE",
"487 266 LINE SMOOTH",
"465 266 OFFCURVE",
"435 261 OFFCURVE",
"397 250 CURVE",
"380 250 OFFCURVE",
"372 240 OFFCURVE",
"372 220 CURVE SMOOTH",
"372 208 OFFCURVE",
"377 202 OFFCURVE",
"388 202 CURVE",
"503 216 OFFCURVE",
"589 225 OFFCURVE",
"647 229 CURVE",
"568 160 LINE SMOOTH",
"373 -10 OFFCURVE",
"225 -104 OFFCURVE",
"116 -116 CURVE SMOOTH",
"51 -123 OFFCURVE",
"19 -92 OFFCURVE",
"19 -25 CURVE SMOOTH",
"19 40 OFFCURVE",
"45 102 OFFCURVE",
"97 161 CURVE SMOOTH",
"194 271 OFFCURVE",
"276 326 OFFCURVE",
"345 326 CURVE SMOOTH",
"363 326 OFFCURVE",
"378 318 OFFCURVE",
"389 303 CURVE SMOOTH",
"396 293 LINE SMOOTH",
"398 290 OFFCURVE",
"400 288 OFFCURVE",
"401 286 CURVE SMOOTH",
"405 280 LINE",
"412 280 OFFCURVE",
"415 288 OFFCURVE",
"415 304 CURVE SMOOTH",
"415 329 OFFCURVE",
"396 342 OFFCURVE",
"359 342 CURVE SMOOTH",
"347 342 OFFCURVE",
"334 340 OFFCURVE",
"319 337 CURVE SMOOTH",
"229 315 OFFCURVE",
"148 260 OFFCURVE",
"77 173 CURVE SMOOTH",
"10 90 OFFCURVE",
"-24 20 OFFCURVE",
"-24 -36 CURVE SMOOTH",
"-24 -100 OFFCURVE",
"14 -132 OFFCURVE",
"91 -132 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01274 1070 52 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 74 118 74 134 74 150 74 166 74 182 74 198 74 214 74 230 74 246 74 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 74 22 74 38 74 54 74 70 74 86 74 102 74 118 74 134 74 150 74 166 74 182 74 198 74 214 74 230 74 246 74 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 74 22 74 38 74 54 74 70 74 86 74 102 74 118 74 134 74 150 74 166 74 182 74 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 74 213 74 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0126 50 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01243 50 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01279 50 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01291 50 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012109 50 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 905;
}
);
leftKerningGroup = A;
note = A;
rightKerningGroup = A;
unicode = 0041;
},
{
glyphname = Aacute;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 00C1;
},
{
glyphname = Abreve;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 0102;
},
{
glyphname = Abreveacute;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_acutecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EAE;
},
{
glyphname = Abrevedotbelow;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 283, 0}";
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EB6;
},
{
glyphname = Abrevegrave;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_gravecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EB0;
},
{
glyphname = Abrevehookabove;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EB2;
},
{
glyphname = Abrevetilde;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_tildecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EB4;
},
{
glyphname = Acaron;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 01CD;
},
{
glyphname = Acircumflex;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 00C2;
},
{
glyphname = Acircumflexacute;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EA4;
},
{
glyphname = Acircumflexdotbelow;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 283, 0}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EAC;
},
{
glyphname = Acircumflexgrave;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EA6;
},
{
glyphname = Acircumflexhookabove;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EA8;
},
{
glyphname = Acircumflextilde;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EAA;
},
{
glyphname = Adblgrave;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 0200;
},
{
glyphname = Adieresis;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 00C4;
},
{
glyphname = Adotbelow;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 283, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EA0;
},
{
glyphname = Agrave;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 00C0;
},
{
glyphname = Ahookabove;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EA2;
},
{
glyphname = Ainvertedbreve;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 0202;
},
{
glyphname = Amacron;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 0100;
},
{
glyphname = Aogonek;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ogonekcomb.case;
transform = "{1, 0, 0, 1, 558, -8}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 0104;
},
{
glyphname = Aring;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 00C5;
},
{
glyphname = Aringacute;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 01FA;
},
{
glyphname = Atilde;
lastChange = "2022-03-22 12:01:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 863, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 00C3;
},
{
color = 3;
glyphname = AE;
lastChange = "2022-03-22 08:39:34 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{1133, 620}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"164 -132 OFFCURVE",
"254 -100 OFFCURVE",
"359 -37 CURVE SMOOTH",
"437 10 OFFCURVE",
"514 67 OFFCURVE",
"590 135 CURVE SMOOTH",
"681 217 LINE",
"694 220 OFFCURVE",
"726 225 OFFCURVE",
"777 232 CURVE",
"736 179 OFFCURVE",
"715 127 OFFCURVE",
"715 78 CURVE SMOOTH",
"715 28 OFFCURVE",
"735 -13 OFFCURVE",
"775 -45 CURVE SMOOTH",
"815 -77 OFFCURVE",
"866 -93 OFFCURVE",
"928 -93 CURVE SMOOTH",
"986 -93 OFFCURVE",
"1042 -86 OFFCURVE",
"1095 -73 CURVE SMOOTH",
"1127 -65 OFFCURVE",
"1174 -49 OFFCURVE",
"1237 -25 CURVE SMOOTH",
"1286 -6 OFFCURVE",
"1342 20 OFFCURVE",
"1407 55 CURVE SMOOTH",
"1438 71 OFFCURVE",
"1482 96 OFFCURVE",
"1542 131 CURVE SMOOTH",
"1552 137 OFFCURVE",
"1557 143 OFFCURVE",
"1557 149 CURVE SMOOTH",
"1557 153 OFFCURVE",
"1555 155 OFFCURVE",
"1550 155 CURVE SMOOTH",
"1546 155 OFFCURVE",
"1542 154 OFFCURVE",
"1537 151 CURVE SMOOTH",
"1397 78 LINE SMOOTH",
"1341 49 OFFCURVE",
"1290 27 OFFCURVE",
"1244 12 CURVE SMOOTH",
"1092 -39 LINE SMOOTH",
"1031 -60 OFFCURVE",
"972 -66 OFFCURVE",
"917 -66 CURVE SMOOTH",
"814 -66 OFFCURVE",
"762 -31 OFFCURVE",
"762 40 CURVE SMOOTH",
"762 91 OFFCURVE",
"791 158 OFFCURVE",
"849 239 CURVE",
"880 242 LINE SMOOTH",
"887 243 OFFCURVE",
"893 243 OFFCURVE",
"896 243 CURVE SMOOTH",
"909 244 OFFCURVE",
"915 246 OFFCURVE",
"915 250 CURVE SMOOTH",
"915 251 OFFCURVE",
"915 252 OFFCURVE",
"913 254 CURVE",
"1017 271 OFFCURVE",
"1094 279 OFFCURVE",
"1146 279 CURVE SMOOTH",
"1199 279 OFFCURVE",
"1248 272 OFFCURVE",
"1291 259 CURVE SMOOTH",
"1314 252 OFFCURVE",
"1325 242 OFFCURVE",
"1325 229 CURVE SMOOTH",
"1325 223 OFFCURVE",
"1321 218 OFFCURVE",
"1313 214 CURVE SMOOTH",
"1303 209 OFFCURVE",
"1298 202 OFFCURVE",
"1298 193 CURVE SMOOTH",
"1299 186 OFFCURVE",
"1302 183 OFFCURVE",
"1307 183 CURVE SMOOTH",
"1312 183 OFFCURVE",
"1318 186 OFFCURVE",
"1325 192 CURVE SMOOTH",
"1343 206 OFFCURVE",
"1352 222 OFFCURVE",
"1352 239 CURVE SMOOTH",
"1352 261 OFFCURVE",
"1336 278 OFFCURVE",
"1304 289 CURVE SMOOTH",
"1266 301 OFFCURVE",
"1224 307 OFFCURVE",
"1178 307 CURVE SMOOTH",
"1145 307 OFFCURVE",
"1101 303 OFFCURVE",
"1044 296 CURVE SMOOTH",
"937 283 OFFCURVE",
"882 276 OFFCURVE",
"879 275 CURVE",
"934 332 OFFCURVE",
"1002 384 OFFCURVE",
"1084 431 CURVE SMOOTH",
"1189 492 OFFCURVE",
"1287 526 OFFCURVE",
"1377 532 CURVE SMOOTH",
"1437 536 OFFCURVE",
"1477 513 OFFCURVE",
"1477 469 CURVE SMOOTH",
"1477 465 OFFCURVE",
"1477 460 OFFCURVE",
"1476 453 CURVE SMOOTH",
"1475 446 OFFCURVE",
"1474 441 OFFCURVE",
"1474 438 CURVE SMOOTH",
"1474 418 OFFCURVE",
"1481 408 OFFCURVE",
"1494 408 CURVE SMOOTH",
"1512 408 OFFCURVE",
"1520 427 OFFCURVE",
"1520 466 CURVE SMOOTH",
"1520 497 OFFCURVE",
"1511 519 OFFCURVE",
"1493 532 CURVE SMOOTH",
"1476 545 OFFCURVE",
"1449 551 OFFCURVE",
"1410 551 CURVE SMOOTH",
"1394 551 LINE SMOOTH",
"1388 551 OFFCURVE",
"1382 551 OFFCURVE",
"1375 550 CURVE SMOOTH",
"1296 545 OFFCURVE",
"1215 525 OFFCURVE",
"1132 490 CURVE SMOOTH",
"1048 455 OFFCURVE",
"973 412 OFFCURVE",
"904 356 CURVE",
"976 467 OFFCURVE",
"1036 541 OFFCURVE",
"1085 582 CURVE SMOOTH",
"1090 586 OFFCURVE",
"1092 589 OFFCURVE",
"1092 592 CURVE SMOOTH",
"1092 594 OFFCURVE",
"1090 595 OFFCURVE",
"1087 595 CURVE SMOOTH",
"1081 595 OFFCURVE",
"1074 592 OFFCURVE",
"1067 585 CURVE",
"995 525 OFFCURVE",
"936 442 OFFCURVE",
"875 362 CURVE SMOOTH",
"858 339 OFFCURVE",
"840 313 OFFCURVE",
"823 284 CURVE",
"797 256 LINE",
"762 256 LINE",
"755 255 OFFCURVE",
"748 255 OFFCURVE",
"742 255 CURVE SMOOTH",
"726 255 LINE",
"782 312 OFFCURVE",
"830 362 OFFCURVE",
"871 403 CURVE SMOOTH",
"912 444 OFFCURVE",
"945 478 OFFCURVE",
"970 504 CURVE SMOOTH",
"974 508 OFFCURVE",
"976 512 OFFCURVE",
"976 516 CURVE SMOOTH",
"976 519 OFFCURVE",
"975 520 OFFCURVE",
"973 520 CURVE SMOOTH",
"970 520 OFFCURVE",
"966 517 OFFCURVE",
"961 512 CURVE SMOOTH",
"936 485 OFFCURVE",
"894 446 OFFCURVE",
"834 393 CURVE SMOOTH",
"674 253 LINE",
"668 253 OFFCURVE",
"664 253 OFFCURVE",
"662 252 CURVE",
"589 251 OFFCURVE",
"524 250 OFFCURVE",
"467 250 CURVE SMOOTH",
"465 250 OFFCURVE",
"468 253 OFFCURVE",
"477 258 CURVE SMOOTH",
"484 262 OFFCURVE",
"488 265 OFFCURVE",
"488 266 CURVE",
"487 266 LINE SMOOTH",
"465 266 OFFCURVE",
"435 261 OFFCURVE",
"397 250 CURVE",
"380 250 OFFCURVE",
"372 240 OFFCURVE",
"372 220 CURVE SMOOTH",
"372 208 OFFCURVE",
"377 202 OFFCURVE",
"388 202 CURVE",
"503 216 OFFCURVE",
"589 225 OFFCURVE",
"647 229 CURVE",
"568 160 LINE SMOOTH",
"373 -10 OFFCURVE",
"225 -104 OFFCURVE",
"116 -116 CURVE SMOOTH",
"51 -123 OFFCURVE",
"19 -92 OFFCURVE",
"19 -25 CURVE SMOOTH",
"19 40 OFFCURVE",
"45 102 OFFCURVE",
"97 161 CURVE SMOOTH",
"194 271 OFFCURVE",
"276 326 OFFCURVE",
"345 326 CURVE SMOOTH",
"363 326 OFFCURVE",
"378 318 OFFCURVE",
"389 303 CURVE SMOOTH",
"396 293 LINE SMOOTH",
"398 290 OFFCURVE",
"400 288 OFFCURVE",
"401 286 CURVE SMOOTH",
"405 280 LINE",
"412 280 OFFCURVE",
"415 288 OFFCURVE",
"415 304 CURVE SMOOTH",
"415 329 OFFCURVE",
"396 342 OFFCURVE",
"359 342 CURVE SMOOTH",
"347 342 OFFCURVE",
"334 340 OFFCURVE",
"319 337 CURVE SMOOTH",
"229 315 OFFCURVE",
"148 260 OFFCURVE",
"77 173 CURVE SMOOTH",
"10 90 OFFCURVE",
"-24 20 OFFCURVE",
"-24 -36 CURVE SMOOTH",
"-24 -100 OFFCURVE",
"14 -132 OFFCURVE",
"91 -132 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012113 1070 91 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01252 1070 80 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 1070 14 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 14 218 14 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 91 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 52 213 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01282 91 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 113 118 113 134 113 150 113 166 113 182 113 198 113 214 113 230 113 246 113 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 113 22 113 38 113 54 113 70 113 86 113 102 113 118 113 134 113 150 113 166 113 182 113 198 113 214 113 230 113 246 113 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 113 22 113 38 113 54 113 70 113 86 113 102 113 118 113 134 113 150 113 166 113 182 113 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 113 213 113 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012118 91 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012130 91 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012148 80 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012168 91 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012174 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012161 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 89 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01282 89 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012118 89 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012130 89 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012148 89 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012168 89 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1481;
}
);
leftKerningGroup = A;
note = AE;
rightKerningGroup = E;
unicode = 00C6;
},
{
glyphname = AEacute;
lastChange = "2022-03-22 12:01:25 +0000";
layers = (
{
components = (
{
name = AE;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 883, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1481;
}
);
leftKerningGroup = A;
rightKerningGroup = E;
unicode = 01FC;
},
{
glyphname = B;
lastChange = "2022-03-22 13:32:29 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"246 -73 OFFCURVE",
"360 -48 OFFCURVE",
"462 -1 CURVE SMOOTH",
"605 64 OFFCURVE",
"676 138 OFFCURVE",
"676 221 CURVE SMOOTH",
"676 267 OFFCURVE",
"650 299 OFFCURVE",
"596 317 CURVE",
"671 366 OFFCURVE",
"711 415 OFFCURVE",
"716 465 CURVE SMOOTH",
"720 505 OFFCURVE",
"703 537 OFFCURVE",
"664 561 CURVE SMOOTH",
"624 586 OFFCURVE",
"565 598 OFFCURVE",
"485 598 CURVE SMOOTH",
"399 598 OFFCURVE",
"323 585 OFFCURVE",
"258 559 CURVE SMOOTH",
"181 529 OFFCURVE",
"133 485 OFFCURVE",
"112 427 CURVE",
"109 421 OFFCURVE",
"108 413 OFFCURVE",
"108 404 CURVE SMOOTH",
"108 365 OFFCURVE",
"146 322 OFFCURVE",
"187 314 CURVE SMOOTH",
"197 312 OFFCURVE",
"202 314 OFFCURVE",
"202 319 CURVE SMOOTH",
"202 325 OFFCURVE",
"196 330 OFFCURVE",
"184 333 CURVE SMOOTH",
"172 336 OFFCURVE",
"162 344 OFFCURVE",
"153 356 CURVE SMOOTH",
"144 369 OFFCURVE",
"140 383 OFFCURVE",
"140 398 CURVE SMOOTH",
"140 406 OFFCURVE",
"141 413 OFFCURVE",
"144 419 CURVE SMOOTH",
"163 469 OFFCURVE",
"214 509 OFFCURVE",
"299 540 CURVE SMOOTH",
"364 564 OFFCURVE",
"423 576 OFFCURVE",
"477 576 CURVE SMOOTH",
"613 576 OFFCURVE",
"692 539 OFFCURVE",
"692 470 CURVE SMOOTH",
"692 421 OFFCURVE",
"652 372 OFFCURVE",
"572 322 CURVE",
"562 324 OFFCURVE",
"552 325 OFFCURVE",
"541 325 CURVE SMOOTH",
"493 325 OFFCURVE",
"451 318 OFFCURVE",
"415 304 CURVE SMOOTH",
"378 289 OFFCURVE",
"360 273 OFFCURVE",
"360 254 CURVE SMOOTH",
"360 241 OFFCURVE",
"372 235 OFFCURVE",
"396 235 CURVE SMOOTH",
"417 235 OFFCURVE",
"440 240 OFFCURVE",
"467 249 CURVE SMOOTH",
"495 259 OFFCURVE",
"529 276 OFFCURVE",
"570 300 CURVE",
"606 288 OFFCURVE",
"630 255 OFFCURVE",
"630 216 CURVE SMOOTH",
"630 147 OFFCURVE",
"561 82 OFFCURVE",
"427 21 CURVE SMOOTH",
"399 8 OFFCURVE",
"356 -6 OFFCURVE",
"297 -21 CURVE SMOOTH",
"225 -40 OFFCURVE",
"164 -49 OFFCURVE",
"113 -52 CURVE SMOOTH",
"62 -53 OFFCURVE",
"21 -35 OFFCURVE",
"21 -4 CURVE SMOOTH",
"21 29 OFFCURVE",
"62 65 OFFCURVE",
"145 104 CURVE",
"126 69 OFFCURVE",
"113 43 OFFCURVE",
"106 27 CURVE SMOOTH",
"103 18 OFFCURVE",
"101 12 OFFCURVE",
"101 7 CURVE SMOOTH",
"101 -4 OFFCURVE",
"107 -9 OFFCURVE",
"120 -9 CURVE SMOOTH",
"143 -9 OFFCURVE",
"178 6 OFFCURVE",
"225 37 CURVE SMOOTH",
"226 38 OFFCURVE",
"227 39 OFFCURVE",
"227 40 CURVE SMOOTH",
"227 43 OFFCURVE",
"224 43 OFFCURVE",
"219 42 CURVE SMOOTH",
"213 42 OFFCURVE",
"207 40 OFFCURVE",
"202 37 CURVE",
"189 26 OFFCURVE",
"174 20 OFFCURVE",
"158 20 CURVE SMOOTH",
"153 20 OFFCURVE",
"150 24 OFFCURVE",
"150 32 CURVE SMOOTH",
"150 46 OFFCURVE",
"161 68 OFFCURVE",
"182 97 CURVE SMOOTH",
"191 112 OFFCURVE",
"211 127 OFFCURVE",
"242 143 CURVE SMOOTH",
"275 161 OFFCURVE",
"310 174 OFFCURVE",
"348 182 CURVE SMOOTH",
"367 186 OFFCURVE",
"376 190 OFFCURVE",
"376 195 CURVE SMOOTH",
"376 198 OFFCURVE",
"372 199 OFFCURVE",
"365 199 CURVE SMOOTH",
"360 199 OFFCURVE",
"357 199 OFFCURVE",
"355 198 CURVE",
"310 187 OFFCURVE",
"266 176 OFFCURVE",
"225 161 CURVE",
"276 223 LINE SMOOTH",
"291 241 OFFCURVE",
"304 256 OFFCURVE",
"315 267 CURVE SMOOTH",
"400 356 OFFCURVE",
"460 416 OFFCURVE",
"495 445 CURVE SMOOTH",
"506 454 OFFCURVE",
"512 462 OFFCURVE",
"512 468 CURVE SMOOTH",
"512 469 OFFCURVE",
"511 470 OFFCURVE",
"511 471 CURVE",
"508 476 OFFCURVE",
"500 479 OFFCURVE",
"489 479 CURVE SMOOTH",
"470 479 OFFCURVE",
"456 475 OFFCURVE",
"448 467 CURVE",
"394 431 LINE SMOOTH",
"377 420 OFFCURVE",
"363 410 OFFCURVE",
"353 403 CURVE SMOOTH",
"342 396 OFFCURVE",
"335 390 OFFCURVE",
"332 387 CURVE",
"351 392 OFFCURVE",
"370 400 OFFCURVE",
"391 409 CURVE",
"354 369 OFFCURVE",
"313 321 OFFCURVE",
"268 264 CURVE SMOOTH",
"241 230 OFFCURVE",
"219 203 OFFCURVE",
"203 182 CURVE SMOOTH",
"186 161 OFFCURVE",
"175 147 OFFCURVE",
"170 140 CURVE",
"56 91 OFFCURVE",
"-1 42 OFFCURVE",
"-1 -5 CURVE SMOOTH",
"-1 -27 OFFCURVE",
"11 -45 OFFCURVE",
"36 -59 CURVE SMOOTH",
"61 -72 OFFCURVE",
"88 -79 OFFCURVE",
"119 -78 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"415 271 OFFCURVE",
"412 271 OFFCURVE",
"409 272 CURVE",
"408 273 OFFCURVE",
"407 275 OFFCURVE",
"407 277 CURVE SMOOTH",
"407 285 OFFCURVE",
"421 292 OFFCURVE",
"448 298 CURVE SMOOTH",
"473 304 OFFCURVE",
"499 307 OFFCURVE",
"528 307 CURVE SMOOTH",
"535 307 LINE",
"538 306 OFFCURVE",
"540 306 OFFCURVE",
"542 306 CURVE",
"518 294 OFFCURVE",
"494 285 OFFCURVE",
"470 279 CURVE SMOOTH",
"447 273 OFFCURVE",
"431 271 OFFCURVE",
"420 271 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012147 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012147 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 124 218 124 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 124 121 124 137 124 153 124 169 124 185 124 201 124 217 124 233 124 249 124 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 124 25 124 41 124 57 124 73 124 89 124 105 124 121 124 137 124 153 124 169 124 185 124 201 124 217 124 233 124 249 124 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 124 25 124 41 124 57 124 73 124 89 124 105 124 121 124 137 124 153 124 169 124 185 124 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012111 1068 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01275 1066 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 75 118 75 134 75 150 75 166 75 182 75 198 75 214 75 230 75 246 75 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 75 22 75 38 75 54 75 70 75 86 75 102 75 118 75 134 75 150 75 166 75 182 75 198 75 214 75 230 75 246 75 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 75 22 75 38 75 54 75 70 75 86 75 102 75 118 75 134 75 150 75 166 75 182 75 198 75 214 75 230 75 246 75 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012111 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01212 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01266 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01275 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01278 1063 8 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012130 1061 105 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 690;
}
);
note = B;
unicode = 0042;
},
{
color = 3;
glyphname = C;
lastChange = "2022-03-22 13:36:12 +0000";
layers = (
{
anchors = (
{
name = cedilla;
position = "{178, -91}";
},
{
name = top;
position = "{790, 620}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"266 -93 OFFCURVE",
"322 -86 OFFCURVE",
"375 -73 CURVE SMOOTH",
"407 -65 OFFCURVE",
"454 -49 OFFCURVE",
"516 -25 CURVE SMOOTH",
"564 -6 OFFCURVE",
"621 20 OFFCURVE",
"686 55 CURVE SMOOTH",
"719 72 OFFCURVE",
"763 98 OFFCURVE",
"822 131 CURVE SMOOTH",
"832 136 OFFCURVE",
"837 142 OFFCURVE",
"837 149 CURVE SMOOTH",
"837 153 OFFCURVE",
"834 155 OFFCURVE",
"829 155 CURVE SMOOTH",
"826 155 OFFCURVE",
"822 154 OFFCURVE",
"817 151 CURVE SMOOTH",
"769 124 OFFCURVE",
"721 99 OFFCURVE",
"673 74 CURVE SMOOTH",
"613 43 OFFCURVE",
"561 19 OFFCURVE",
"516 4 CURVE SMOOTH",
"480 -7 OFFCURVE",
"450 -17 OFFCURVE",
"426 -25 CURVE SMOOTH",
"402 -32 OFFCURVE",
"383 -38 OFFCURVE",
"370 -41 CURVE SMOOTH",
"313 -55 OFFCURVE",
"256 -62 OFFCURVE",
"200 -62 CURVE SMOOTH",
"87 -62 OFFCURVE",
"30 -25 OFFCURVE",
"30 48 CURVE SMOOTH",
"30 101 OFFCURVE",
"63 169 OFFCURVE",
"128 252 CURVE SMOOTH",
"170 305 OFFCURVE",
"240 361 OFFCURVE",
"337 419 CURVE SMOOTH",
"454 488 OFFCURVE",
"560 526 OFFCURVE",
"656 532 CURVE SMOOTH",
"692 534 OFFCURVE",
"719 529 OFFCURVE",
"737 517 CURVE",
"663 442 OFFCURVE",
"621 377 OFFCURVE",
"611 322 CURVE SMOOTH",
"610 318 OFFCURVE",
"610 315 OFFCURVE",
"610 312 CURVE SMOOTH",
"610 297 OFFCURVE",
"618 290 OFFCURVE",
"634 290 CURVE SMOOTH",
"663 290 OFFCURVE",
"696 307 OFFCURVE",
"734 341 CURVE SMOOTH",
"779 381 OFFCURVE",
"800 422 OFFCURVE",
"800 466 CURVE SMOOTH",
"800 494 OFFCURVE",
"793 514 OFFCURVE",
"777 528 CURVE",
"811 558 LINE",
"818 563 OFFCURVE",
"821 568 OFFCURVE",
"821 574 CURVE SMOOTH",
"821 579 OFFCURVE",
"819 581 OFFCURVE",
"814 581 CURVE SMOOTH",
"806 581 OFFCURVE",
"788 567 OFFCURVE",
"760 539 CURVE",
"744 547 OFFCURVE",
"720 551 OFFCURVE",
"687 551 CURVE SMOOTH",
"677 551 OFFCURVE",
"666 551 OFFCURVE",
"654 550 CURVE SMOOTH",
"545 543 OFFCURVE",
"436 510 OFFCURVE",
"326 451 CURVE SMOOTH",
"223 395 OFFCURVE",
"137 327 OFFCURVE",
"68 246 CURVE SMOOTH",
"19 189 OFFCURVE",
"-5 133 OFFCURVE",
"-5 78 CURVE SMOOTH",
"-5 28 OFFCURVE",
"15 -13 OFFCURVE",
"55 -45 CURVE SMOOTH",
"95 -77 OFFCURVE",
"146 -93 OFFCURVE",
"208 -93 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"662 324 OFFCURVE",
"658 329 OFFCURVE",
"658 339 CURVE",
"657 341 OFFCURVE",
"658 344 OFFCURVE",
"658 346 CURVE",
"673 403 OFFCURVE",
"704 456 OFFCURVE",
"752 504 CURVE",
"762 491 OFFCURVE",
"767 475 OFFCURVE",
"767 456 CURVE SMOOTH",
"767 428 OFFCURVE",
"754 398 OFFCURVE",
"729 367 CURVE SMOOTH",
"706 338 OFFCURVE",
"687 324 OFFCURVE",
"670 324 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 65 218 65 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 65 121 65 137 65 153 65 169 65 185 65 201 65 217 65 233 65 249 65 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 65 25 65 41 65 57 65 73 65 89 65 105 65 121 65 137 65 153 65 169 65 185 65 201 65 217 65 233 65 249 65 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 65 25 65 41 65 57 65 73 65 89 65 105 65 121 65 137 65 153 65 169 65 185 65 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01230 1068 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01246 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 46 213 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01248 1064 9 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01271 1064 34 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 780;
}
);
leftKerningGroup = C;
note = C;
rightKerningGroup = C;
unicode = 0043;
},
{
glyphname = Cacute;
lastChange = "2022-03-22 12:01:29 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 540, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 780;
}
);
leftKerningGroup = C;
rightKerningGroup = C;
unicode = 0106;
},
{
glyphname = Ccaron;
lastChange = "2022-03-22 12:01:29 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 540, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 780;
}
);
leftKerningGroup = C;
rightKerningGroup = C;
unicode = 010C;
},
{
glyphname = Ccedilla;
lastChange = "2022-03-22 12:01:29 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = cedillacomb.case;
transform = "{1, 0, 0, 1, -72, -91}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 780;
}
);
leftKerningGroup = C;
rightKerningGroup = C;
unicode = 00C7;
},
{
glyphname = Ccircumflex;
lastChange = "2022-03-22 12:01:29 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 540, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 780;
}
);
leftKerningGroup = C;
rightKerningGroup = C;
unicode = 0108;
},
{
glyphname = Cdotaccent;
lastChange = "2022-03-22 12:01:29 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 540, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 780;
}
);
leftKerningGroup = C;
rightKerningGroup = C;
unicode = 010A;
},
{
color = 3;
glyphname = D;
lastChange = "2022-03-22 08:50:22 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{88, -79}";
},
{
name = center;
position = "{329, 280}";
},
{
name = top;
position = "{649, 620}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"245 -73 OFFCURVE",
"359 -47 OFFCURVE",
"462 -1 CURVE SMOOTH",
"569 47 OFFCURVE",
"659 110 OFFCURVE",
"732 189 CURVE SMOOTH",
"805 268 OFFCURVE",
"841 342 OFFCURVE",
"841 411 CURVE SMOOTH",
"841 469 OFFCURVE",
"812 515 OFFCURVE",
"755 548 CURVE SMOOTH",
"696 582 OFFCURVE",
"611 598 OFFCURVE",
"498 598 CURVE SMOOTH",
"467 598 LINE SMOOTH",
"388 598 OFFCURVE",
"318 583 OFFCURVE",
"258 559 CURVE SMOOTH",
"181 529 OFFCURVE",
"133 485 OFFCURVE",
"112 427 CURVE",
"109 421 OFFCURVE",
"108 413 OFFCURVE",
"108 404 CURVE SMOOTH",
"108 365 OFFCURVE",
"146 322 OFFCURVE",
"187 314 CURVE SMOOTH",
"197 312 OFFCURVE",
"202 314 OFFCURVE",
"202 319 CURVE SMOOTH",
"202 325 OFFCURVE",
"196 330 OFFCURVE",
"184 333 CURVE SMOOTH",
"172 336 OFFCURVE",
"162 344 OFFCURVE",
"153 356 CURVE SMOOTH",
"144 369 OFFCURVE",
"140 383 OFFCURVE",
"140 398 CURVE SMOOTH",
"140 406 OFFCURVE",
"141 413 OFFCURVE",
"144 419 CURVE SMOOTH",
"163 469 OFFCURVE",
"214 509 OFFCURVE",
"299 540 CURVE SMOOTH",
"362 563 OFFCURVE",
"421 575 OFFCURVE",
"477 576 CURVE SMOOTH",
"696 581 OFFCURVE",
"805 530 OFFCURVE",
"805 425 CURVE SMOOTH",
"805 360 OFFCURVE",
"766 287 OFFCURVE",
"687 206 CURVE SMOOTH",
"612 128 OFFCURVE",
"525 66 OFFCURVE",
"427 21 CURVE SMOOTH",
"398 8 OFFCURVE",
"354 -6 OFFCURVE",
"297 -21 CURVE SMOOTH",
"225 -40 OFFCURVE",
"164 -49 OFFCURVE",
"113 -52 CURVE SMOOTH",
"62 -53 OFFCURVE",
"21 -35 OFFCURVE",
"21 -4 CURVE SMOOTH",
"21 29 OFFCURVE",
"62 65 OFFCURVE",
"145 104 CURVE",
"126 69 OFFCURVE",
"113 43 OFFCURVE",
"106 27 CURVE SMOOTH",
"103 18 OFFCURVE",
"101 12 OFFCURVE",
"101 7 CURVE SMOOTH",
"101 -4 OFFCURVE",
"107 -9 OFFCURVE",
"120 -9 CURVE SMOOTH",
"143 -9 OFFCURVE",
"178 6 OFFCURVE",
"225 37 CURVE SMOOTH",
"226 38 OFFCURVE",
"227 39 OFFCURVE",
"227 40 CURVE SMOOTH",
"227 43 OFFCURVE",
"224 43 OFFCURVE",
"219 42 CURVE SMOOTH",
"213 42 OFFCURVE",
"207 40 OFFCURVE",
"202 37 CURVE",
"189 26 OFFCURVE",
"174 20 OFFCURVE",
"158 20 CURVE SMOOTH",
"153 20 OFFCURVE",
"150 24 OFFCURVE",
"150 32 CURVE SMOOTH",
"150 46 OFFCURVE",
"161 68 OFFCURVE",
"182 97 CURVE SMOOTH",
"191 112 OFFCURVE",
"211 127 OFFCURVE",
"242 143 CURVE SMOOTH",
"275 161 OFFCURVE",
"310 174 OFFCURVE",
"348 182 CURVE SMOOTH",
"367 186 OFFCURVE",
"376 190 OFFCURVE",
"376 195 CURVE SMOOTH",
"376 198 OFFCURVE",
"372 199 OFFCURVE",
"365 199 CURVE SMOOTH",
"360 199 OFFCURVE",
"357 199 OFFCURVE",
"355 198 CURVE",
"310 187 OFFCURVE",
"266 176 OFFCURVE",
"225 161 CURVE",
"276 223 LINE SMOOTH",
"291 241 OFFCURVE",
"304 256 OFFCURVE",
"315 267 CURVE SMOOTH",
"400 356 OFFCURVE",
"460 416 OFFCURVE",
"495 445 CURVE SMOOTH",
"506 454 OFFCURVE",
"512 462 OFFCURVE",
"512 468 CURVE SMOOTH",
"512 469 OFFCURVE",
"511 470 OFFCURVE",
"511 471 CURVE",
"508 476 OFFCURVE",
"500 479 OFFCURVE",
"489 479 CURVE SMOOTH",
"470 479 OFFCURVE",
"456 475 OFFCURVE",
"448 467 CURVE",
"394 431 LINE SMOOTH",
"377 420 OFFCURVE",
"363 410 OFFCURVE",
"353 403 CURVE SMOOTH",
"342 396 OFFCURVE",
"335 390 OFFCURVE",
"332 387 CURVE",
"351 392 OFFCURVE",
"370 400 OFFCURVE",
"391 409 CURVE",
"354 369 OFFCURVE",
"313 321 OFFCURVE",
"268 264 CURVE SMOOTH",
"241 230 OFFCURVE",
"219 203 OFFCURVE",
"203 182 CURVE SMOOTH",
"186 161 OFFCURVE",
"175 147 OFFCURVE",
"170 140 CURVE",
"56 91 OFFCURVE",
"-1 42 OFFCURVE",
"-1 -5 CURVE SMOOTH",
"-1 -27 OFFCURVE",
"11 -45 OFFCURVE",
"36 -59 CURVE SMOOTH",
"61 -72 OFFCURVE",
"88 -79 OFFCURVE",
"119 -78 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01242 1066 95 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01262 1068 75 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01285 1069 54 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0126 95 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01231 95 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01240 95 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 54 218 54 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 62 213 62 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012103 95 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012106 95 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01285 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01233 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01242 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01295 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01245 1063 91 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01281 1061 56 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 737;
}
);
leftKerningGroup = D;
note = D;
rightKerningGroup = D;
unicode = 0044;
},
{
glyphname = DZcaron;
lastChange = "2022-03-22 08:50:26 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = Zcaron;
transform = "{1, 0, 0, 1, 737, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1329;
}
);
leftKerningGroup = D;
rightKerningGroup = Z;
unicode = 01C4;
},
{
glyphname = Eth;
lastChange = "2022-03-22 08:50:26 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"245 -73 OFFCURVE",
"359 -47 OFFCURVE",
"462 -1 CURVE SMOOTH",
"569 47 OFFCURVE",
"659 110 OFFCURVE",
"732 189 CURVE SMOOTH",
"805 268 OFFCURVE",
"841 342 OFFCURVE",
"841 411 CURVE SMOOTH",
"841 469 OFFCURVE",
"812 515 OFFCURVE",
"755 548 CURVE SMOOTH",
"696 582 OFFCURVE",
"611 598 OFFCURVE",
"498 598 CURVE SMOOTH",
"467 598 LINE SMOOTH",
"388 598 OFFCURVE",
"318 583 OFFCURVE",
"258 559 CURVE SMOOTH",
"181 529 OFFCURVE",
"133 485 OFFCURVE",
"112 427 CURVE",
"109 421 OFFCURVE",
"108 413 OFFCURVE",
"108 404 CURVE SMOOTH",
"108 365 OFFCURVE",
"146 322 OFFCURVE",
"187 314 CURVE SMOOTH",
"197 312 OFFCURVE",
"202 314 OFFCURVE",
"202 319 CURVE SMOOTH",
"202 325 OFFCURVE",
"196 330 OFFCURVE",
"184 333 CURVE SMOOTH",
"172 336 OFFCURVE",
"162 344 OFFCURVE",
"153 356 CURVE SMOOTH",
"144 369 OFFCURVE",
"140 383 OFFCURVE",
"140 398 CURVE SMOOTH",
"140 406 OFFCURVE",
"141 413 OFFCURVE",
"144 419 CURVE SMOOTH",
"163 469 OFFCURVE",
"214 509 OFFCURVE",
"299 540 CURVE SMOOTH",
"362 563 OFFCURVE",
"421 575 OFFCURVE",
"477 576 CURVE SMOOTH",
"696 581 OFFCURVE",
"805 530 OFFCURVE",
"805 425 CURVE SMOOTH",
"805 360 OFFCURVE",
"766 287 OFFCURVE",
"687 206 CURVE SMOOTH",
"612 128 OFFCURVE",
"525 66 OFFCURVE",
"427 21 CURVE SMOOTH",
"398 8 OFFCURVE",
"354 -6 OFFCURVE",
"297 -21 CURVE SMOOTH",
"225 -40 OFFCURVE",
"164 -49 OFFCURVE",
"113 -52 CURVE SMOOTH",
"62 -53 OFFCURVE",
"21 -35 OFFCURVE",
"21 -4 CURVE SMOOTH",
"21 29 OFFCURVE",
"62 65 OFFCURVE",
"145 104 CURVE",
"126 69 OFFCURVE",
"113 43 OFFCURVE",
"106 27 CURVE SMOOTH",
"103 18 OFFCURVE",
"101 12 OFFCURVE",
"101 7 CURVE SMOOTH",
"101 -4 OFFCURVE",
"107 -9 OFFCURVE",
"120 -9 CURVE SMOOTH",
"143 -9 OFFCURVE",
"178 6 OFFCURVE",
"225 37 CURVE SMOOTH",
"226 38 OFFCURVE",
"227 39 OFFCURVE",
"227 40 CURVE SMOOTH",
"227 43 OFFCURVE",
"224 43 OFFCURVE",
"219 42 CURVE SMOOTH",
"213 42 OFFCURVE",
"207 40 OFFCURVE",
"202 37 CURVE",
"189 26 OFFCURVE",
"174 20 OFFCURVE",
"158 20 CURVE SMOOTH",
"153 20 OFFCURVE",
"150 24 OFFCURVE",
"150 32 CURVE SMOOTH",
"150 46 OFFCURVE",
"161 68 OFFCURVE",
"182 97 CURVE SMOOTH",
"191 112 OFFCURVE",
"211 127 OFFCURVE",
"242 143 CURVE SMOOTH",
"275 161 OFFCURVE",
"310 174 OFFCURVE",
"348 182 CURVE SMOOTH",
"367 186 OFFCURVE",
"376 190 OFFCURVE",
"376 195 CURVE SMOOTH",
"376 198 OFFCURVE",
"372 199 OFFCURVE",
"365 199 CURVE SMOOTH",
"360 199 OFFCURVE",
"357 199 OFFCURVE",
"355 198 CURVE",
"310 187 OFFCURVE",
"266 176 OFFCURVE",
"225 161 CURVE",
"276 223 LINE SMOOTH",
"291 241 OFFCURVE",
"304 256 OFFCURVE",
"315 267 CURVE SMOOTH",
"400 356 OFFCURVE",
"460 416 OFFCURVE",
"495 445 CURVE SMOOTH",
"506 454 OFFCURVE",
"512 462 OFFCURVE",
"512 468 CURVE SMOOTH",
"512 469 OFFCURVE",
"511 470 OFFCURVE",
"511 471 CURVE",
"508 476 OFFCURVE",
"500 479 OFFCURVE",
"489 479 CURVE SMOOTH",
"470 479 OFFCURVE",
"456 475 OFFCURVE",
"448 467 CURVE",
"394 431 LINE SMOOTH",
"377 420 OFFCURVE",
"363 410 OFFCURVE",
"353 403 CURVE SMOOTH",
"342 396 OFFCURVE",
"335 390 OFFCURVE",
"332 387 CURVE",
"351 392 OFFCURVE",
"370 400 OFFCURVE",
"391 409 CURVE",
"354 369 OFFCURVE",
"313 321 OFFCURVE",
"268 264 CURVE SMOOTH",
"241 230 OFFCURVE",
"219 203 OFFCURVE",
"203 182 CURVE SMOOTH",
"186 161 OFFCURVE",
"175 147 OFFCURVE",
"170 140 CURVE",
"56 91 OFFCURVE",
"-1 42 OFFCURVE",
"-1 -5 CURVE SMOOTH",
"-1 -27 OFFCURVE",
"11 -45 OFFCURVE",
"36 -59 CURVE SMOOTH",
"61 -72 OFFCURVE",
"88 -79 OFFCURVE",
"119 -78 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"213.733 217.174 OFFCURVE",
"280.86 228.439 OFFCURVE",
"353.438 236.343 CURVE",
"362.493 236.447 OFFCURVE",
"369.441 237.3 OFFCURVE",
"374.404 237.91 CURVE SMOOTH",
"385.322 239.25 LINE SMOOTH",
"392.27 240.103 OFFCURVE",
"395.996 242.576 OFFCURVE",
"395.387 247.539 CURVE SMOOTH",
"395.021 250.516 OFFCURVE",
"391.678 253.128 OFFCURVE",
"385.601 253.39 CURVE SMOOTH",
"357.322 253.948 LINE SMOOTH",
"321.973 254.645 OFFCURVE",
"281.906 252.748 OFFCURVE",
"238.234 247.386 CURVE SMOOTH",
"212.427 244.217 OFFCURVE",
"185.75 239.934 OFFCURVE",
"157.21 234.415 CURVE",
"143.54 222.661 OFFCURVE",
"136.819 211.761 OFFCURVE",
"137.916 202.828 CURVE SMOOTH",
"138.403 198.857 OFFCURVE",
"141.624 197.238 OFFCURVE",
"147.58 197.969 CURVE"
);
}
);
width = 737;
}
);
leftKerningGroup = D;
rightKerningGroup = D;
unicode = 00D0;
},
{
glyphname = Dcaron;
lastChange = "2022-03-22 12:01:37 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 399, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 737;
}
);
leftKerningGroup = D;
rightKerningGroup = D;
unicode = 010E;
},
{
glyphname = Dcroat;
lastChange = "2022-03-22 08:50:26 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"245 -73 OFFCURVE",
"359 -47 OFFCURVE",
"462 -1 CURVE SMOOTH",
"569 47 OFFCURVE",
"659 110 OFFCURVE",
"732 189 CURVE SMOOTH",
"805 268 OFFCURVE",
"841 342 OFFCURVE",
"841 411 CURVE SMOOTH",
"841 469 OFFCURVE",
"812 515 OFFCURVE",
"755 548 CURVE SMOOTH",
"696 582 OFFCURVE",
"611 598 OFFCURVE",
"498 598 CURVE SMOOTH",
"467 598 LINE SMOOTH",
"388 598 OFFCURVE",
"318 583 OFFCURVE",
"258 559 CURVE SMOOTH",
"181 529 OFFCURVE",
"133 485 OFFCURVE",
"112 427 CURVE",
"109 421 OFFCURVE",
"108 413 OFFCURVE",
"108 404 CURVE SMOOTH",
"108 365 OFFCURVE",
"146 322 OFFCURVE",
"187 314 CURVE SMOOTH",
"197 312 OFFCURVE",
"202 314 OFFCURVE",
"202 319 CURVE SMOOTH",
"202 325 OFFCURVE",
"196 330 OFFCURVE",
"184 333 CURVE SMOOTH",
"172 336 OFFCURVE",
"162 344 OFFCURVE",
"153 356 CURVE SMOOTH",
"144 369 OFFCURVE",
"140 383 OFFCURVE",
"140 398 CURVE SMOOTH",
"140 406 OFFCURVE",
"141 413 OFFCURVE",
"144 419 CURVE SMOOTH",
"163 469 OFFCURVE",
"214 509 OFFCURVE",
"299 540 CURVE SMOOTH",
"362 563 OFFCURVE",
"421 575 OFFCURVE",
"477 576 CURVE SMOOTH",
"696 581 OFFCURVE",
"805 530 OFFCURVE",
"805 425 CURVE SMOOTH",
"805 360 OFFCURVE",
"766 287 OFFCURVE",
"687 206 CURVE SMOOTH",
"612 128 OFFCURVE",
"525 66 OFFCURVE",
"427 21 CURVE SMOOTH",
"398 8 OFFCURVE",
"354 -6 OFFCURVE",
"297 -21 CURVE SMOOTH",
"225 -40 OFFCURVE",
"164 -49 OFFCURVE",
"113 -52 CURVE SMOOTH",
"62 -53 OFFCURVE",
"21 -35 OFFCURVE",
"21 -4 CURVE SMOOTH",
"21 29 OFFCURVE",
"62 65 OFFCURVE",
"145 104 CURVE",
"126 69 OFFCURVE",
"113 43 OFFCURVE",
"106 27 CURVE SMOOTH",
"103 18 OFFCURVE",
"101 12 OFFCURVE",
"101 7 CURVE SMOOTH",
"101 -4 OFFCURVE",
"107 -9 OFFCURVE",
"120 -9 CURVE SMOOTH",
"143 -9 OFFCURVE",
"178 6 OFFCURVE",
"225 37 CURVE SMOOTH",
"226 38 OFFCURVE",
"227 39 OFFCURVE",
"227 40 CURVE SMOOTH",
"227 43 OFFCURVE",
"224 43 OFFCURVE",
"219 42 CURVE SMOOTH",
"213 42 OFFCURVE",
"207 40 OFFCURVE",
"202 37 CURVE",
"189 26 OFFCURVE",
"174 20 OFFCURVE",
"158 20 CURVE SMOOTH",
"153 20 OFFCURVE",
"150 24 OFFCURVE",
"150 32 CURVE SMOOTH",
"150 46 OFFCURVE",
"161 68 OFFCURVE",
"182 97 CURVE SMOOTH",
"191 112 OFFCURVE",
"211 127 OFFCURVE",
"242 143 CURVE SMOOTH",
"275 161 OFFCURVE",
"310 174 OFFCURVE",
"348 182 CURVE SMOOTH",
"367 186 OFFCURVE",
"376 190 OFFCURVE",
"376 195 CURVE SMOOTH",
"376 198 OFFCURVE",
"372 199 OFFCURVE",
"365 199 CURVE SMOOTH",
"360 199 OFFCURVE",
"357 199 OFFCURVE",
"355 198 CURVE",
"310 187 OFFCURVE",
"266 176 OFFCURVE",
"225 161 CURVE",
"276 223 LINE SMOOTH",
"291 241 OFFCURVE",
"304 256 OFFCURVE",
"315 267 CURVE SMOOTH",
"400 356 OFFCURVE",
"460 416 OFFCURVE",
"495 445 CURVE SMOOTH",
"506 454 OFFCURVE",
"512 462 OFFCURVE",
"512 468 CURVE SMOOTH",
"512 469 OFFCURVE",
"511 470 OFFCURVE",
"511 471 CURVE",
"508 476 OFFCURVE",
"500 479 OFFCURVE",
"489 479 CURVE SMOOTH",
"470 479 OFFCURVE",
"456 475 OFFCURVE",
"448 467 CURVE",
"394 431 LINE SMOOTH",
"377 420 OFFCURVE",
"363 410 OFFCURVE",
"353 403 CURVE SMOOTH",
"342 396 OFFCURVE",
"335 390 OFFCURVE",
"332 387 CURVE",
"351 392 OFFCURVE",
"370 400 OFFCURVE",
"391 409 CURVE",
"354 369 OFFCURVE",
"313 321 OFFCURVE",
"268 264 CURVE SMOOTH",
"241 230 OFFCURVE",
"219 203 OFFCURVE",
"203 182 CURVE SMOOTH",
"186 161 OFFCURVE",
"175 147 OFFCURVE",
"170 140 CURVE",
"56 91 OFFCURVE",
"-1 42 OFFCURVE",
"-1 -5 CURVE SMOOTH",
"-1 -27 OFFCURVE",
"11 -45 OFFCURVE",
"36 -59 CURVE SMOOTH",
"61 -72 OFFCURVE",
"88 -79 OFFCURVE",
"119 -78 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"213.733 217.174 OFFCURVE",
"280.86 228.439 OFFCURVE",
"353.438 236.343 CURVE",
"362.493 236.447 OFFCURVE",
"369.441 237.3 OFFCURVE",
"374.404 237.91 CURVE SMOOTH",
"385.322 239.25 LINE SMOOTH",
"392.27 240.103 OFFCURVE",
"395.996 242.576 OFFCURVE",
"395.387 247.539 CURVE SMOOTH",
"395.021 250.516 OFFCURVE",
"391.678 253.128 OFFCURVE",
"385.601 253.39 CURVE SMOOTH",
"357.322 253.948 LINE SMOOTH",
"321.973 254.645 OFFCURVE",
"281.906 252.748 OFFCURVE",
"238.234 247.386 CURVE SMOOTH",
"212.427 244.217 OFFCURVE",
"185.75 239.934 OFFCURVE",
"157.21 234.415 CURVE",
"143.54 222.661 OFFCURVE",
"136.819 211.761 OFFCURVE",
"137.916 202.828 CURVE SMOOTH",
"138.403 198.857 OFFCURVE",
"141.624 197.238 OFFCURVE",
"147.58 197.969 CURVE"
);
}
);
width = 737;
}
);
leftKerningGroup = D;
rightKerningGroup = D;
unicode = 0110;
},
{
glyphname = Dzcaron;
lastChange = "2022-03-22 12:01:39 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 737, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1044;
}
);
leftKerningGroup = D;
rightKerningGroup = z;
unicode = 01C5;
},
{
color = 3;
glyphname = E;
lastChange = "2022-03-22 13:32:56 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{165, -93}";
},
{
name = ogonek;
position = "{613, 0}";
},
{
name = top;
position = "{766, 590}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"303 -93 OFFCURVE",
"359 -86 OFFCURVE",
"412 -73 CURVE SMOOTH",
"444 -65 OFFCURVE",
"491 -49 OFFCURVE",
"554 -25 CURVE SMOOTH",
"603 -6 OFFCURVE",
"659 20 OFFCURVE",
"724 55 CURVE SMOOTH",
"755 71 OFFCURVE",
"799 96 OFFCURVE",
"859 131 CURVE SMOOTH",
"869 137 OFFCURVE",
"874 143 OFFCURVE",
"874 149 CURVE SMOOTH",
"874 153 OFFCURVE",
"872 155 OFFCURVE",
"867 155 CURVE SMOOTH",
"863 155 OFFCURVE",
"859 154 OFFCURVE",
"854 151 CURVE SMOOTH",
"714 78 LINE SMOOTH",
"658 49 OFFCURVE",
"607 27 OFFCURVE",
"561 12 CURVE SMOOTH",
"409 -39 LINE SMOOTH",
"348 -60 OFFCURVE",
"289 -66 OFFCURVE",
"234 -66 CURVE SMOOTH",
"131 -66 OFFCURVE",
"79 -31 OFFCURVE",
"79 40 CURVE SMOOTH",
"79 93 OFFCURVE",
"109 161 OFFCURVE",
"170 244 CURVE",
"245 255 OFFCURVE",
"307 264 OFFCURVE",
"356 270 CURVE SMOOTH",
"405 276 OFFCURVE",
"441 279 OFFCURVE",
"464 279 CURVE SMOOTH",
"518 279 OFFCURVE",
"566 272 OFFCURVE",
"608 259 CURVE SMOOTH",
"631 252 OFFCURVE",
"642 242 OFFCURVE",
"642 229 CURVE SMOOTH",
"642 223 OFFCURVE",
"638 218 OFFCURVE",
"630 214 CURVE SMOOTH",
"620 209 OFFCURVE",
"615 202 OFFCURVE",
"615 193 CURVE SMOOTH",
"616 186 OFFCURVE",
"619 183 OFFCURVE",
"624 183 CURVE SMOOTH",
"629 183 OFFCURVE",
"635 186 OFFCURVE",
"642 192 CURVE SMOOTH",
"660 206 OFFCURVE",
"669 222 OFFCURVE",
"669 239 CURVE SMOOTH",
"669 261 OFFCURVE",
"653 278 OFFCURVE",
"621 289 CURVE SMOOTH",
"583 301 OFFCURVE",
"541 307 OFFCURVE",
"495 307 CURVE SMOOTH",
"462 307 OFFCURVE",
"418 303 OFFCURVE",
"361 296 CURVE SMOOTH",
"254 283 OFFCURVE",
"199 276 OFFCURVE",
"196 275 CURVE",
"251 332 OFFCURVE",
"319 384 OFFCURVE",
"401 431 CURVE SMOOTH",
"506 492 OFFCURVE",
"604 526 OFFCURVE",
"694 532 CURVE SMOOTH",
"754 536 OFFCURVE",
"794 513 OFFCURVE",
"794 469 CURVE SMOOTH",
"794 465 OFFCURVE",
"794 460 OFFCURVE",
"793 453 CURVE SMOOTH",
"792 446 OFFCURVE",
"791 441 OFFCURVE",
"791 438 CURVE SMOOTH",
"791 418 OFFCURVE",
"798 408 OFFCURVE",
"811 408 CURVE SMOOTH",
"829 408 OFFCURVE",
"837 427 OFFCURVE",
"837 466 CURVE SMOOTH",
"837 497 OFFCURVE",
"828 519 OFFCURVE",
"810 532 CURVE SMOOTH",
"793 545 OFFCURVE",
"766 551 OFFCURVE",
"727 551 CURVE SMOOTH",
"711 551 LINE SMOOTH",
"705 551 OFFCURVE",
"699 551 OFFCURVE",
"692 550 CURVE SMOOTH",
"588 543 OFFCURVE",
"484 514 OFFCURVE",
"379 458 CURVE SMOOTH",
"280 407 OFFCURVE",
"196 344 OFFCURVE",
"126 268 CURVE",
"115 267 OFFCURVE",
"105 266 OFFCURVE",
"96 266 CURVE SMOOTH",
"83 266 OFFCURVE",
"72 267 OFFCURVE",
"63 269 CURVE SMOOTH",
"56 270 OFFCURVE",
"52 273 OFFCURVE",
"52 277 CURVE SMOOTH",
"52 285 OFFCURVE",
"78 298 OFFCURVE",
"95 299 CURVE SMOOTH",
"114 300 OFFCURVE",
"123 303 OFFCURVE",
"123 309 CURVE SMOOTH",
"123 311 OFFCURVE",
"120 312 OFFCURVE",
"115 312 CURVE SMOOTH",
"110 312 LINE SMOOTH",
"72 312 OFFCURVE",
"42 301 OFFCURVE",
"21 284 CURVE SMOOTH",
"12 277 OFFCURVE",
"8 269 OFFCURVE",
"8 259 CURVE SMOOTH",
"8 242 OFFCURVE",
"23 226 OFFCURVE",
"43 228 CURVE SMOOTH",
"95 233 LINE",
"54 180 OFFCURVE",
"33 128 OFFCURVE",
"33 78 CURVE SMOOTH",
"33 28 OFFCURVE",
"53 -13 OFFCURVE",
"92 -45 CURVE SMOOTH",
"132 -77 OFFCURVE",
"183 -93 OFFCURVE",
"245 -93 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 55 218 55 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 55 25 55 41 55 57 55 73 55 89 55 105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 55 25 55 41 55 57 55 73 55 89 55 105 55 121 55 137 55 153 55 169 55 185 55 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01248 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01216 14 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01288 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 150 88 166 88 182 88 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 88 213 88 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012103 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01290 1063 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01267 1064 83 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 791;
}
);
leftKerningGroup = E;
note = E;
rightKerningGroup = E;
unicode = 0045;
},
{
glyphname = Eacute;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 00C9;
},
{
glyphname = Ebreve;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 0114;
},
{
glyphname = Ecaron;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 011A;
},
{
glyphname = Ecircumflex;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 00CA;
},
{
glyphname = Ecircumflexacute;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 1EBE;
},
{
glyphname = Ecircumflexdotbelow;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, -85, -93}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 1EC6;
},
{
glyphname = Ecircumflexgrave;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 1EC0;
},
{
glyphname = Ecircumflexhookabove;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 1EC2;
},
{
glyphname = Ecircumflextilde;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 1EC4;
},
{
glyphname = Edblgrave;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 0204;
},
{
glyphname = Edieresis;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 00CB;
},
{
glyphname = Edotaccent;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 0116;
},
{
glyphname = Edotbelow;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, -85, -93}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 1EB8;
},
{
glyphname = Egrave;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 00C8;
},
{
glyphname = Ehookabove;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 1EBA;
},
{
glyphname = Einvertedbreve;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 0206;
},
{
glyphname = Emacron;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 0112;
},
{
glyphname = Eogonek;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = ogonekcomb.case;
transform = "{1, 0, 0, 1, 363, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 0118;
},
{
glyphname = Etilde;
lastChange = "2022-03-22 12:01:44 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 516, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
leftKerningGroup = E;
rightKerningGroup = E;
unicode = 1EBC;
},
{
glyphname = F;
lastChange = "2022-03-22 13:34:52 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"275 -71 OFFCURVE",
"346 -43 OFFCURVE",
"415 11 CURVE SMOOTH",
"468 52 OFFCURVE",
"514 102 OFFCURVE",
"553 161 CURVE SMOOTH",
"572 188 OFFCURVE",
"586 212 OFFCURVE",
"599 235 CURVE",
"636 235 LINE SMOOTH",
"693 235 OFFCURVE",
"740 236 OFFCURVE",
"777 239 CURVE SMOOTH",
"789 240 OFFCURVE",
"795 245 OFFCURVE",
"795 255 CURVE SMOOTH",
"795 259 OFFCURVE",
"793 261 OFFCURVE",
"789 261 CURVE SMOOTH",
"786 261 OFFCURVE",
"784 261 OFFCURVE",
"783 260 CURVE",
"767 255 OFFCURVE",
"715 252 OFFCURVE",
"627 252 CURVE SMOOTH",
"609 252 LINE",
"629 287 OFFCURVE",
"657 336 OFFCURVE",
"693 403 CURVE SMOOTH",
"702 418 OFFCURVE",
"707 427 OFFCURVE",
"708 430 CURVE",
"755 414 OFFCURVE",
"788 402 OFFCURVE",
"811 393 CURVE SMOOTH",
"831 386 OFFCURVE",
"849 384 OFFCURVE",
"866 384 CURVE SMOOTH",
"907 384 OFFCURVE",
"927 402 OFFCURVE",
"927 437 CURVE SMOOTH",
"927 457 OFFCURVE",
"913 478 OFFCURVE",
"884 501 CURVE SMOOTH",
"855 524 OFFCURVE",
"828 535 OFFCURVE",
"802 535 CURVE SMOOTH",
"765 535 OFFCURVE",
"729 515 OFFCURVE",
"695 474 CURVE",
"494 541 OFFCURVE",
"329 581 OFFCURVE",
"200 595 CURVE SMOOTH",
"189 596 OFFCURVE",
"180 597 OFFCURVE",
"169 597 CURVE SMOOTH",
"126 597 OFFCURVE",
"89 588 OFFCURVE",
"58 571 CURVE SMOOTH",
"24 551 OFFCURVE",
"7 524 OFFCURVE",
"7 490 CURVE SMOOTH",
"7 466 OFFCURVE",
"14 444 OFFCURVE",
"29 423 CURVE SMOOTH",
"42 406 OFFCURVE",
"55 390 OFFCURVE",
"70 373 CURVE SMOOTH",
"75 366 OFFCURVE",
"80 363 OFFCURVE",
"86 363 CURVE SMOOTH",
"89 363 OFFCURVE",
"91 365 OFFCURVE",
"91 368 CURVE SMOOTH",
"91 371 OFFCURVE",
"90 374 OFFCURVE",
"87 377 CURVE",
"51 426 LINE",
"38 447 OFFCURVE",
"32 468 OFFCURVE",
"32 490 CURVE SMOOTH",
"32 518 OFFCURVE",
"46 539 OFFCURVE",
"75 554 CURVE SMOOTH",
"100 568 OFFCURVE",
"131 575 OFFCURVE",
"168 575 CURVE SMOOTH",
"255 575 OFFCURVE",
"423 531 OFFCURVE",
"673 442 CURVE",
"660 421 LINE SMOOTH",
"633 374 OFFCURVE",
"601 319 OFFCURVE",
"562 254 CURVE",
"468 260 LINE SMOOTH",
"447 261 OFFCURVE",
"438 262 OFFCURVE",
"440 262 CURVE",
"438 262 OFFCURVE",
"435 265 OFFCURVE",
"432 271 CURVE",
"428 276 OFFCURVE",
"425 279 OFFCURVE",
"422 279 CURVE SMOOTH",
"409 279 OFFCURVE",
"384 262 OFFCURVE",
"372 262 CURVE SMOOTH",
"359 261 OFFCURVE",
"353 253 OFFCURVE",
"353 236 CURVE SMOOTH",
"353 229 OFFCURVE",
"355 226 OFFCURVE",
"359 226 CURVE SMOOTH",
"360 226 OFFCURVE",
"361 226 OFFCURVE",
"363 227 CURVE SMOOTH",
"384 234 OFFCURVE",
"446 237 OFFCURVE",
"551 236 CURVE",
"536 209 OFFCURVE",
"524 190 OFFCURVE",
"515 177 CURVE SMOOTH",
"428 34 OFFCURVE",
"330 -43 OFFCURVE",
"219 -52 CURVE SMOOTH",
"172 -55 OFFCURVE",
"132 -40 OFFCURVE",
"97 -6 CURVE SMOOTH",
"65 24 OFFCURVE",
"49 58 OFFCURVE",
"49 96 CURVE SMOOTH",
"49 129 OFFCURVE",
"60 158 OFFCURVE",
"75 183 CURVE SMOOTH",
"90 205 OFFCURVE",
"105 217 OFFCURVE",
"122 220 CURVE SMOOTH",
"133 222 OFFCURVE",
"139 225 OFFCURVE",
"139 230 CURVE SMOOTH",
"139 232 OFFCURVE",
"136 233 OFFCURVE",
"131 233 CURVE SMOOTH",
"127 233 LINE SMOOTH",
"102 230 OFFCURVE",
"79 218 OFFCURVE",
"57 197 CURVE SMOOTH",
"29 171 OFFCURVE",
"14 138 OFFCURVE",
"14 99 CURVE SMOOTH",
"14 55 OFFCURVE",
"33 15 OFFCURVE",
"71 -19 CURVE SMOOTH",
"109 -54 OFFCURVE",
"153 -71 OFFCURVE",
"203 -71 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"866 417 OFFCURVE",
"846 422 OFFCURVE",
"817 432 CURVE SMOOTH",
"730 462 LINE",
"757 498 OFFCURVE",
"785 517 OFFCURVE",
"815 517 CURVE SMOOTH",
"830 517 OFFCURVE",
"848 508 OFFCURVE",
"869 489 CURVE SMOOTH",
"892 469 OFFCURVE",
"904 452 OFFCURVE",
"904 437 CURVE SMOOTH",
"904 424 OFFCURVE",
"896 417 OFFCURVE",
"879 417 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 1067 98 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012102 1061 80 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 706;
}
);
note = F;
unicode = 0046;
},
{
color = 3;
glyphname = G;
lastChange = "2022-03-22 08:52:30 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{274, -194}";
},
{
name = top;
position = "{713, 560}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"328 -194 OFFCURVE",
"334 -194 OFFCURVE",
"341 -193 CURVE SMOOTH",
"422 -184 OFFCURVE",
"504 -128 OFFCURVE",
"587 -26 CURVE SMOOTH",
"627 23 OFFCURVE",
"677 101 OFFCURVE",
"737 206 CURVE",
"738 209 OFFCURVE",
"739 211 OFFCURVE",
"739 212 CURVE SMOOTH",
"739 219 OFFCURVE",
"731 223 OFFCURVE",
"716 223 CURVE SMOOTH",
"699 223 OFFCURVE",
"687 219 OFFCURVE",
"679 210 CURVE SMOOTH",
"562 83 OFFCURVE",
"399 12 OFFCURVE",
"190 -3 CURVE SMOOTH",
"179 -4 OFFCURVE",
"169 -4 OFFCURVE",
"160 -4 CURVE SMOOTH",
"77 -4 OFFCURVE",
"35 25 OFFCURVE",
"35 82 CURVE SMOOTH",
"35 115 OFFCURVE",
"51 153 OFFCURVE",
"84 196 CURVE SMOOTH",
"111 233 OFFCURVE",
"143 265 OFFCURVE",
"179 292 CURVE SMOOTH",
"340 412 OFFCURVE",
"489 472 OFFCURVE",
"627 472 CURVE SMOOTH",
"677 472 OFFCURVE",
"718 466 OFFCURVE",
"749 454 CURVE SMOOTH",
"777 443 OFFCURVE",
"793 428 OFFCURVE",
"797 411 CURVE SMOOTH",
"800 397 OFFCURVE",
"804 390 OFFCURVE",
"811 390 CURVE SMOOTH",
"815 390 OFFCURVE",
"817 393 OFFCURVE",
"817 399 CURVE SMOOTH",
"817 401 OFFCURVE",
"817 404 OFFCURVE",
"816 407 CURVE",
"804 480 OFFCURVE",
"742 517 OFFCURVE",
"630 517 CURVE SMOOTH",
"565 517 OFFCURVE",
"490 501 OFFCURVE",
"405 469 CURVE SMOOTH",
"311 433 OFFCURVE",
"228 386 OFFCURVE",
"156 329 CURVE SMOOTH",
"59 251 OFFCURVE",
"11 170 OFFCURVE",
"11 87 CURVE SMOOTH",
"11 47 OFFCURVE",
"31 15 OFFCURVE",
"72 -10 CURVE SMOOTH",
"103 -30 OFFCURVE",
"139 -40 OFFCURVE",
"178 -40 CURVE SMOOTH",
"183 -40 OFFCURVE",
"189 -39 OFFCURVE",
"195 -39 CURVE SMOOTH",
"342 -28 OFFCURVE",
"485 27 OFFCURVE",
"624 126 CURVE",
"571 34 OFFCURVE",
"531 -28 OFFCURVE",
"502 -63 CURVE SMOOTH",
"447 -128 OFFCURVE",
"389 -165 OFFCURVE",
"328 -172 CURVE SMOOTH",
"303 -175 OFFCURVE",
"277 -169 OFFCURVE",
"249 -156 CURVE SMOOTH",
"229 -145 OFFCURVE",
"212 -133 OFFCURVE",
"199 -119 CURVE SMOOTH",
"193 -112 OFFCURVE",
"186 -109 OFFCURVE",
"179 -109 CURVE SMOOTH",
"172 -109 OFFCURVE",
"169 -111 OFFCURVE",
"169 -116 CURVE SMOOTH",
"169 -119 OFFCURVE",
"171 -123 OFFCURVE",
"175 -127 CURVE SMOOTH",
"220 -172 OFFCURVE",
"269 -194 OFFCURVE",
"322 -194 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 1067 52 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01258 1064 8 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 1064 48 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 725;
}
);
leftKerningGroup = G;
note = G;
rightKerningGroup = G;
unicode = 0047;
},
{
glyphname = Gbreve;
lastChange = "2022-03-22 12:01:48 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 463, 260}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 725;
}
);
leftKerningGroup = G;
rightKerningGroup = G;
unicode = 011E;
},
{
glyphname = Gcaron;
lastChange = "2022-03-22 12:01:48 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 463, 260}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 725;
}
);
leftKerningGroup = G;
rightKerningGroup = G;
unicode = 01E6;
},
{
glyphname = Gcircumflex;
lastChange = "2022-03-22 12:01:48 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 463, 260}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 725;
}
);
leftKerningGroup = G;
rightKerningGroup = G;
unicode = 011C;
},
{
glyphname = Gcommaaccent;
lastChange = "2022-03-22 12:01:48 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, 24, -194}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 725;
}
);
leftKerningGroup = G;
rightKerningGroup = G;
unicode = 0122;
},
{
glyphname = Gdotaccent;
lastChange = "2022-03-22 12:01:48 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 463, 260}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 725;
}
);
leftKerningGroup = G;
rightKerningGroup = G;
unicode = 0120;
},
{
color = 3;
glyphname = H;
lastChange = "2022-03-22 13:38:12 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{1059, 620}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"169 -144 OFFCURVE",
"242 -109 OFFCURVE",
"331 -40 CURVE SMOOTH",
"416 25 OFFCURVE",
"501 111 OFFCURVE",
"589 216 CURVE",
"672 223 OFFCURVE",
"758 226 OFFCURVE",
"846 226 CURVE SMOOTH",
"890 226 LINE",
"837 149 OFFCURVE",
"801 83 OFFCURVE",
"783 29 CURVE",
"780 23 OFFCURVE",
"779 16 OFFCURVE",
"779 9 CURVE SMOOTH",
"779 -4 OFFCURVE",
"786 -11 OFFCURVE",
"800 -11 CURVE SMOOTH",
"825 -11 OFFCURVE",
"861 7 OFFCURVE",
"908 42 CURVE SMOOTH",
"909 43 OFFCURVE",
"910 45 OFFCURVE",
"910 46 CURVE SMOOTH",
"910 49 OFFCURVE",
"907 51 OFFCURVE",
"900 51 CURVE SMOOTH",
"894 51 OFFCURVE",
"890 50 OFFCURVE",
"887 47 CURVE SMOOTH",
"866 31 OFFCURVE",
"850 23 OFFCURVE",
"841 23 CURVE SMOOTH",
"836 23 OFFCURVE",
"834 29 OFFCURVE",
"834 40 CURVE SMOOTH",
"834 60 OFFCURVE",
"844 85 OFFCURVE",
"863 117 CURVE SMOOTH",
"929 226 LINE",
"941 225 OFFCURVE",
"952 225 OFFCURVE",
"962 225 CURVE SMOOTH",
"988 225 LINE SMOOTH",
"1000 225 OFFCURVE",
"1006 227 OFFCURVE",
"1006 232 CURVE SMOOTH",
"1006 235 OFFCURVE",
"1001 238 OFFCURVE",
"991 239 CURVE SMOOTH",
"941 243 LINE",
"1023 364 OFFCURVE",
"1112 473 OFFCURVE",
"1208 570 CURVE SMOOTH",
"1239 601 OFFCURVE",
"1259 616 OFFCURVE",
"1270 616 CURVE SMOOTH",
"1281 616 OFFCURVE",
"1287 619 OFFCURVE",
"1287 625 CURVE SMOOTH",
"1287 632 OFFCURVE",
"1282 635 OFFCURVE",
"1272 635 CURVE SMOOTH",
"1269 635 OFFCURVE",
"1266 635 OFFCURVE",
"1264 634 CURVE",
"1249 631 OFFCURVE",
"1234 627 OFFCURVE",
"1219 623 CURVE SMOOTH",
"1200 618 OFFCURVE",
"1185 609 OFFCURVE",
"1175 597 CURVE SMOOTH",
"1071 476 OFFCURVE",
"983 358 OFFCURVE",
"903 245 CURVE",
"821 250 OFFCURVE",
"746 253 OFFCURVE",
"678 253 CURVE SMOOTH",
"656 253 OFFCURVE",
"635 253 OFFCURVE",
"614 252 CURVE",
"625 265 OFFCURVE",
"633 273 OFFCURVE",
"640 280 CURVE",
"654 282 LINE SMOOTH",
"664 283 OFFCURVE",
"669 285 OFFCURVE",
"670 286 CURVE SMOOTH",
"672 288 OFFCURVE",
"673 290 OFFCURVE",
"673 292 CURVE SMOOTH",
"673 295 OFFCURVE",
"670 297 OFFCURVE",
"664 300 CURVE SMOOTH",
"657 303 OFFCURVE",
"654 304 OFFCURVE",
"655 305 CURVE SMOOTH",
"708 376 OFFCURVE",
"742 426 OFFCURVE",
"759 457 CURVE",
"785 474 OFFCURVE",
"800 495 OFFCURVE",
"805 518 CURVE SMOOTH",
"806 525 OFFCURVE",
"807 531 OFFCURVE",
"807 538 CURVE SMOOTH",
"807 556 OFFCURVE",
"803 565 OFFCURVE",
"794 565 CURVE SMOOTH",
"789 565 OFFCURVE",
"783 561 OFFCURVE",
"776 553 CURVE SMOOTH",
"759 532 OFFCURVE",
"744 512 OFFCURVE",
"733 493 CURVE",
"694 471 LINE",
"654 449 LINE SMOOTH",
"586 411 OFFCURVE",
"552 374 OFFCURVE",
"552 335 CURVE SMOOTH",
"552 307 OFFCURVE",
"567 290 OFFCURVE",
"596 285 CURVE",
"570 250 LINE",
"565 250 LINE",
"554 249 LINE SMOOTH",
"479 242 OFFCURVE",
"402 233 OFFCURVE",
"324 219 CURVE",
"327 226 LINE",
"343 242 LINE SMOOTH",
"344 243 OFFCURVE",
"344 244 OFFCURVE",
"345 246 CURVE SMOOTH",
"347 249 LINE",
"302 232 OFFCURVE",
"264 216 OFFCURVE",
"233 201 CURVE",
"222 199 OFFCURVE",
"217 192 OFFCURVE",
"217 179 CURVE SMOOTH",
"217 169 OFFCURVE",
"221 165 OFFCURVE",
"228 165 CURVE SMOOTH",
"232 165 LINE",
"329 188 OFFCURVE",
"432 203 OFFCURVE",
"541 214 CURVE",
"458 111 OFFCURVE",
"381 30 OFFCURVE",
"309 -30 CURVE SMOOTH",
"234 -93 OFFCURVE",
"173 -124 OFFCURVE",
"127 -124 CURVE SMOOTH",
"73 -124 OFFCURVE",
"46 -80 OFFCURVE",
"46 9 CURVE SMOOTH",
"46 87 OFFCURVE",
"67 147 OFFCURVE",
"109 190 CURVE SMOOTH",
"115 196 OFFCURVE",
"118 201 OFFCURVE",
"118 206 CURVE SMOOTH",
"118 209 OFFCURVE",
"117 210 OFFCURVE",
"115 210 CURVE SMOOTH",
"112 210 OFFCURVE",
"108 208 OFFCURVE",
"103 203 CURVE SMOOTH",
"42 140 OFFCURVE",
"12 76 OFFCURVE",
"12 11 CURVE SMOOTH",
"12 -92 OFFCURVE",
"46 -144 OFFCURVE",
"113 -144 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"602 303 OFFCURVE",
"586 306 OFFCURVE",
"586 336 CURVE SMOOTH",
"586 368 OFFCURVE",
"612 404 OFFCURVE",
"659 433 CURVE",
"684 445 OFFCURVE",
"702 453 OFFCURVE",
"714 458 CURVE",
"706 443 OFFCURVE",
"691 421 OFFCURVE",
"670 390 CURVE SMOOTH",
"639 346 OFFCURVE",
"619 317 OFFCURVE",
"610 303 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012142 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 81 218 81 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 81 121 81 137 81 153 81 169 81 185 81 201 81 217 81 233 81 249 81 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 81 25 81 41 81 57 81 73 81 89 81 105 81 121 81 137 81 153 81 169 81 185 81 201 81 217 81 233 81 249 81 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 81 25 81 41 81 57 81 73 81 89 81 105 81 121 81 137 81 153 81 169 81 185 81 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\012136 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012142 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01253 1068 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 53 213 53 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01259 43 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01271 43 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01273 43 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01227 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01255 1062 41 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0122 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01233 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01259 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01271 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01273 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01279 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012112 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012131 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 958;
}
);
leftKerningGroup = H;
note = H;
rightKerningGroup = H;
unicode = 0048;
},
{
glyphname = Hbar;
lastChange = "2022-03-22 09:11:16 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = emdash;
transform = "{1.09446, 0, 0, 1, 513, 156}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 958;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 0126;
},
{
glyphname = Hcircumflex;
lastChange = "2022-03-22 12:01:50 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 809, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 958;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 0124;
},
{
color = 3;
glyphname = I;
lastChange = "2022-03-22 09:14:10 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{222, -86}";
},
{
name = ogonek;
position = "{455, -30}";
},
{
name = top;
position = "{882, 620}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"323 -86 OFFCURVE",
"393 -68 OFFCURVE",
"454 -31 CURVE SMOOTH",
"505 0 OFFCURVE",
"560 51 OFFCURVE",
"619 120 CURVE SMOOTH",
"676 189 OFFCURVE",
"735 293 OFFCURVE",
"796 430 CURVE SMOOTH",
"801 440 OFFCURVE",
"805 452 OFFCURVE",
"810 465 CURVE SMOOTH",
"814 478 OFFCURVE",
"817 486 OFFCURVE",
"819 491 CURVE",
"840 503 OFFCURVE",
"856 516 OFFCURVE",
"867 531 CURVE SMOOTH",
"876 542 OFFCURVE",
"881 556 OFFCURVE",
"881 571 CURVE SMOOTH",
"881 584 OFFCURVE",
"877 591 OFFCURVE",
"869 591 CURVE SMOOTH",
"863 591 OFFCURVE",
"856 587 OFFCURVE",
"847 578 CURVE SMOOTH",
"822 553 OFFCURVE",
"804 526 OFFCURVE",
"792 499 CURVE",
"767 484 OFFCURVE",
"744 473 OFFCURVE",
"725 462 CURVE SMOOTH",
"677 435 LINE SMOOTH",
"547 362 OFFCURVE",
"486 286 OFFCURVE",
"486 226 CURVE SMOOTH",
"486 217 OFFCURVE",
"487 210 OFFCURVE",
"489 203 CURVE SMOOTH",
"493 184 OFFCURVE",
"506 175 OFFCURVE",
"529 175 CURVE SMOOTH",
"549 175 OFFCURVE",
"559 177 OFFCURVE",
"559 182 CURVE SMOOTH",
"559 185 OFFCURVE",
"552 187 OFFCURVE",
"538 187 CURVE SMOOTH",
"531 187 OFFCURVE",
"524 191 OFFCURVE",
"517 199 CURVE SMOOTH",
"514 202 OFFCURVE",
"511 205 OFFCURVE",
"508 210 CURVE",
"506 250 OFFCURVE",
"524 288 OFFCURVE",
"561 324 CURVE SMOOTH",
"584 346 OFFCURVE",
"626 376 OFFCURVE",
"686 415 CURVE SMOOTH",
"705 427 OFFCURVE",
"733 443 OFFCURVE",
"772 464 CURVE",
"773 465 OFFCURVE",
"759 435 OFFCURVE",
"760 436 CURVE",
"720 352 OFFCURVE",
"692 295 OFFCURVE",
"677 266 CURVE SMOOTH",
"648 212 OFFCURVE",
"619 170 OFFCURVE",
"592 140 CURVE SMOOTH",
"529 71 OFFCURVE",
"473 22 OFFCURVE",
"422 -9 CURVE SMOOTH",
"359 -46 OFFCURVE",
"290 -65 OFFCURVE",
"217 -65 CURVE SMOOTH",
"162 -65 OFFCURVE",
"118 -43 OFFCURVE",
"85 0 CURVE SMOOTH",
"53 41 OFFCURVE",
"37 91 OFFCURVE",
"37 152 CURVE SMOOTH",
"37 187 OFFCURVE",
"43 222 OFFCURVE",
"55 257 CURVE SMOOTH",
"66 289 OFFCURVE",
"81 315 OFFCURVE",
"100 334 CURVE SMOOTH",
"106 341 OFFCURVE",
"109 346 OFFCURVE",
"109 351 CURVE SMOOTH",
"109 353 OFFCURVE",
"108 354 OFFCURVE",
"106 354 CURVE SMOOTH",
"103 354 OFFCURVE",
"100 352 OFFCURVE",
"95 347 CURVE SMOOTH",
"37 286 OFFCURVE",
"8 220 OFFCURVE",
"8 150 CURVE SMOOTH",
"8 83 OFFCURVE",
"30 27 OFFCURVE",
"75 -18 CURVE SMOOTH",
"120 -63 OFFCURVE",
"176 -86 OFFCURVE",
"242 -86 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01227 1065 15 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 27 213 27 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01231 1061 11 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 706;
}
);
leftKerningGroup = I;
note = I;
rightKerningGroup = I;
unicode = 0049;
},
{
glyphname = Iacute;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 632, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 00CD;
},
{
glyphname = Ibreve;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 632, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 012C;
},
{
glyphname = Icaron;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 632, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 01CF;
},
{
glyphname = Icircumflex;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 632, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 00CE;
},
{
glyphname = Idblgrave;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 632, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 0208;
},
{
glyphname = Idieresis;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 632, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 00CF;
},
{
glyphname = Idotaccent;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 632, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 0130;
},
{
glyphname = Idotbelow;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, -28, -86}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 1ECA;
},
{
glyphname = Igrave;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 632, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 00CC;
},
{
glyphname = Ihookabove;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 632, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 1EC8;
},
{
glyphname = Iinvertedbreve;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 632, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 020A;
},
{
glyphname = Imacron;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 632, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 012A;
},
{
glyphname = Iogonek;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = ogonekcomb.case;
transform = "{1, 0, 0, 1, 205, -30}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 012E;
},
{
glyphname = Itilde;
lastChange = "2022-03-22 12:01:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 632, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 0128;
},
{
color = 3;
glyphname = J;
lastChange = "2022-03-22 09:14:38 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{640, 640}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"121 -321 OFFCURVE",
"151 -305 OFFCURVE",
"184 -272 CURVE SMOOTH",
"291 -171 OFFCURVE",
"392 -51 OFFCURVE",
"487 90 CURVE",
"572 149 OFFCURVE",
"635 183 OFFCURVE",
"675 192 CURVE SMOOTH",
"692 195 OFFCURVE",
"700 199 OFFCURVE",
"700 205 CURVE SMOOTH",
"700 208 OFFCURVE",
"694 211 OFFCURVE",
"682 212 CURVE",
"639 206 OFFCURVE",
"584 181 OFFCURVE",
"517 137 CURVE",
"550 193 OFFCURVE",
"585 262 OFFCURVE",
"624 347 CURVE SMOOTH",
"673 453 OFFCURVE",
"697 527 OFFCURVE",
"697 568 CURVE SMOOTH",
"697 586 OFFCURVE",
"693 598 OFFCURVE",
"684 605 CURVE SMOOTH",
"667 619 OFFCURVE",
"641 626 OFFCURVE",
"607 626 CURVE SMOOTH",
"518 626 OFFCURVE",
"411 589 OFFCURVE",
"286 514 CURVE SMOOTH",
"225 477 OFFCURVE",
"170 431 OFFCURVE",
"121 376 CURVE SMOOTH",
"83 334 OFFCURVE",
"57 298 OFFCURVE",
"44 268 CURVE SMOOTH",
"36 251 OFFCURVE",
"32 232 OFFCURVE",
"32 211 CURVE SMOOTH",
"32 155 OFFCURVE",
"61 127 OFFCURVE",
"118 127 CURVE SMOOTH",
"127 127 OFFCURVE",
"136 128 OFFCURVE",
"147 129 CURVE SMOOTH",
"247 144 OFFCURVE",
"340 174 OFFCURVE",
"427 219 CURVE SMOOTH",
"434 223 OFFCURVE",
"438 227 OFFCURVE",
"438 231 CURVE SMOOTH",
"438 234 OFFCURVE",
"436 236 OFFCURVE",
"431 236 CURVE SMOOTH",
"426 236 OFFCURVE",
"418 233 OFFCURVE",
"409 228 CURVE SMOOTH",
"386 214 OFFCURVE",
"346 198 OFFCURVE",
"287 179 CURVE SMOOTH",
"232 162 OFFCURVE",
"190 152 OFFCURVE",
"155 147 CURVE SMOOTH",
"148 146 OFFCURVE",
"141 145 OFFCURVE",
"134 145 CURVE SMOOTH",
"97 145 OFFCURVE",
"78 163 OFFCURVE",
"78 200 CURVE SMOOTH",
"78 213 OFFCURVE",
"80 228 OFFCURVE",
"85 247 CURVE SMOOTH",
"92 278 OFFCURVE",
"112 313 OFFCURVE",
"147 352 CURVE SMOOTH",
"190 402 OFFCURVE",
"246 449 OFFCURVE",
"315 492 CURVE SMOOTH",
"354 517 OFFCURVE",
"403 541 OFFCURVE",
"460 564 CURVE SMOOTH",
"530 591 OFFCURVE",
"583 605 OFFCURVE",
"620 605 CURVE SMOOTH",
"654 605 OFFCURVE",
"671 594 OFFCURVE",
"671 572 CURVE SMOOTH",
"671 528 OFFCURVE",
"608 395 OFFCURVE",
"482 172 CURVE SMOOTH",
"469 151 OFFCURVE",
"458 131 OFFCURVE",
"448 114 CURVE SMOOTH",
"438 97 OFFCURVE",
"429 81 OFFCURVE",
"420 68 CURVE",
"340 9 LINE SMOOTH",
"305 -17 OFFCURVE",
"260 -55 OFFCURVE",
"209 -107 CURVE SMOOTH",
"152 -165 OFFCURVE",
"107 -219 OFFCURVE",
"74 -269 CURVE SMOOTH",
"67 -278 OFFCURVE",
"64 -287 OFFCURVE",
"64 -296 CURVE SMOOTH",
"64 -313 OFFCURVE",
"74 -321 OFFCURVE",
"94 -321 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117 -274 OFFCURVE",
"115 -271 OFFCURVE",
"115 -266 CURVE SMOOTH",
"115 -263 OFFCURVE",
"117 -258 OFFCURVE",
"120 -253 CURVE SMOOTH",
"150 -207 OFFCURVE",
"191 -158 OFFCURVE",
"242 -106 CURVE SMOOTH",
"286 -61 OFFCURVE",
"326 -26 OFFCURVE",
"361 -2 CURVE SMOOTH",
"380 11 LINE",
"303 -93 OFFCURVE",
"227 -180 OFFCURVE",
"150 -256 CURVE SMOOTH",
"138 -268 OFFCURVE",
"129 -274 OFFCURVE",
"122 -274 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01246 1070 69 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 1067 33 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0127 69 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 46 213 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01279 69 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0127 19 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01279 19 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 620;
}
);
leftKerningGroup = J;
note = J;
rightKerningGroup = J;
unicode = 004A;
},
{
glyphname = Jcircumflex;
lastChange = "2022-03-22 12:01:58 +0000";
layers = (
{
components = (
{
name = J;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 390, 340}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 620;
}
);
leftKerningGroup = J;
rightKerningGroup = J;
unicode = 0134;
},
{
color = 3;
glyphname = K;
lastChange = "2022-03-22 13:38:17 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{553, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"982 -168 OFFCURVE",
"1017 -157 OFFCURVE",
"1050 -136 CURVE SMOOTH",
"1084 -115 OFFCURVE",
"1109 -89 OFFCURVE",
"1118 -56 CURVE SMOOTH",
"1120 -49 LINE",
"1120 -44 OFFCURVE",
"1117 -45 OFFCURVE",
"1111 -51 CURVE SMOOTH",
"1104 -56 OFFCURVE",
"1099 -63 OFFCURVE",
"1096 -71 CURVE SMOOTH",
"1081 -110 OFFCURVE",
"1047 -130 OFFCURVE",
"996 -130 CURVE SMOOTH",
"976 -130 OFFCURVE",
"956 -127 OFFCURVE",
"935 -121 CURVE SMOOTH",
"885 -107 OFFCURVE",
"804 -31 OFFCURVE",
"694 111 CURVE SMOOTH",
"614 214 LINE",
"612 216 LINE",
"646 231 OFFCURVE",
"688 254 OFFCURVE",
"737 285 CURVE SMOOTH",
"786 316 OFFCURVE",
"871 382 OFFCURVE",
"994 483 CURVE SMOOTH",
"1105 574 OFFCURVE",
"1170 623 OFFCURVE",
"1188 630 CURVE SMOOTH",
"1199 634 OFFCURVE",
"1205 639 OFFCURVE",
"1205 646 CURVE SMOOTH",
"1205 652 OFFCURVE",
"1200 657 OFFCURVE",
"1189 657 CURVE SMOOTH",
"1179 657 OFFCURVE",
"1167 653 OFFCURVE",
"1154 645 CURVE SMOOTH",
"1132 630 OFFCURVE",
"1070 577 OFFCURVE",
"967 488 CURVE SMOOTH",
"867 400 OFFCURVE",
"787 338 OFFCURVE",
"727 301 CURVE SMOOTH",
"685 275 OFFCURVE",
"642 252 OFFCURVE",
"599 233 CURVE",
"576 264 LINE",
"675 409 OFFCURVE",
"724 506 OFFCURVE",
"724 556 CURVE SMOOTH",
"724 605 OFFCURVE",
"690 630 OFFCURVE",
"623 630 CURVE SMOOTH",
"542 630 OFFCURVE",
"433 591 OFFCURVE",
"296 514 CURVE SMOOTH",
"231 477 OFFCURVE",
"173 432 OFFCURVE",
"117 376 CURVE SMOOTH",
"74 334 OFFCURVE",
"45 298 OFFCURVE",
"28 268 CURVE SMOOTH",
"15 247 OFFCURVE",
"9 224 OFFCURVE",
"9 198 CURVE SMOOTH",
"9 151 OFFCURVE",
"35 127 OFFCURVE",
"87 127 CURVE SMOOTH",
"96 127 OFFCURVE",
"105 128 OFFCURVE",
"116 129 CURVE SMOOTH",
"163 136 OFFCURVE",
"207 146 OFFCURVE",
"246 164 CURVE SMOOTH",
"310 194 LINE SMOOTH",
"318 198 OFFCURVE",
"322 202 OFFCURVE",
"322 207 CURVE SMOOTH",
"322 210 OFFCURVE",
"320 211 OFFCURVE",
"315 211 CURVE SMOOTH",
"309 211 OFFCURVE",
"301 208 OFFCURVE",
"292 203 CURVE SMOOTH",
"269 190 OFFCURVE",
"240 178 OFFCURVE",
"201 165 CURVE SMOOTH",
"159 152 OFFCURVE",
"127 145 OFFCURVE",
"105 145 CURVE SMOOTH",
"70 145 OFFCURVE",
"53 160 OFFCURVE",
"53 191 CURVE SMOOTH",
"53 206 OFFCURVE",
"57 225 OFFCURVE",
"66 247 CURVE SMOOTH",
"77 277 OFFCURVE",
"101 312 OFFCURVE",
"139 352 CURVE SMOOTH",
"188 403 OFFCURVE",
"249 449 OFFCURVE",
"322 492 CURVE SMOOTH",
"456 570 OFFCURVE",
"559 609 OFFCURVE",
"631 609 CURVE SMOOTH",
"671 609 OFFCURVE",
"691 596 OFFCURVE",
"691 570 CURVE SMOOTH",
"691 529 OFFCURVE",
"644 438 OFFCURVE",
"549 297 CURVE",
"520 333 OFFCURVE",
"495 351 OFFCURVE",
"474 351 CURVE SMOOTH",
"458 351 OFFCURVE",
"444 339 OFFCURVE",
"433 316 CURVE SMOOTH",
"424 298 OFFCURVE",
"420 279 OFFCURVE",
"420 260 CURVE SMOOTH",
"420 217 OFFCURVE",
"438 192 OFFCURVE",
"473 185 CURVE",
"378 43 OFFCURVE",
"295 -62 OFFCURVE",
"226 -129 CURVE",
"217 -136 OFFCURVE",
"210 -140 OFFCURVE",
"205 -140 CURVE SMOOTH",
"202 -140 OFFCURVE",
"198 -139 OFFCURVE",
"193 -136 CURVE SMOOTH",
"188 -133 OFFCURVE",
"185 -131 OFFCURVE",
"183 -131 CURVE SMOOTH",
"176 -131 OFFCURVE",
"172 -135 OFFCURVE",
"172 -142 CURVE SMOOTH",
"172 -153 OFFCURVE",
"190 -165 OFFCURVE",
"213 -165 CURVE SMOOTH",
"234 -165 OFFCURVE",
"252 -157 OFFCURVE",
"269 -140 CURVE SMOOTH",
"324 -86 OFFCURVE",
"408 22 OFFCURVE",
"522 185 CURVE",
"545 190 OFFCURVE",
"567 196 OFFCURVE",
"590 207 CURVE",
"649 119 LINE",
"778 -57 OFFCURVE",
"864 -151 OFFCURVE",
"907 -163 CURVE SMOOTH",
"920 -166 OFFCURVE",
"932 -168 OFFCURVE",
"947 -168 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"469 219 OFFCURVE",
"459 237 OFFCURVE",
"459 262 CURVE SMOOTH",
"459 287 OFFCURVE",
"471 308 OFFCURVE",
"488 308 CURVE SMOOTH",
"495 308 OFFCURVE",
"502 304 OFFCURVE",
"509 297 CURVE",
"517 293 OFFCURVE",
"526 286 OFFCURVE",
"535 277 CURVE",
"492 212 LINE SMOOTH",
"491 211 OFFCURVE",
"490 210 OFFCURVE",
"490 209 CURVE"
);
},
{
closed = 1;
nodes = (
"563 245 LINE",
"578 224 LINE",
"564 217 OFFCURVE",
"551 212 OFFCURVE",
"538 209 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01268 1070 90 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012128 1070 50 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012101 1068 58 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01248 90 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01256 90 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012202 58 218 58 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 68 118 68 134 68 150 68 166 68 182 68 198 68 214 68 230 68 246 68 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 68 22 68 38 68 54 68 70 68 86 68 102 68 118 68 134 68 150 68 166 68 182 68 198 68 214 68 230 68 246 68 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 68 22 68 38 68 54 68 70 68 86 68 102 68 118 68 134 68 150 68 166 68 182 68 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 68 213 68 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012118 90 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012119 90 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 128 118 128 134 128 150 128 166 128 182 128 198 128 214 128 230 128 246 128 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 128 22 128 38 128 54 128 70 128 86 128 102 128 118 128 134 128 150 128 166 128 182 128 198 128 214 128 230 128 246 128 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 128 22 128 38 128 54 128 70 128 86 128 102 128 118 128 134 128 150 128 166 128 182 128 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 128 213 128 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012101 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012134 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01212 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01248 23 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01256 23 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012118 23 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012119 23 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 825;
}
);
leftKerningGroup = K;
note = K;
rightKerningGroup = K;
unicode = 004B;
},
{
glyphname = Kcommaaccent;
lastChange = "2022-03-22 12:01:58 +0000";
layers = (
{
components = (
{
name = K;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, 303, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 825;
}
);
leftKerningGroup = K;
rightKerningGroup = K;
unicode = 0136;
},
{
color = 3;
glyphname = L;
lastChange = "2022-03-22 13:38:22 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{261, 0}";
},
{
name = top;
position = "{814, 621}";
},
{
name = topright;
position = "{841, 620}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"802 -163 OFFCURVE",
"838 -149 OFFCURVE",
"867 -120 CURVE SMOOTH",
"896 -91 OFFCURVE",
"911 -56 OFFCURVE",
"911 -16 CURVE SMOOTH",
"911 -10 OFFCURVE",
"910 -7 OFFCURVE",
"908 -7 CURVE SMOOTH",
"900 -7 OFFCURVE",
"896 -17 OFFCURVE",
"896 -36 CURVE SMOOTH",
"896 -65 OFFCURVE",
"882 -88 OFFCURVE",
"853 -104 CURVE SMOOTH",
"828 -117 OFFCURVE",
"796 -124 OFFCURVE",
"759 -124 CURVE SMOOTH",
"647 -124 OFFCURVE",
"535 -89 OFFCURVE",
"427 -17 CURVE SMOOTH",
"291 73 LINE",
"309 95 OFFCURVE",
"328 125 OFFCURVE",
"349 164 CURVE SMOOTH",
"396 251 OFFCURVE",
"447 329 OFFCURVE",
"504 398 CURVE SMOOTH",
"581 493 OFFCURVE",
"645 540 OFFCURVE",
"697 540 CURVE SMOOTH",
"727 540 OFFCURVE",
"754 529 OFFCURVE",
"779 508 CURVE SMOOTH",
"804 487 OFFCURVE",
"816 464 OFFCURVE",
"817 441 CURVE SMOOTH",
"818 428 OFFCURVE",
"822 421 OFFCURVE",
"827 421 CURVE SMOOTH",
"830 421 OFFCURVE",
"831 424 OFFCURVE",
"831 430 CURVE SMOOTH",
"831 434 LINE SMOOTH",
"831 467 OFFCURVE",
"817 498 OFFCURVE",
"796 529 CURVE SMOOTH",
"771 564 OFFCURVE",
"741 582 OFFCURVE",
"707 582 CURVE SMOOTH",
"648 582 OFFCURVE",
"585 543 OFFCURVE",
"518 464 CURVE SMOOTH",
"466 403 OFFCURVE",
"406 312 OFFCURVE",
"338 191 CURVE SMOOTH",
"313 146 OFFCURVE",
"290 111 OFFCURVE",
"269 87 CURVE",
"158 162 OFFCURVE",
"88 200 OFFCURVE",
"61 200 CURVE SMOOTH",
"33 200 OFFCURVE",
"19 183 OFFCURVE",
"19 148 CURVE SMOOTH",
"19 115 OFFCURVE",
"32 82 OFFCURVE",
"57 49 CURVE SMOOTH",
"84 12 OFFCURVE",
"116 -6 OFFCURVE",
"154 -6 CURVE SMOOTH",
"193 -6 OFFCURVE",
"230 11 OFFCURVE",
"265 44 CURVE",
"405 -48 LINE SMOOTH",
"522 -125 OFFCURVE",
"640 -163 OFFCURVE",
"759 -163 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"127 22 OFFCURVE",
"103 31 OFFCURVE",
"82 49 CURVE SMOOTH",
"59 70 OFFCURVE",
"48 91 OFFCURVE",
"48 112 CURVE SMOOTH",
"48 133 OFFCURVE",
"57 144 OFFCURVE",
"75 144 CURVE SMOOTH",
"98 144 OFFCURVE",
"154 116 OFFCURVE",
"241 59 CURVE",
"213 34 OFFCURVE",
"184 22 OFFCURVE",
"154 22 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01256 1065 13 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 56 213 56 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0129 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01250 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01244 1064 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01223 1064 35 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 1064 54 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01260 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 60 119 60 135 60 151 60 167 60 183 60 199 60 215 60 231 60 247 60 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 60 23 60 39 60 55 60 71 60 87 60 103 60 119 60 135 60 151 60 167 60 183 60 199 60 215 60 231 60 247 60 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 60 23 60 39 60 55 60 71 60 87 60 103 60 119 60 135 60 151 60 167 60 183 60 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 60 214 60 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 461;
}
);
leftKerningGroup = L;
note = L;
rightKerningGroup = L;
unicode = 004C;
},
{
glyphname = LJ;
lastChange = "2022-03-22 12:02:10 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = J;
transform = "{1, 0, 0, 1, 461, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1081;
}
);
leftKerningGroup = L;
rightKerningGroup = J;
unicode = 01C7;
},
{
glyphname = Lacute;
lastChange = "2022-03-22 12:02:10 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 564, 321}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 461;
}
);
leftKerningGroup = L;
rightKerningGroup = L;
unicode = 0139;
},
{
glyphname = Lcaron;
lastChange = "2022-03-22 12:02:10 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = caroncomb.alt.case;
transform = "{1, 0, 0, 1, 591, 66}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 461;
}
);
leftKerningGroup = L;
rightKerningGroup = L;
unicode = 013D;
},
{
glyphname = Lcommaaccent;
lastChange = "2022-03-22 12:02:10 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, 11, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 461;
}
);
leftKerningGroup = L;
rightKerningGroup = L;
unicode = 013B;
},
{
color = 3;
glyphname = Ldot;
lastChange = "2022-03-22 12:49:56 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"802 -163 OFFCURVE",
"838 -149 OFFCURVE",
"867 -120 CURVE SMOOTH",
"896 -91 OFFCURVE",
"911 -56 OFFCURVE",
"911 -16 CURVE SMOOTH",
"911 -10 OFFCURVE",
"910 -7 OFFCURVE",
"908 -7 CURVE SMOOTH",
"900 -7 OFFCURVE",
"896 -17 OFFCURVE",
"896 -36 CURVE SMOOTH",
"896 -65 OFFCURVE",
"882 -88 OFFCURVE",
"853 -104 CURVE SMOOTH",
"828 -117 OFFCURVE",
"796 -124 OFFCURVE",
"759 -124 CURVE SMOOTH",
"647 -124 OFFCURVE",
"535 -89 OFFCURVE",
"427 -17 CURVE SMOOTH",
"291 73 LINE",
"309 95 OFFCURVE",
"328 125 OFFCURVE",
"349 164 CURVE SMOOTH",
"396 251 OFFCURVE",
"447 329 OFFCURVE",
"504 398 CURVE SMOOTH",
"581 493 OFFCURVE",
"645 540 OFFCURVE",
"697 540 CURVE SMOOTH",
"727 540 OFFCURVE",
"754 529 OFFCURVE",
"779 508 CURVE SMOOTH",
"804 487 OFFCURVE",
"816 464 OFFCURVE",
"817 441 CURVE SMOOTH",
"818 428 OFFCURVE",
"822 421 OFFCURVE",
"827 421 CURVE SMOOTH",
"830 421 OFFCURVE",
"831 424 OFFCURVE",
"831 430 CURVE SMOOTH",
"831 434 LINE SMOOTH",
"831 467 OFFCURVE",
"817 498 OFFCURVE",
"796 529 CURVE SMOOTH",
"771 564 OFFCURVE",
"741 582 OFFCURVE",
"707 582 CURVE SMOOTH",
"648 582 OFFCURVE",
"585 543 OFFCURVE",
"518 464 CURVE SMOOTH",
"466 403 OFFCURVE",
"406 312 OFFCURVE",
"338 191 CURVE SMOOTH",
"313 146 OFFCURVE",
"290 111 OFFCURVE",
"269 87 CURVE",
"158 162 OFFCURVE",
"88 200 OFFCURVE",
"61 200 CURVE SMOOTH",
"33 200 OFFCURVE",
"19 183 OFFCURVE",
"19 148 CURVE SMOOTH",
"19 115 OFFCURVE",
"32 82 OFFCURVE",
"57 49 CURVE SMOOTH",
"84 12 OFFCURVE",
"116 -6 OFFCURVE",
"154 -6 CURVE SMOOTH",
"193 -6 OFFCURVE",
"230 11 OFFCURVE",
"265 44 CURVE",
"405 -48 LINE SMOOTH",
"522 -125 OFFCURVE",
"640 -163 OFFCURVE",
"759 -163 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"127 22 OFFCURVE",
"103 31 OFFCURVE",
"82 49 CURVE SMOOTH",
"59 70 OFFCURVE",
"48 91 OFFCURVE",
"48 112 CURVE SMOOTH",
"48 133 OFFCURVE",
"57 144 OFFCURVE",
"75 144 CURVE SMOOTH",
"98 144 OFFCURVE",
"154 116 OFFCURVE",
"241 59 CURVE",
"213 34 OFFCURVE",
"184 22 OFFCURVE",
"154 22 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"660 261 OFFCURVE",
"664 274 OFFCURVE",
"679 299 CURVE SMOOTH",
"684 308 OFFCURVE",
"686 315 OFFCURVE",
"686 320 CURVE SMOOTH",
"686 327 OFFCURVE",
"682 330 OFFCURVE",
"674 330 CURVE SMOOTH",
"662 330 OFFCURVE",
"651 326 OFFCURVE",
"640 317 CURVE",
"633 309 OFFCURVE",
"626 302 OFFCURVE",
"621 295 CURVE SMOOTH",
"615 288 OFFCURVE",
"610 281 OFFCURVE",
"605 276 CURVE SMOOTH",
"597 266 OFFCURVE",
"605 261 OFFCURVE",
"628 261 CURVE SMOOTH"
);
}
);
width = 461;
}
);
leftKerningGroup = L;
rightKerningGroup = L;
unicode = 013F;
},
{
glyphname = Lj;
lastChange = "2022-03-22 12:02:10 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = j;
transform = "{1, 0, 0, 1, 461, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 761;
}
);
leftKerningGroup = L;
rightKerningGroup = j;
unicode = 01C8;
},
{
glyphname = Lslash;
lastChange = "2022-03-22 09:18:49 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"802 -163 OFFCURVE",
"838 -149 OFFCURVE",
"867 -120 CURVE SMOOTH",
"896 -91 OFFCURVE",
"911 -56 OFFCURVE",
"911 -16 CURVE SMOOTH",
"911 -10 OFFCURVE",
"910 -7 OFFCURVE",
"908 -7 CURVE SMOOTH",
"900 -7 OFFCURVE",
"896 -17 OFFCURVE",
"896 -36 CURVE SMOOTH",
"896 -65 OFFCURVE",
"882 -88 OFFCURVE",
"853 -104 CURVE SMOOTH",
"828 -117 OFFCURVE",
"796 -124 OFFCURVE",
"759 -124 CURVE SMOOTH",
"647 -124 OFFCURVE",
"536 -88 OFFCURVE",
"427 -17 CURVE SMOOTH",
"291 73 LINE",
"309 95 OFFCURVE",
"328 125 OFFCURVE",
"349 164 CURVE SMOOTH",
"396 251 OFFCURVE",
"447 329 OFFCURVE",
"504 398 CURVE SMOOTH",
"581 493 OFFCURVE",
"645 540 OFFCURVE",
"697 540 CURVE SMOOTH",
"727 540 OFFCURVE",
"754 529 OFFCURVE",
"779 508 CURVE SMOOTH",
"804 487 OFFCURVE",
"816 464 OFFCURVE",
"817 441 CURVE SMOOTH",
"818 428 OFFCURVE",
"822 421 OFFCURVE",
"827 421 CURVE SMOOTH",
"830 421 OFFCURVE",
"831 424 OFFCURVE",
"831 430 CURVE SMOOTH",
"831 434 LINE SMOOTH",
"829 467 OFFCURVE",
"817 498 OFFCURVE",
"796 529 CURVE SMOOTH",
"771 564 OFFCURVE",
"741 582 OFFCURVE",
"707 582 CURVE SMOOTH",
"648 582 OFFCURVE",
"585 543 OFFCURVE",
"518 464 CURVE SMOOTH",
"466 403 OFFCURVE",
"406 312 OFFCURVE",
"338 191 CURVE SMOOTH",
"313 146 OFFCURVE",
"290 111 OFFCURVE",
"269 87 CURVE",
"158 162 OFFCURVE",
"88 200 OFFCURVE",
"61 200 CURVE SMOOTH",
"33 200 OFFCURVE",
"19 183 OFFCURVE",
"19 148 CURVE SMOOTH",
"19 115 OFFCURVE",
"32 82 OFFCURVE",
"57 49 CURVE SMOOTH",
"84 12 OFFCURVE",
"116 -6 OFFCURVE",
"154 -6 CURVE SMOOTH",
"193 -6 OFFCURVE",
"230 11 OFFCURVE",
"265 44 CURVE",
"405 -48 LINE SMOOTH",
"522 -125 OFFCURVE",
"640 -163 OFFCURVE",
"759 -163 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"127 22 OFFCURVE",
"103 31 OFFCURVE",
"82 49 CURVE SMOOTH",
"59 70 OFFCURVE",
"48 91 OFFCURVE",
"48 112 CURVE SMOOTH",
"48 133 OFFCURVE",
"57 144 OFFCURVE",
"75 144 CURVE SMOOTH",
"98 144 OFFCURVE",
"154 116 OFFCURVE",
"241 59 CURVE",
"213 34 OFFCURVE",
"184 22 OFFCURVE",
"154 22 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318.359 180.578 OFFCURVE",
"385.053 194.179 OFFCURVE",
"457.311 204.61 CURVE",
"466.356 205.031 OFFCURVE",
"473.27 206.126 OFFCURVE",
"478.209 206.908 CURVE SMOOTH",
"489.073 208.629 LINE SMOOTH",
"495.987 209.724 OFFCURVE",
"499.625 212.325 OFFCURVE",
"498.843 217.263 CURVE SMOOTH",
"498.374 220.226 OFFCURVE",
"494.941 222.72 OFFCURVE",
"488.859 222.769 CURVE SMOOTH",
"460.578 222.34 LINE SMOOTH",
"425.226 221.803 OFFCURVE",
"385.249 218.509 OFFCURVE",
"341.791 211.626 CURVE SMOOTH",
"316.111 207.559 OFFCURVE",
"289.6 202.348 OFFCURVE",
"261.27 195.836 CURVE",
"248.019 183.612 OFFCURVE",
"241.682 172.484 OFFCURVE",
"243.089 163.595 CURVE SMOOTH",
"243.715 159.644 OFFCURVE",
"246.991 158.138 OFFCURVE",
"252.917 159.077 CURVE"
);
}
);
width = 461;
}
);
leftKerningGroup = L;
rightKerningGroup = L;
unicode = 0141;
},
{
glyphname = M;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"990 -79 OFFCURVE",
"1036 -46 OFFCURVE",
"1099 21 CURVE SMOOTH",
"1106 28 OFFCURVE",
"1109 35 OFFCURVE",
"1109 42 CURVE SMOOTH",
"1109 47 OFFCURVE",
"1107 49 OFFCURVE",
"1104 49 CURVE SMOOTH",
"1101 49 OFFCURVE",
"1098 47 OFFCURVE",
"1094 43 CURVE SMOOTH",
"1074 23 OFFCURVE",
"1051 4 OFFCURVE",
"1024 -14 CURVE SMOOTH",
"989 -38 OFFCURVE",
"963 -50 OFFCURVE",
"947 -50 CURVE SMOOTH",
"937 -50 OFFCURVE",
"931 -44 OFFCURVE",
"931 -33 CURVE SMOOTH",
"931 -31 OFFCURVE",
"932 -28 OFFCURVE",
"932 -25 CURVE",
"946 50 OFFCURVE",
"982 129 OFFCURVE",
"1039 214 CURVE",
"1186 415 LINE SMOOTH",
"1192 424 OFFCURVE",
"1195 434 OFFCURVE",
"1195 445 CURVE SMOOTH",
"1195 479 OFFCURVE",
"1166 515 OFFCURVE",
"1134 515 CURVE SMOOTH",
"1089 515 OFFCURVE",
"1033 492 OFFCURVE",
"968 445 CURVE SMOOTH",
"852 364 OFFCURVE",
"734 266 OFFCURVE",
"606 149 CURVE",
"653 238 OFFCURVE",
"682 301 OFFCURVE",
"697 340 CURVE SMOOTH",
"709 372 OFFCURVE",
"715 398 OFFCURVE",
"715 418 CURVE SMOOTH",
"715 451 OFFCURVE",
"700 467 OFFCURVE",
"670 467 CURVE SMOOTH",
"631 467 OFFCURVE",
"580 442 OFFCURVE",
"515 397 CURVE",
"522 411 LINE SMOOTH",
"545 460 OFFCURVE",
"557 504 OFFCURVE",
"557 544 CURVE SMOOTH",
"557 605 OFFCURVE",
"521 628 OFFCURVE",
"464 628 CURVE SMOOTH",
"392 628 OFFCURVE",
"303 594 OFFCURVE",
"196 525 CURVE SMOOTH",
"165 505 OFFCURVE",
"129 475 OFFCURVE",
"86 436 CURVE SMOOTH",
"41 393 OFFCURVE",
"15 362 OFFCURVE",
"8 344 CURVE SMOOTH",
"6 339 OFFCURVE",
"5 333 OFFCURVE",
"5 328 CURVE SMOOTH",
"5 296 OFFCURVE",
"43 273 OFFCURVE",
"95 273 CURVE SMOOTH",
"110 273 OFFCURVE",
"118 276 OFFCURVE",
"118 284 CURVE SMOOTH",
"118 288 OFFCURVE",
"115 290 OFFCURVE",
"109 290 CURVE SMOOTH",
"104 290 LINE SMOOTH",
"65 288 OFFCURVE",
"45 297 OFFCURVE",
"45 316 CURVE SMOOTH",
"45 333 OFFCURVE",
"71 366 OFFCURVE",
"122 416 CURVE SMOOTH",
"165 459 OFFCURVE",
"200 489 OFFCURVE",
"225 506 CURVE SMOOTH",
"260 529 OFFCURVE",
"299 551 OFFCURVE",
"343 571 CURVE SMOOTH",
"400 596 OFFCURVE",
"444 609 OFFCURVE",
"475 609 CURVE SMOOTH",
"510 609 OFFCURVE",
"527 595 OFFCURVE",
"527 568 CURVE SMOOTH",
"527 550 OFFCURVE",
"521 525 OFFCURVE",
"508 494 CURVE SMOOTH",
"480 430 LINE SMOOTH",
"467 397 OFFCURVE",
"452 366 OFFCURVE",
"433 335 CURVE",
"367 281 LINE SMOOTH",
"336 257 OFFCURVE",
"300 222 OFFCURVE",
"259 175 CURVE SMOOTH",
"212 121 OFFCURVE",
"177 72 OFFCURVE",
"152 28 CURVE SMOOTH",
"148 21 OFFCURVE",
"146 13 OFFCURVE",
"146 6 CURVE SMOOTH",
"146 -11 OFFCURVE",
"155 -19 OFFCURVE",
"174 -19 CURVE SMOOTH",
"197 -19 OFFCURVE",
"223 -4 OFFCURVE",
"252 26 CURVE SMOOTH",
"341 119 OFFCURVE",
"421 228 OFFCURVE",
"492 355 CURVE",
"558 405 OFFCURVE",
"613 434 OFFCURVE",
"658 441 CURVE SMOOTH",
"669 442 OFFCURVE",
"675 437 OFFCURVE",
"675 425 CURVE SMOOTH",
"675 410 OFFCURVE",
"668 387 OFFCURVE",
"653 357 CURVE SMOOTH",
"598 241 OFFCURVE",
"543 137 OFFCURVE",
"489 46 CURVE",
"488 43 OFFCURVE",
"487 41 OFFCURVE",
"487 40 CURVE SMOOTH",
"487 31 OFFCURVE",
"495 26 OFFCURVE",
"511 26 CURVE SMOOTH",
"521 26 OFFCURVE",
"529 29 OFFCURVE",
"534 35 CURVE SMOOTH",
"638 155 OFFCURVE",
"782 281 OFFCURVE",
"974 417 CURVE SMOOTH",
"1043 466 OFFCURVE",
"1097 492 OFFCURVE",
"1136 492 CURVE SMOOTH",
"1149 492 OFFCURVE",
"1156 484 OFFCURVE",
"1156 468 CURVE SMOOTH",
"1156 462 OFFCURVE",
"1155 457 OFFCURVE",
"1152 452 CURVE",
"1080 360 OFFCURVE",
"1021 277 OFFCURVE",
"974 197 CURVE SMOOTH",
"917 101 OFFCURVE",
"888 31 OFFCURVE",
"887 -14 CURVE SMOOTH",
"887 -25 OFFCURVE",
"895 -39 OFFCURVE",
"912 -55 CURVE SMOOTH",
"929 -71 OFFCURVE",
"945 -79 OFFCURVE",
"961 -79 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"190 24 OFFCURVE",
"188 27 OFFCURVE",
"188 32 CURVE SMOOTH",
"188 35 OFFCURVE",
"189 39 OFFCURVE",
"191 43 CURVE SMOOTH",
"214 84 OFFCURVE",
"243 124 OFFCURVE",
"278 165 CURVE",
"335 222 OFFCURVE",
"377 260 OFFCURVE",
"404 281 CURVE",
"350 192 OFFCURVE",
"289 111 OFFCURVE",
"220 40 CURVE SMOOTH",
"210 29 OFFCURVE",
"202 24 OFFCURVE",
"195 24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01280 1070 89 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012100 1065 68 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012107 1070 45 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 45 218 45 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 45 25 45 41 45 57 45 73 45 89 45 105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 45 25 45 41 45 57 45 73 45 89 45 105 45 121 45 137 45 153 45 169 45 185 45 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 80 213 80 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 100 118 100 134 100 150 100 166 100 182 100 198 100 214 100 230 100 246 100 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 100 22 100 38 100 54 100 70 100 86 100 102 100 118 100 134 100 150 100 166 100 182 100 198 100 214 100 230 100 246 100 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 100 22 100 38 100 54 100 70 100 86 100 102 100 118 100 134 100 150 100 166 100 182 100 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 100 213 100 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012103 89 107 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012112 89 107 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012124 89 107 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0123 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0127 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01221 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01253 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0125 1064 17 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012117 1061 30 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012103 3 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012112 3 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012124 3 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1096;
}
);
note = M;
unicode = 004D;
},
{
color = 3;
glyphname = N;
lastChange = "2022-03-22 12:57:56 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{419, 0}";
},
{
name = top;
position = "{769, 620}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"718 -116 OFFCURVE",
"764 -83 OFFCURVE",
"826 -16 CURVE SMOOTH",
"832 -9 OFFCURVE",
"835 -3 OFFCURVE",
"835 4 CURVE SMOOTH",
"835 9 OFFCURVE",
"833 12 OFFCURVE",
"830 12 CURVE SMOOTH",
"827 12 OFFCURVE",
"824 10 OFFCURVE",
"821 7 CURVE SMOOTH",
"800 -13 OFFCURVE",
"777 -32 OFFCURVE",
"751 -50 CURVE SMOOTH",
"716 -75 OFFCURVE",
"690 -87 OFFCURVE",
"673 -87 CURVE SMOOTH",
"663 -87 OFFCURVE",
"658 -81 OFFCURVE",
"658 -70 CURVE SMOOTH",
"658 -68 OFFCURVE",
"659 -65 OFFCURVE",
"659 -62 CURVE",
"678 33 OFFCURVE",
"704 118 OFFCURVE",
"741 195 CURVE SMOOTH",
"766 250 OFFCURVE",
"801 309 OFFCURVE",
"846 370 CURVE SMOOTH",
"946 505 LINE SMOOTH",
"952 514 OFFCURVE",
"955 524 OFFCURVE",
"955 535 CURVE SMOOTH",
"955 569 OFFCURVE",
"926 605 OFFCURVE",
"894 605 CURVE SMOOTH",
"850 605 OFFCURVE",
"789 582 OFFCURVE",
"712 537 CURVE",
"635 485 OFFCURVE",
"570 441 OFFCURVE",
"518 404 CURVE",
"525 414 OFFCURVE",
"529 422 OFFCURVE",
"532 427 CURVE SMOOTH",
"549 463 OFFCURVE",
"557 501 OFFCURVE",
"557 540 CURVE SMOOTH",
"557 573 OFFCURVE",
"549 596 OFFCURVE",
"533 608 CURVE SMOOTH",
"514 622 OFFCURVE",
"489 629 OFFCURVE",
"459 629 CURVE SMOOTH",
"384 629 OFFCURVE",
"297 597 OFFCURVE",
"196 532 CURVE SMOOTH",
"165 513 OFFCURVE",
"129 482 OFFCURVE",
"86 439 CURVE SMOOTH",
"41 395 OFFCURVE",
"15 363 OFFCURVE",
"8 344 CURVE SMOOTH",
"6 339 OFFCURVE",
"5 333 OFFCURVE",
"5 328 CURVE SMOOTH",
"5 296 OFFCURVE",
"43 273 OFFCURVE",
"95 273 CURVE SMOOTH",
"110 273 OFFCURVE",
"118 276 OFFCURVE",
"118 284 CURVE SMOOTH",
"118 288 OFFCURVE",
"115 290 OFFCURVE",
"109 290 CURVE SMOOTH",
"104 290 LINE SMOOTH",
"65 290 OFFCURVE",
"46 297 OFFCURVE",
"46 317 CURVE SMOOTH",
"46 342 OFFCURVE",
"70 378 OFFCURVE",
"118 425 CURVE SMOOTH",
"186 493 OFFCURVE",
"257 538 OFFCURVE",
"341 574 CURVE SMOOTH",
"397 597 OFFCURVE",
"441 609 OFFCURVE",
"473 609 CURVE SMOOTH",
"509 609 OFFCURVE",
"527 595 OFFCURVE",
"527 568 CURVE SMOOTH",
"527 550 OFFCURVE",
"521 525 OFFCURVE",
"508 494 CURVE SMOOTH",
"480 430 LINE SMOOTH",
"466 398 OFFCURVE",
"452 366 OFFCURVE",
"433 335 CURVE",
"367 281 LINE SMOOTH",
"337 256 OFFCURVE",
"300 222 OFFCURVE",
"259 175 CURVE SMOOTH",
"212 121 OFFCURVE",
"177 72 OFFCURVE",
"152 28 CURVE SMOOTH",
"148 21 OFFCURVE",
"146 13 OFFCURVE",
"146 6 CURVE SMOOTH",
"146 -11 OFFCURVE",
"155 -19 OFFCURVE",
"174 -19 CURVE SMOOTH",
"209 -19 OFFCURVE",
"267 31 OFFCURVE",
"346 131 CURVE SMOOTH",
"405 206 OFFCURVE",
"449 271 OFFCURVE",
"482 328 CURVE",
"497 345 OFFCURVE",
"534 377 OFFCURVE",
"595 424 CURVE SMOOTH",
"651 465 OFFCURVE",
"691 494 OFFCURVE",
"718 510 CURVE SMOOTH",
"796 557 OFFCURVE",
"855 582 OFFCURVE",
"896 582 CURVE SMOOTH",
"909 582 OFFCURVE",
"916 574 OFFCURVE",
"916 558 CURVE SMOOTH",
"916 552 OFFCURVE",
"915 547 OFFCURVE",
"912 542 CURVE",
"716 291 OFFCURVE",
"617 94 OFFCURVE",
"614 -51 CURVE SMOOTH",
"614 -62 OFFCURVE",
"622 -76 OFFCURVE",
"639 -92 CURVE SMOOTH",
"656 -108 OFFCURVE",
"672 -116 OFFCURVE",
"688 -116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"190 24 OFFCURVE",
"188 27 OFFCURVE",
"188 32 CURVE SMOOTH",
"188 35 OFFCURVE",
"189 39 OFFCURVE",
"191 43 CURVE SMOOTH",
"210 78 OFFCURVE",
"237 115 OFFCURVE",
"270 155 CURVE SMOOTH",
"309 202 OFFCURVE",
"353 244 OFFCURVE",
"402 283 CURVE",
"338 183 OFFCURVE",
"280 103 OFFCURVE",
"220 40 CURVE SMOOTH",
"210 29 OFFCURVE",
"202 24 OFFCURVE",
"195 24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 57 218 57 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012119 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01268 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 68 118 68 134 68 150 68 166 68 182 68 198 68 214 68 230 68 246 68 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 68 22 68 38 68 54 68 70 68 86 68 102 68 118 68 134 68 150 68 166 68 182 68 198 68 214 68 230 68 246 68 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 68 22 68 38 68 54 68 70 68 86 68 102 68 118 68 134 68 150 68 166 68 182 68 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 68 213 68 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01289 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01293 77 89 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012105 77 89 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01218 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01242 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0128 1064 20 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 1061 30 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01298 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01293 42 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012105 42 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 817;
}
);
leftKerningGroup = N;
note = N;
rightKerningGroup = N;
unicode = 004E;
},
{
glyphname = NJ;
lastChange = "2022-03-22 12:02:20 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = J;
transform = "{1, 0, 0, 1, 817, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1437;
}
);
leftKerningGroup = N;
rightKerningGroup = J;
unicode = 01CA;
},
{
glyphname = Nacute;
lastChange = "2022-03-22 12:02:20 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 519, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 817;
}
);
leftKerningGroup = N;
rightKerningGroup = N;
unicode = 0143;
},
{
glyphname = Ncaron;
lastChange = "2022-03-22 12:02:20 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 519, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 817;
}
);
leftKerningGroup = N;
rightKerningGroup = N;
unicode = 0147;
},
{
glyphname = Ncommaaccent;
lastChange = "2022-03-22 12:02:20 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, 169, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 817;
}
);
leftKerningGroup = N;
rightKerningGroup = N;
unicode = 0145;
},
{
glyphname = Eng;
lastChange = "2022-03-22 09:20:33 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"922 464 OFFCURVE",
"806 270 OFFCURVE",
"743 157 CURVE SMOOTH",
"647 -15 OFFCURVE",
"500 -242 OFFCURVE",
"399 -312 CURVE SMOOTH",
"389 -319 OFFCURVE",
"373 -320 OFFCURVE",
"350 -316 CURVE SMOOTH",
"329 -312 OFFCURVE",
"314 -303 OFFCURVE",
"306 -290 CURVE SMOOTH",
"292 -266 OFFCURVE",
"299 -210 OFFCURVE",
"330 -120 CURVE SMOOTH",
"333 -111 OFFCURVE",
"337 -105 OFFCURVE",
"343 -101 CURVE SMOOTH",
"348 -98 OFFCURVE",
"352 -98 OFFCURVE",
"352 -100 CURVE SMOOTH",
"354 -103 OFFCURVE",
"354 -106 OFFCURVE",
"353 -111 CURVE SMOOTH",
"345 -139 OFFCURVE",
"339 -169 OFFCURVE",
"335 -201 CURVE SMOOTH",
"329 -244 OFFCURVE",
"331 -272 OFFCURVE",
"339 -286 CURVE SMOOTH",
"345 -295 OFFCURVE",
"354 -295 OFFCURVE",
"368 -282 CURVE SMOOTH",
"444 -211 OFFCURVE",
"559 -69 OFFCURVE",
"669 111 CURVE SMOOTH",
"726 203 OFFCURVE",
"780 289 OFFCURVE",
"917 551 CURVE",
"955 536 LINE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"384 -318 OFFCURVE",
"393 -316 OFFCURVE",
"399 -312 CURVE SMOOTH",
"500 -248 OFFCURVE",
"647 -14 OFFCURVE",
"777 214 CURVE SMOOTH",
"819 287 OFFCURVE",
"860 361 OFFCURVE",
"902 434 CURVE SMOOTH",
"932 487 OFFCURVE",
"947 511 OFFCURVE",
"952 530 CURVE",
"955 536 LINE",
"954 537 LINE",
"955 541 OFFCURVE",
"955 546 OFFCURVE",
"955 551 CURVE SMOOTH",
"955 569 OFFCURVE",
"926 605 OFFCURVE",
"894 605 CURVE SMOOTH",
"850 605 OFFCURVE",
"789 582 OFFCURVE",
"712 537 CURVE",
"635 485 OFFCURVE",
"570 441 OFFCURVE",
"518 404 CURVE",
"525 414 OFFCURVE",
"529 422 OFFCURVE",
"532 427 CURVE SMOOTH",
"549 463 OFFCURVE",
"557 501 OFFCURVE",
"557 540 CURVE SMOOTH",
"557 573 OFFCURVE",
"549 596 OFFCURVE",
"533 608 CURVE SMOOTH",
"514 622 OFFCURVE",
"489 629 OFFCURVE",
"459 629 CURVE SMOOTH",
"384 629 OFFCURVE",
"297 597 OFFCURVE",
"196 532 CURVE SMOOTH",
"165 513 OFFCURVE",
"129 482 OFFCURVE",
"86 439 CURVE SMOOTH",
"41 395 OFFCURVE",
"15 363 OFFCURVE",
"8 344 CURVE SMOOTH",
"6 339 OFFCURVE",
"5 333 OFFCURVE",
"5 328 CURVE SMOOTH",
"5 296 OFFCURVE",
"44 273 OFFCURVE",
"96 273 CURVE SMOOTH",
"111 273 OFFCURVE",
"118 276 OFFCURVE",
"118 284 CURVE SMOOTH",
"118 288 OFFCURVE",
"115 290 OFFCURVE",
"108 290 CURVE SMOOTH",
"104 290 LINE SMOOTH",
"65 288 OFFCURVE",
"46 297 OFFCURVE",
"46 317 CURVE SMOOTH",
"46 342 OFFCURVE",
"70 378 OFFCURVE",
"118 425 CURVE SMOOTH",
"186 493 OFFCURVE",
"257 538 OFFCURVE",
"341 574 CURVE SMOOTH",
"397 597 OFFCURVE",
"441 609 OFFCURVE",
"473 609 CURVE SMOOTH",
"509 609 OFFCURVE",
"527 595 OFFCURVE",
"527 568 CURVE SMOOTH",
"527 550 OFFCURVE",
"521 525 OFFCURVE",
"508 494 CURVE SMOOTH",
"480 430 LINE SMOOTH",
"466 398 OFFCURVE",
"452 366 OFFCURVE",
"433 335 CURVE",
"367 281 LINE SMOOTH",
"337 256 OFFCURVE",
"300 222 OFFCURVE",
"259 175 CURVE SMOOTH",
"212 121 OFFCURVE",
"177 72 OFFCURVE",
"152 28 CURVE SMOOTH",
"148 21 OFFCURVE",
"146 13 OFFCURVE",
"146 6 CURVE SMOOTH",
"146 -11 OFFCURVE",
"155 -19 OFFCURVE",
"174 -19 CURVE SMOOTH",
"209 -19 OFFCURVE",
"267 31 OFFCURVE",
"346 131 CURVE SMOOTH",
"405 206 OFFCURVE",
"449 271 OFFCURVE",
"482 328 CURVE",
"497 345 OFFCURVE",
"534 377 OFFCURVE",
"595 424 CURVE SMOOTH",
"651 465 OFFCURVE",
"691 494 OFFCURVE",
"718 510 CURVE SMOOTH",
"796 557 OFFCURVE",
"854 582 OFFCURVE",
"896 582 CURVE SMOOTH",
"910 582 OFFCURVE",
"916 571 OFFCURVE",
"916 563 CURVE SMOOTH",
"916 551 OFFCURVE",
"915 547 OFFCURVE",
"884 493 CURVE SMOOTH",
"833 405 OFFCURVE",
"762 264 OFFCURVE",
"695 154 CURVE SMOOTH",
"559 -69 OFFCURVE",
"481 -186 OFFCURVE",
"421 -240 CURVE SMOOTH",
"380 -279 OFFCURVE",
"359 -290 OFFCURVE",
"348 -290 CURVE SMOOTH",
"343 -290 OFFCURVE",
"341 -289 OFFCURVE",
"339 -286 CURVE SMOOTH",
"334 -278 OFFCURVE",
"332 -264 OFFCURVE",
"332 -245 CURVE SMOOTH",
"332 -233 OFFCURVE",
"333 -218 OFFCURVE",
"335 -201 CURVE SMOOTH",
"339 -169 OFFCURVE",
"345 -139 OFFCURVE",
"353 -111 CURVE SMOOTH",
"354 -106 OFFCURVE",
"354 -103 OFFCURVE",
"352 -100 CURVE",
"352 -98 OFFCURVE",
"348 -98 OFFCURVE",
"343 -101 CURVE SMOOTH",
"337 -105 OFFCURVE",
"333 -111 OFFCURVE",
"330 -120 CURVE SMOOTH",
"309 -181 OFFCURVE",
"299 -226 OFFCURVE",
"299 -256 CURVE SMOOTH",
"299 -271 OFFCURVE",
"301 -282 OFFCURVE",
"306 -290 CURVE SMOOTH",
"314 -303 OFFCURVE",
"329 -312 OFFCURVE",
"350 -316 CURVE SMOOTH",
"358 -317 OFFCURVE",
"365 -318 OFFCURVE",
"372 -318 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"190 24 OFFCURVE",
"188 27 OFFCURVE",
"188 32 CURVE SMOOTH",
"188 35 OFFCURVE",
"189 39 OFFCURVE",
"191 43 CURVE SMOOTH",
"210 78 OFFCURVE",
"237 115 OFFCURVE",
"270 155 CURVE SMOOTH",
"309 202 OFFCURVE",
"353 244 OFFCURVE",
"402 283 CURVE",
"338 183 OFFCURVE",
"280 103 OFFCURVE",
"220 40 CURVE SMOOTH",
"210 29 OFFCURVE",
"202 24 OFFCURVE",
"195 24 CURVE SMOOTH"
);
}
);
width = 817;
}
);
leftKerningGroup = N;
rightKerningGroup = N;
unicode = 014A;
},
{
glyphname = Nj;
lastChange = "2022-03-22 12:02:20 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = j;
transform = "{1, 0, 0, 1, 817, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1117;
}
);
leftKerningGroup = N;
rightKerningGroup = j;
unicode = 01CB;
},
{
glyphname = Ntilde;
lastChange = "2022-03-22 12:02:20 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 519, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 817;
}
);
leftKerningGroup = N;
rightKerningGroup = N;
unicode = 00D1;
},
{
color = 3;
glyphname = O;
lastChange = "2022-03-25 01:05:07 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{230, -49}";
},
{
name = horn;
position = "{690, 468}";
},
{
name = ogonek;
position = "{514, 10}";
},
{
name = top;
position = "{627, 536}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"274 -48 OFFCURVE",
"283 -47 OFFCURVE",
"294 -46 CURVE SMOOTH",
"412 -34 OFFCURVE",
"523 3 OFFCURVE",
"627 66 CURVE SMOOTH",
"744 136 OFFCURVE",
"803 214 OFFCURVE",
"803 301 CURVE SMOOTH",
"803 307 OFFCURVE",
"803 313 OFFCURVE",
"802 320 CURVE SMOOTH",
"796 383 OFFCURVE",
"759 432 OFFCURVE",
"690 468 CURVE SMOOTH",
"629 499 OFFCURVE",
"556 515 OFFCURVE",
"472 515 CURVE SMOOTH",
"387 515 OFFCURVE",
"307 496 OFFCURVE",
"232 459 CURVE SMOOTH",
"145 414 OFFCURVE",
"102 357 OFFCURVE",
"102 286 CURVE SMOOTH",
"102 275 OFFCURVE",
"102 268 OFFCURVE",
"103 265 CURVE",
"67 219 OFFCURVE",
"43 171 OFFCURVE",
"32 122 CURVE SMOOTH",
"30 114 OFFCURVE",
"29 106 OFFCURVE",
"29 99 CURVE SMOOTH",
"29 55 OFFCURVE",
"55 19 OFFCURVE",
"106 -9 CURVE SMOOTH",
"152 -35 OFFCURVE",
"204 -48 OFFCURVE",
"263 -48 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"221 -26 OFFCURVE",
"180 -15 OFFCURVE",
"145 8 CURVE SMOOTH",
"106 32 OFFCURVE",
"87 62 OFFCURVE",
"87 99 CURVE SMOOTH",
"87 133 OFFCURVE",
"100 171 OFFCURVE",
"127 212 CURVE",
"155 171 OFFCURVE",
"200 143 OFFCURVE",
"262 127 CURVE SMOOTH",
"271 125 OFFCURVE",
"276 126 OFFCURVE",
"276 130 CURVE SMOOTH",
"276 133 OFFCURVE",
"271 137 OFFCURVE",
"262 140 CURVE SMOOTH",
"205 155 OFFCURVE",
"165 186 OFFCURVE",
"142 235 CURVE",
"181 290 OFFCURVE",
"238 339 OFFCURVE",
"313 382 CURVE SMOOTH",
"366 411 OFFCURVE",
"415 432 OFFCURVE",
"460 445 CURVE SMOOTH",
"465 446 OFFCURVE",
"467 449 OFFCURVE",
"467 455 CURVE SMOOTH",
"467 464 OFFCURVE",
"464 472 OFFCURVE",
"457 479 CURVE",
"472 479 LINE SMOOTH",
"548 479 OFFCURVE",
"612 466 OFFCURVE",
"663 440 CURVE SMOOTH",
"721 409 OFFCURVE",
"752 366 OFFCURVE",
"757 310 CURVE SMOOTH",
"763 247 OFFCURVE",
"735 188 OFFCURVE",
"674 132 CURVE SMOOTH",
"624 86 OFFCURVE",
"556 47 OFFCURVE",
"470 16 CURVE SMOOTH",
"393 -12 OFFCURVE",
"326 -26 OFFCURVE",
"269 -26 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 348 OFFCURVE",
"166 389 OFFCURVE",
"225 422 CURVE SMOOTH",
"272 448 OFFCURVE",
"331 466 OFFCURVE",
"403 475 CURVE",
"296 434 OFFCURVE",
"206 375 OFFCURVE",
"131 297 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 1070 11 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01229 1065 17 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 29 213 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01252 17 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 54 213 54 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01258 1061 7 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 1064 35 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 774;
}
);
leftKerningGroup = O;
note = O;
rightKerningGroup = O;
unicode = 004F;
},
{
glyphname = Oacute;
lastChange = "2022-03-25 01:05:07 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 00D3;
},
{
glyphname = Obreve;
lastChange = "2022-03-25 01:05:07 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 014E;
},
{
glyphname = Ocaron;
lastChange = "2022-03-25 01:05:07 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 01D1;
},
{
glyphname = Ocircumflex;
lastChange = "2022-03-25 01:05:07 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 00D4;
},
{
glyphname = Ocircumflexacute;
lastChange = "2022-03-25 01:05:07 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ED0;
},
{
glyphname = Ocircumflexdotbelow;
lastChange = "2022-03-25 01:05:07 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, -20, -49}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ED8;
},
{
glyphname = Ocircumflexgrave;
lastChange = "2022-03-25 01:05:07 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ED2;
},
{
glyphname = Ocircumflexhookabove;
lastChange = "2022-03-25 01:05:07 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ED4;
},
{
glyphname = Ocircumflextilde;
lastChange = "2022-03-25 01:05:07 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ED6;
},
{
glyphname = Odblgrave;
lastChange = "2022-03-25 01:05:07 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 020C;
},
{
glyphname = Odieresis;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 00D6;
},
{
color = 3;
glyphname = Odieresismacron;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 377, 373}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 022A;
},
{
color = 3;
glyphname = Odotaccentmacron;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 377, 373}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 0230;
},
{
glyphname = Odotbelow;
lastChange = "2022-03-22 12:02:31 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, -20, -49}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ECC;
},
{
glyphname = Ograve;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 00D2;
},
{
glyphname = Ohookabove;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ECE;
},
{
glyphname = Ohorn;
lastChange = "2022-03-22 12:02:31 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = horncomb.case;
transform = "{1, 0, 0, 1, 440, 168}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 01A0;
},
{
glyphname = Ohornacute;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1EDA;
},
{
glyphname = Ohorndotbelow;
lastChange = "2022-03-22 12:02:31 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, -20, -49}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1EE2;
},
{
glyphname = Ohorngrave;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1EDC;
},
{
glyphname = Ohornhookabove;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1EDE;
},
{
glyphname = Ohorntilde;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1EE0;
},
{
glyphname = Ohungarumlaut;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 0150;
},
{
glyphname = Oinvertedbreve;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 020E;
},
{
glyphname = Omacron;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 014C;
},
{
glyphname = Oogonek;
lastChange = "2022-03-22 12:02:31 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = ogonekcomb.case;
transform = "{1, 0, 0, 1, 264, 10}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 01EA;
},
{
color = 3;
glyphname = Oslash;
lastChange = "2022-03-22 09:23:34 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{487, 540}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-22 -247 OFFCURVE",
"-22 -247 OFFCURVE",
"-22 -246 CURVE SMOOTH",
"-22 -245 OFFCURVE",
"-22 -243 OFFCURVE",
"-21 -241 CURVE",
"-15 -219 LINE SMOOTH",
"-12 -208 OFFCURVE",
"-7 -193 OFFCURVE",
"2 -174 CURVE SMOOTH",
"19 -135 OFFCURVE",
"47 -88 OFFCURVE",
"86 -33 CURVE",
"101 -39 OFFCURVE",
"118 -42 OFFCURVE",
"139 -42 CURVE SMOOTH",
"199 -42 OFFCURVE",
"267 -23 OFFCURVE",
"342 15 CURVE SMOOTH",
"418 53 OFFCURVE",
"481 100 OFFCURVE",
"531 156 CURVE SMOOTH",
"587 219 OFFCURVE",
"615 281 OFFCURVE",
"615 342 CURVE SMOOTH",
"615 393 OFFCURVE",
"598 433 OFFCURVE",
"563 463 CURVE",
"608 502 OFFCURVE",
"643 531 OFFCURVE",
"666 550 CURVE SMOOTH",
"700 579 LINE",
"699 582 OFFCURVE",
"695 583 OFFCURVE",
"687 583 CURVE SMOOTH",
"667 583 OFFCURVE",
"639 571 OFFCURVE",
"607 543 CURVE SMOOTH",
"536 481 LINE",
"503 498 OFFCURVE",
"463 507 OFFCURVE",
"418 507 CURVE SMOOTH",
"359 507 OFFCURVE",
"298 493 OFFCURVE",
"237 464 CURVE SMOOTH",
"172 434 OFFCURVE",
"123 396 OFFCURVE",
"90 351 CURVE SMOOTH",
"86 346 OFFCURVE",
"84 341 OFFCURVE",
"84 337 CURVE",
"85 335 LINE",
"86 335 LINE SMOOTH",
"90 335 OFFCURVE",
"94 337 OFFCURVE",
"98 341 CURVE SMOOTH",
"159 392 OFFCURVE",
"215 426 OFFCURVE",
"267 445 CURVE",
"106 306 OFFCURVE",
"26 182 OFFCURVE",
"26 72 CURVE SMOOTH",
"26 26 OFFCURVE",
"40 -6 OFFCURVE",
"68 -24 CURVE",
"45 -53 OFFCURVE",
"25 -87 OFFCURVE",
"2 -124 CURVE SMOOTH",
"-29 -175 OFFCURVE",
"-44 -210 OFFCURVE",
"-44 -229 CURVE SMOOTH",
"-44 -237 OFFCURVE",
"-31 -248 OFFCURVE",
"-23 -248 CURVE"
);
},
{
closed = 1;
nodes = (
"59 5 OFFCURVE",
"49 30 OFFCURVE",
"49 66 CURVE SMOOTH",
"49 129 OFFCURVE",
"85 203 OFFCURVE",
"157 288 CURVE SMOOTH",
"226 369 OFFCURVE",
"292 421 OFFCURVE",
"355 442 CURVE",
"368 450 LINE",
"366 459 OFFCURVE",
"352 464 OFFCURVE",
"327 464 CURVE SMOOTH",
"322 464 OFFCURVE",
"315 463 OFFCURVE",
"304 462 CURVE",
"345 476 OFFCURVE",
"387 483 OFFCURVE",
"431 483 CURVE SMOOTH",
"466 483 OFFCURVE",
"497 478 OFFCURVE",
"522 467 CURVE",
"341 302 OFFCURVE",
"193 143 OFFCURVE",
"79 -9 CURVE"
);
},
{
closed = 1;
nodes = (
"120 -24 OFFCURVE",
"108 -22 OFFCURVE",
"97 -18 CURVE",
"201 123 OFFCURVE",
"350 276 OFFCURVE",
"549 451 CURVE",
"574 432 OFFCURVE",
"586 406 OFFCURVE",
"586 372 CURVE SMOOTH",
"586 314 OFFCURVE",
"560 253 OFFCURVE",
"507 188 CURVE SMOOTH",
"459 129 OFFCURVE",
"399 79 OFFCURVE",
"327 38 CURVE SMOOTH",
"254 -3 OFFCURVE",
"190 -24 OFFCURVE",
"134 -24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 29 218 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01233 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0122 61 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0126 61 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01216 1066 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01221 61 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 61 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0122 51 80 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0126 51 80 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01221 51 80 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 51 80 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 634;
}
);
leftKerningGroup = O;
note = Oslash;
rightKerningGroup = O;
unicode = 00D8;
},
{
glyphname = Oslashacute;
lastChange = "2022-03-22 12:02:31 +0000";
layers = (
{
components = (
{
name = Oslash;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 237, 240}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 634;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 01FE;
},
{
glyphname = Otilde;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 00D5;
},
{
color = 3;
glyphname = Otildemacron;
lastChange = "2022-03-25 01:05:14 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb_macroncomb.case;
transform = "{1, 0, 0, 1, 377, 236}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 022C;
},
{
glyphname = OE;
lastChange = "2022-03-22 09:23:40 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"765 -93 OFFCURVE",
"821 -86 OFFCURVE",
"874 -73 CURVE SMOOTH",
"906 -65 OFFCURVE",
"953 -49 OFFCURVE",
"1016 -25 CURVE SMOOTH",
"1065 -6 OFFCURVE",
"1121 20 OFFCURVE",
"1186 55 CURVE SMOOTH",
"1217 71 OFFCURVE",
"1261 96 OFFCURVE",
"1321 131 CURVE SMOOTH",
"1331 137 OFFCURVE",
"1336 143 OFFCURVE",
"1336 149 CURVE SMOOTH",
"1336 153 OFFCURVE",
"1334 155 OFFCURVE",
"1329 155 CURVE SMOOTH",
"1325 155 OFFCURVE",
"1321 154 OFFCURVE",
"1316 151 CURVE SMOOTH",
"1176 78 LINE SMOOTH",
"1120 49 OFFCURVE",
"1069 27 OFFCURVE",
"1023 12 CURVE SMOOTH",
"871 -39 LINE SMOOTH",
"809 -57 OFFCURVE",
"751 -66 OFFCURVE",
"696 -66 CURVE SMOOTH",
"593 -66 OFFCURVE",
"541 -31 OFFCURVE",
"541 40 CURVE SMOOTH",
"541 93 OFFCURVE",
"571 161 OFFCURVE",
"632 244 CURVE",
"707 255 OFFCURVE",
"769 264 OFFCURVE",
"818 270 CURVE SMOOTH",
"867 276 OFFCURVE",
"903 279 OFFCURVE",
"926 279 CURVE SMOOTH",
"980 279 OFFCURVE",
"1028 272 OFFCURVE",
"1070 259 CURVE SMOOTH",
"1093 252 OFFCURVE",
"1104 242 OFFCURVE",
"1104 229 CURVE SMOOTH",
"1104 223 OFFCURVE",
"1100 218 OFFCURVE",
"1092 214 CURVE SMOOTH",
"1082 209 OFFCURVE",
"1077 202 OFFCURVE",
"1077 193 CURVE SMOOTH",
"1078 186 OFFCURVE",
"1081 183 OFFCURVE",
"1086 183 CURVE SMOOTH",
"1091 183 OFFCURVE",
"1097 186 OFFCURVE",
"1104 192 CURVE SMOOTH",
"1122 206 OFFCURVE",
"1131 222 OFFCURVE",
"1131 239 CURVE SMOOTH",
"1131 261 OFFCURVE",
"1115 278 OFFCURVE",
"1083 289 CURVE SMOOTH",
"1045 301 OFFCURVE",
"1003 307 OFFCURVE",
"957 307 CURVE SMOOTH",
"924 307 OFFCURVE",
"880 303 OFFCURVE",
"823 296 CURVE SMOOTH",
"716 283 OFFCURVE",
"661 276 OFFCURVE",
"658 275 CURVE",
"713 332 OFFCURVE",
"781 384 OFFCURVE",
"863 431 CURVE SMOOTH",
"968 492 OFFCURVE",
"1066 526 OFFCURVE",
"1156 532 CURVE SMOOTH",
"1216 536 OFFCURVE",
"1256 513 OFFCURVE",
"1256 469 CURVE SMOOTH",
"1256 465 OFFCURVE",
"1256 460 OFFCURVE",
"1255 453 CURVE SMOOTH",
"1254 446 OFFCURVE",
"1253 441 OFFCURVE",
"1253 438 CURVE SMOOTH",
"1253 418 OFFCURVE",
"1260 408 OFFCURVE",
"1273 408 CURVE SMOOTH",
"1291 408 OFFCURVE",
"1299 427 OFFCURVE",
"1299 466 CURVE SMOOTH",
"1299 497 OFFCURVE",
"1290 519 OFFCURVE",
"1272 532 CURVE SMOOTH",
"1255 545 OFFCURVE",
"1228 551 OFFCURVE",
"1189 551 CURVE SMOOTH",
"1173 551 LINE SMOOTH",
"1167 551 OFFCURVE",
"1161 551 OFFCURVE",
"1154 550 CURVE SMOOTH",
"1050 543 OFFCURVE",
"946 514 OFFCURVE",
"841 458 CURVE SMOOTH",
"814 444 OFFCURVE",
"788 429 OFFCURVE",
"763 413 CURVE",
"745 434 OFFCURVE",
"721 452 OFFCURVE",
"690 468 CURVE SMOOTH",
"629 499 OFFCURVE",
"556 515 OFFCURVE",
"472 515 CURVE SMOOTH",
"387 515 OFFCURVE",
"307 496 OFFCURVE",
"232 459 CURVE SMOOTH",
"145 414 OFFCURVE",
"102 357 OFFCURVE",
"102 286 CURVE SMOOTH",
"102 275 OFFCURVE",
"102 268 OFFCURVE",
"103 265 CURVE",
"67 219 OFFCURVE",
"43 171 OFFCURVE",
"32 122 CURVE SMOOTH",
"30 114 OFFCURVE",
"29 106 OFFCURVE",
"29 99 CURVE SMOOTH",
"29 55 OFFCURVE",
"55 19 OFFCURVE",
"106 -9 CURVE SMOOTH",
"152 -35 OFFCURVE",
"204 -48 OFFCURVE",
"263 -48 CURVE SMOOTH",
"274 -48 OFFCURVE",
"283 -47 OFFCURVE",
"294 -46 CURVE SMOOTH",
"367 -38 OFFCURVE",
"440 -20 OFFCURVE",
"511 7 CURVE",
"521 -12 OFFCURVE",
"535 -29 OFFCURVE",
"554 -45 CURVE SMOOTH",
"594 -77 OFFCURVE",
"645 -93 OFFCURVE",
"707 -93 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"221 -26 OFFCURVE",
"180 -15 OFFCURVE",
"145 8 CURVE SMOOTH",
"106 32 OFFCURVE",
"87 62 OFFCURVE",
"87 99 CURVE SMOOTH",
"87 133 OFFCURVE",
"100 171 OFFCURVE",
"127 212 CURVE",
"155 171 OFFCURVE",
"200 143 OFFCURVE",
"262 127 CURVE SMOOTH",
"271 125 OFFCURVE",
"276 126 OFFCURVE",
"276 130 CURVE SMOOTH",
"276 133 OFFCURVE",
"271 137 OFFCURVE",
"262 140 CURVE SMOOTH",
"205 155 OFFCURVE",
"165 186 OFFCURVE",
"142 235 CURVE",
"181 290 OFFCURVE",
"238 339 OFFCURVE",
"313 382 CURVE SMOOTH",
"366 411 OFFCURVE",
"415 432 OFFCURVE",
"460 445 CURVE SMOOTH",
"465 446 OFFCURVE",
"467 449 OFFCURVE",
"467 455 CURVE SMOOTH",
"467 464 OFFCURVE",
"464 472 OFFCURVE",
"457 479 CURVE",
"472 479 LINE SMOOTH",
"548 479 OFFCURVE",
"612 466 OFFCURVE",
"663 440 CURVE SMOOTH",
"690 425 OFFCURVE",
"711 409 OFFCURVE",
"726 389 CURVE",
"675 353 OFFCURVE",
"629 312 OFFCURVE",
"588 268 CURVE",
"577 267 OFFCURVE",
"567 266 OFFCURVE",
"558 266 CURVE SMOOTH",
"545 266 OFFCURVE",
"534 267 OFFCURVE",
"525 269 CURVE SMOOTH",
"518 270 OFFCURVE",
"514 273 OFFCURVE",
"514 277 CURVE SMOOTH",
"514 285 OFFCURVE",
"540 298 OFFCURVE",
"557 299 CURVE SMOOTH",
"576 300 OFFCURVE",
"585 303 OFFCURVE",
"585 309 CURVE SMOOTH",
"585 311 OFFCURVE",
"582 312 OFFCURVE",
"577 312 CURVE SMOOTH",
"572 312 LINE SMOOTH",
"534 310 OFFCURVE",
"504 301 OFFCURVE",
"483 284 CURVE SMOOTH",
"474 277 OFFCURVE",
"470 269 OFFCURVE",
"470 259 CURVE SMOOTH",
"470 242 OFFCURVE",
"485 227 OFFCURVE",
"505 228 CURVE SMOOTH",
"557 233 LINE",
"516 180 OFFCURVE",
"495 128 OFFCURVE",
"495 78 CURVE SMOOTH",
"495 59 OFFCURVE",
"497 43 OFFCURVE",
"502 29 CURVE",
"491 24 OFFCURVE",
"481 20 OFFCURVE",
"470 16 CURVE SMOOTH",
"393 -12 OFFCURVE",
"326 -26 OFFCURVE",
"269 -26 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 348 OFFCURVE",
"166 389 OFFCURVE",
"225 422 CURVE SMOOTH",
"272 448 OFFCURVE",
"331 466 OFFCURVE",
"403 475 CURVE",
"296 434 OFFCURVE",
"206 375 OFFCURVE",
"131 297 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012124 1070 23 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012167 1065 29 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01289 1070 135 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 1070 56 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 56 218 56 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 150 89 166 89 182 89 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 89 213 89 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012106 23 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 167 118 167 134 167 150 167 166 167 182 167 198 167 214 167 230 167 246 167 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 167 22 167 38 167 54 167 70 167 86 167 102 167 118 167 134 167 150 167 166 167 182 167 198 167 214 167 230 167 246 167 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 167 22 167 38 167 54 167 70 167 86 167 102 167 118 167 134 167 150 167 166 167 182 167 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 167 213 167 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012122 29 167 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 124 118 124 134 124 150 124 166 124 182 124 198 124 214 124 230 124 246 124 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 124 22 124 38 124 54 124 70 124 86 124 102 124 118 124 134 124 150 124 166 124 182 124 198 124 214 124 230 124 246 124 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 124 22 124 38 124 54 124 70 124 86 124 102 124 118 124 134 124 150 124 166 124 182 124 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 124 213 124 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012137 23 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012163 23 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012170 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01291 1063 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012128 1061 19 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01233 1064 105 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01268 1064 84 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012149 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012145 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012145 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012105 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012167 149 65 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1253;
}
);
leftKerningGroup = O;
note = OE;
rightKerningGroup = E;
unicode = 0152;
},
{
glyphname = P;
lastChange = "2022-03-22 13:35:02 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"118 -92 OFFCURVE",
"125 -91 OFFCURVE",
"133 -89 CURVE",
"153 -80 OFFCURVE",
"163 -73 OFFCURVE",
"163 -66 CURVE SMOOTH",
"163 -62 OFFCURVE",
"160 -60 OFFCURVE",
"154 -60 CURVE SMOOTH",
"146 -60 OFFCURVE",
"137 -63 OFFCURVE",
"126 -69 CURVE",
"123 -70 OFFCURVE",
"120 -70 OFFCURVE",
"115 -70 CURVE SMOOTH",
"99 -70 OFFCURVE",
"91 -61 OFFCURVE",
"91 -43 CURVE SMOOTH",
"91 1 OFFCURVE",
"128 70 OFFCURVE",
"202 163 CURVE",
"217 160 OFFCURVE",
"237 159 OFFCURVE",
"262 159 CURVE SMOOTH",
"307 159 OFFCURVE",
"357 164 OFFCURVE",
"412 175 CURVE SMOOTH",
"559 204 OFFCURVE",
"750 306 OFFCURVE",
"750 440 CURVE SMOOTH",
"750 565 OFFCURVE",
"574 601 OFFCURVE",
"407 596 CURVE SMOOTH",
"261 592 OFFCURVE",
"64 526 OFFCURVE",
"64 402 CURVE SMOOTH",
"64 363 OFFCURVE",
"104 320 OFFCURVE",
"144 312 CURVE SMOOTH",
"153 310 OFFCURVE",
"158 312 OFFCURVE",
"158 317 CURVE SMOOTH",
"158 323 OFFCURVE",
"152 328 OFFCURVE",
"140 331 CURVE SMOOTH",
"128 334 OFFCURVE",
"118 342 OFFCURVE",
"109 354 CURVE SMOOTH",
"100 367 OFFCURVE",
"96 381 OFFCURVE",
"96 396 CURVE SMOOTH",
"96 503 OFFCURVE",
"316 572 OFFCURVE",
"446 572 CURVE SMOOTH",
"583 572 OFFCURVE",
"714 545 OFFCURVE",
"714 430 CURVE SMOOTH",
"714 315 OFFCURVE",
"542 221 OFFCURVE",
"407 195 CURVE SMOOTH",
"360 186 OFFCURVE",
"321 181 OFFCURVE",
"286 181 CURVE SMOOTH",
"261 181 OFFCURVE",
"240 183 OFFCURVE",
"222 188 CURVE",
"291 272 OFFCURVE",
"377 354 OFFCURVE",
"481 441 CURVE SMOOTH",
"492 450 OFFCURVE",
"498 458 OFFCURVE",
"498 464 CURVE SMOOTH",
"498 465 OFFCURVE",
"498 466 OFFCURVE",
"497 467 CURVE SMOOTH",
"494 472 OFFCURVE",
"486 475 OFFCURVE",
"475 475 CURVE SMOOTH",
"454 475 OFFCURVE",
"441 471 OFFCURVE",
"434 463 CURVE",
"434 462 OFFCURVE",
"422 455 OFFCURVE",
"399 442 CURVE SMOOTH",
"381 431 OFFCURVE",
"372 421 OFFCURVE",
"372 414 CURVE SMOOTH",
"372 411 OFFCURVE",
"374 408 OFFCURVE",
"377 405 CURVE",
"280 307 LINE SMOOTH",
"245 271 OFFCURVE",
"216 237 OFFCURVE",
"189 202 CURVE",
"182 207 LINE",
"172 230 OFFCURVE",
"162 242 OFFCURVE",
"152 242 CURVE SMOOTH",
"141 242 OFFCURVE",
"137 231 OFFCURVE",
"137 211 CURVE SMOOTH",
"137 198 OFFCURVE",
"139 185 OFFCURVE",
"167 173 CURVE",
"104 86 OFFCURVE",
"72 14 OFFCURVE",
"72 -41 CURVE SMOOTH",
"72 -75 OFFCURVE",
"85 -92 OFFCURVE",
"112 -92 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1067 62 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 62 25 62 41 62 57 62 73 62 89 62 105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 62 25 62 41 62 57 62 73 62 89 62 105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01216 1064 22 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01291 1061 66 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 1061 6 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 565;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Thorn;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"91 -156 OFFCURVE",
"98 -155 OFFCURVE",
"106 -153 CURVE",
"126 -144 OFFCURVE",
"136 -137 OFFCURVE",
"136 -130 CURVE SMOOTH",
"136 -126 OFFCURVE",
"133 -124 OFFCURVE",
"127 -124 CURVE SMOOTH",
"119 -124 OFFCURVE",
"110 -127 OFFCURVE",
"99 -133 CURVE",
"96 -134 OFFCURVE",
"93 -134 OFFCURVE",
"88 -134 CURVE SMOOTH",
"72 -134 OFFCURVE",
"64 -125 OFFCURVE",
"64 -107 CURVE SMOOTH",
"64 -1 OFFCURVE",
"411 437 OFFCURVE",
"589 586 CURVE SMOOTH",
"600 595 OFFCURVE",
"606 603 OFFCURVE",
"606 609 CURVE SMOOTH",
"606 610 OFFCURVE",
"606 611 OFFCURVE",
"605 612 CURVE SMOOTH",
"602 617 OFFCURVE",
"594 620 OFFCURVE",
"583 620 CURVE SMOOTH",
"562 620 OFFCURVE",
"549 616 OFFCURVE",
"542 608 CURVE",
"542 607 OFFCURVE",
"530 600 OFFCURVE",
"507 587 CURVE SMOOTH",
"489 576 OFFCURVE",
"480 566 OFFCURVE",
"480 559 CURVE SMOOTH",
"480 556 OFFCURVE",
"482 553 OFFCURVE",
"485 550 CURVE",
"405 473 OFFCURVE",
"299 340 OFFCURVE",
"198 208 CURVE SMOOTH",
"131 121 OFFCURVE",
"45 -28 OFFCURVE",
"45 -105 CURVE SMOOTH",
"45 -139 OFFCURVE",
"58 -156 OFFCURVE",
"85 -156 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"240 107 OFFCURVE",
"290 112 OFFCURVE",
"345 123 CURVE SMOOTH",
"492 152 OFFCURVE",
"683 254 OFFCURVE",
"683 369 CURVE SMOOTH",
"683 475 OFFCURVE",
"523 506 OFFCURVE",
"372 502 CURVE SMOOTH",
"239 498 OFFCURVE",
"60 442 OFFCURVE",
"60 336 CURVE SMOOTH",
"60 303 OFFCURVE",
"96 267 OFFCURVE",
"133 260 CURVE SMOOTH",
"141 258 OFFCURVE",
"145 260 OFFCURVE",
"145 264 CURVE SMOOTH",
"145 269 OFFCURVE",
"140 273 OFFCURVE",
"129 276 CURVE SMOOTH",
"118 278 OFFCURVE",
"109 285 OFFCURVE",
"101 296 CURVE SMOOTH",
"93 307 OFFCURVE",
"89 319 OFFCURVE",
"89 331 CURVE SMOOTH",
"89 423 OFFCURVE",
"289 481 OFFCURVE",
"407 481 CURVE SMOOTH",
"530 481 OFFCURVE",
"648 458 OFFCURVE",
"650 362 CURVE SMOOTH",
"649 264 OFFCURVE",
"476 169 OFFCURVE",
"340 143 CURVE SMOOTH",
"293 134 OFFCURVE",
"254 129 OFFCURVE",
"219 129 CURVE SMOOTH",
"194 129 OFFCURVE",
"173 131 OFFCURVE",
"155 136 CURVE SMOOTH",
"120 149 OFFCURVE",
"98 160 OFFCURVE",
"88 160 CURVE SMOOTH",
"78 160 OFFCURVE",
"73 156 OFFCURVE",
"73 148 CURVE SMOOTH",
"73 123 OFFCURVE",
"142 107 OFFCURVE",
"195 107 CURVE SMOOTH"
);
}
);
width = 565;
}
);
unicode = 00DE;
},
{
glyphname = Q;
lastChange = "2022-03-22 13:35:06 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"763 -255 OFFCURVE",
"802 -241 OFFCURVE",
"837 -212 CURVE SMOOTH",
"874 -183 OFFCURVE",
"896 -148 OFFCURVE",
"905 -108 CURVE SMOOTH",
"906 -101 OFFCURVE",
"905 -98 OFFCURVE",
"904 -98 CURVE SMOOTH",
"896 -98 OFFCURVE",
"890 -108 OFFCURVE",
"885 -128 CURVE SMOOTH",
"878 -158 OFFCURVE",
"858 -181 OFFCURVE",
"826 -196 CURVE SMOOTH",
"797 -209 OFFCURVE",
"765 -216 OFFCURVE",
"728 -216 CURVE SMOOTH",
"616 -216 OFFCURVE",
"513 -180 OFFCURVE",
"420 -109 CURVE SMOOTH",
"340 -45 LINE",
"443 -20 OFFCURVE",
"535 25 OFFCURVE",
"616 90 CURVE SMOOTH",
"714 169 OFFCURVE",
"770 261 OFFCURVE",
"784 367 CURVE SMOOTH",
"786 380 OFFCURVE",
"787 392 OFFCURVE",
"787 404 CURVE SMOOTH",
"787 473 OFFCURVE",
"759 525 OFFCURVE",
"702 559 CURVE SMOOTH",
"657 588 OFFCURVE",
"597 602 OFFCURVE",
"522 602 CURVE SMOOTH",
"444 602 OFFCURVE",
"368 579 OFFCURVE",
"295 534 CURVE SMOOTH",
"208 480 OFFCURVE",
"159 410 OFFCURVE",
"147 325 CURVE SMOOTH",
"146 314 OFFCURVE",
"145 305 OFFCURVE",
"145 300 CURVE",
"99 238 OFFCURVE",
"69 180 OFFCURVE",
"55 127 CURVE SMOOTH",
"50 109 OFFCURVE",
"48 93 OFFCURVE",
"48 78 CURVE SMOOTH",
"48 66 OFFCURVE",
"49 55 OFFCURVE",
"52 45 CURVE",
"43 30 OFFCURVE",
"38 18 OFFCURVE",
"38 7 CURVE SMOOTH",
"38 4 OFFCURVE",
"41 -3 OFFCURVE",
"41 -13 CURVE SMOOTH",
"41 -15 OFFCURVE",
"40 -16 OFFCURVE",
"40 -17 CURVE",
"37 -24 OFFCURVE",
"42 -27 OFFCURVE",
"54 -27 CURVE SMOOTH",
"58 -27 OFFCURVE",
"60 -26 OFFCURVE",
"59 -23 CURVE SMOOTH",
"58 -17 OFFCURVE",
"58 -12 OFFCURVE",
"58 -8 CURVE SMOOTH",
"58 2 OFFCURVE",
"59 10 OFFCURVE",
"62 16 CURVE",
"88 -35 OFFCURVE",
"143 -60 OFFCURVE",
"227 -60 CURVE SMOOTH",
"244 -60 OFFCURVE",
"263 -59 OFFCURVE",
"283 -56 CURVE",
"391 -140 LINE SMOOTH",
"490 -217 OFFCURVE",
"599 -255 OFFCURVE",
"719 -255 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"160 -38 OFFCURVE",
"109 -10 OFFCURVE",
"99 50 CURVE",
"125 53 OFFCURVE",
"176 25 OFFCURVE",
"253 -34 CURVE"
);
},
{
closed = 1;
nodes = (
"287 -4 LINE SMOOTH",
"210 56 OFFCURVE",
"153 86 OFFCURVE",
"117 86 CURVE SMOOTH",
"110 86 OFFCURVE",
"105 85 OFFCURVE",
"98 84 CURVE",
"101 99 OFFCURVE",
"104 112 OFFCURVE",
"109 127 CURVE SMOOTH",
"126 175 OFFCURVE",
"142 211 OFFCURVE",
"157 235 CURVE",
"165 214 OFFCURVE",
"180 193 OFFCURVE",
"203 170 CURVE SMOOTH",
"228 144 OFFCURVE",
"250 131 OFFCURVE",
"270 131 CURVE SMOOTH",
"275 131 OFFCURVE",
"277 133 OFFCURVE",
"277 137 CURVE SMOOTH",
"277 142 OFFCURVE",
"273 146 OFFCURVE",
"266 149 CURVE SMOOTH",
"217 167 OFFCURVE",
"187 205 OFFCURVE",
"175 264 CURVE",
"220 331 OFFCURVE",
"280 390 OFFCURVE",
"355 441 CURVE SMOOTH",
"408 477 OFFCURVE",
"455 502 OFFCURVE",
"498 517 CURVE SMOOTH",
"503 519 OFFCURVE",
"506 525 OFFCURVE",
"507 534 CURVE SMOOTH",
"507 543 OFFCURVE",
"505 551 OFFCURVE",
"501 559 CURVE",
"515 559 LINE SMOOTH",
"581 559 OFFCURVE",
"634 547 OFFCURVE",
"673 524 CURVE SMOOTH",
"721 495 OFFCURVE",
"745 451 OFFCURVE",
"745 392 CURVE SMOOTH",
"745 380 OFFCURVE",
"744 368 OFFCURVE",
"742 355 CURVE SMOOTH",
"727 252 OFFCURVE",
"673 164 OFFCURVE",
"578 91 CURVE SMOOTH",
"500 32 OFFCURVE",
"413 -7 OFFCURVE",
"316 -26 CURVE"
);
},
{
closed = 1;
nodes = (
"188 400 OFFCURVE",
"224 450 OFFCURVE",
"282 489 CURVE SMOOTH",
"329 521 OFFCURVE",
"385 543 OFFCURVE",
"452 554 CURVE",
"349 505 OFFCURVE",
"257 433 OFFCURVE",
"175 338 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01239 1070 64 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 64 218 64 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 64 121 64 137 64 153 64 169 64 185 64 201 64 217 64 233 64 249 64 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 153 64 169 64 185 64 201 64 217 64 233 64 249 64 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 153 64 169 64 185 64 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01248 1064 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01235 1064 68 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 1063 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01212 10 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 10 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 696;
}
);
note = Q;
unicode = 0051;
},
{
color = 3;
glyphname = R;
lastChange = "2022-03-22 13:33:49 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{313, 0}";
},
{
name = top;
position = "{583, 620}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"775 -168 OFFCURVE",
"809 -157 OFFCURVE",
"840 -136 CURVE SMOOTH",
"871 -115 OFFCURVE",
"890 -89 OFFCURVE",
"899 -56 CURVE",
"900 -54 OFFCURVE",
"900 -52 OFFCURVE",
"900 -50 CURVE SMOOTH",
"900 -47 OFFCURVE",
"899 -46 OFFCURVE",
"898 -46 CURVE SMOOTH",
"889 -46 OFFCURVE",
"883 -54 OFFCURVE",
"879 -71 CURVE SMOOTH",
"869 -110 OFFCURVE",
"838 -130 OFFCURVE",
"785 -130 CURVE SMOOTH",
"765 -130 OFFCURVE",
"745 -127 OFFCURVE",
"724 -121 CURVE SMOOTH",
"671 -107 OFFCURVE",
"583 -30 OFFCURVE",
"458 111 CURVE SMOOTH",
"425 148 OFFCURVE",
"393 181 OFFCURVE",
"362 208 CURVE",
"405 220 LINE SMOOTH",
"488 243 OFFCURVE",
"556 279 OFFCURVE",
"612 319 CURVE SMOOTH",
"680 369 OFFCURVE",
"716 420 OFFCURVE",
"716 475 CURVE SMOOTH",
"716 510 OFFCURVE",
"699 539 OFFCURVE",
"664 561 CURVE SMOOTH",
"624 586 OFFCURVE",
"565 598 OFFCURVE",
"485 598 CURVE SMOOTH",
"399 598 OFFCURVE",
"323 585 OFFCURVE",
"258 559 CURVE SMOOTH",
"181 529 OFFCURVE",
"133 485 OFFCURVE",
"112 427 CURVE",
"109 421 OFFCURVE",
"108 413 OFFCURVE",
"108 404 CURVE SMOOTH",
"108 365 OFFCURVE",
"146 322 OFFCURVE",
"187 314 CURVE SMOOTH",
"197 312 OFFCURVE",
"202 314 OFFCURVE",
"202 319 CURVE SMOOTH",
"202 325 OFFCURVE",
"196 330 OFFCURVE",
"184 333 CURVE SMOOTH",
"172 336 OFFCURVE",
"162 344 OFFCURVE",
"153 356 CURVE SMOOTH",
"144 369 OFFCURVE",
"140 383 OFFCURVE",
"140 398 CURVE SMOOTH",
"140 406 OFFCURVE",
"141 413 OFFCURVE",
"144 419 CURVE SMOOTH",
"163 470 OFFCURVE",
"213 511 OFFCURVE",
"294 543 CURVE SMOOTH",
"359 569 OFFCURVE",
"416 582 OFFCURVE",
"467 582 CURVE SMOOTH",
"536 582 OFFCURVE",
"590 570 OFFCURVE",
"630 546 CURVE SMOOTH",
"665 525 OFFCURVE",
"683 498 OFFCURVE",
"683 465 CURVE SMOOTH",
"683 460 OFFCURVE",
"683 456 OFFCURVE",
"682 451 CURVE SMOOTH",
"670 365 OFFCURVE",
"573 293 OFFCURVE",
"392 235 CURVE SMOOTH",
"376 230 OFFCURVE",
"360 226 OFFCURVE",
"345 223 CURVE",
"330 236 OFFCURVE",
"315 247 OFFCURVE",
"299 258 CURVE",
"344 311 OFFCURVE",
"409 373 OFFCURVE",
"495 445 CURVE SMOOTH",
"506 454 OFFCURVE",
"512 462 OFFCURVE",
"512 468 CURVE SMOOTH",
"512 469 OFFCURVE",
"511 470 OFFCURVE",
"511 471 CURVE",
"508 476 OFFCURVE",
"500 479 OFFCURVE",
"489 479 CURVE SMOOTH",
"470 479 OFFCURVE",
"456 475 OFFCURVE",
"448 467 CURVE",
"394 431 LINE SMOOTH",
"377 420 OFFCURVE",
"363 410 OFFCURVE",
"353 403 CURVE SMOOTH",
"342 396 OFFCURVE",
"335 390 OFFCURVE",
"332 387 CURVE",
"351 392 OFFCURVE",
"370 400 OFFCURVE",
"391 409 CURVE",
"348 364 OFFCURVE",
"308 319 OFFCURVE",
"271 275 CURVE",
"254 284 OFFCURVE",
"239 289 OFFCURVE",
"226 289 CURVE SMOOTH",
"218 289 OFFCURVE",
"211 287 OFFCURVE",
"206 284 CURVE SMOOTH",
"186 273 OFFCURVE",
"176 260 OFFCURVE",
"176 245 CURVE SMOOTH",
"176 228 OFFCURVE",
"189 213 OFFCURVE",
"214 202 CURVE",
"170 140 LINE SMOOTH",
"136 92 OFFCURVE",
"117 54 OFFCURVE",
"106 27 CURVE SMOOTH",
"103 18 OFFCURVE",
"101 12 OFFCURVE",
"101 7 CURVE SMOOTH",
"101 -4 OFFCURVE",
"107 -9 OFFCURVE",
"120 -9 CURVE SMOOTH",
"143 -9 OFFCURVE",
"178 6 OFFCURVE",
"225 37 CURVE SMOOTH",
"226 38 OFFCURVE",
"227 39 OFFCURVE",
"227 40 CURVE SMOOTH",
"227 43 OFFCURVE",
"224 43 OFFCURVE",
"219 42 CURVE SMOOTH",
"213 42 OFFCURVE",
"207 40 OFFCURVE",
"202 37 CURVE",
"189 26 OFFCURVE",
"174 20 OFFCURVE",
"158 20 CURVE SMOOTH",
"154 20 OFFCURVE",
"152 22 OFFCURVE",
"152 27 CURVE SMOOTH",
"152 45 OFFCURVE",
"174 92 OFFCURVE",
"225 161 CURVE SMOOTH",
"239 180 LINE SMOOTH",
"242 185 OFFCURVE",
"245 190 OFFCURVE",
"248 193 CURVE",
"250 193 LINE SMOOTH",
"279 193 OFFCURVE",
"308 196 OFFCURVE",
"336 202 CURVE",
"357 182 OFFCURVE",
"383 154 OFFCURVE",
"412 119 CURVE SMOOTH",
"561 -58 OFFCURVE",
"657 -152 OFFCURVE",
"699 -163 CURVE SMOOTH",
"714 -166 OFFCURVE",
"727 -168 OFFCURVE",
"740 -168 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"217 224 OFFCURVE",
"212 229 OFFCURVE",
"212 236 CURVE SMOOTH",
"212 252 OFFCURVE",
"229 261 OFFCURVE",
"245 261 CURVE SMOOTH",
"250 261 OFFCURVE",
"254 260 OFFCURVE",
"258 259 CURVE",
"227 219 LINE"
);
},
{
closed = 1;
nodes = (
"267 219 OFFCURVE",
"272 226 OFFCURVE",
"277 231 CURVE SMOOTH",
"281 236 OFFCURVE",
"284 241 OFFCURVE",
"287 244 CURVE",
"302 233 OFFCURVE",
"312 225 OFFCURVE",
"319 218 CURVE",
"290 214 OFFCURVE",
"271 212 OFFCURVE",
"262 212 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012136 95 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01295 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 136 118 136 134 136 150 136 166 136 182 136 198 136 214 136 230 136 246 136 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 136 22 136 38 136 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 136 69 136 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012136 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01241 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01231 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012117 1064 4 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 565;
}
);
leftKerningGroup = R;
note = R;
rightKerningGroup = R;
unicode = 0052;
},
{
glyphname = Racute;
lastChange = "2022-03-22 12:02:39 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 333, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 565;
}
);
leftKerningGroup = R;
rightKerningGroup = R;
unicode = 0154;
},
{
glyphname = Rcaron;
lastChange = "2022-03-22 12:02:39 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 333, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 565;
}
);
leftKerningGroup = R;
rightKerningGroup = R;
unicode = 0158;
},
{
glyphname = Rcommaaccent;
lastChange = "2022-03-22 12:02:39 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, 63, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 565;
}
);
leftKerningGroup = R;
rightKerningGroup = R;
unicode = 0156;
},
{
glyphname = Rdblgrave;
lastChange = "2022-03-22 12:02:39 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 333, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 565;
}
);
leftKerningGroup = R;
rightKerningGroup = R;
unicode = 0210;
},
{
glyphname = Rinvertedbreve;
lastChange = "2022-03-22 12:02:39 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 333, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 565;
}
);
leftKerningGroup = R;
rightKerningGroup = R;
unicode = 0212;
},
{
color = 3;
glyphname = S;
lastChange = "2022-03-22 13:33:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{150, -144}";
},
{
name = cedilla;
position = "{324, -64}";
},
{
name = top;
position = "{743, 660}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"95 -144 OFFCURVE",
"161 -128 OFFCURVE",
"250 -97 CURVE SMOOTH",
"378 -52 OFFCURVE",
"480 3 OFFCURVE",
"561 67 CURVE",
"587 70 LINE SMOOTH",
"595 71 OFFCURVE",
"603 71 OFFCURVE",
"610 72 CURVE SMOOTH",
"623 73 OFFCURVE",
"629 76 OFFCURVE",
"629 83 CURVE SMOOTH",
"629 87 OFFCURVE",
"626 89 OFFCURVE",
"620 89 CURVE SMOOTH",
"615 89 LINE SMOOTH",
"604 89 OFFCURVE",
"596 89 OFFCURVE",
"591 88 CURVE SMOOTH",
"584 87 LINE",
"635 133 OFFCURVE",
"660 178 OFFCURVE",
"658 223 CURVE",
"660 249 OFFCURVE",
"638 269 OFFCURVE",
"591 284 CURVE SMOOTH",
"566 292 OFFCURVE",
"518 301 OFFCURVE",
"447 311 CURVE SMOOTH",
"360 324 OFFCURVE",
"316 347 OFFCURVE",
"316 378 CURVE SMOOTH",
"316 387 OFFCURVE",
"319 397 OFFCURVE",
"325 409 CURVE SMOOTH",
"352 464 OFFCURVE",
"401 509 OFFCURVE",
"472 543 CURVE SMOOTH",
"538 574 OFFCURVE",
"607 591 OFFCURVE",
"680 591 CURVE SMOOTH",
"738 591 OFFCURVE",
"767 575 OFFCURVE",
"767 543 CURVE SMOOTH",
"767 530 OFFCURVE",
"762 516 OFFCURVE",
"752 500 CURVE SMOOTH",
"748 493 OFFCURVE",
"746 488 OFFCURVE",
"746 485 CURVE SMOOTH",
"746 482 OFFCURVE",
"747 481 OFFCURVE",
"749 481 CURVE SMOOTH",
"754 481 OFFCURVE",
"760 487 OFFCURVE",
"767 498 CURVE SMOOTH",
"785 526 OFFCURVE",
"794 549 OFFCURVE",
"794 568 CURVE SMOOTH",
"794 604 OFFCURVE",
"762 622 OFFCURVE",
"699 622 CURVE SMOOTH",
"611 622 OFFCURVE",
"521 594 OFFCURVE",
"427 539 CURVE SMOOTH",
"341 489 OFFCURVE",
"290 440 OFFCURVE",
"275 393 CURVE SMOOTH",
"271 381 OFFCURVE",
"269 370 OFFCURVE",
"269 361 CURVE SMOOTH",
"269 336 OFFCURVE",
"284 317 OFFCURVE",
"313 304 CURVE SMOOTH",
"336 294 OFFCURVE",
"377 285 OFFCURVE",
"435 277 CURVE SMOOTH",
"498 268 OFFCURVE",
"535 262 OFFCURVE",
"546 259 CURVE SMOOTH",
"582 248 OFFCURVE",
"600 229 OFFCURVE",
"600 204 CURVE SMOOTH",
"600 197 OFFCURVE",
"599 191 OFFCURVE",
"597 184 CURVE SMOOTH",
"588 149 OFFCURVE",
"561 113 OFFCURVE",
"517 78 CURVE",
"436 66 OFFCURVE",
"348 48 OFFCURVE",
"252 25 CURVE SMOOTH",
"199 12 OFFCURVE",
"145 -9 OFFCURVE",
"89 -38 CURVE SMOOTH",
"32 -68 OFFCURVE",
"2 -90 OFFCURVE",
"-2 -105 CURVE",
"-3 -107 OFFCURVE",
"-3 -110 OFFCURVE",
"-3 -115 CURVE SMOOTH",
"-3 -134 OFFCURVE",
"15 -144 OFFCURVE",
"50 -144 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"35 -120 OFFCURVE",
"31 -118 OFFCURVE",
"31 -114 CURVE SMOOTH",
"31 -113 LINE SMOOTH",
"31 -100 OFFCURVE",
"57 -82 OFFCURVE",
"108 -58 CURVE SMOOTH",
"159 -35 OFFCURVE",
"206 -17 OFFCURVE",
"253 -6 CURVE SMOOTH",
"350 18 OFFCURVE",
"424 37 OFFCURVE",
"480 52 CURVE",
"414 7 OFFCURVE",
"334 -32 OFFCURVE",
"239 -65 CURVE SMOOTH",
"139 -102 OFFCURVE",
"74 -120 OFFCURVE",
"44 -120 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 1070 62 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01222 1070 54 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01270 1065 8 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 8 218 8 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 16 213 16 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 54 218 54 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01272 62 70 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01282 1061 39 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01268 1064 10 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 666;
}
);
leftKerningGroup = S;
note = S;
rightKerningGroup = S;
unicode = 0053;
},
{
glyphname = Sacute;
lastChange = "2022-03-22 12:02:43 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 493, 360}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 666;
}
);
leftKerningGroup = S;
rightKerningGroup = S;
unicode = 015A;
},
{
glyphname = Scaron;
lastChange = "2022-03-22 12:02:43 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 493, 360}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 666;
}
);
leftKerningGroup = S;
rightKerningGroup = S;
unicode = 0160;
},
{
glyphname = Scedilla;
lastChange = "2022-03-22 12:02:43 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = cedillacomb.case;
transform = "{1, 0, 0, 1, 74, -64}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 666;
}
);
leftKerningGroup = S;
rightKerningGroup = S;
unicode = 015E;
},
{
glyphname = Scircumflex;
lastChange = "2022-03-22 12:02:43 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 493, 360}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 666;
}
);
leftKerningGroup = S;
rightKerningGroup = S;
unicode = 015C;
},
{
glyphname = Scommaaccent;
lastChange = "2022-03-22 12:02:43 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, -100, -144}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 666;
}
);
leftKerningGroup = S;
rightKerningGroup = S;
unicode = 0218;
},
{
glyphname = Germandbls;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-43 -110 OFFCURVE",
"15 -71 OFFCURVE",
"80 5 CURVE SMOOTH",
"128 63 OFFCURVE",
"183 139 OFFCURVE",
"241 243 CURVE SMOOTH",
"353 442 LINE SMOOTH",
"402 530 OFFCURVE",
"459 588 OFFCURVE",
"518 588 CURVE SMOOTH",
"565 588 OFFCURVE",
"601 550 OFFCURVE",
"601 500 CURVE SMOOTH",
"601 488 OFFCURVE",
"599 476 OFFCURVE",
"595 463 CURVE SMOOTH",
"564 367 OFFCURVE",
"467 290 OFFCURVE",
"358 290 CURVE SMOOTH",
"345 290 OFFCURVE",
"328 291 OFFCURVE",
"318 294 CURVE",
"312 267 OFFCURVE",
"345 265 OFFCURVE",
"360 265 CURVE SMOOTH",
"459 265 OFFCURVE",
"499 226 OFFCURVE",
"499 177 CURVE SMOOTH",
"499 122 OFFCURVE",
"445 54 OFFCURVE",
"368 22 CURVE SMOOTH",
"311 -2 OFFCURVE",
"255 -13 OFFCURVE",
"211 -13 CURVE SMOOTH",
"172 -13 OFFCURVE",
"142 -4 OFFCURVE",
"129 12 CURVE",
"117 15 OFFCURVE",
"116 6 OFFCURVE",
"116 -2 CURVE SMOOTH",
"116 -27 OFFCURVE",
"149 -37 OFFCURVE",
"193 -37 CURVE SMOOTH",
"253 -37 OFFCURVE",
"335 -19 OFFCURVE",
"384 1 CURVE SMOOTH",
"495 43 OFFCURVE",
"550 100 OFFCURVE",
"550 172 CURVE SMOOTH",
"550 203 OFFCURVE",
"535 229 OFFCURVE",
"506 250 CURVE SMOOTH",
"483 267 OFFCURVE",
"454 278 OFFCURVE",
"417 285 CURVE",
"512 287 OFFCURVE",
"608 379 OFFCURVE",
"633 475 CURVE SMOOTH",
"637 489 OFFCURVE",
"638 502 OFFCURVE",
"638 513 CURVE SMOOTH",
"638 584 OFFCURVE",
"575 609 OFFCURVE",
"515 609 CURVE SMOOTH",
"462 609 OFFCURVE",
"414 601 OFFCURVE",
"354 521 CURVE SMOOTH",
"321 480 OFFCURVE",
"275 384 OFFCURVE",
"232 302 CURVE SMOOTH",
"199 239 OFFCURVE",
"172 189 OFFCURVE",
"150 149 CURVE SMOOTH",
"127 110 OFFCURVE",
"110 82 OFFCURVE",
"99 65 CURVE SMOOTH",
"28 -40 OFFCURVE",
"-39 -93 OFFCURVE",
"-100 -93 CURVE SMOOTH",
"-106 -93 OFFCURVE",
"-110 -96 OFFCURVE",
"-112 -100 CURVE",
"-112 -107 OFFCURVE",
"-106 -110 OFFCURVE",
"-93 -110 CURVE SMOOTH"
);
}
);
width = 636;
}
);
unicode = 1E9E;
},
{
glyphname = Schwa;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"366 -64 OFFCURVE",
"553 14 OFFCURVE",
"678 167 CURVE SMOOTH",
"773 282 OFFCURVE",
"787 338 OFFCURVE",
"787 391 CURVE SMOOTH",
"787 492 OFFCURVE",
"701 556 OFFCURVE",
"592 556 CURVE SMOOTH",
"396 556 OFFCURVE",
"214 460 OFFCURVE",
"77 357 CURVE",
"69 352 OFFCURVE",
"64 346 OFFCURVE",
"64 339 CURVE SMOOTH",
"64 335 OFFCURVE",
"67 333 OFFCURVE",
"72 333 CURVE SMOOTH",
"74 333 OFFCURVE",
"78 334 OFFCURVE",
"83 337 CURVE SMOOTH",
"174 404 OFFCURVE",
"308 473 OFFCURVE",
"443 506 CURVE SMOOTH",
"496 519 OFFCURVE",
"548 526 OFFCURVE",
"599 526 CURVE SMOOTH",
"704 526 OFFCURVE",
"753 489 OFFCURVE",
"753 422 CURVE SMOOTH",
"753 384 OFFCURVE",
"736 337 OFFCURVE",
"705 281 CURVE",
"702 309 OFFCURVE",
"646 328 OFFCURVE",
"562 328 CURVE SMOOTH",
"384 328 OFFCURVE",
"45 212 OFFCURVE",
"45 38 CURVE SMOOTH",
"45 -19 OFFCURVE",
"89 -64 OFFCURVE",
"183 -64 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 -41 OFFCURVE",
"102 -12 OFFCURVE",
"102 36 CURVE SMOOTH",
"102 182 OFFCURVE",
"341 302 OFFCURVE",
"557 302 CURVE SMOOTH",
"618 302 OFFCURVE",
"670 292 OFFCURVE",
"693 263 CURVE",
"684 249 OFFCURVE",
"675 237 OFFCURVE",
"665 223 CURVE SMOOTH",
"577 107 OFFCURVE",
"361 -41 OFFCURVE",
"208 -41 CURVE SMOOTH"
);
}
);
width = 780;
}
);
unicode = 018F;
},
{
color = 3;
glyphname = T;
lastChange = "2022-03-22 15:12:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{199, -71}";
},
{
name = cedilla;
position = "{250, -67}";
},
{
name = center;
position = "{631, 300}";
},
{
name = top;
position = "{819, 570}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"291 -71 OFFCURVE",
"362 -43 OFFCURVE",
"433 11 CURVE SMOOTH",
"486 52 OFFCURVE",
"532 102 OFFCURVE",
"570 161 CURVE SMOOTH",
"633 268 OFFCURVE",
"684 357 OFFCURVE",
"725 430 CURVE",
"742 419 OFFCURVE",
"770 407 OFFCURVE",
"811 393 CURVE SMOOTH",
"829 387 OFFCURVE",
"846 384 OFFCURVE",
"862 384 CURVE SMOOTH",
"905 384 OFFCURVE",
"927 402 OFFCURVE",
"927 437 CURVE SMOOTH",
"927 457 OFFCURVE",
"915 477 OFFCURVE",
"890 497 CURVE SMOOTH",
"865 516 OFFCURVE",
"840 526 OFFCURVE",
"815 526 CURVE SMOOTH",
"789 526 OFFCURVE",
"769 521 OFFCURVE",
"754 513 CURVE SMOOTH",
"743 506 OFFCURVE",
"731 495 OFFCURVE",
"716 478 CURVE",
"611 521 OFFCURVE",
"528 550 OFFCURVE",
"467 567 CURVE SMOOTH",
"380 592 OFFCURVE",
"296 604 OFFCURVE",
"214 604 CURVE SMOOTH",
"164 604 OFFCURVE",
"122 595 OFFCURVE",
"87 578 CURVE SMOOTH",
"48 557 OFFCURVE",
"28 527 OFFCURVE",
"28 490 CURVE SMOOTH",
"28 465 OFFCURVE",
"35 443 OFFCURVE",
"48 426 CURVE SMOOTH",
"55 417 OFFCURVE",
"70 404 OFFCURVE",
"95 387 CURVE",
"99 383 OFFCURVE",
"106 380 OFFCURVE",
"114 380 CURVE SMOOTH",
"117 380 OFFCURVE",
"118 381 OFFCURVE",
"118 383 CURVE SMOOTH",
"118 386 OFFCURVE",
"116 389 OFFCURVE",
"112 392 CURVE SMOOTH",
"75 426 OFFCURVE",
"57 464 OFFCURVE",
"57 505 CURVE SMOOTH",
"57 555 OFFCURVE",
"104 580 OFFCURVE",
"197 580 CURVE SMOOTH",
"279 580 OFFCURVE",
"364 565 OFFCURVE",
"456 536 CURVE SMOOTH",
"485 527 OFFCURVE",
"564 497 OFFCURVE",
"694 446 CURVE",
"532 177 LINE SMOOTH",
"491 109 OFFCURVE",
"451 60 OFFCURVE",
"414 28 CURVE SMOOTH",
"356 -24 OFFCURVE",
"292 -52 OFFCURVE",
"223 -52 CURVE SMOOTH",
"182 -52 OFFCURVE",
"146 -37 OFFCURVE",
"114 -6 CURVE SMOOTH",
"82 24 OFFCURVE",
"66 58 OFFCURVE",
"66 96 CURVE SMOOTH",
"66 129 OFFCURVE",
"77 158 OFFCURVE",
"92 183 CURVE SMOOTH",
"107 205 OFFCURVE",
"122 217 OFFCURVE",
"139 220 CURVE SMOOTH",
"150 222 OFFCURVE",
"156 225 OFFCURVE",
"156 230 CURVE SMOOTH",
"156 232 OFFCURVE",
"153 233 OFFCURVE",
"148 233 CURVE SMOOTH",
"143 233 LINE SMOOTH",
"118 233 OFFCURVE",
"95 218 OFFCURVE",
"74 197 CURVE SMOOTH",
"46 171 OFFCURVE",
"31 138 OFFCURVE",
"31 99 CURVE SMOOTH",
"31 55 OFFCURVE",
"50 15 OFFCURVE",
"88 -19 CURVE SMOOTH",
"126 -54 OFFCURVE",
"170 -71 OFFCURVE",
"219 -71 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"867 417 OFFCURVE",
"846 422 OFFCURVE",
"817 432 CURVE SMOOTH",
"792 441 OFFCURVE",
"768 451 OFFCURVE",
"747 462 CURVE",
"762 493 OFFCURVE",
"784 508 OFFCURVE",
"813 508 CURVE SMOOTH",
"836 508 OFFCURVE",
"858 500 OFFCURVE",
"878 482 CURVE SMOOTH",
"895 467 OFFCURVE",
"904 452 OFFCURVE",
"904 437 CURVE SMOOTH",
"904 424 OFFCURVE",
"896 417 OFFCURVE",
"880 417 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01245 1065 57 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 45 213 45 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01261 1061 43 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01285 1064 2 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 657;
}
);
leftKerningGroup = T;
note = T;
rightKerningGroup = T;
unicode = 0054;
},
{
glyphname = Tbar;
lastChange = "2022-03-22 12:02:49 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = strokeshortcomb.case;
transform = "{1, 0, 0, 1, 381, 117}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 657;
}
);
leftKerningGroup = T;
rightKerningGroup = T;
unicode = 0166;
},
{
glyphname = Tcaron;
lastChange = "2022-03-22 12:02:49 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 569, 270}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 657;
}
);
leftKerningGroup = T;
rightKerningGroup = T;
unicode = 0164;
},
{
glyphname = Tcedilla;
lastChange = "2022-03-25 01:00:04 +0000";
layers = (
{
components = (
{
name = Tcommaaccent;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 657;
}
);
leftKerningGroup = T;
rightKerningGroup = T;
unicode = 0162;
},
{
glyphname = Tcommaaccent;
lastChange = "2022-03-22 12:02:49 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, -51, -71}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 657;
}
);
leftKerningGroup = T;
rightKerningGroup = T;
unicode = 021A;
},
{
color = 3;
glyphname = U;
lastChange = "2022-03-22 09:33:01 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{290, -21}";
},
{
name = horn;
position = "{921, 594}";
},
{
name = ogonek;
position = "{759, -75}";
},
{
name = top;
position = "{784, 620}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"709 -100 OFFCURVE",
"739 -90 OFFCURVE",
"768 -70 CURVE SMOOTH",
"779 -62 OFFCURVE",
"785 -53 OFFCURVE",
"785 -44 CURVE SMOOTH",
"785 -39 OFFCURVE",
"783 -36 OFFCURVE",
"779 -36 CURVE SMOOTH",
"776 -36 OFFCURVE",
"772 -38 OFFCURVE",
"769 -41 CURVE SMOOTH",
"740 -70 OFFCURVE",
"713 -84 OFFCURVE",
"687 -84 CURVE SMOOTH",
"673 -84 OFFCURVE",
"665 -77 OFFCURVE",
"662 -62 CURVE SMOOTH",
"660 -50 OFFCURVE",
"659 -37 OFFCURVE",
"659 -22 CURVE SMOOTH",
"659 48 OFFCURVE",
"684 140 OFFCURVE",
"733 254 CURVE",
"762 285 LINE SMOOTH",
"772 295 OFFCURVE",
"782 306 OFFCURVE",
"791 317 CURVE SMOOTH",
"887 425 OFFCURVE",
"935 508 OFFCURVE",
"935 567 CURVE SMOOTH",
"935 585 OFFCURVE",
"929 594 OFFCURVE",
"918 594 CURVE SMOOTH",
"915 594 OFFCURVE",
"911 593 OFFCURVE",
"907 591 CURVE SMOOTH",
"878 577 OFFCURVE",
"845 541 OFFCURVE",
"809 483 CURVE SMOOTH",
"782 438 OFFCURVE",
"758 392 OFFCURVE",
"737 344 CURVE SMOOTH",
"720 305 OFFCURVE",
"707 277 OFFCURVE",
"699 261 CURVE",
"531 86 OFFCURVE",
"406 -2 OFFCURVE",
"325 -2 CURVE SMOOTH",
"306 -2 OFFCURVE",
"296 10 OFFCURVE",
"296 35 CURVE SMOOTH",
"296 84 OFFCURVE",
"334 158 OFFCURVE",
"409 259 CURVE SMOOTH",
"473 344 OFFCURVE",
"529 405 OFFCURVE",
"552 442 CURVE SMOOTH",
"574 477 OFFCURVE",
"585 511 OFFCURVE",
"585 539 CURVE SMOOTH",
"585 577 OFFCURVE",
"563 604 OFFCURVE",
"513 604 CURVE SMOOTH",
"451 604 OFFCURVE",
"376 578 OFFCURVE",
"287 525 CURVE SMOOTH",
"236 494 OFFCURVE",
"189 457 OFFCURVE",
"146 414 CURVE SMOOTH",
"106 373 OFFCURVE",
"83 339 OFFCURVE",
"76 314 CURVE SMOOTH",
"73 305 OFFCURVE",
"72 296 OFFCURVE",
"72 287 CURVE SMOOTH",
"72 258 OFFCURVE",
"92 243 OFFCURVE",
"133 243 CURVE SMOOTH",
"151 243 OFFCURVE",
"160 247 OFFCURVE",
"160 255 CURVE SMOOTH",
"160 260 OFFCURVE",
"154 260 OFFCURVE",
"141 260 CURVE SMOOTH",
"115 260 OFFCURVE",
"102 268 OFFCURVE",
"102 285 CURVE SMOOTH",
"102 290 OFFCURVE",
"104 295 OFFCURVE",
"107 302 CURVE SMOOTH",
"145 378 OFFCURVE",
"211 444 OFFCURVE",
"304 500 CURVE SMOOTH",
"395 555 OFFCURVE",
"464 582 OFFCURVE",
"511 582 CURVE SMOOTH",
"530 582 OFFCURVE",
"539 571 OFFCURVE",
"539 550 CURVE SMOOTH",
"539 517 OFFCURVE",
"514 466 OFFCURVE",
"463 395 CURVE SMOOTH",
"430 351 OFFCURVE",
"397 307 OFFCURVE",
"362 263 CURVE SMOOTH",
"296 175 OFFCURVE",
"263 105 OFFCURVE",
"263 52 CURVE SMOOTH",
"263 27 OFFCURVE",
"270 9 OFFCURVE",
"284 -4 CURVE SMOOTH",
"297 -15 OFFCURVE",
"312 -21 OFFCURVE",
"330 -21 CURVE SMOOTH",
"409 -20 OFFCURVE",
"523 52 OFFCURVE",
"672 195 CURVE",
"642 111 OFFCURVE",
"627 43 OFFCURVE",
"627 -10 CURVE SMOOTH",
"627 -31 OFFCURVE",
"629 -49 OFFCURVE",
"633 -66 CURVE SMOOTH",
"638 -89 OFFCURVE",
"653 -100 OFFCURVE",
"679 -100 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"799 392 OFFCURVE",
"822 436 OFFCURVE",
"847 477 CURVE SMOOTH",
"884 538 OFFCURVE",
"905 568 OFFCURVE",
"908 569 CURVE SMOOTH",
"914 570 OFFCURVE",
"917 567 OFFCURVE",
"917 562 CURVE SMOOTH",
"917 543 OFFCURVE",
"897 506 OFFCURVE",
"857 451 CURVE SMOOTH",
"831 414 OFFCURVE",
"804 379 OFFCURVE",
"776 346 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01211 1068 29 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01272 1070 44 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 1068 37 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 29 218 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 44 218 44 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 150 79 166 79 182 79 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 79 213 79 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012101 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01211 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01233 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01268 1061 46 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 767;
}
);
leftKerningGroup = U;
note = U;
rightKerningGroup = U;
unicode = 0055;
},
{
glyphname = Uacute;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 00DA;
},
{
glyphname = Ubreve;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 016C;
},
{
glyphname = Ucaron;
lastChange = "2022-03-22 12:23:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 01D3;
},
{
glyphname = Ucircumflex;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 00DB;
},
{
glyphname = Udblgrave;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 0214;
},
{
glyphname = Udieresis;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 00DC;
},
{
color = 3;
glyphname = Udieresiscaron;
lastChange = "2022-03-22 12:16:02 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 534, 457}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 01D9;
},
{
color = 3;
glyphname = Udieresisgrave;
lastChange = "2022-03-22 12:16:02 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 534, 457}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 01DB;
},
{
color = 3;
glyphname = Udieresismacron;
lastChange = "2022-03-22 12:16:02 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 534, 457}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 01D5;
},
{
glyphname = Udotbelow;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 40, -21}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EE4;
},
{
glyphname = Ugrave;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 00D9;
},
{
glyphname = Uhookabove;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EE6;
},
{
glyphname = Uhorn;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = horncomb.case;
transform = "{1, 0, 0, 1, 671, 294}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 01AF;
},
{
glyphname = Uhornacute;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EE8;
},
{
glyphname = Uhorndotbelow;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 40, -21}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EF0;
},
{
glyphname = Uhorngrave;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EEA;
},
{
glyphname = Uhornhookabove;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EEC;
},
{
glyphname = Uhorntilde;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EEE;
},
{
glyphname = Uhungarumlaut;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 0170;
},
{
glyphname = Uinvertedbreve;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 0216;
},
{
glyphname = Umacron;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 016A;
},
{
glyphname = Uogonek;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ogonekcomb.case;
transform = "{1, 0, 0, 1, 509, -75}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 0172;
},
{
glyphname = Uring;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 016E;
},
{
glyphname = Utilde;
lastChange = "2022-03-22 12:02:55 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 534, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 0168;
},
{
glyphname = V;
lastChange = "2022-03-22 13:35:14 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"331 -20 OFFCURVE",
"402 13 OFFCURVE",
"489 77 CURVE SMOOTH",
"573 138 OFFCURVE",
"654 212 OFFCURVE",
"732 300 CURVE SMOOTH",
"815 393 OFFCURVE",
"857 471 OFFCURVE",
"857 534 CURVE SMOOTH",
"857 577 OFFCURVE",
"836 599 OFFCURVE",
"795 599 CURVE SMOOTH",
"783 599 OFFCURVE",
"768 596 OFFCURVE",
"751 591 CURVE SMOOTH",
"738 587 OFFCURVE",
"731 581 OFFCURVE",
"731 573 CURVE SMOOTH",
"731 570 OFFCURVE",
"734 568 OFFCURVE",
"739 568 CURVE SMOOTH",
"742 568 OFFCURVE",
"744 568 OFFCURVE",
"746 569 CURVE",
"765 574 OFFCURVE",
"781 577 OFFCURVE",
"792 577 CURVE SMOOTH",
"820 577 OFFCURVE",
"834 565 OFFCURVE",
"834 541 CURVE SMOOTH",
"834 494 OFFCURVE",
"789 421 OFFCURVE",
"700 320 CURVE SMOOTH",
"620 231 OFFCURVE",
"545 157 OFFCURVE",
"473 100 CURVE SMOOTH",
"388 31 OFFCURVE",
"321 -2 OFFCURVE",
"273 -2 CURVE SMOOTH",
"257 -2 OFFCURVE",
"249 12 OFFCURVE",
"249 40 CURVE SMOOTH",
"249 66 OFFCURVE",
"257 99 OFFCURVE",
"272 139 CURVE SMOOTH",
"289 181 OFFCURVE",
"311 221 OFFCURVE",
"340 259 CURVE SMOOTH",
"405 344 OFFCURVE",
"448 405 OFFCURVE",
"471 442 CURVE SMOOTH",
"497 485 OFFCURVE",
"510 517 OFFCURVE",
"510 540 CURVE SMOOTH",
"510 559 OFFCURVE",
"500 577 OFFCURVE",
"481 595 CURVE",
"474 600 OFFCURVE",
"463 603 OFFCURVE",
"448 603 CURVE SMOOTH",
"391 603 OFFCURVE",
"317 576 OFFCURVE",
"224 522 CURVE SMOOTH",
"171 491 OFFCURVE",
"124 455 OFFCURVE",
"81 414 CURVE SMOOTH",
"39 374 OFFCURVE",
"14 341 OFFCURVE",
"7 314 CURVE SMOOTH",
"4 305 OFFCURVE",
"3 297 OFFCURVE",
"3 288 CURVE SMOOTH",
"3 258 OFFCURVE",
"23 243 OFFCURVE",
"64 243 CURVE SMOOTH",
"82 243 OFFCURVE",
"91 247 OFFCURVE",
"91 255 CURVE SMOOTH",
"91 260 OFFCURVE",
"85 260 OFFCURVE",
"72 260 CURVE SMOOTH",
"46 260 OFFCURVE",
"33 269 OFFCURVE",
"33 286 CURVE SMOOTH",
"33 291 OFFCURVE",
"34 297 OFFCURVE",
"37 302 CURVE SMOOTH",
"74 377 OFFCURVE",
"140 443 OFFCURVE",
"235 500 CURVE SMOOTH",
"326 555 OFFCURVE",
"394 582 OFFCURVE",
"441 582 CURVE SMOOTH",
"460 582 OFFCURVE",
"470 571 OFFCURVE",
"470 550 CURVE SMOOTH",
"470 517 OFFCURVE",
"445 466 OFFCURVE",
"394 395 CURVE SMOOTH",
"361 351 OFFCURVE",
"328 307 OFFCURVE",
"293 263 CURVE SMOOTH",
"238 190 OFFCURVE",
"211 125 OFFCURVE",
"211 68 CURVE SMOOTH",
"211 12 OFFCURVE",
"241 -21 OFFCURVE",
"278 -21 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 1066 67 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 1070 20 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01258 1070 13 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 20 218 20 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 153 20 169 20 185 20 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 58 213 58 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 67 25 67 41 67 57 67 73 67 89 67 105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 67 25 67 41 67 57 67 73 67 89 67 105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 656;
}
);
note = V;
unicode = 0056;
},
{
color = 3;
glyphname = W;
lastChange = "2022-03-22 13:35:17 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{909, 590}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"177 -61 OFFCURVE",
"218 -36 OFFCURVE",
"266 15 CURVE SMOOTH",
"304 54 OFFCURVE",
"351 116 OFFCURVE",
"406 202 CURVE",
"459 243 OFFCURVE",
"529 290 OFFCURVE",
"621 346 CURVE",
"606 325 OFFCURVE",
"593 300 OFFCURVE",
"578 273 CURVE SMOOTH",
"546 210 OFFCURVE",
"530 156 OFFCURVE",
"530 112 CURVE SMOOTH",
"530 69 OFFCURVE",
"544 36 OFFCURVE",
"572 14 CURVE SMOOTH",
"596 -5 OFFCURVE",
"626 -15 OFFCURVE",
"662 -15 CURVE SMOOTH",
"722 -15 OFFCURVE",
"792 10 OFFCURVE",
"872 63 CURVE SMOOTH",
"955 118 OFFCURVE",
"1024 185 OFFCURVE",
"1077 266 CURVE SMOOTH",
"1130 347 OFFCURVE",
"1157 415 OFFCURVE",
"1157 470 CURVE SMOOTH",
"1157 523 OFFCURVE",
"1134 549 OFFCURVE",
"1089 549 CURVE SMOOTH",
"1076 549 OFFCURVE",
"1061 546 OFFCURVE",
"1044 541 CURVE SMOOTH",
"1033 537 OFFCURVE",
"1028 532 OFFCURVE",
"1028 525 CURVE SMOOTH",
"1028 520 OFFCURVE",
"1031 518 OFFCURVE",
"1037 518 CURVE SMOOTH",
"1040 518 OFFCURVE",
"1042 518 OFFCURVE",
"1044 519 CURVE",
"1064 524 OFFCURVE",
"1080 527 OFFCURVE",
"1091 527 CURVE SMOOTH",
"1119 527 OFFCURVE",
"1133 514 OFFCURVE",
"1133 488 CURVE SMOOTH",
"1133 448 OFFCURVE",
"1101 380 OFFCURVE",
"1038 285 CURVE SMOOTH",
"986 208 OFFCURVE",
"923 142 OFFCURVE",
"850 87 CURVE SMOOTH",
"775 31 OFFCURVE",
"711 4 OFFCURVE",
"659 4 CURVE SMOOTH",
"601 4 OFFCURVE",
"559 41 OFFCURVE",
"559 109 CURVE SMOOTH",
"559 152 OFFCURVE",
"574 202 OFFCURVE",
"605 259 CURVE SMOOTH",
"634 315 OFFCURVE",
"662 358 OFFCURVE",
"689 388 CURVE",
"729 413 OFFCURVE",
"760 433 OFFCURVE",
"783 448 CURVE SMOOTH",
"805 463 OFFCURVE",
"819 474 OFFCURVE",
"825 479 CURVE SMOOTH",
"844 498 OFFCURVE",
"854 513 OFFCURVE",
"854 523 CURVE SMOOTH",
"854 532 OFFCURVE",
"847 536 OFFCURVE",
"833 536 CURVE SMOOTH",
"824 536 OFFCURVE",
"815 535 OFFCURVE",
"806 532 CURVE SMOOTH",
"767 521 OFFCURVE",
"720 479 OFFCURVE",
"664 407 CURVE",
"561 340 OFFCURVE",
"485 287 OFFCURVE",
"435 250 CURVE",
"519 388 OFFCURVE",
"561 487 OFFCURVE",
"561 547 CURVE SMOOTH",
"561 600 OFFCURVE",
"520 629 OFFCURVE",
"459 629 CURVE SMOOTH",
"384 629 OFFCURVE",
"297 597 OFFCURVE",
"196 532 CURVE SMOOTH",
"162 510 OFFCURVE",
"125 480 OFFCURVE",
"86 443 CURVE SMOOTH",
"40 399 OFFCURVE",
"15 366 OFFCURVE",
"10 344 CURVE SMOOTH",
"9 339 OFFCURVE",
"8 335 OFFCURVE",
"8 331 CURVE SMOOTH",
"8 296 OFFCURVE",
"41 273 OFFCURVE",
"94 273 CURVE SMOOTH",
"110 273 OFFCURVE",
"118 276 OFFCURVE",
"118 284 CURVE SMOOTH",
"118 288 OFFCURVE",
"115 290 OFFCURVE",
"109 290 CURVE SMOOTH",
"104 290 LINE SMOOTH",
"69 290 OFFCURVE",
"52 298 OFFCURVE",
"52 320 CURVE SMOOTH",
"52 346 OFFCURVE",
"75 382 OFFCURVE",
"120 427 CURVE SMOOTH",
"156 462 OFFCURVE",
"191 491 OFFCURVE",
"225 513 CURVE SMOOTH",
"258 536 OFFCURVE",
"297 555 OFFCURVE",
"341 574 CURVE SMOOTH",
"397 597 OFFCURVE",
"441 609 OFFCURVE",
"473 609 CURVE SMOOTH",
"508 609 OFFCURVE",
"526 596 OFFCURVE",
"526 569 CURVE SMOOTH",
"526 551 OFFCURVE",
"522 525 OFFCURVE",
"508 494 CURVE SMOOTH",
"480 430 LINE SMOOTH",
"448 356 OFFCURVE",
"408 276 OFFCURVE",
"359 192 CURVE",
"221 90 LINE",
"176 52 OFFCURVE",
"143 15 OFFCURVE",
"122 -22 CURVE",
"119 -29 OFFCURVE",
"117 -35 OFFCURVE",
"117 -40 CURVE SMOOTH",
"117 -54 OFFCURVE",
"126 -61 OFFCURVE",
"143 -61 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 -16 OFFCURVE",
"161 -14 OFFCURVE",
"161 -11 CURVE",
"163 -7 LINE SMOOTH",
"170 7 OFFCURVE",
"185 20 OFFCURVE",
"202 37 CURVE SMOOTH",
"210 45 OFFCURVE",
"225 58 OFFCURVE",
"246 77 CURVE SMOOTH",
"281 105 OFFCURVE",
"308 126 OFFCURVE",
"327 139 CURVE",
"294 87 OFFCURVE",
"269 52 OFFCURVE",
"252 34 CURVE SMOOTH",
"221 1 OFFCURVE",
"193 -16 OFFCURVE",
"170 -16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 1070 50 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01281 1068 30 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012104 1067 90 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01211 50 104 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 41 213 41 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 81 118 81 134 81 150 81 166 81 182 81 198 81 214 81 230 81 246 81 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 81 22 81 38 81 54 81 70 81 86 81 102 81 118 81 134 81 150 81 166 81 182 81 198 81 214 81 230 81 246 81 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 81 22 81 38 81 54 81 70 81 86 81 102 81 118 81 134 81 150 81 166 81 182 81 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 81 213 81 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01264 50 104 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012108 50 104 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012125 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012120 1064 18 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 1061 92 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1017;
}
);
leftKerningGroup = W;
note = W;
rightKerningGroup = W;
unicode = 0057;
},
{
glyphname = Wacute;
lastChange = "2022-03-22 12:02:59 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 659, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1017;
}
);
leftKerningGroup = W;
rightKerningGroup = W;
unicode = 1E82;
},
{
glyphname = Wcircumflex;
lastChange = "2022-03-22 12:02:59 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 659, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1017;
}
);
leftKerningGroup = W;
rightKerningGroup = W;
unicode = 0174;
},
{
glyphname = Wdieresis;
lastChange = "2022-03-22 12:02:59 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 659, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1017;
}
);
leftKerningGroup = W;
rightKerningGroup = W;
unicode = 1E84;
},
{
glyphname = Wgrave;
lastChange = "2022-03-22 12:02:59 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 659, 290}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1017;
}
);
leftKerningGroup = W;
rightKerningGroup = W;
unicode = 1E80;
},
{
glyphname = X;
lastChange = "2022-03-22 13:38:36 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"73 -137 OFFCURVE",
"82 -132 OFFCURVE",
"82 -121 CURVE SMOOTH",
"82 -120 OFFCURVE",
"81 -119 OFFCURVE",
"81 -117 CURVE",
"79 -111 OFFCURVE",
"75 -109 OFFCURVE",
"69 -109 CURVE SMOOTH",
"66 -109 OFFCURVE",
"63 -109 OFFCURVE",
"60 -110 CURVE SMOOTH",
"58 -111 OFFCURVE",
"55 -111 OFFCURVE",
"52 -111 CURVE SMOOTH",
"45 -111 OFFCURVE",
"42 -107 OFFCURVE",
"42 -100 CURVE SMOOTH",
"42 -88 OFFCURVE",
"48 -74 OFFCURVE",
"61 -57 CURVE SMOOTH",
"116 16 OFFCURVE",
"255 130 OFFCURVE",
"479 285 CURVE",
"473 250 LINE SMOOTH",
"445 100 OFFCURVE",
"417 -3 OFFCURVE",
"388 -59 CURVE SMOOTH",
"386 -63 OFFCURVE",
"385 -66 OFFCURVE",
"385 -67 CURVE SMOOTH",
"385 -74 OFFCURVE",
"393 -70 OFFCURVE",
"410 -54 CURVE SMOOTH",
"427 -39 OFFCURVE",
"440 -23 OFFCURVE",
"449 -5 CURVE SMOOTH",
"462 20 OFFCURVE",
"475 63 OFFCURVE",
"490 124 CURVE SMOOTH",
"505 180 OFFCURVE",
"514 231 OFFCURVE",
"521 276 CURVE SMOOTH",
"524 300 LINE SMOOTH",
"525 307 OFFCURVE",
"525 312 OFFCURVE",
"526 317 CURVE",
"665 412 OFFCURVE",
"747 470 OFFCURVE",
"774 493 CURVE SMOOTH",
"787 504 OFFCURVE",
"794 517 OFFCURVE",
"794 531 CURVE SMOOTH",
"794 545 OFFCURVE",
"787 552 OFFCURVE",
"772 552 CURVE SMOOTH",
"741 552 OFFCURVE",
"708 537 OFFCURVE",
"675 512 CURVE SMOOTH",
"669 507 OFFCURVE",
"666 502 OFFCURVE",
"666 499 CURVE SMOOTH",
"666 496 OFFCURVE",
"669 494 OFFCURVE",
"674 494 CURVE SMOOTH",
"681 494 OFFCURVE",
"688 497 OFFCURVE",
"697 504 CURVE SMOOTH",
"705 510 OFFCURVE",
"715 515 OFFCURVE",
"727 518 CURVE SMOOTH",
"731 519 OFFCURVE",
"735 519 OFFCURVE",
"738 519 CURVE SMOOTH",
"743 519 OFFCURVE",
"745 518 OFFCURVE",
"745 515 CURVE SMOOTH",
"745 512 OFFCURVE",
"743 508 OFFCURVE",
"738 503 CURVE SMOOTH",
"710 471 OFFCURVE",
"640 415 OFFCURVE",
"529 336 CURVE",
"534 375 OFFCURVE",
"536 403 OFFCURVE",
"536 426 CURVE SMOOTH",
"536 492 OFFCURVE",
"516 531 OFFCURVE",
"477 542 CURVE SMOOTH",
"470 544 OFFCURVE",
"462 545 OFFCURVE",
"454 545 CURVE SMOOTH",
"416 545 OFFCURVE",
"376 526 OFFCURVE",
"335 487 CURVE SMOOTH",
"294 448 OFFCURVE",
"261 402 OFFCURVE",
"236 349 CURVE SMOOTH",
"234 345 OFFCURVE",
"233 342 OFFCURVE",
"233 339 CURVE SMOOTH",
"233 333 OFFCURVE",
"236 332 OFFCURVE",
"243 336 CURVE",
"251 343 OFFCURVE",
"259 354 OFFCURVE",
"268 371 CURVE SMOOTH",
"291 412 OFFCURVE",
"318 448 OFFCURVE",
"350 478 CURVE SMOOTH",
"385 511 OFFCURVE",
"416 528 OFFCURVE",
"441 528 CURVE SMOOTH",
"476 528 OFFCURVE",
"494 494 OFFCURVE",
"494 426 CURVE SMOOTH",
"494 393 OFFCURVE",
"490 352 OFFCURVE",
"482 303 CURVE",
"479 300 OFFCURVE",
"476 298 OFFCURVE",
"473 297 CURVE",
"470 295 OFFCURVE",
"468 293 OFFCURVE",
"466 292 CURVE SMOOTH",
"425 264 OFFCURVE",
"384 236 OFFCURVE",
"343 209 CURVE SMOOTH",
"302 181 OFFCURVE",
"261 153 OFFCURVE",
"219 125 CURVE SMOOTH",
"138 67 OFFCURVE",
"78 12 OFFCURVE",
"39 -40 CURVE SMOOTH",
"22 -63 OFFCURVE",
"14 -83 OFFCURVE",
"14 -101 CURVE SMOOTH",
"14 -125 OFFCURVE",
"27 -137 OFFCURVE",
"54 -137 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01265 1070 45 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 45 218 45 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 45 25 45 41 45 57 45 73 45 89 45 105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 45 25 45 41 45 57 45 73 45 89 45 105 45 121 45 137 45 153 45 169 45 185 45 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01283 1061 47 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01283 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = X;
unicode = 0058;
},
{
color = 3;
glyphname = Y;
lastChange = "2022-03-25 00:59:42 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{396, 5}";
},
{
name = top;
position = "{544, 500}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"247 -256 OFFCURVE",
"260 -250 OFFCURVE",
"260 -239 CURVE SMOOTH",
"260 -236 OFFCURVE",
"259 -234 OFFCURVE",
"257 -232 CURVE SMOOTH",
"255 -229 OFFCURVE",
"251 -227 OFFCURVE",
"247 -227 CURVE SMOOTH",
"242 -227 OFFCURVE",
"238 -228 OFFCURVE",
"232 -231 CURVE SMOOTH",
"228 -233 OFFCURVE",
"224 -234 OFFCURVE",
"221 -234 CURVE SMOOTH",
"210 -234 OFFCURVE",
"205 -227 OFFCURVE",
"205 -212 CURVE SMOOTH",
"205 -181 OFFCURVE",
"235 -124 OFFCURVE",
"294 -43 CURVE SMOOTH",
"345 29 OFFCURVE",
"388 78 OFFCURVE",
"421 107 CURVE SMOOTH",
"468 147 OFFCURVE",
"520 197 OFFCURVE",
"583 261 CURVE SMOOTH",
"647 325 OFFCURVE",
"692 374 OFFCURVE",
"723 411 CURVE SMOOTH",
"729 418 OFFCURVE",
"732 425 OFFCURVE",
"732 434 CURVE SMOOTH",
"732 453 OFFCURVE",
"722 462 OFFCURVE",
"703 462 CURVE SMOOTH",
"689 462 OFFCURVE",
"672 456 OFFCURVE",
"651 443 CURVE SMOOTH",
"633 432 OFFCURVE",
"618 420 OFFCURVE",
"607 408 CURVE",
"604 403 OFFCURVE",
"602 400 OFFCURVE",
"602 398 CURVE SMOOTH",
"602 394 OFFCURVE",
"605 392 OFFCURVE",
"610 392 CURVE SMOOTH",
"619 392 OFFCURVE",
"627 396 OFFCURVE",
"634 404 CURVE SMOOTH",
"647 419 OFFCURVE",
"661 426 OFFCURVE",
"676 426 CURVE SMOOTH",
"681 426 OFFCURVE",
"683 424 OFFCURVE",
"683 421 CURVE SMOOTH",
"683 418 OFFCURVE",
"682 415 OFFCURVE",
"680 412 CURVE SMOOTH",
"659 374 OFFCURVE",
"620 327 OFFCURVE",
"563 271 CURVE SMOOTH",
"492 202 OFFCURVE",
"441 153 OFFCURVE",
"408 124 CURVE SMOOTH",
"369 90 OFFCURVE",
"325 41 OFFCURVE",
"276 -22 CURVE SMOOTH",
"227 -86 OFFCURVE",
"195 -137 OFFCURVE",
"180 -175 CURVE SMOOTH",
"175 -186 OFFCURVE",
"173 -198 OFFCURVE",
"173 -209 CURVE SMOOTH",
"173 -240 OFFCURVE",
"189 -256 OFFCURVE",
"222 -256 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"306 50 OFFCURVE",
"318 59 OFFCURVE",
"334 77 CURVE SMOOTH",
"352 97 OFFCURVE",
"364 119 OFFCURVE",
"369 144 CURVE SMOOTH",
"372 155 OFFCURVE",
"373 169 OFFCURVE",
"373 184 CURVE SMOOTH",
"373 203 OFFCURVE",
"368 240 OFFCURVE",
"358 295 CURVE SMOOTH",
"346 362 OFFCURVE",
"318 427 OFFCURVE",
"275 488 CURVE SMOOTH",
"219 567 OFFCURVE",
"155 605 OFFCURVE",
"83 605 CURVE SMOOTH",
"-14 605 OFFCURVE",
"-63 549 OFFCURVE",
"-63 437 CURVE SMOOTH",
"-63 364 OFFCURVE",
"-38 309 OFFCURVE",
"12 272 CURVE SMOOTH",
"17 268 OFFCURVE",
"21 266 OFFCURVE",
"25 266 CURVE SMOOTH",
"27 266 OFFCURVE",
"28 267 OFFCURVE",
"28 269 CURVE SMOOTH",
"28 274 OFFCURVE",
"23 281 OFFCURVE",
"13 288 CURVE SMOOTH",
"-14 308 OFFCURVE",
"-27 366 OFFCURVE",
"-27 463 CURVE SMOOTH",
"-27 546 OFFCURVE",
"9 588 OFFCURVE",
"81 588 CURVE SMOOTH",
"144 588 OFFCURVE",
"200 551 OFFCURVE",
"247 475 CURVE SMOOTH",
"284 414 OFFCURVE",
"307 349 OFFCURVE",
"315 282 CURVE SMOOTH",
"320 243 OFFCURVE",
"323 212 OFFCURVE",
"325 188 CURVE SMOOTH",
"327 163 OFFCURVE",
"328 146 OFFCURVE",
"328 137 CURVE SMOOTH",
"328 105 OFFCURVE",
"323 84 OFFCURVE",
"312 73 CURVE SMOOTH",
"302 62 OFFCURVE",
"297 55 OFFCURVE",
"297 52 CURVE SMOOTH",
"297 51 OFFCURVE",
"298 50 OFFCURVE",
"299 50 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01273 1069 83 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01211 1068 23 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01291 1070 64 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 11 22 11 38 11 54 11 70 11 86 11 102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 11 22 11 38 11 54 11 70 11 86 11 102 11 118 11 134 11 150 11 166 11 182 11 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 11 213 11 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 64 218 64 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 64 121 64 137 64 153 64 169 64 185 64 201 64 217 64 233 64 249 64 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 153 64 169 64 185 64 201 64 217 64 233 64 249 64 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 153 64 169 64 185 64 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 73 22 73 38 73 54 73 70 73 86 73 102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 73 22 73 38 73 54 73 70 73 86 73 102 73 118 73 134 73 150 73 166 73 182 73 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 73 213 73 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 549;
}
);
leftKerningGroup = Y;
note = Y;
rightKerningGroup = Y;
unicode = 0059;
},
{
glyphname = Yacute;
lastChange = "2022-03-25 00:59:42 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 294, 200}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 00DD;
},
{
glyphname = Ycircumflex;
lastChange = "2022-03-25 00:59:42 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 294, 200}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 0176;
},
{
glyphname = Ydieresis;
lastChange = "2022-03-25 00:59:42 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 294, 200}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 0178;
},
{
glyphname = Ydotbelow;
lastChange = "2022-03-22 12:03:03 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 146, 5}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 1EF4;
},
{
glyphname = Ygrave;
lastChange = "2022-03-25 00:59:42 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 294, 200}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 1EF2;
},
{
glyphname = Yhookabove;
lastChange = "2022-03-25 00:59:42 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 294, 200}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 1EF6;
},
{
glyphname = Ymacron;
lastChange = "2022-03-25 00:59:42 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 294, 200}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 0232;
},
{
glyphname = Ytilde;
lastChange = "2022-03-25 00:59:42 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 294, 200}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 1EF8;
},
{
color = 3;
glyphname = Z;
lastChange = "2022-03-22 09:34:37 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{596, 580}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"481 -119 OFFCURVE",
"484 -118 OFFCURVE",
"487 -116 CURVE SMOOTH",
"537 -89 OFFCURVE",
"567 -66 OFFCURVE",
"578 -46 CURVE SMOOTH",
"584 -34 OFFCURVE",
"587 -23 OFFCURVE",
"587 -14 CURVE SMOOTH",
"587 37 OFFCURVE",
"505 62 OFFCURVE",
"340 62 CURVE SMOOTH",
"250 62 OFFCURVE",
"179 55 OFFCURVE",
"127 41 CURVE",
"235 142 OFFCURVE",
"341 229 OFFCURVE",
"450 304 CURVE SMOOTH",
"529 357 OFFCURVE",
"620 413 OFFCURVE",
"728 470 CURVE SMOOTH",
"737 475 OFFCURVE",
"742 481 OFFCURVE",
"742 487 CURVE SMOOTH",
"742 492 OFFCURVE",
"739 496 OFFCURVE",
"733 499 CURVE SMOOTH",
"672 534 OFFCURVE",
"592 551 OFFCURVE",
"491 551 CURVE SMOOTH",
"475 551 OFFCURVE",
"459 550 OFFCURVE",
"444 549 CURVE SMOOTH",
"371 544 OFFCURVE",
"317 528 OFFCURVE",
"280 499 CURVE SMOOTH",
"251 477 OFFCURVE",
"237 451 OFFCURVE",
"237 422 CURVE SMOOTH",
"237 413 OFFCURVE",
"240 408 OFFCURVE",
"246 408 CURVE SMOOTH",
"257 408 OFFCURVE",
"263 414 OFFCURVE",
"263 427 CURVE SMOOTH",
"263 431 LINE SMOOTH",
"263 453 OFFCURVE",
"277 473 OFFCURVE",
"306 490 CURVE SMOOTH",
"339 509 OFFCURVE",
"385 521 OFFCURVE",
"444 526 CURVE SMOOTH",
"449 527 OFFCURVE",
"453 527 OFFCURVE",
"458 527 CURVE SMOOTH",
"473 527 LINE SMOOTH",
"537 527 OFFCURVE",
"605 512 OFFCURVE",
"676 481 CURVE",
"440 354 OFFCURVE",
"224 192 OFFCURVE",
"28 -3 CURVE SMOOTH",
"13 -18 OFFCURVE",
"5 -29 OFFCURVE",
"5 -36 CURVE SMOOTH",
"5 -40 OFFCURVE",
"8 -42 OFFCURVE",
"13 -42 CURVE SMOOTH",
"21 -42 OFFCURVE",
"38 -36 OFFCURVE",
"64 -25 CURVE SMOOTH",
"144 10 OFFCURVE",
"233 28 OFFCURVE",
"332 28 CURVE SMOOTH",
"414 28 OFFCURVE",
"466 27 OFFCURVE",
"487 25 CURVE SMOOTH",
"535 19 OFFCURVE",
"559 5 OFFCURVE",
"559 -16 CURVE SMOOTH",
"559 -23 OFFCURVE",
"557 -32 OFFCURVE",
"552 -41 CURVE SMOOTH",
"547 -50 OFFCURVE",
"536 -61 OFFCURVE",
"520 -74 CURVE SMOOTH",
"513 -79 OFFCURVE",
"506 -85 OFFCURVE",
"497 -90 CURVE SMOOTH",
"482 -97 OFFCURVE",
"475 -105 OFFCURVE",
"475 -115 CURVE SMOOTH",
"475 -118 OFFCURVE",
"476 -119 OFFCURVE",
"479 -119 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 1065 30 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 30 218 30 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01264 1061 46 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1064 34 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 34 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 592;
}
);
leftKerningGroup = Z;
note = Z;
rightKerningGroup = Z;
unicode = 005A;
},
{
glyphname = Zacute;
lastChange = "2022-03-22 12:03:06 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 346, 280}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 592;
}
);
leftKerningGroup = Z;
rightKerningGroup = Z;
unicode = 0179;
},
{
glyphname = Zcaron;
lastChange = "2022-03-22 12:03:06 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 346, 280}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 592;
}
);
leftKerningGroup = Z;
rightKerningGroup = Z;
unicode = 017D;
},
{
glyphname = Zdotaccent;
lastChange = "2022-03-22 12:03:06 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 346, 280}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 592;
}
);
leftKerningGroup = Z;
rightKerningGroup = Z;
unicode = 017B;
},
{
color = 3;
glyphname = a;
lastChange = "2022-03-22 13:39:55 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{114, 0}";
},
{
name = ogonek;
position = "{300, 20}";
},
{
name = top;
position = "{356, 289}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"51 1 OFFCURVE",
"60 3 OFFCURVE",
"70 8 CURVE SMOOTH",
"107 25 OFFCURVE",
"159 58 OFFCURVE",
"223 112 CURVE SMOOTH",
"308 183 LINE",
"287 141 OFFCURVE",
"277 98 OFFCURVE",
"277 53 CURVE SMOOTH",
"277 26 OFFCURVE",
"281 13 OFFCURVE",
"289 13 CURVE SMOOTH",
"297 13 OFFCURVE",
"307 28 OFFCURVE",
"307 36 CURVE SMOOTH",
"307 37 LINE",
"306 39 OFFCURVE",
"306 43 OFFCURVE",
"306 49 CURVE SMOOTH",
"306 78 OFFCURVE",
"322 123 OFFCURVE",
"353 184 CURVE SMOOTH",
"380 237 OFFCURVE",
"403 273 OFFCURVE",
"422 294 CURVE SMOOTH",
"423 295 OFFCURVE",
"424 297 OFFCURVE",
"424 298 CURVE SMOOTH",
"424 300 OFFCURVE",
"422 301 OFFCURVE",
"419 301 CURVE SMOOTH",
"402 301 OFFCURVE",
"385 295 OFFCURVE",
"370 284 CURVE",
"360 294 OFFCURVE",
"342 299 OFFCURVE",
"316 299 CURVE SMOOTH",
"273 299 OFFCURVE",
"219 271 OFFCURVE",
"152 215 CURVE SMOOTH",
"97 168 OFFCURVE",
"57 122 OFFCURVE",
"33 77 CURVE SMOOTH",
"24 58 OFFCURVE",
"19 42 OFFCURVE",
"19 28 CURVE SMOOTH",
"19 10 OFFCURVE",
"27 1 OFFCURVE",
"42 1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"80 47 OFFCURVE",
"76 51 OFFCURVE",
"76 58 CURVE SMOOTH",
"76 67 OFFCURVE",
"79 77 OFFCURVE",
"85 88 CURVE SMOOTH",
"102 117 OFFCURVE",
"140 156 OFFCURVE",
"199 203 CURVE SMOOTH",
"250 243 OFFCURVE",
"287 263 OFFCURVE",
"311 263 CURVE SMOOTH",
"323 263 OFFCURVE",
"331 257 OFFCURVE",
"335 246 CURVE",
"316 225 OFFCURVE",
"275 180 OFFCURVE",
"214 129 CURVE SMOOTH",
"165 88 OFFCURVE",
"117 58 OFFCURVE",
"100 51 CURVE",
"95 48 OFFCURVE",
"90 47 OFFCURVE",
"87 47 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01221 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01213 21 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01239 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 367;
}
);
leftKerningGroup = a;
note = a;
rightKerningGroup = a;
unicode = 0061;
},
{
glyphname = aacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 00E1;
},
{
glyphname = abreve;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 0103;
},
{
glyphname = abreveacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 1EAF;
},
{
glyphname = abrevedotbelow;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -136, 0}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 1EB7;
},
{
glyphname = abrevegrave;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 1EB1;
},
{
glyphname = abrevehookabove;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 1EB3;
},
{
glyphname = abrevetilde;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 1EB5;
},
{
glyphname = acaron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 01CE;
},
{
glyphname = acircumflex;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 00E2;
},
{
glyphname = acircumflexacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 1EA5;
},
{
glyphname = acircumflexdotbelow;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -136, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 1EAD;
},
{
glyphname = acircumflexgrave;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 1EA7;
},
{
glyphname = acircumflexhookabove;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 1EA9;
},
{
glyphname = acircumflextilde;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 1EAB;
},
{
glyphname = adblgrave;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 0201;
},
{
glyphname = adieresis;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 00E4;
},
{
glyphname = adotbelow;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -136, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 1EA1;
},
{
glyphname = agrave;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 00E0;
},
{
glyphname = ahookabove;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 1EA3;
},
{
glyphname = ainvertedbreve;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 0203;
},
{
glyphname = amacron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 0101;
},
{
glyphname = aogonek;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 50, 20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 0105;
},
{
glyphname = aring;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 00E5;
},
{
glyphname = aringacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ringcomb_acutecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 01FB;
},
{
glyphname = atilde;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 106, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 00E3;
},
{
color = 3;
glyphname = ae;
lastChange = "2022-03-21 17:04:55 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{426, 289}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"384 -5 OFFCURVE",
"411 5 OFFCURVE",
"448 24 CURVE SMOOTH",
"477 41 OFFCURVE",
"500 56 OFFCURVE",
"517 71 CURVE SMOOTH",
"521 75 OFFCURVE",
"524 79 OFFCURVE",
"525 84 CURVE",
"524 87 OFFCURVE",
"521 89 OFFCURVE",
"518 89 CURVE SMOOTH",
"514 89 OFFCURVE",
"510 87 OFFCURVE",
"505 84 CURVE",
"492 73 OFFCURVE",
"468 60 OFFCURVE",
"433 45 CURVE SMOOTH",
"396 29 OFFCURVE",
"368 21 OFFCURVE",
"350 21 CURVE SMOOTH",
"329 21 OFFCURVE",
"316 36 OFFCURVE",
"316 66 CURVE SMOOTH",
"316 72 OFFCURVE",
"317 79 OFFCURVE",
"319 86 CURVE SMOOTH",
"323 101 OFFCURVE",
"330 116 OFFCURVE",
"341 135 CURVE",
"348 134 OFFCURVE",
"354 133 OFFCURVE",
"361 133 CURVE SMOOTH",
"396 133 OFFCURVE",
"434 147 OFFCURVE",
"474 175 CURVE SMOOTH",
"514 203 OFFCURVE",
"534 231 OFFCURVE",
"534 259 CURVE SMOOTH",
"534 263 OFFCURVE",
"534 266 OFFCURVE",
"533 270 CURVE SMOOTH",
"530 287 OFFCURVE",
"516 297 OFFCURVE",
"490 301 CURVE",
"487 302 OFFCURVE",
"471 298 OFFCURVE",
"441 286 CURVE SMOOTH",
"401 270 LINE",
"405 275 OFFCURVE",
"409 280 OFFCURVE",
"413 284 CURVE SMOOTH",
"422 294 LINE SMOOTH",
"423 295 OFFCURVE",
"424 297 OFFCURVE",
"424 298 CURVE SMOOTH",
"424 300 OFFCURVE",
"422 301 OFFCURVE",
"419 301 CURVE SMOOTH",
"402 301 OFFCURVE",
"385 295 OFFCURVE",
"370 284 CURVE",
"360 294 OFFCURVE",
"342 299 OFFCURVE",
"316 299 CURVE SMOOTH",
"273 299 OFFCURVE",
"219 271 OFFCURVE",
"152 215 CURVE SMOOTH",
"97 168 OFFCURVE",
"57 122 OFFCURVE",
"33 77 CURVE SMOOTH",
"24 58 OFFCURVE",
"19 42 OFFCURVE",
"19 28 CURVE SMOOTH",
"19 10 OFFCURVE",
"27 1 OFFCURVE",
"42 1 CURVE SMOOTH",
"51 1 OFFCURVE",
"60 3 OFFCURVE",
"70 8 CURVE SMOOTH",
"107 25 OFFCURVE",
"159 58 OFFCURVE",
"223 112 CURVE SMOOTH",
"308 183 LINE",
"305 166 OFFCURVE",
"304 153 OFFCURVE",
"304 145 CURVE",
"291 121 OFFCURVE",
"283 97 OFFCURVE",
"279 74 CURVE SMOOTH",
"278 65 OFFCURVE",
"278 56 OFFCURVE",
"279 49 CURVE SMOOTH",
"286 20 OFFCURVE",
"324 -5 OFFCURVE",
"365 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"80 44 OFFCURVE",
"76 47 OFFCURVE",
"76 58 CURVE SMOOTH",
"76 67 OFFCURVE",
"79 77 OFFCURVE",
"85 88 CURVE SMOOTH",
"102 117 OFFCURVE",
"140 156 OFFCURVE",
"199 203 CURVE SMOOTH",
"250 243 OFFCURVE",
"287 263 OFFCURVE",
"311 263 CURVE SMOOTH",
"323 263 OFFCURVE",
"331 257 OFFCURVE",
"335 246 CURVE",
"316 225 OFFCURVE",
"275 190 OFFCURVE",
"214 139 CURVE SMOOTH",
"182 113 OFFCURVE",
"156 92 OFFCURVE",
"135 77 CURVE SMOOTH",
"114 62 OFFCURVE",
"98 52 OFFCURVE",
"87 47 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"377 155 OFFCURVE",
"367 158 OFFCURVE",
"358 165 CURVE",
"401 241 OFFCURVE",
"438 277 OFFCURVE",
"467 272 CURVE SMOOTH",
"477 271 OFFCURVE",
"483 264 OFFCURVE",
"483 251 CURVE SMOOTH",
"483 235 OFFCURVE",
"475 216 OFFCURVE",
"457 194 CURVE SMOOTH",
"435 168 OFFCURVE",
"412 155 OFFCURVE",
"388 155 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01226 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01244 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01292 1061 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01210 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 10 214 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01219 26 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01236 26 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01252 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01274 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01263 52 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 573;
}
);
leftKerningGroup = a;
note = ae;
rightKerningGroup = e;
unicode = 00E6;
},
{
glyphname = aeacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = ae;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 176, -11}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 573;
}
);
leftKerningGroup = a;
rightKerningGroup = e;
unicode = 01FD;
},
{
glyphname = b;
lastChange = "2022-03-22 13:49:46 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"59 -19 OFFCURVE",
"121 11 OFFCURVE",
"202 70 CURVE SMOOTH",
"244 100 OFFCURVE",
"280 136 OFFCURVE",
"311 177 CURVE SMOOTH",
"341 217 OFFCURVE",
"356 248 OFFCURVE",
"356 269 CURVE SMOOTH",
"356 284 OFFCURVE",
"349 291 OFFCURVE",
"335 291 CURVE SMOOTH",
"331 291 OFFCURVE",
"328 291 OFFCURVE",
"324 290 CURVE SMOOTH",
"259 279 OFFCURVE",
"212 262 OFFCURVE",
"182 241 CURVE",
"181 244 OFFCURVE",
"180 246 OFFCURVE",
"180 248 CURVE SMOOTH",
"180 254 OFFCURVE",
"187 268 OFFCURVE",
"200 289 CURVE SMOOTH",
"253 370 OFFCURVE",
"291 424 OFFCURVE",
"314 451 CURVE SMOOTH",
"337 477 OFFCURVE",
"358 492 OFFCURVE",
"377 495 CURVE SMOOTH",
"390 497 OFFCURVE",
"396 501 OFFCURVE",
"396 507 CURVE SMOOTH",
"396 512 OFFCURVE",
"392 515 OFFCURVE",
"384 515 CURVE SMOOTH",
"376 515 OFFCURVE",
"361 510 OFFCURVE",
"338 500 CURVE SMOOTH",
"315 491 OFFCURVE",
"301 484 OFFCURVE",
"297 479 CURVE SMOOTH",
"284 463 OFFCURVE",
"264 437 OFFCURVE",
"238 400 CURVE SMOOTH",
"212 363 OFFCURVE",
"180 316 OFFCURVE",
"141 258 CURVE SMOOTH",
"102 200 OFFCURVE",
"71 152 OFFCURVE",
"48 115 CURVE SMOOTH",
"25 78 OFFCURVE",
"8 50 OFFCURVE",
"-1 33 CURVE SMOOTH",
"-6 24 OFFCURVE",
"-8 15 OFFCURVE",
"-8 6 CURVE SMOOTH",
"-8 -11 OFFCURVE",
"1 -19 OFFCURVE",
"18 -19 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"55 38 OFFCURVE",
"49 42 OFFCURVE",
"49 49 CURVE SMOOTH",
"49 51 OFFCURVE",
"49 53 OFFCURVE",
"51 56 CURVE SMOOTH",
"78 100 OFFCURVE",
"102 137 OFFCURVE",
"124 166 CURVE SMOOTH",
"156 209 OFFCURVE",
"223 247 OFFCURVE",
"275 255 CURVE SMOOTH",
"285 256 OFFCURVE",
"291 248 OFFCURVE",
"291 236 CURVE SMOOTH",
"291 233 OFFCURVE",
"291 230 OFFCURVE",
"290 227 CURVE SMOOTH",
"278 178 OFFCURVE",
"250 136 OFFCURVE",
"205 99 CURVE SMOOTH",
"159 60 OFFCURVE",
"112 38 OFFCURVE",
"63 38 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01218 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0128 18 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 50 23 50 39 50 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 50 70 50 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 305;
}
);
leftKerningGroup = b;
note = b;
rightKerningGroup = b;
unicode = 0062;
},
{
color = 3;
glyphname = c;
lastChange = "2022-03-25 01:05:57 +0000";
layers = (
{
anchors = (
{
name = cedilla;
position = "{86, 10}";
},
{
name = top;
position = "{337, 300}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"79 0 OFFCURVE",
"86 0 OFFCURVE",
"93 1 CURVE SMOOTH",
"117 4 OFFCURVE",
"156 19 OFFCURVE",
"212 48 CURVE SMOOTH",
"256 71 OFFCURVE",
"286 88 OFFCURVE",
"302 101 CURVE SMOOTH",
"305 104 OFFCURVE",
"309 113 OFFCURVE",
"309 119 CURVE SMOOTH",
"309 122 LINE",
"308 125 OFFCURVE",
"307 126 OFFCURVE",
"305 125 CURVE SMOOTH",
"194 60 OFFCURVE",
"119 25 OFFCURVE",
"80 25 CURVE SMOOTH",
"63 25 OFFCURVE",
"55 35 OFFCURVE",
"55 55 CURVE SMOOTH",
"55 62 OFFCURVE",
"57 70 OFFCURVE",
"60 80 CURVE SMOOTH",
"71 113 OFFCURVE",
"93 147 OFFCURVE",
"128 183 CURVE SMOOTH",
"163 218 OFFCURVE",
"202 246 OFFCURVE",
"243 267 CURVE SMOOTH",
"255 273 OFFCURVE",
"267 276 OFFCURVE",
"279 276 CURVE SMOOTH",
"291 276 OFFCURVE",
"302 273 OFFCURVE",
"314 267 CURVE SMOOTH",
"317 265 OFFCURVE",
"323 268 OFFCURVE",
"332 276 CURVE SMOOTH",
"341 285 OFFCURVE",
"346 293 OFFCURVE",
"346 298 CURVE SMOOTH",
"346 306 OFFCURVE",
"338 310 OFFCURVE",
"323 310 CURVE SMOOTH",
"294 310 OFFCURVE",
"265 303 OFFCURVE",
"236 289 CURVE SMOOTH",
"187 266 OFFCURVE",
"141 235 OFFCURVE",
"100 197 CURVE SMOOTH",
"55 158 OFFCURVE",
"27 120 OFFCURVE",
"15 84 CURVE SMOOTH",
"11 72 OFFCURVE",
"9 61 OFFCURVE",
"9 52 CURVE SMOOTH",
"9 17 OFFCURVE",
"30 0 OFFCURVE",
"73 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1070 28 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 12 213 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 1075 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 272;
}
);
leftKerningGroup = c;
note = c;
rightKerningGroup = c;
unicode = 0063;
},
{
glyphname = cacute;
lastChange = "2022-03-25 01:05:57 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 272;
}
);
leftKerningGroup = c;
rightKerningGroup = c;
unicode = 0107;
},
{
glyphname = ccaron;
lastChange = "2022-03-25 01:05:57 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 272;
}
);
leftKerningGroup = c;
rightKerningGroup = c;
unicode = 010D;
},
{
glyphname = ccedilla;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, -164, 10}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 272;
}
);
leftKerningGroup = c;
rightKerningGroup = c;
unicode = 00E7;
},
{
glyphname = ccircumflex;
lastChange = "2022-03-25 01:05:57 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 272;
}
);
leftKerningGroup = c;
rightKerningGroup = c;
unicode = 0109;
},
{
glyphname = cdotaccent;
lastChange = "2022-03-25 01:05:57 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 272;
}
);
leftKerningGroup = c;
rightKerningGroup = c;
unicode = 010B;
},
{
color = 3;
glyphname = d;
lastChange = "2022-03-22 13:49:52 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{84, 0}";
},
{
name = center;
position = "{437, 400}";
},
{
name = top;
position = "{511, 498}";
},
{
name = topright;
position = "{511, 498}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"304 -14 OFFCURVE",
"311 -9 OFFCURVE",
"311 1 CURVE SMOOTH",
"311 4 OFFCURVE",
"309 7 OFFCURVE",
"305 8 CURVE SMOOTH",
"296 12 OFFCURVE",
"291 23 OFFCURVE",
"291 41 CURVE SMOOTH",
"291 66 OFFCURVE",
"300 105 OFFCURVE",
"318 156 CURVE SMOOTH",
"331 192 OFFCURVE",
"342 221 OFFCURVE",
"353 242 CURVE",
"446 378 OFFCURVE",
"501 457 OFFCURVE",
"518 479 CURVE SMOOTH",
"524 486 OFFCURVE",
"527 492 OFFCURVE",
"527 498 CURVE SMOOTH",
"527 505 OFFCURVE",
"522 508 OFFCURVE",
"511 508 CURVE SMOOTH",
"500 508 OFFCURVE",
"491 506 OFFCURVE",
"486 501 CURVE SMOOTH",
"464 482 OFFCURVE",
"434 447 OFFCURVE",
"402 393 CURVE SMOOTH",
"333 277 LINE",
"320 284 OFFCURVE",
"305 288 OFFCURVE",
"287 288 CURVE SMOOTH",
"246 288 OFFCURVE",
"192 259 OFFCURVE",
"124 201 CURVE SMOOTH",
"70 155 OFFCURVE",
"30 109 OFFCURVE",
"5 63 CURVE SMOOTH",
"-2 50 OFFCURVE",
"-5 39 OFFCURVE",
"-5 29 CURVE SMOOTH",
"-5 10 OFFCURVE",
"5 1 OFFCURVE",
"24 1 CURVE SMOOTH",
"34 1 OFFCURVE",
"46 4 OFFCURVE",
"60 10 CURVE SMOOTH",
"113 34 OFFCURVE",
"192 94 OFFCURVE",
"297 190 CURVE",
"272 129 OFFCURVE",
"259 81 OFFCURVE",
"259 44 CURVE SMOOTH",
"259 25 OFFCURVE",
"263 9 OFFCURVE",
"270 -2 CURVE SMOOTH",
"275 -10 OFFCURVE",
"281 -14 OFFCURVE",
"290 -14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"58 46 OFFCURVE",
"54 52 OFFCURVE",
"54 62 CURVE SMOOTH",
"54 71 OFFCURVE",
"58 83 OFFCURVE",
"67 96 CURVE SMOOTH",
"86 127 OFFCURVE",
"117 160 OFFCURVE",
"162 197 CURVE SMOOTH",
"211 238 OFFCURVE",
"250 258 OFFCURVE",
"279 258 CURVE SMOOTH",
"288 258 OFFCURVE",
"297 251 OFFCURVE",
"304 237 CURVE",
"259 190 OFFCURVE",
"221 152 OFFCURVE",
"186 125 CURVE SMOOTH",
"137 86 OFFCURVE",
"100 61 OFFCURVE",
"77 50 CURVE SMOOTH",
"72 48 OFFCURVE",
"68 46 OFFCURVE",
"65 46 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 1068 17 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 17 218 17 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01213 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01231 1064 44 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01219 13 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 367;
}
);
leftKerningGroup = a;
note = d;
rightKerningGroup = d;
unicode = 0064;
},
{
glyphname = eth;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"209 -19 OFFCURVE",
"375 252 OFFCURVE",
"395 394 CURVE SMOOTH",
"398 413 OFFCURVE",
"399 431 OFFCURVE",
"399 448 CURVE SMOOTH",
"399 473 OFFCURVE",
"396 495 OFFCURVE",
"390 515 CURVE",
"405 523 OFFCURVE",
"421 531 OFFCURVE",
"437 538 CURVE SMOOTH",
"446 541 OFFCURVE",
"452 544 OFFCURVE",
"457 546 CURVE SMOOTH",
"466 551 LINE SMOOTH",
"471 553 OFFCURVE",
"474 556 OFFCURVE",
"474 560 CURVE SMOOTH",
"474 561 OFFCURVE",
"473 562 OFFCURVE",
"473 563 CURVE SMOOTH",
"472 566 OFFCURVE",
"469 568 OFFCURVE",
"465 568 CURVE SMOOTH",
"464 568 OFFCURVE",
"463 568 OFFCURVE",
"461 567 CURVE",
"434 560 LINE SMOOTH",
"417 555 OFFCURVE",
"398 549 OFFCURVE",
"379 542 CURVE",
"355 590 OFFCURVE",
"310 615 OFFCURVE",
"251 615 CURVE SMOOTH",
"226 615 OFFCURVE",
"217 604 OFFCURVE",
"190 595 CURVE SMOOTH",
"142 580 OFFCURVE",
"133 560 OFFCURVE",
"130 544 CURVE SMOOTH",
"129 534 OFFCURVE",
"135 531 OFFCURVE",
"140 531 CURVE",
"150 544 OFFCURVE",
"163 560 OFFCURVE",
"184 573 CURVE SMOOTH",
"207 586 OFFCURVE",
"228 591 OFFCURVE",
"243 591 CURVE SMOOTH",
"292 591 OFFCURVE",
"321 565 OFFCURVE",
"336 524 CURVE",
"310 512 OFFCURVE",
"282 497 OFFCURVE",
"253 480 CURVE",
"247 468 OFFCURVE",
"244 458 OFFCURVE",
"244 449 CURVE SMOOTH",
"244 444 OFFCURVE",
"245 441 OFFCURVE",
"246 437 CURVE SMOOTH",
"248 432 OFFCURVE",
"251 431 OFFCURVE",
"257 434 CURVE",
"285 455 OFFCURVE",
"315 474 OFFCURVE",
"345 491 CURVE",
"347 477 OFFCURVE",
"348 462 OFFCURVE",
"348 446 CURVE SMOOTH",
"348 271 OFFCURVE",
"213 0 OFFCURVE",
"70 0 CURVE SMOOTH",
"55 0 OFFCURVE",
"47 8 OFFCURVE",
"47 25 CURVE SMOOTH",
"47 27 OFFCURVE",
"48 31 OFFCURVE",
"48 34 CURVE SMOOTH",
"59 113 OFFCURVE",
"165 211 OFFCURVE",
"218 239 CURVE SMOOTH",
"267 265 OFFCURVE",
"281 274 OFFCURVE",
"281 288 CURVE SMOOTH",
"281 294 OFFCURVE",
"279 299 OFFCURVE",
"272 299 CURVE SMOOTH",
"235 299 OFFCURVE",
"158 255 OFFCURVE",
"97 192 CURVE SMOOTH",
"51 144 OFFCURVE",
"10 77 OFFCURVE",
"10 32 CURVE SMOOTH",
"10 2 OFFCURVE",
"28 -19 OFFCURVE",
"74 -19 CURVE SMOOTH"
);
}
);
width = 339;
}
);
unicode = 00F0;
},
{
glyphname = dcaron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 261, -56}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = d;
unicode = 010F;
},
{
glyphname = dcroat;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 187, 217}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = a;
rightKerningGroup = d;
unicode = 0111;
},
{
glyphname = dzcaron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 367, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 674;
}
);
leftKerningGroup = a;
rightKerningGroup = z;
unicode = 01C6;
},
{
color = 3;
glyphname = e;
lastChange = "2022-03-25 01:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{18, 0}";
},
{
name = ogonek;
position = "{214, 49}";
},
{
name = top;
position = "{270, 288}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"101 -5 OFFCURVE",
"130 5 OFFCURVE",
"170 24 CURVE SMOOTH",
"202 41 OFFCURVE",
"228 56 OFFCURVE",
"248 71 CURVE SMOOTH",
"254 76 OFFCURVE",
"257 80 OFFCURVE",
"258 84 CURVE SMOOTH",
"258 87 OFFCURVE",
"256 89 OFFCURVE",
"252 89 CURVE SMOOTH",
"248 89 OFFCURVE",
"243 87 OFFCURVE",
"238 84 CURVE SMOOTH",
"224 73 OFFCURVE",
"198 60 OFFCURVE",
"159 45 CURVE SMOOTH",
"119 29 OFFCURVE",
"90 21 OFFCURVE",
"72 21 CURVE SMOOTH",
"54 21 OFFCURVE",
"45 32 OFFCURVE",
"45 54 CURVE SMOOTH",
"45 63 OFFCURVE",
"48 74 OFFCURVE",
"53 86 CURVE SMOOTH",
"60 101 OFFCURVE",
"71 116 OFFCURVE",
"84 135 CURVE",
"91 134 OFFCURVE",
"97 133 OFFCURVE",
"104 133 CURVE SMOOTH",
"139 133 OFFCURVE",
"179 147 OFFCURVE",
"225 175 CURVE SMOOTH",
"276 206 OFFCURVE",
"302 238 OFFCURVE",
"302 270 CURVE SMOOTH",
"302 287 OFFCURVE",
"290 297 OFFCURVE",
"265 301 CURVE",
"262 302 OFFCURVE",
"245 297 OFFCURVE",
"213 286 CURVE SMOOTH",
"163 268 LINE",
"81 194 OFFCURVE",
"30 129 OFFCURVE",
"11 74 CURVE SMOOTH",
"8 64 OFFCURVE",
"6 56 OFFCURVE",
"6 49 CURVE SMOOTH",
"6 20 OFFCURVE",
"41 -5 OFFCURVE",
"82 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"124 155 OFFCURVE",
"114 158 OFFCURVE",
"107 165 CURVE",
"164 241 OFFCURVE",
"207 277 OFFCURVE",
"236 272 CURVE SMOOTH",
"245 271 OFFCURVE",
"249 266 OFFCURVE",
"249 257 CURVE SMOOTH",
"249 240 OFFCURVE",
"236 219 OFFCURVE",
"211 194 CURVE SMOOTH",
"184 168 OFFCURVE",
"158 155 OFFCURVE",
"135 155 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0128 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 8 213 8 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 49 218 49 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01237 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01225 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01245 1061 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01210 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 10 214 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 256;
}
);
leftKerningGroup = e;
note = e;
rightKerningGroup = e;
unicode = 0065;
},
{
glyphname = eacute;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 00E9;
},
{
glyphname = ebreve;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 0115;
},
{
glyphname = ecaron;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 011B;
},
{
glyphname = ecircumflex;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 00EA;
},
{
glyphname = ecircumflexacute;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 1EBF;
},
{
glyphname = ecircumflexdotbelow;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -232, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 1EC7;
},
{
glyphname = ecircumflexgrave;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 1EC1;
},
{
glyphname = ecircumflexhookabove;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 1EC3;
},
{
glyphname = ecircumflextilde;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 1EC5;
},
{
glyphname = edblgrave;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 0205;
},
{
glyphname = edieresis;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 00EB;
},
{
glyphname = edotaccent;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 0117;
},
{
glyphname = edotbelow;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -232, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 1EB9;
},
{
glyphname = egrave;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 00E8;
},
{
glyphname = ehookabove;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 1EBB;
},
{
glyphname = einvertedbreve;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 0207;
},
{
glyphname = emacron;
lastChange = "2022-03-25 01:06:48 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 0113;
},
{
glyphname = eogonek;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, -36, 49}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 0119;
},
{
glyphname = etilde;
lastChange = "2022-03-25 01:07:01 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 20, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
leftKerningGroup = e;
rightKerningGroup = e;
unicode = 1EBD;
},
{
glyphname = schwa;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"46 -6 OFFCURVE",
"63 -1 OFFCURVE",
"95 10 CURVE SMOOTH",
"145 28 LINE",
"227 102 OFFCURVE",
"278 167 OFFCURVE",
"297 222 CURVE SMOOTH",
"300 232 OFFCURVE",
"302 240 OFFCURVE",
"302 247 CURVE SMOOTH",
"302 276 OFFCURVE",
"267 301 OFFCURVE",
"226 301 CURVE SMOOTH",
"207 301 OFFCURVE",
"178 291 OFFCURVE",
"138 272 CURVE SMOOTH",
"106 255 OFFCURVE",
"80 240 OFFCURVE",
"60 225 CURVE SMOOTH",
"54 220 OFFCURVE",
"51 216 OFFCURVE",
"50 212 CURVE SMOOTH",
"50 209 OFFCURVE",
"52 207 OFFCURVE",
"56 207 CURVE SMOOTH",
"60 207 OFFCURVE",
"65 209 OFFCURVE",
"70 212 CURVE SMOOTH",
"84 223 OFFCURVE",
"110 236 OFFCURVE",
"149 251 CURVE SMOOTH",
"189 267 OFFCURVE",
"218 275 OFFCURVE",
"236 275 CURVE SMOOTH",
"254 275 OFFCURVE",
"263 264 OFFCURVE",
"263 242 CURVE SMOOTH",
"263 233 OFFCURVE",
"260 222 OFFCURVE",
"255 210 CURVE SMOOTH",
"248 195 OFFCURVE",
"237 180 OFFCURVE",
"224 161 CURVE",
"217 162 OFFCURVE",
"211 163 OFFCURVE",
"204 163 CURVE SMOOTH",
"169 163 OFFCURVE",
"129 149 OFFCURVE",
"83 121 CURVE SMOOTH",
"32 90 OFFCURVE",
"6 58 OFFCURVE",
"6 26 CURVE SMOOTH",
"6 9 OFFCURVE",
"18 -1 OFFCURVE",
"43 -5 CURVE"
);
},
{
closed = 1;
nodes = (
"63 25 OFFCURVE",
"59 30 OFFCURVE",
"59 39 CURVE SMOOTH",
"59 56 OFFCURVE",
"72 77 OFFCURVE",
"97 102 CURVE SMOOTH",
"124 128 OFFCURVE",
"150 141 OFFCURVE",
"173 141 CURVE SMOOTH",
"184 141 OFFCURVE",
"194 138 OFFCURVE",
"201 131 CURVE",
"144 55 OFFCURVE",
"101 19 OFFCURVE",
"72 24 CURVE SMOOTH"
);
}
);
width = 256;
}
);
unicode = 0259;
},
{
glyphname = f;
lastChange = "2022-03-22 15:00:38 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-9 -112 OFFCURVE",
"2 -101 OFFCURVE",
"2 -90 CURVE SMOOTH",
"2 -67 OFFCURVE",
"8 -44 OFFCURVE",
"19 -20 CURVE SMOOTH",
"54 51 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"181 253 OFFCURVE",
"197 262 OFFCURVE",
"217 263 CURVE SMOOTH",
"262 266 OFFCURVE",
"305 267 OFFCURVE",
"345 267 CURVE SMOOTH",
"358 267 OFFCURVE",
"364 270 OFFCURVE",
"364 276 CURVE SMOOTH",
"364 281 OFFCURVE",
"359 284 OFFCURVE",
"350 285 CURVE SMOOTH",
"326 289 OFFCURVE",
"291 291 OFFCURVE",
"244 291 CURVE SMOOTH",
"207 291 LINE",
"255 359 OFFCURVE",
"300 409 OFFCURVE",
"342 440 CURVE SMOOTH",
"383 471 OFFCURVE",
"417 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"527 474 OFFCURVE",
"538 484 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"266 411 OFFCURVE",
"218 359 OFFCURVE",
"169 290 CURVE",
"160 289 OFFCURVE",
"151 289 OFFCURVE",
"141 288 CURVE SMOOTH",
"107 285 LINE SMOOTH",
"103 285 OFFCURVE",
"101 284 OFFCURVE",
"101 281 CURVE SMOOTH",
"101 276 OFFCURVE",
"106 269 OFFCURVE",
"115 260 CURVE SMOOTH",
"124 251 OFFCURVE",
"131 247 OFFCURVE",
"138 247 CURVE",
"53 122 OFFCURVE",
"-2 29 OFFCURVE",
"-27 -34 CURVE SMOOTH",
"-31 -43 OFFCURVE",
"-33 -53 OFFCURVE",
"-33 -62 CURVE SMOOTH",
"-33 -69 OFFCURVE",
"-32 -76 OFFCURVE",
"-29 -85 CURVE SMOOTH",
"-26 -94 OFFCURVE",
"-25 -99 OFFCURVE",
"-25 -101 CURVE SMOOTH",
"-25 -108 OFFCURVE",
"-22 -112 OFFCURVE",
"-17 -112 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01250 1063 6 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1064 18 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 239;
}
);
note = f;
unicode = 0066;
},
{
color = 3;
glyphname = g;
lastChange = "2022-03-22 13:40:18 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{383, 293}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"77 -312 OFFCURVE",
"152 -272 OFFCURVE",
"217 -191 CURVE SMOOTH",
"266 -128 OFFCURVE",
"306 -48 OFFCURVE",
"335 50 CURVE SMOOTH",
"344 79 OFFCURVE",
"380 101 OFFCURVE",
"441 115 CURVE",
"444 118 LINE",
"444 121 OFFCURVE",
"436 128 OFFCURVE",
"429 128 CURVE SMOOTH",
"427 128 OFFCURVE",
"426 127 OFFCURVE",
"425 127 CURVE SMOOTH",
"411 124 OFFCURVE",
"398 120 OFFCURVE",
"386 116 CURVE SMOOTH",
"373 112 OFFCURVE",
"362 108 OFFCURVE",
"351 105 CURVE",
"360 134 OFFCURVE",
"368 160 OFFCURVE",
"375 183 CURVE SMOOTH",
"395 247 LINE",
"370 241 OFFCURVE",
"354 237 OFFCURVE",
"349 235 CURVE SMOOTH",
"335 228 OFFCURVE",
"326 216 OFFCURVE",
"323 199 CURVE",
"242 143 OFFCURVE",
"178 106 OFFCURVE",
"131 83 CURVE SMOOTH",
"123 79 OFFCURVE",
"116 77 OFFCURVE",
"109 77 CURVE SMOOTH",
"99 77 OFFCURVE",
"94 82 OFFCURVE",
"94 92 CURVE SMOOTH",
"94 123 OFFCURVE",
"125 161 OFFCURVE",
"188 207 CURVE SMOOTH",
"249 251 OFFCURVE",
"297 273 OFFCURVE",
"333 273 CURVE SMOOTH",
"343 273 OFFCURVE",
"352 272 OFFCURVE",
"359 269 CURVE",
"380 280 OFFCURVE",
"390 288 OFFCURVE",
"390 294 CURVE SMOOTH",
"390 300 OFFCURVE",
"380 303 OFFCURVE",
"359 303 CURVE SMOOTH",
"313 303 OFFCURVE",
"253 279 OFFCURVE",
"180 232 CURVE SMOOTH",
"109 186 OFFCURVE",
"67 145 OFFCURVE",
"52 109 CURVE SMOOTH",
"47 99 OFFCURVE",
"45 89 OFFCURVE",
"45 78 CURVE SMOOTH",
"45 53 OFFCURVE",
"57 40 OFFCURVE",
"82 40 CURVE SMOOTH",
"103 40 OFFCURVE",
"143 57 OFFCURVE",
"199 93 CURVE SMOOTH",
"317 168 LINE",
"309 129 OFFCURVE",
"302 101 OFFCURVE",
"297 81 CURVE",
"106 1 OFFCURVE",
"-28 -61 OFFCURVE",
"-112 -104 CURVE",
"-126 -127 OFFCURVE",
"-133 -152 OFFCURVE",
"-133 -178 CURVE SMOOTH",
"-133 -214 OFFCURVE",
"-121 -245 OFFCURVE",
"-97 -272 CURVE SMOOTH",
"-73 -299 OFFCURVE",
"-44 -312 OFFCURVE",
"-9 -312 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-53 -293 OFFCURVE",
"-86 -255 OFFCURVE",
"-86 -213 CURVE SMOOTH",
"-86 -184 OFFCURVE",
"-73 -157 OFFCURVE",
"-46 -130 CURVE SMOOTH",
"-5 -89 OFFCURVE",
"48 -53 OFFCURVE",
"114 -22 CURVE SMOOTH",
"174 3 OFFCURVE",
"230 28 OFFCURVE",
"290 55 CURVE",
"267 -30 OFFCURVE",
"233 -105 OFFCURVE",
"186 -169 CURVE SMOOTH",
"125 -252 OFFCURVE",
"57 -293 OFFCURVE",
"-20 -293 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 23 218 23 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01239 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01267 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 67 118 67 134 67 150 67 166 67 182 67 198 67 214 67 230 67 246 67 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 67 22 67 38 67 54 67 70 67 86 67 102 67 118 67 134 67 150 67 166 67 182 67 198 67 214 67 230 67 246 67 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 67 22 67 38 67 54 67 70 67 86 67 102 67 118 67 134 67 150 67 166 67 182 67 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 67 213 67 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 1073 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01229 1064 35 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 404;
}
);
leftKerningGroup = g;
note = g;
rightKerningGroup = g;
unicode = 0067;
},
{
glyphname = gbreve;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 133, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 404;
}
);
leftKerningGroup = g;
rightKerningGroup = g;
unicode = 011F;
},
{
glyphname = gcaron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 133, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 404;
}
);
leftKerningGroup = g;
rightKerningGroup = g;
unicode = 01E7;
},
{
glyphname = gcircumflex;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 133, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 404;
}
);
leftKerningGroup = g;
rightKerningGroup = g;
unicode = 011D;
},
{
glyphname = gcommaaccent;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
transform = "{1, 0, 0, 1, 133, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 404;
}
);
leftKerningGroup = g;
rightKerningGroup = g;
unicode = 0123;
},
{
glyphname = gdotaccent;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 133, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 404;
}
);
leftKerningGroup = g;
rightKerningGroup = g;
unicode = 0121;
},
{
color = 3;
glyphname = h;
lastChange = "2022-03-22 13:40:25 +0000";
layers = (
{
anchors = (
{
name = center;
position = "{305, 400}";
},
{
name = top;
position = "{445, 544}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"5 -7 OFFCURVE",
"24 0 OFFCURVE",
"55 13 CURVE",
"71 46 OFFCURVE",
"102 83 OFFCURVE",
"147 124 CURVE SMOOTH",
"162 137 OFFCURVE",
"190 158 OFFCURVE",
"231 187 CURVE SMOOTH",
"280 220 OFFCURVE",
"311 237 OFFCURVE",
"323 237 CURVE SMOOTH",
"325 237 OFFCURVE",
"326 237 OFFCURVE",
"327 236 CURVE SMOOTH",
"330 233 OFFCURVE",
"319 214 OFFCURVE",
"296 179 CURVE SMOOTH",
"267 135 OFFCURVE",
"246 100 OFFCURVE",
"235 73 CURVE",
"234 69 OFFCURVE",
"233 66 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 43 OFFCURVE",
"254 25 OFFCURVE",
"295 9 CURVE",
"322 15 OFFCURVE",
"351 27 OFFCURVE",
"382 46 CURVE SMOOTH",
"449 88 LINE SMOOTH",
"454 91 OFFCURVE",
"459 102 OFFCURVE",
"459 109 CURVE SMOOTH",
"459 112 OFFCURVE",
"458 114 OFFCURVE",
"455 113 CURVE",
"379 74 LINE SMOOTH",
"342 55 OFFCURVE",
"316 46 OFFCURVE",
"302 46 CURVE SMOOTH",
"290 46 OFFCURVE",
"284 52 OFFCURVE",
"284 64 CURVE SMOOTH",
"284 74 OFFCURVE",
"289 89 OFFCURVE",
"298 109 CURVE SMOOTH",
"324 166 OFFCURVE",
"358 216 OFFCURVE",
"401 259 CURVE",
"390 279 OFFCURVE",
"379 289 OFFCURVE",
"368 289 CURVE SMOOTH",
"350 289 OFFCURVE",
"261 234 OFFCURVE",
"100 123 CURVE",
"132 179 OFFCURVE",
"173 237 OFFCURVE",
"222 298 CURVE SMOOTH",
"310 407 OFFCURVE",
"366 473 OFFCURVE",
"389 495 CURVE SMOOTH",
"420 526 OFFCURVE",
"441 541 OFFCURVE",
"452 541 CURVE SMOOTH",
"463 541 OFFCURVE",
"468 544 OFFCURVE",
"468 550 CURVE SMOOTH",
"468 557 OFFCURVE",
"463 560 OFFCURVE",
"454 560 CURVE SMOOTH",
"445 560 OFFCURVE",
"428 555 OFFCURVE",
"402 544 CURVE SMOOTH",
"375 534 OFFCURVE",
"360 527 OFFCURVE",
"357 522 CURVE",
"304 458 OFFCURVE",
"245 382 OFFCURVE",
"180 294 CURVE SMOOTH",
"103 189 OFFCURVE",
"41 91 OFFCURVE",
"-8 -1 CURVE SMOOTH",
"-10 -5 OFFCURVE",
"-9 -7 OFFCURVE",
"-4 -7 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01224 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01244 22 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 429;
}
);
leftKerningGroup = l;
note = h;
rightKerningGroup = n;
unicode = 0068;
},
{
glyphname = hbar;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 55, 217}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 429;
}
);
leftKerningGroup = l;
rightKerningGroup = n;
unicode = 0127;
},
{
glyphname = hcircumflex;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 195, 244}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 429;
}
);
leftKerningGroup = l;
rightKerningGroup = n;
unicode = 0125;
},
{
color = 3;
glyphname = i;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{-49, 0}";
}
);
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01224 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01226 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0125 22 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 22 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 201;
}
);
leftKerningGroup = i;
note = i;
rightKerningGroup = u;
unicode = 0069;
},
{
color = 3;
glyphname = idotless;
lastChange = "2022-03-21 20:12:44 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{-49, 0}";
},
{
name = ogonek;
position = "{26, 10}";
},
{
name = top;
position = "{221, 300}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"8 -1 OFFCURVE",
"16 2 OFFCURVE",
"23 7 CURVE SMOOTH",
"73 44 OFFCURVE",
"144 75 OFFCURVE",
"237 100 CURVE SMOOTH",
"241 101 OFFCURVE",
"243 103 OFFCURVE",
"243 106 CURVE SMOOTH",
"243 108 LINE SMOOTH",
"243 112 OFFCURVE",
"240 114 OFFCURVE",
"237 114 CURVE",
"198 105 OFFCURVE",
"171 96 OFFCURVE",
"152 89 CURVE SMOOTH",
"123 80 OFFCURVE",
"102 72 OFFCURVE",
"87 67 CURVE SMOOTH",
"72 62 OFFCURVE",
"63 58 OFFCURVE",
"61 57 CURVE",
"86 90 OFFCURVE",
"106 113 OFFCURVE",
"118 130 CURVE SMOOTH",
"167 197 LINE SMOOTH",
"183 219 OFFCURVE",
"194 238 OFFCURVE",
"199 255 CURVE SMOOTH",
"200 259 OFFCURVE",
"198 261 OFFCURVE",
"193 261 CURVE SMOOTH",
"184 261 OFFCURVE",
"170 257 OFFCURVE",
"151 248 CURVE SMOOTH",
"126 237 OFFCURVE",
"113 228 OFFCURVE",
"112 223 CURVE SMOOTH",
"109 206 LINE SMOOTH",
"108 200 OFFCURVE",
"108 194 OFFCURVE",
"107 189 CURVE SMOOTH",
"104 178 OFFCURVE",
"97 164 OFFCURVE",
"84 146 CURVE SMOOTH",
"65 118 OFFCURVE",
"47 93 OFFCURVE",
"32 71 CURVE SMOOTH",
"17 49 OFFCURVE",
"3 29 OFFCURVE",
"-8 12 CURVE SMOOTH",
"-10 9 OFFCURVE",
"-11 6 OFFCURVE",
"-11 5 CURVE SMOOTH",
"-11 1 OFFCURVE",
"-8 -1 OFFCURVE",
"-1 -1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 201;
}
);
leftKerningGroup = i;
note = dotlessi;
rightKerningGroup = u;
unicode = 0131;
},
{
glyphname = iacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 00ED;
},
{
glyphname = ibreve;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 012D;
},
{
glyphname = icaron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 01D0;
},
{
glyphname = icircumflex;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 00EE;
},
{
glyphname = idblgrave;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 0209;
},
{
glyphname = idieresis;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 00EF;
},
{
glyphname = idotaccent;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
},
{
glyphname = idotbelow;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -299, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 1ECB;
},
{
glyphname = igrave;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 00EC;
},
{
glyphname = ihookabove;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 1EC9;
},
{
glyphname = iinvertedbreve;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 020B;
},
{
glyphname = imacron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 012B;
},
{
glyphname = iogonek;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, -29, 0}";
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, -224, 10}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 012F;
},
{
glyphname = itilde;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -29, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
leftKerningGroup = i;
rightKerningGroup = u;
unicode = 0129;
},
{
glyphname = j;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = jdotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01242 1070 13 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 42 213 42 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01233 11 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01235 11 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 300;
}
);
leftKerningGroup = j;
note = j;
rightKerningGroup = j;
unicode = 006A;
},
{
color = 3;
glyphname = jdotless;
lastChange = "2022-03-21 20:13:24 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{290, 300}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-195 -318 OFFCURVE",
"-143 -299 OFFCURVE",
"-94 -260 CURVE SMOOTH",
"-21 -203 OFFCURVE",
"54 -113 OFFCURVE",
"133 15 CURVE SMOOTH",
"164 67 OFFCURVE",
"228 102 OFFCURVE",
"324 121 CURVE SMOOTH",
"335 124 OFFCURVE",
"341 129 OFFCURVE",
"341 134 CURVE SMOOTH",
"341 138 OFFCURVE",
"338 140 OFFCURVE",
"333 140 CURVE SMOOTH",
"331 140 OFFCURVE",
"329 140 OFFCURVE",
"326 139 CURVE SMOOTH",
"272 128 OFFCURVE",
"226 117 OFFCURVE",
"188 106 CURVE",
"233 184 LINE",
"234 187 OFFCURVE",
"237 190 OFFCURVE",
"242 195 CURVE SMOOTH",
"259 211 LINE SMOOTH",
"271 223 OFFCURVE",
"279 230 OFFCURVE",
"279 235 CURVE SMOOTH",
"279 291 LINE",
"278 296 OFFCURVE",
"275 298 OFFCURVE",
"269 298 CURVE SMOOTH",
"254 298 OFFCURVE",
"233 282 OFFCURVE",
"226 266 CURVE SMOOTH",
"201 203 OFFCURVE",
"174 145 OFFCURVE",
"145 93 CURVE",
"54 64 OFFCURVE",
"-28 29 OFFCURVE",
"-102 -12 CURVE SMOOTH",
"-199 -65 OFFCURVE",
"-266 -121 OFFCURVE",
"-302 -180 CURVE SMOOTH",
"-321 -209 OFFCURVE",
"-330 -235 OFFCURVE",
"-330 -257 CURVE SMOOTH",
"-330 -298 OFFCURVE",
"-303 -318 OFFCURVE",
"-249 -318 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-273 -301 OFFCURVE",
"-291 -285 OFFCURVE",
"-291 -254 CURVE SMOOTH",
"-291 -237 OFFCURVE",
"-284 -218 OFFCURVE",
"-271 -195 CURVE SMOOTH",
"-240 -144 OFFCURVE",
"-180 -92 OFFCURVE",
"-90 -38 CURVE SMOOTH",
"-15 7 OFFCURVE",
"57 44 OFFCURVE",
"132 71 CURVE",
"59 -64 OFFCURVE",
"-21 -167 OFFCURVE",
"-108 -240 CURVE SMOOTH",
"-155 -281 OFFCURVE",
"-199 -301 OFFCURVE",
"-238 -301 CURVE SMOOTH"
);
}
);
width = 300;
}
);
leftKerningGroup = j;
rightKerningGroup = j;
unicode = 0237;
},
{
glyphname = jcircumflex;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 300;
}
);
leftKerningGroup = j;
rightKerningGroup = j;
unicode = 0135;
},
{
color = 3;
glyphname = k;
lastChange = "2022-03-21 20:14:17 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{126, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"14 -9 OFFCURVE",
"45 9 OFFCURVE",
"57 24 CURVE SMOOTH",
"91 69 OFFCURVE",
"141 116 OFFCURVE",
"207 165 CURVE",
"206 142 OFFCURVE",
"205 121 OFFCURVE",
"205 102 CURVE SMOOTH",
"205 83 OFFCURVE",
"206 67 OFFCURVE",
"207 53 CURVE SMOOTH",
"212 21 OFFCURVE",
"247 -8 OFFCURVE",
"266 -2 CURVE SMOOTH",
"289 3 OFFCURVE",
"313 13 OFFCURVE",
"340 28 CURVE SMOOTH",
"351 34 OFFCURVE",
"361 40 OFFCURVE",
"371 46 CURVE SMOOTH",
"381 52 OFFCURVE",
"391 58 OFFCURVE",
"402 63 CURVE",
"405 73 OFFCURVE",
"407 81 OFFCURVE",
"407 86 CURVE",
"350 56 LINE SMOOTH",
"327 44 OFFCURVE",
"305 33 OFFCURVE",
"285 26 CURVE SMOOTH",
"283 25 OFFCURVE",
"280 25 OFFCURVE",
"277 25 CURVE SMOOTH",
"266 25 OFFCURVE",
"260 33 OFFCURVE",
"257 50 CURVE SMOOTH",
"253 66 OFFCURVE",
"252 85 OFFCURVE",
"252 105 CURVE SMOOTH",
"252 128 OFFCURVE",
"254 153 OFFCURVE",
"258 180 CURVE",
"302 195 LINE SMOOTH",
"338 207 OFFCURVE",
"360 220 OFFCURVE",
"373 229 CURVE SMOOTH",
"400 246 OFFCURVE",
"414 265 OFFCURVE",
"414 286 CURVE SMOOTH",
"414 293 OFFCURVE",
"412 300 OFFCURVE",
"409 308 CURVE",
"348 279 OFFCURVE",
"301 254 OFFCURVE",
"267 233 CURVE",
"267 243 OFFCURVE",
"260 248 OFFCURVE",
"246 248 CURVE SMOOTH",
"223 248 OFFCURVE",
"212 231 OFFCURVE",
"212 197 CURVE",
"207 194 OFFCURVE",
"204 191 OFFCURVE",
"201 189 CURVE SMOOTH",
"198 186 OFFCURVE",
"195 184 OFFCURVE",
"193 183 CURVE",
"137 139 OFFCURVE",
"107 117 OFFCURVE",
"103 117 CURVE SMOOTH",
"100 117 OFFCURVE",
"99 119 OFFCURVE",
"100 123 CURVE",
"201 302 OFFCURVE",
"277 416 OFFCURVE",
"328 463 CURVE SMOOTH",
"373 506 OFFCURVE",
"415 527 OFFCURVE",
"455 527 CURVE SMOOTH",
"478 527 OFFCURVE",
"499 519 OFFCURVE",
"518 503 CURVE",
"541 516 OFFCURVE",
"552 526 OFFCURVE",
"552 533 CURVE SMOOTH",
"552 536 OFFCURVE",
"550 538 OFFCURVE",
"547 539 CURVE",
"528 549 OFFCURVE",
"506 554 OFFCURVE",
"481 554 CURVE SMOOTH",
"423 554 OFFCURVE",
"372 533 OFFCURVE",
"327 490 CURVE SMOOTH",
"223 392 OFFCURVE",
"111 228 OFFCURVE",
"-8 -1 CURVE",
"-9 -2 OFFCURVE",
"-9 -3 OFFCURVE",
"-9 -5 CURVE SMOOTH",
"-9 -8 OFFCURVE",
"-7 -9 OFFCURVE",
"-2 -9 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01215 7 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 7 74 7 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 7 121 7 137 7 153 7 169 7 185 7 201 7 217 7 233 7 249 7 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 7 25 7 41 7 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01211 7 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01250 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01252 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01258 1063 66 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 374;
}
);
leftKerningGroup = k;
note = k;
rightKerningGroup = k;
unicode = 006B;
},
{
glyphname = kcommaaccent;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -124, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 374;
}
);
leftKerningGroup = k;
rightKerningGroup = k;
unicode = 0137;
},
{
glyphname = kgreenlandic;
lastChange = "2022-03-21 20:14:22 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"14 -9 OFFCURVE",
"45 9 OFFCURVE",
"57 24 CURVE SMOOTH",
"91 69 OFFCURVE",
"141 116 OFFCURVE",
"207 165 CURVE",
"206 142 OFFCURVE",
"205 121 OFFCURVE",
"205 102 CURVE SMOOTH",
"205 83 OFFCURVE",
"206 67 OFFCURVE",
"207 53 CURVE SMOOTH",
"212 21 OFFCURVE",
"247 -8 OFFCURVE",
"266 -2 CURVE SMOOTH",
"289 3 OFFCURVE",
"313 13 OFFCURVE",
"340 28 CURVE SMOOTH",
"351 34 OFFCURVE",
"361 40 OFFCURVE",
"371 46 CURVE SMOOTH",
"381 52 OFFCURVE",
"391 58 OFFCURVE",
"402 63 CURVE",
"405 73 OFFCURVE",
"407 81 OFFCURVE",
"407 86 CURVE",
"350 56 LINE SMOOTH",
"327 44 OFFCURVE",
"305 33 OFFCURVE",
"285 26 CURVE SMOOTH",
"283 25 OFFCURVE",
"280 25 OFFCURVE",
"277 25 CURVE SMOOTH",
"266 25 OFFCURVE",
"260 33 OFFCURVE",
"257 50 CURVE SMOOTH",
"254 67 OFFCURVE",
"252 94 OFFCURVE",
"252 120 CURVE SMOOTH",
"252 147 OFFCURVE",
"254 174 OFFCURVE",
"258 191 CURVE",
"306 190 OFFCURVE",
"360 211 OFFCURVE",
"360 249 CURVE SMOOTH",
"360 256 OFFCURVE",
"358 263 OFFCURVE",
"355 271 CURVE",
"251 231 OFFCURVE",
"224 207 OFFCURVE",
"103 117 CURVE SMOOTH",
"100 115 OFFCURVE",
"99 119 OFFCURVE",
"100 123 CURVE",
"201 302 OFFCURVE",
"270 400 OFFCURVE",
"313 437 CURVE",
"323 453 OFFCURVE",
"294 463 OFFCURVE",
"270 463 CURVE",
"222 396 OFFCURVE",
"111 228 OFFCURVE",
"-8 -1 CURVE",
"-9 -2 OFFCURVE",
"-9 -3 OFFCURVE",
"-9 -5 CURVE SMOOTH",
"-9 -8 OFFCURVE",
"-7 -9 OFFCURVE",
"-2 -9 CURVE SMOOTH"
);
}
);
width = 374;
}
);
leftKerningGroup = k;
rightKerningGroup = k;
unicode = 0138;
},
{
color = 3;
glyphname = l;
lastChange = "2022-03-22 13:41:09 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{41, 0}";
},
{
name = top;
position = "{461, 554}";
},
{
name = topright;
position = "{441, 554}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"108 3 OFFCURVE",
"132 13 OFFCURVE",
"159 28 CURVE SMOOTH",
"170 34 OFFCURVE",
"180 40 OFFCURVE",
"190 46 CURVE SMOOTH",
"200 52 OFFCURVE",
"210 58 OFFCURVE",
"221 63 CURVE SMOOTH",
"224 65 OFFCURVE",
"226 73 OFFCURVE",
"226 86 CURVE",
"202 69 OFFCURVE",
"112 25 OFFCURVE",
"96 25 CURVE SMOOTH",
"81 25 OFFCURVE",
"75 44 OFFCURVE",
"75 57 CURVE SMOOTH",
"75 86 OFFCURVE",
"121 162 OFFCURVE",
"213 283 CURVE SMOOTH",
"293 388 OFFCURVE",
"352 459 OFFCURVE",
"389 495 CURVE SMOOTH",
"420 526 OFFCURVE",
"441 541 OFFCURVE",
"452 541 CURVE SMOOTH",
"463 541 OFFCURVE",
"468 544 OFFCURVE",
"468 550 CURVE SMOOTH",
"468 557 OFFCURVE",
"463 560 OFFCURVE",
"454 560 CURVE SMOOTH",
"445 560 OFFCURVE",
"428 555 OFFCURVE",
"402 544 CURVE SMOOTH",
"375 534 OFFCURVE",
"360 527 OFFCURVE",
"357 522 CURVE",
"164 287 OFFCURVE",
"53 131 OFFCURVE",
"26 53 CURVE",
"28 35 OFFCURVE",
"37 20 OFFCURVE",
"52 9 CURVE SMOOTH",
"65 0 OFFCURVE",
"76 -4 OFFCURVE",
"85 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 202;
}
);
leftKerningGroup = l;
note = l;
rightKerningGroup = l;
unicode = 006C;
},
{
glyphname = lacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 211, 254}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 202;
}
);
leftKerningGroup = l;
rightKerningGroup = l;
unicode = 013A;
},
{
glyphname = lcaron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 191, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 202;
}
);
leftKerningGroup = l;
rightKerningGroup = l;
unicode = 013E;
},
{
glyphname = lcommaaccent;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -209, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 202;
}
);
leftKerningGroup = l;
rightKerningGroup = l;
unicode = 013C;
},
{
color = 3;
glyphname = ldot;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = periodcentered;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 202;
}
);
leftKerningGroup = l;
rightKerningGroup = l;
unicode = 0140;
},
{
glyphname = lj;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = j;
transform = "{1, 0, 0, 1, 202, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 502;
}
);
leftKerningGroup = l;
rightKerningGroup = j;
unicode = 01C9;
},
{
color = 3;
glyphname = lslash;
lastChange = "2022-03-21 20:22:35 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"108 3 OFFCURVE",
"132 13 OFFCURVE",
"159 28 CURVE SMOOTH",
"170 34 OFFCURVE",
"180 40 OFFCURVE",
"190 46 CURVE SMOOTH",
"200 52 OFFCURVE",
"210 58 OFFCURVE",
"221 63 CURVE SMOOTH",
"224 65 OFFCURVE",
"226 73 OFFCURVE",
"226 86 CURVE",
"202 69 OFFCURVE",
"112 25 OFFCURVE",
"96 25 CURVE SMOOTH",
"81 25 OFFCURVE",
"75 44 OFFCURVE",
"75 57 CURVE SMOOTH",
"75 86 OFFCURVE",
"121 162 OFFCURVE",
"213 283 CURVE SMOOTH",
"293 388 OFFCURVE",
"352 459 OFFCURVE",
"389 495 CURVE SMOOTH",
"420 526 OFFCURVE",
"441 541 OFFCURVE",
"452 541 CURVE SMOOTH",
"463 541 OFFCURVE",
"468 544 OFFCURVE",
"468 550 CURVE SMOOTH",
"468 557 OFFCURVE",
"463 560 OFFCURVE",
"454 560 CURVE SMOOTH",
"445 560 OFFCURVE",
"428 555 OFFCURVE",
"402 544 CURVE SMOOTH",
"375 534 OFFCURVE",
"360 527 OFFCURVE",
"357 522 CURVE",
"164 287 OFFCURVE",
"53 131 OFFCURVE",
"26 53 CURVE",
"28 35 OFFCURVE",
"37 20 OFFCURVE",
"52 9 CURVE SMOOTH",
"65 0 OFFCURVE",
"76 -4 OFFCURVE",
"85 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"145 276 OFFCURVE",
"212 289 OFFCURVE",
"284 300 CURVE",
"293 300 OFFCURVE",
"300 301 OFFCURVE",
"305 302 CURVE SMOOTH",
"316 304 LINE SMOOTH",
"323 305 OFFCURVE",
"327 307 OFFCURVE",
"326 312 CURVE SMOOTH",
"325 315 OFFCURVE",
"322 318 OFFCURVE",
"316 318 CURVE SMOOTH",
"288 317 LINE SMOOTH",
"252 317 OFFCURVE",
"212 314 OFFCURVE",
"169 307 CURVE SMOOTH",
"143 303 OFFCURVE",
"117 297 OFFCURVE",
"88 291 CURVE",
"75 279 OFFCURVE",
"69 267 OFFCURVE",
"70 259 CURVE SMOOTH",
"71 255 OFFCURVE",
"74 253 OFFCURVE",
"80 254 CURVE"
);
}
);
width = 202;
}
);
leftKerningGroup = l;
rightKerningGroup = l;
unicode = 0142;
},
{
glyphname = m;
lastChange = "2022-03-21 20:29:16 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"374 -24 OFFCURVE",
"375 -24 OFFCURVE",
"376 -23 CURVE",
"452 14 OFFCURVE",
"507 42 OFFCURVE",
"544 63 CURVE",
"547 73 OFFCURVE",
"549 81 OFFCURVE",
"549 86 CURVE",
"492 56 LINE SMOOTH",
"469 44 OFFCURVE",
"447 33 OFFCURVE",
"427 26 CURVE SMOOTH",
"423 25 OFFCURVE",
"420 24 OFFCURVE",
"417 25 CURVE SMOOTH",
"413 26 OFFCURVE",
"411 28 OFFCURVE",
"411 33 CURVE SMOOTH",
"411 35 OFFCURVE",
"411 37 OFFCURVE",
"412 38 CURVE SMOOTH",
"456 105 OFFCURVE",
"490 156 OFFCURVE",
"514 192 CURVE SMOOTH",
"538 227 OFFCURVE",
"552 248 OFFCURVE",
"555 255 CURVE",
"553 269 OFFCURVE",
"545 276 OFFCURVE",
"532 276 CURVE SMOOTH",
"508 276 OFFCURVE",
"465 256 OFFCURVE",
"405 209 CURVE SMOOTH",
"302 128 LINE",
"330 215 LINE SMOOTH",
"332 221 OFFCURVE",
"333 227 OFFCURVE",
"333 233 CURVE SMOOTH",
"333 253 OFFCURVE",
"326 263 OFFCURVE",
"311 263 CURVE SMOOTH",
"306 263 OFFCURVE",
"299 260 OFFCURVE",
"290 255 CURVE",
"104 129 LINE",
"107 134 OFFCURVE",
"117 147 OFFCURVE",
"133 167 CURVE SMOOTH",
"148 187 OFFCURVE",
"170 215 OFFCURVE",
"199 251 CURVE",
"206 256 OFFCURVE",
"211 261 OFFCURVE",
"214 268 CURVE SMOOTH",
"217 275 OFFCURVE",
"216 278 OFFCURVE",
"213 278 CURVE SMOOTH",
"212 278 OFFCURVE",
"210 277 OFFCURVE",
"207 275 CURVE",
"166 262 OFFCURVE",
"144 252 OFFCURVE",
"140 243 CURVE SMOOTH",
"129 218 OFFCURVE",
"110 188 OFFCURVE",
"83 151 CURVE SMOOTH",
"64 123 OFFCURVE",
"48 100 OFFCURVE",
"35 82 CURVE SMOOTH",
"22 64 OFFCURVE",
"13 51 OFFCURVE",
"8 42 CURVE SMOOTH",
"2 33 OFFCURVE",
"-1 24 OFFCURVE",
"-1 17 CURVE SMOOTH",
"-1 11 OFFCURVE",
"2 8 OFFCURVE",
"7 8 CURVE SMOOTH",
"9 8 LINE SMOOTH",
"14 8 OFFCURVE",
"24 14 OFFCURVE",
"39 27 CURVE SMOOTH",
"55 40 OFFCURVE",
"64 48 OFFCURVE",
"67 52 CURVE SMOOTH",
"78 69 OFFCURVE",
"110 98 OFFCURVE",
"163 140 CURVE SMOOTH",
"220 186 OFFCURVE",
"256 209 OFFCURVE",
"273 209 CURVE SMOOTH",
"278 209 OFFCURVE",
"280 206 OFFCURVE",
"280 201 CURVE SMOOTH",
"280 197 OFFCURVE",
"279 193 OFFCURVE",
"277 188 CURVE SMOOTH",
"262 154 OFFCURVE",
"251 127 OFFCURVE",
"243 107 CURVE SMOOTH",
"227 67 LINE SMOOTH",
"225 61 OFFCURVE",
"223 55 OFFCURVE",
"223 49 CURVE SMOOTH",
"223 42 OFFCURVE",
"226 39 OFFCURVE",
"231 39 CURVE SMOOTH",
"244 39 OFFCURVE",
"273 58 OFFCURVE",
"279 67 CURVE SMOOTH",
"290 81 OFFCURVE",
"319 108 OFFCURVE",
"367 148 CURVE SMOOTH",
"418 191 OFFCURVE",
"450 212 OFFCURVE",
"461 212 CURVE SMOOTH",
"464 212 OFFCURVE",
"465 211 OFFCURVE",
"465 208 CURVE SMOOTH",
"465 205 OFFCURVE",
"463 200 OFFCURVE",
"459 193 CURVE SMOOTH",
"344 -6 LINE",
"341 -13 OFFCURVE",
"364 -24 OFFCURVE",
"372 -24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0129 16 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01274 16 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01282 16 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 527;
}
);
leftKerningGroup = n;
note = m;
rightKerningGroup = n;
unicode = 006D;
},
{
color = 3;
glyphname = n;
lastChange = "2022-03-22 13:40:52 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{114, 0}";
},
{
name = top;
position = "{272, 245}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"8 -1 OFFCURVE",
"12 -1 OFFCURVE",
"16 0 CURVE SMOOTH",
"30 3 OFFCURVE",
"41 8 OFFCURVE",
"49 15 CURVE SMOOTH",
"120 84 LINE SMOOTH",
"149 112 OFFCURVE",
"191 145 OFFCURVE",
"245 183 CURVE SMOOTH",
"254 190 OFFCURVE",
"261 193 OFFCURVE",
"268 193 CURVE SMOOTH",
"273 193 OFFCURVE",
"275 191 OFFCURVE",
"275 186 CURVE SMOOTH",
"275 181 OFFCURVE",
"274 177 OFFCURVE",
"271 172 CURVE SMOOTH",
"248 123 OFFCURVE",
"237 88 OFFCURVE",
"237 67 CURVE SMOOTH",
"237 40 OFFCURVE",
"250 26 OFFCURVE",
"276 26 CURVE SMOOTH",
"293 26 OFFCURVE",
"318 33 OFFCURVE",
"353 46 CURVE SMOOTH",
"388 60 OFFCURVE",
"410 72 OFFCURVE",
"419 83 CURVE SMOOTH",
"425 90 OFFCURVE",
"428 94 OFFCURVE",
"428 97 CURVE SMOOTH",
"428 100 OFFCURVE",
"426 101 OFFCURVE",
"423 101 CURVE SMOOTH",
"417 101 OFFCURVE",
"411 99 OFFCURVE",
"405 95 CURVE SMOOTH",
"381 78 OFFCURVE",
"351 66 OFFCURVE",
"316 57 CURVE SMOOTH",
"300 53 OFFCURVE",
"292 63 OFFCURVE",
"292 88 CURVE SMOOTH",
"292 106 OFFCURVE",
"295 126 OFFCURVE",
"302 148 CURVE SMOOTH",
"309 171 OFFCURVE",
"316 186 OFFCURVE",
"323 194 CURVE SMOOTH",
"337 211 OFFCURVE",
"344 224 OFFCURVE",
"344 233 CURVE SMOOTH",
"344 241 OFFCURVE",
"339 245 OFFCURVE",
"328 245 CURVE SMOOTH",
"309 245 OFFCURVE",
"292 239 OFFCURVE",
"276 227 CURVE SMOOTH",
"82 86 LINE",
"81 87 OFFCURVE",
"81 88 OFFCURVE",
"81 90 CURVE SMOOTH",
"81 103 OFFCURVE",
"95 127 OFFCURVE",
"124 164 CURVE SMOOTH",
"145 192 OFFCURVE",
"165 214 OFFCURVE",
"182 233 CURVE",
"185 238 LINE",
"185 241 OFFCURVE",
"182 242 OFFCURVE",
"177 242 CURVE SMOOTH",
"156 242 OFFCURVE",
"141 236 OFFCURVE",
"132 223 CURVE",
"96 186 LINE",
"95 184 OFFCURVE",
"96 182 OFFCURVE",
"98 180 CURVE",
"99 178 OFFCURVE",
"99 176 OFFCURVE",
"98 174 CURVE SMOOTH",
"41 86 OFFCURVE",
"10 39 OFFCURVE",
"5 33 CURVE SMOOTH",
"-3 22 OFFCURVE",
"-7 13 OFFCURVE",
"-7 8 CURVE SMOOTH",
"-7 2 OFFCURVE",
"-3 -1 OFFCURVE",
"5 -1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01252 1070 6 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 6 218 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01244 4 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01241 4 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 367;
}
);
leftKerningGroup = n;
note = n;
rightKerningGroup = n;
unicode = 006E;
},
{
glyphname = nacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 22, -55}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = n;
rightKerningGroup = n;
unicode = 0144;
},
{
glyphname = ncaron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 22, -55}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = n;
rightKerningGroup = n;
unicode = 0148;
},
{
glyphname = ncommaaccent;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -136, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = n;
rightKerningGroup = n;
unicode = 0146;
},
{
glyphname = eng;
lastChange = "2022-03-21 20:29:16 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"314 242 OFFCURVE",
"371 338 OFFCURVE",
"482 551 CURVE",
"520 536 LINE",
"487 464 OFFCURVE",
"371 270 OFFCURVE",
"308 157 CURVE SMOOTH",
"308 156 OFFCURVE",
"307 156 OFFCURVE",
"307 155 CURVE",
"266 163 LINE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-51 -318 OFFCURVE",
"-42 -316 OFFCURVE",
"-36 -312 CURVE SMOOTH",
"64 -243 OFFCURVE",
"202 -30 OFFCURVE",
"262 75 CURVE SMOOTH",
"307 156 OFFCURVE",
"319 175 OFFCURVE",
"328 194 CURVE SMOOTH",
"337 213 OFFCURVE",
"344 224 OFFCURVE",
"344 233 CURVE SMOOTH",
"344 241 OFFCURVE",
"339 245 OFFCURVE",
"328 245 CURVE SMOOTH",
"309 245 OFFCURVE",
"292 239 OFFCURVE",
"276 227 CURVE SMOOTH",
"82 86 LINE",
"81 87 OFFCURVE",
"81 88 OFFCURVE",
"81 90 CURVE SMOOTH",
"81 103 OFFCURVE",
"95 127 OFFCURVE",
"124 164 CURVE SMOOTH",
"145 192 OFFCURVE",
"165 214 OFFCURVE",
"182 233 CURVE",
"185 238 LINE",
"185 241 OFFCURVE",
"182 242 OFFCURVE",
"177 242 CURVE SMOOTH",
"156 242 OFFCURVE",
"141 236 OFFCURVE",
"132 223 CURVE",
"96 186 LINE",
"95 184 OFFCURVE",
"96 182 OFFCURVE",
"98 180 CURVE",
"99 178 OFFCURVE",
"99 176 OFFCURVE",
"98 174 CURVE SMOOTH",
"41 86 OFFCURVE",
"10 39 OFFCURVE",
"5 33 CURVE SMOOTH",
"-3 22 OFFCURVE",
"-7 13 OFFCURVE",
"-7 8 CURVE SMOOTH",
"-7 2 OFFCURVE",
"-3 -1 OFFCURVE",
"5 -1 CURVE SMOOTH",
"8 -1 OFFCURVE",
"12 -1 OFFCURVE",
"16 0 CURVE SMOOTH",
"30 3 OFFCURVE",
"41 8 OFFCURVE",
"49 15 CURVE SMOOTH",
"120 84 LINE SMOOTH",
"149 112 OFFCURVE",
"191 145 OFFCURVE",
"245 183 CURVE SMOOTH",
"254 190 OFFCURVE",
"261 193 OFFCURVE",
"268 193 CURVE SMOOTH",
"273 193 OFFCURVE",
"275 191 OFFCURVE",
"275 186 CURVE SMOOTH",
"275 181 OFFCURVE",
"274 177 OFFCURVE",
"271 172 CURVE SMOOTH",
"255 145 OFFCURVE",
"228 98 OFFCURVE",
"151 -28 CURVE SMOOTH",
"107 -99 OFFCURVE",
"26 -211 OFFCURVE",
"-67 -282 CURVE SMOOTH",
"-75 -289 OFFCURVE",
"-82 -292 OFFCURVE",
"-86 -292 CURVE SMOOTH",
"-90 -292 OFFCURVE",
"-93 -290 OFFCURVE",
"-96 -286 CURVE SMOOTH",
"-101 -278 OFFCURVE",
"-103 -264 OFFCURVE",
"-103 -245 CURVE SMOOTH",
"-103 -233 OFFCURVE",
"-102 -218 OFFCURVE",
"-100 -201 CURVE SMOOTH",
"-96 -169 OFFCURVE",
"-90 -139 OFFCURVE",
"-82 -111 CURVE SMOOTH",
"-81 -106 OFFCURVE",
"-81 -103 OFFCURVE",
"-83 -100 CURVE",
"-83 -98 OFFCURVE",
"-87 -98 OFFCURVE",
"-92 -101 CURVE SMOOTH",
"-98 -105 OFFCURVE",
"-102 -111 OFFCURVE",
"-105 -120 CURVE SMOOTH",
"-126 -181 OFFCURVE",
"-136 -226 OFFCURVE",
"-136 -256 CURVE SMOOTH",
"-136 -271 OFFCURVE",
"-134 -282 OFFCURVE",
"-129 -290 CURVE SMOOTH",
"-121 -303 OFFCURVE",
"-106 -312 OFFCURVE",
"-85 -316 CURVE SMOOTH",
"-76 -318 OFFCURVE",
"-68 -318 OFFCURVE",
"-61 -318 CURVE SMOOTH"
);
}
);
width = 367;
}
);
leftKerningGroup = n;
rightKerningGroup = n;
unicode = 014B;
},
{
glyphname = nj;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = j;
transform = "{1, 0, 0, 1, 367, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 667;
}
);
leftKerningGroup = n;
rightKerningGroup = j;
unicode = 01CC;
},
{
glyphname = ntilde;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 22, -55}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
leftKerningGroup = n;
rightKerningGroup = n;
unicode = 00F1;
},
{
color = 3;
glyphname = o;
lastChange = "2022-03-22 13:50:09 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{-5, 9}";
},
{
name = center;
position = "{164, 150}";
},
{
name = horn;
position = "{323, 278}";
},
{
name = ogonek;
position = "{93, 10}";
},
{
name = top;
position = "{301, 293}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"54 -1 OFFCURVE",
"66 1 OFFCURVE",
"79 5 CURVE SMOOTH",
"126 18 OFFCURVE",
"179 47 OFFCURVE",
"237 91 CURVE SMOOTH",
"262 110 OFFCURVE",
"286 134 OFFCURVE",
"307 162 CURVE SMOOTH",
"332 195 OFFCURVE",
"345 223 OFFCURVE",
"345 244 CURVE SMOOTH",
"345 247 OFFCURVE",
"344 252 OFFCURVE",
"343 257 CURVE",
"354 257 OFFCURVE",
"367 258 OFFCURVE",
"381 260 CURVE SMOOTH",
"392 261 OFFCURVE",
"398 265 OFFCURVE",
"398 270 CURVE SMOOTH",
"398 275 OFFCURVE",
"392 278 OFFCURVE",
"381 278 CURVE SMOOTH",
"275 277 LINE",
"268 280 OFFCURVE",
"257 286 OFFCURVE",
"242 294 CURVE SMOOTH",
"231 299 OFFCURVE",
"223 303 OFFCURVE",
"215 303 CURVE SMOOTH",
"208 303 OFFCURVE",
"201 301 OFFCURVE",
"193 296 CURVE SMOOTH",
"184 290 OFFCURVE",
"175 285 OFFCURVE",
"167 280 CURVE",
"142 274 OFFCURVE",
"125 271 OFFCURVE",
"114 271 CURVE SMOOTH",
"103 271 OFFCURVE",
"97 267 OFFCURVE",
"97 259 CURVE SMOOTH",
"97 252 OFFCURVE",
"101 248 OFFCURVE",
"110 245 CURVE SMOOTH",
"124 240 OFFCURVE",
"130 238 OFFCURVE",
"128 238 CURVE",
"101 207 OFFCURVE",
"81 181 OFFCURVE",
"66 162 CURVE SMOOTH",
"28 118 OFFCURVE",
"9 76 OFFCURVE",
"9 37 CURVE SMOOTH",
"9 12 OFFCURVE",
"21 -1 OFFCURVE",
"45 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"45 23 OFFCURVE",
"40 29 OFFCURVE",
"40 40 CURVE SMOOTH",
"40 42 LINE SMOOTH",
"40 53 OFFCURVE",
"49 71 OFFCURVE",
"65 97 CURVE SMOOTH",
"78 119 OFFCURVE",
"91 137 OFFCURVE",
"104 152 CURVE SMOOTH",
"141 195 OFFCURVE",
"170 225 OFFCURVE",
"190 240 CURVE",
"204 247 OFFCURVE",
"225 252 OFFCURVE",
"254 252 CURVE SMOOTH",
"299 252 LINE",
"304 247 OFFCURVE",
"306 241 OFFCURVE",
"306 233 CURVE SMOOTH",
"306 216 OFFCURVE",
"295 193 OFFCURVE",
"273 165 CURVE SMOOTH",
"254 142 OFFCURVE",
"235 122 OFFCURVE",
"215 107 CURVE SMOOTH",
"161 66 OFFCURVE",
"111 38 OFFCURVE",
"66 25 CURVE SMOOTH",
"61 24 OFFCURVE",
"57 23 OFFCURVE",
"55 23 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01212 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01234 1063 40 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 327;
}
);
leftKerningGroup = o;
note = o;
rightKerningGroup = o;
unicode = 006F;
},
{
glyphname = oacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 00F3;
},
{
glyphname = obreve;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 014F;
},
{
color = 9;
glyphname = ocaron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 01D2;
},
{
glyphname = ocircumflex;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 00F4;
},
{
glyphname = ocircumflexacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ED1;
},
{
glyphname = ocircumflexdotbelow;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -255, 9}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ED9;
},
{
glyphname = ocircumflexgrave;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ED3;
},
{
glyphname = ocircumflexhookabove;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ED5;
},
{
glyphname = ocircumflextilde;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ED7;
},
{
glyphname = odblgrave;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 020D;
},
{
glyphname = odieresis;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 00F6;
},
{
glyphname = odieresismacron;
lastChange = "2022-03-25 01:03:24 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 51, -7}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 80, 107}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 022B;
},
{
glyphname = odotaccentmacron;
lastChange = "2022-03-25 01:02:23 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 51, -7}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 61, 108}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 0231;
},
{
glyphname = odotbelow;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -255, 9}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ECD;
},
{
glyphname = ograve;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 00F2;
},
{
glyphname = ohookabove;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ECF;
},
{
color = 3;
glyphname = ohorn;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{291, 293}";
}
);
components = (
{
name = o;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 73, -22}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 01A1;
},
{
glyphname = ohornacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 41, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1EDB;
},
{
glyphname = ohorndotbelow;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -255, 9}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1EE3;
},
{
glyphname = ohorngrave;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 41, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1EDD;
},
{
glyphname = ohornhookabove;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 41, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1EDF;
},
{
glyphname = ohorntilde;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 41, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1EE1;
},
{
glyphname = ohungarumlaut;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 0151;
},
{
glyphname = oinvertedbreve;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 020F;
},
{
glyphname = omacron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 014D;
},
{
glyphname = oogonek;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, -157, 10}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 01EB;
},
{
color = 3;
glyphname = oslash;
lastChange = "2022-03-21 20:31:58 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{271, 293}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-49 -157 OFFCURVE",
"-42 -154 OFFCURVE",
"-33 -147 CURVE SMOOTH",
"-24 -141 OFFCURVE",
"-19 -136 OFFCURVE",
"-19 -131 CURVE SMOOTH",
"-17 -117 OFFCURVE",
"-7 -95 OFFCURVE",
"11 -66 CURVE SMOOTH",
"24 -45 OFFCURVE",
"39 -23 OFFCURVE",
"58 0 CURVE",
"61 1 OFFCURVE",
"65 1 OFFCURVE",
"68 2 CURVE SMOOTH",
"79 5 LINE SMOOTH",
"126 18 OFFCURVE",
"179 47 OFFCURVE",
"237 91 CURVE SMOOTH",
"262 110 OFFCURVE",
"286 134 OFFCURVE",
"307 162 CURVE SMOOTH",
"332 195 OFFCURVE",
"345 223 OFFCURVE",
"345 244 CURVE SMOOTH",
"345 247 OFFCURVE",
"344 252 OFFCURVE",
"343 257 CURVE",
"354 257 OFFCURVE",
"367 258 OFFCURVE",
"381 260 CURVE SMOOTH",
"392 261 OFFCURVE",
"398 265 OFFCURVE",
"398 270 CURVE SMOOTH",
"398 275 OFFCURVE",
"392 278 OFFCURVE",
"381 278 CURVE SMOOTH",
"310 277 LINE",
"393 365 LINE SMOOTH",
"413 386 OFFCURVE",
"426 400 OFFCURVE",
"431 406 CURVE SMOOTH",
"433 409 OFFCURVE",
"432 411 OFFCURVE",
"427 411 CURVE SMOOTH",
"411 411 OFFCURVE",
"391 397 OFFCURVE",
"367 370 CURVE SMOOTH",
"282 277 LINE",
"275 277 LINE",
"268 280 OFFCURVE",
"257 286 OFFCURVE",
"242 294 CURVE SMOOTH",
"231 299 OFFCURVE",
"223 303 OFFCURVE",
"215 303 CURVE SMOOTH",
"208 303 OFFCURVE",
"201 301 OFFCURVE",
"193 296 CURVE SMOOTH",
"184 290 OFFCURVE",
"175 285 OFFCURVE",
"167 280 CURVE",
"142 274 OFFCURVE",
"125 271 OFFCURVE",
"114 271 CURVE SMOOTH",
"103 271 OFFCURVE",
"97 267 OFFCURVE",
"97 259 CURVE SMOOTH",
"97 252 OFFCURVE",
"101 248 OFFCURVE",
"110 245 CURVE SMOOTH",
"124 240 OFFCURVE",
"130 238 OFFCURVE",
"128 238 CURVE",
"101 207 OFFCURVE",
"81 181 OFFCURVE",
"66 162 CURVE SMOOTH",
"28 118 OFFCURVE",
"9 76 OFFCURVE",
"9 37 CURVE SMOOTH",
"9 16 OFFCURVE",
"17 4 OFFCURVE",
"33 0 CURVE",
"6 -32 OFFCURVE",
"-14 -59 OFFCURVE",
"-29 -82 CURVE SMOOTH",
"-48 -111 OFFCURVE",
"-58 -135 OFFCURVE",
"-61 -152 CURVE",
"-61 -155 OFFCURVE",
"-59 -157 OFFCURVE",
"-56 -157 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"44 24 OFFCURVE",
"40 29 OFFCURVE",
"40 40 CURVE SMOOTH",
"40 42 LINE SMOOTH",
"40 53 OFFCURVE",
"49 71 OFFCURVE",
"65 97 CURVE SMOOTH",
"78 119 OFFCURVE",
"91 137 OFFCURVE",
"104 152 CURVE SMOOTH",
"141 195 OFFCURVE",
"170 225 OFFCURVE",
"190 240 CURVE",
"204 247 OFFCURVE",
"225 252 OFFCURVE",
"254 252 CURVE SMOOTH",
"259 252 LINE",
"160 144 LINE SMOOTH",
"139 121 OFFCURVE",
"119 99 OFFCURVE",
"102 79 CURVE SMOOTH",
"52 23 LINE"
);
},
{
closed = 1;
nodes = (
"119 74 OFFCURVE",
"162 123 OFFCURVE",
"213 176 CURVE SMOOTH",
"286 252 LINE",
"299 252 LINE",
"304 247 OFFCURVE",
"306 241 OFFCURVE",
"306 233 CURVE SMOOTH",
"306 216 OFFCURVE",
"295 193 OFFCURVE",
"273 165 CURVE SMOOTH",
"254 142 OFFCURVE",
"235 122 OFFCURVE",
"215 107 CURVE SMOOTH",
"167 70 OFFCURVE",
"123 45 OFFCURVE",
"83 30 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01260 1063 82 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01238 30 64 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01279 30 64 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01286 30 64 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 327;
}
);
leftKerningGroup = o;
note = oslash;
rightKerningGroup = o;
unicode = 00F8;
},
{
glyphname = oslashacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 21, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 01FF;
},
{
glyphname = otilde;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 00F5;
},
{
glyphname = otildemacron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb_macroncomb;
transform = "{1, 0, 0, 1, 51, -7}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 022D;
},
{
glyphname = oe;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"308 -5 OFFCURVE",
"337 5 OFFCURVE",
"377 24 CURVE SMOOTH",
"409 41 OFFCURVE",
"435 56 OFFCURVE",
"455 71 CURVE SMOOTH",
"461 76 OFFCURVE",
"464 80 OFFCURVE",
"465 84 CURVE SMOOTH",
"465 87 OFFCURVE",
"463 89 OFFCURVE",
"459 89 CURVE SMOOTH",
"455 89 OFFCURVE",
"450 87 OFFCURVE",
"445 84 CURVE SMOOTH",
"431 73 OFFCURVE",
"405 60 OFFCURVE",
"366 45 CURVE SMOOTH",
"326 29 OFFCURVE",
"297 21 OFFCURVE",
"279 21 CURVE SMOOTH",
"261 21 OFFCURVE",
"252 32 OFFCURVE",
"252 54 CURVE SMOOTH",
"252 63 OFFCURVE",
"255 74 OFFCURVE",
"260 86 CURVE SMOOTH",
"267 101 OFFCURVE",
"278 116 OFFCURVE",
"291 135 CURVE",
"298 134 OFFCURVE",
"304 133 OFFCURVE",
"311 133 CURVE SMOOTH",
"346 133 OFFCURVE",
"386 147 OFFCURVE",
"432 175 CURVE SMOOTH",
"483 206 OFFCURVE",
"509 238 OFFCURVE",
"509 270 CURVE SMOOTH",
"509 287 OFFCURVE",
"497 297 OFFCURVE",
"472 301 CURVE",
"469 302 OFFCURVE",
"452 297 OFFCURVE",
"420 286 CURVE SMOOTH",
"370 268 LINE",
"345 245 LINE",
"340 260 OFFCURVE",
"318 279 OFFCURVE",
"275 277 CURVE",
"268 280 OFFCURVE",
"257 286 OFFCURVE",
"242 294 CURVE SMOOTH",
"231 299 OFFCURVE",
"223 303 OFFCURVE",
"215 303 CURVE SMOOTH",
"208 303 OFFCURVE",
"201 301 OFFCURVE",
"193 296 CURVE SMOOTH",
"184 290 OFFCURVE",
"175 285 OFFCURVE",
"167 280 CURVE",
"142 274 OFFCURVE",
"125 271 OFFCURVE",
"114 271 CURVE SMOOTH",
"103 271 OFFCURVE",
"97 267 OFFCURVE",
"97 259 CURVE SMOOTH",
"97 252 OFFCURVE",
"101 248 OFFCURVE",
"110 245 CURVE SMOOTH",
"124 240 OFFCURVE",
"130 238 OFFCURVE",
"128 238 CURVE",
"101 207 OFFCURVE",
"81 181 OFFCURVE",
"66 162 CURVE SMOOTH",
"28 118 OFFCURVE",
"9 76 OFFCURVE",
"9 37 CURVE SMOOTH",
"9 12 OFFCURVE",
"21 -1 OFFCURVE",
"45 -1 CURVE SMOOTH",
"54 -1 OFFCURVE",
"66 1 OFFCURVE",
"79 5 CURVE SMOOTH",
"123 17 OFFCURVE",
"168 42 OFFCURVE",
"219 78 CURVE",
"219 76 LINE",
"218 75 OFFCURVE",
"218 75 OFFCURVE",
"218 74 CURVE",
"215 64 OFFCURVE",
"213 56 OFFCURVE",
"213 49 CURVE SMOOTH",
"213 20 OFFCURVE",
"248 -5 OFFCURVE",
"289 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"45 23 OFFCURVE",
"40 29 OFFCURVE",
"40 40 CURVE SMOOTH",
"40 42 LINE SMOOTH",
"41 53 OFFCURVE",
"49 71 OFFCURVE",
"65 97 CURVE SMOOTH",
"78 119 OFFCURVE",
"91 137 OFFCURVE",
"104 152 CURVE SMOOTH",
"141 195 OFFCURVE",
"170 225 OFFCURVE",
"190 240 CURVE",
"204 247 OFFCURVE",
"225 251 OFFCURVE",
"254 252 CURVE SMOOTH",
"299 252 LINE",
"304 247 OFFCURVE",
"306 241 OFFCURVE",
"306 233 CURVE SMOOTH",
"306 219 OFFCURVE",
"300 203 OFFCURVE",
"287 184 CURVE",
"275 171 OFFCURVE",
"265 158 OFFCURVE",
"256 145 CURVE SMOOTH",
"243 130 OFFCURVE",
"229 117 OFFCURVE",
"215 107 CURVE SMOOTH",
"161 66 OFFCURVE",
"111 38 OFFCURVE",
"66 25 CURVE SMOOTH",
"61 24 OFFCURVE",
"57 23 OFFCURVE",
"55 23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"331 155 OFFCURVE",
"321 158 OFFCURVE",
"314 165 CURVE",
"371 241 OFFCURVE",
"414 277 OFFCURVE",
"443 272 CURVE SMOOTH",
"452 271 OFFCURVE",
"456 266 OFFCURVE",
"456 257 CURVE SMOOTH",
"456 240 OFFCURVE",
"443 219 OFFCURVE",
"418 194 CURVE SMOOTH",
"391 168 OFFCURVE",
"365 155 OFFCURVE",
"342 155 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0128 40 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01271 1070 107 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 8 22 8 38 8 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 8 69 8 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01228 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01233 40 8 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012202 107 218 107 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 107 121 107 137 107 153 107 169 107 185 107 201 107 217 107 233 107 249 107 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 107 25 107 41 107 57 107 73 107 89 107 105 107 121 107 137 107 153 107 169 107 185 107 201 107 217 107 233 107 249 107 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 107 25 107 41 107 57 107 73 107 89 107 105 107 121 107 137 107 153 107 169 107 185 107 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01225 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01238 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01260 1063 76 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012103 1061 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01210 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 10 214 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 463;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = p;
lastChange = "2022-03-22 13:52:53 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-147 -282 OFFCURVE",
"-140 -273 OFFCURVE",
"-136 -256 CURVE SMOOTH",
"-129 -226 OFFCURVE",
"-102 -175 OFFCURVE",
"-56 -102 CURVE SMOOTH",
"8 -1 OFFCURVE",
"76 101 OFFCURVE",
"148 208 CURVE",
"163 217 OFFCURVE",
"176 224 OFFCURVE",
"186 229 CURVE SMOOTH",
"196 234 OFFCURVE",
"203 237 OFFCURVE",
"208 239 CURVE SMOOTH",
"230 248 OFFCURVE",
"255 252 OFFCURVE",
"282 252 CURVE SMOOTH",
"303 252 OFFCURVE",
"314 241 OFFCURVE",
"314 218 CURVE SMOOTH",
"314 178 OFFCURVE",
"301 147 OFFCURVE",
"275 124 CURVE",
"250 117 OFFCURVE",
"231 111 OFFCURVE",
"217 106 CURVE SMOOTH",
"172 91 OFFCURVE",
"132 77 OFFCURVE",
"95 61 CURVE SMOOTH",
"78 54 OFFCURVE",
"69 46 OFFCURVE",
"69 37 CURVE SMOOTH",
"69 30 OFFCURVE",
"77 27 OFFCURVE",
"93 27 CURVE SMOOTH",
"123 27 OFFCURVE",
"159 35 OFFCURVE",
"200 52 CURVE SMOOTH",
"238 67 OFFCURVE",
"270 85 OFFCURVE",
"296 105 CURVE",
"420 137 LINE",
"437 139 OFFCURVE",
"445 144 OFFCURVE",
"445 151 CURVE SMOOTH",
"445 154 OFFCURVE",
"441 154 OFFCURVE",
"434 153 CURVE SMOOTH",
"413 150 OFFCURVE",
"394 147 OFFCURVE",
"377 144 CURVE SMOOTH",
"360 141 OFFCURVE",
"346 139 OFFCURVE",
"333 138 CURVE",
"346 157 OFFCURVE",
"354 176 OFFCURVE",
"357 195 CURVE SMOOTH",
"358 202 OFFCURVE",
"359 209 OFFCURVE",
"359 216 CURVE SMOOTH",
"359 258 OFFCURVE",
"333 279 OFFCURVE",
"280 279 CURVE SMOOTH",
"255 279 OFFCURVE",
"220 270 OFFCURVE",
"176 251 CURVE",
"220 316 LINE SMOOTH",
"268 382 OFFCURVE",
"300 422 OFFCURVE",
"317 435 CURVE SMOOTH",
"320 437 OFFCURVE",
"321 439 OFFCURVE",
"321 440 CURVE SMOOTH",
"321 443 OFFCURVE",
"317 444 OFFCURVE",
"308 444 CURVE SMOOTH",
"290 444 OFFCURVE",
"276 440 OFFCURVE",
"265 432 CURVE SMOOTH",
"248 419 OFFCURVE",
"225 390 OFFCURVE",
"195 346 CURVE SMOOTH",
"123 236 LINE",
"80 216 LINE SMOOTH",
"72 212 OFFCURVE",
"68 206 OFFCURVE",
"68 199 CURVE SMOOTH",
"68 192 OFFCURVE",
"72 189 OFFCURVE",
"79 189 CURVE SMOOTH",
"82 189 OFFCURVE",
"86 190 OFFCURVE",
"90 191 CURVE",
"67 155 OFFCURVE",
"50 127 OFFCURVE",
"37 106 CURVE SMOOTH",
"13 67 LINE SMOOTH",
"-102 -119 OFFCURVE",
"-160 -232 OFFCURVE",
"-161 -272 CURVE SMOOTH",
"-161 -279 OFFCURVE",
"-159 -282 OFFCURVE",
"-156 -282 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 1070 21 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 21 218 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01268 21 63 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 1073 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01252 23 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01261 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 357;
}
);
note = p;
unicode = 0070;
},
{
glyphname = thorn;
lastChange = "2022-03-21 20:33:04 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"77 89 OFFCURVE",
"137 178 OFFCURVE",
"229 316 CURVE SMOOTH",
"275 384 OFFCURVE",
"309 422 OFFCURVE",
"326 435 CURVE SMOOTH",
"329 437 OFFCURVE",
"330 439 OFFCURVE",
"330 440 CURVE SMOOTH",
"330 443 OFFCURVE",
"326 444 OFFCURVE",
"317 444 CURVE SMOOTH",
"299 444 OFFCURVE",
"285 440 OFFCURVE",
"274 432 CURVE SMOOTH",
"257 419 OFFCURVE",
"233 391 OFFCURVE",
"204 346 CURVE SMOOTH",
"132 236 LINE SMOOTH",
"68 144 OFFCURVE",
"121 228 OFFCURVE",
"46 106 CURVE SMOOTH",
"22 67 LINE SMOOTH",
"17 58 OFFCURVE",
"12 50 OFFCURVE",
"6 42 CURVE",
"34 23 LINE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-138 -282 OFFCURVE",
"-131 -273 OFFCURVE",
"-127 -256 CURVE SMOOTH",
"-120 -226 OFFCURVE",
"-93 -175 OFFCURVE",
"-47 -102 CURVE SMOOTH",
"-30 -76 OFFCURVE",
"-13 -50 OFFCURVE",
"7 -18 CURVE",
"11 -19 OFFCURVE",
"14 -19 OFFCURVE",
"18 -19 CURVE SMOOTH",
"59 -19 OFFCURVE",
"121 11 OFFCURVE",
"202 70 CURVE SMOOTH",
"244 100 OFFCURVE",
"280 136 OFFCURVE",
"311 177 CURVE SMOOTH",
"341 217 OFFCURVE",
"356 248 OFFCURVE",
"356 269 CURVE SMOOTH",
"356 284 OFFCURVE",
"349 291 OFFCURVE",
"334 291 CURVE SMOOTH",
"331 291 OFFCURVE",
"328 291 OFFCURVE",
"324 290 CURVE SMOOTH",
"259 279 OFFCURVE",
"212 262 OFFCURVE",
"182 241 CURVE",
"181 244 OFFCURVE",
"180 246 OFFCURVE",
"180 248 CURVE SMOOTH",
"180 254 OFFCURVE",
"187 268 OFFCURVE",
"200 289 CURVE SMOOTH",
"253 370 OFFCURVE",
"291 424 OFFCURVE",
"314 451 CURVE SMOOTH",
"337 477 OFFCURVE",
"358 492 OFFCURVE",
"377 495 CURVE SMOOTH",
"390 497 OFFCURVE",
"396 501 OFFCURVE",
"396 507 CURVE SMOOTH",
"396 512 OFFCURVE",
"392 515 OFFCURVE",
"384 515 CURVE SMOOTH",
"376 515 OFFCURVE",
"361 510 OFFCURVE",
"338 500 CURVE SMOOTH",
"315 491 OFFCURVE",
"301 484 OFFCURVE",
"297 479 CURVE SMOOTH",
"284 463 OFFCURVE",
"264 437 OFFCURVE",
"238 400 CURVE SMOOTH",
"212 363 OFFCURVE",
"180 316 OFFCURVE",
"141 258 CURVE SMOOTH",
"102 200 OFFCURVE",
"71 152 OFFCURVE",
"48 115 CURVE SMOOTH",
"25 78 OFFCURVE",
"8 50 OFFCURVE",
"-1 33 CURVE SMOOTH",
"-3 30 OFFCURVE",
"-4 27 OFFCURVE",
"-5 24 CURVE",
"-102 -136 OFFCURVE",
"-151 -235 OFFCURVE",
"-152 -272 CURVE SMOOTH",
"-152 -279 OFFCURVE",
"-150 -282 OFFCURVE",
"-147 -282 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"58 37 OFFCURVE",
"53 39 OFFCURVE",
"50 44 CURVE SMOOTH",
"48 47 OFFCURVE",
"48 51 OFFCURVE",
"51 56 CURVE SMOOTH",
"78 100 OFFCURVE",
"102 137 OFFCURVE",
"124 166 CURVE SMOOTH",
"156 209 OFFCURVE",
"223 247 OFFCURVE",
"275 255 CURVE SMOOTH",
"285 256 OFFCURVE",
"291 248 OFFCURVE",
"291 236 CURVE SMOOTH",
"291 233 OFFCURVE",
"291 230 OFFCURVE",
"290 227 CURVE SMOOTH",
"278 178 OFFCURVE",
"250 136 OFFCURVE",
"205 99 CURVE SMOOTH",
"160 61 OFFCURVE",
"114 41 OFFCURVE",
"66 38 CURVE SMOOTH"
);
}
);
width = 305;
}
);
leftKerningGroup = b;
rightKerningGroup = b;
unicode = 00FE;
},
{
glyphname = q;
lastChange = "2022-03-22 13:40:30 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"84 -250 OFFCURVE",
"111 -232 OFFCURVE",
"150 -193 CURVE SMOOTH",
"183 -159 OFFCURVE",
"209 -127 OFFCURVE",
"229 -97 CURVE SMOOTH",
"250 -62 OFFCURVE",
"261 -33 OFFCURVE",
"261 -9 CURVE SMOOTH",
"261 10 OFFCURVE",
"255 24 OFFCURVE",
"242 34 CURVE",
"299 39 OFFCURVE",
"353 56 OFFCURVE",
"406 85 CURVE SMOOTH",
"412 88 OFFCURVE",
"417 92 OFFCURVE",
"420 97 CURVE SMOOTH",
"422 102 OFFCURVE",
"421 104 OFFCURVE",
"417 104 CURVE SMOOTH",
"415 104 OFFCURVE",
"412 103 OFFCURVE",
"407 100 CURVE SMOOTH",
"372 81 OFFCURVE",
"322 68 OFFCURVE",
"259 61 CURVE",
"304 129 OFFCURVE",
"337 179 OFFCURVE",
"357 212 CURVE SMOOTH",
"364 224 OFFCURVE",
"374 236 OFFCURVE",
"385 249 CURVE SMOOTH",
"396 261 OFFCURVE",
"409 278 OFFCURVE",
"422 300 CURVE SMOOTH",
"424 304 LINE",
"424 307 OFFCURVE",
"422 308 OFFCURVE",
"417 308 CURVE SMOOTH",
"402 308 OFFCURVE",
"387 302 OFFCURVE",
"370 290 CURVE",
"360 300 OFFCURVE",
"342 305 OFFCURVE",
"316 305 CURVE SMOOTH",
"273 305 OFFCURVE",
"219 277 OFFCURVE",
"152 221 CURVE SMOOTH",
"97 174 OFFCURVE",
"57 128 OFFCURVE",
"33 83 CURVE SMOOTH",
"24 64 OFFCURVE",
"19 48 OFFCURVE",
"19 34 CURVE SMOOTH",
"19 15 OFFCURVE",
"27 6 OFFCURVE",
"42 6 CURVE SMOOTH",
"49 6 OFFCURVE",
"58 9 OFFCURVE",
"70 14 CURVE SMOOTH",
"108 31 OFFCURVE",
"159 66 OFFCURVE",
"223 118 CURVE SMOOTH",
"237 130 OFFCURVE",
"248 140 OFFCURVE",
"257 147 CURVE SMOOTH",
"273 161 LINE",
"276 160 OFFCURVE",
"277 158 OFFCURVE",
"277 154 CURVE SMOOTH",
"277 147 OFFCURVE",
"271 133 OFFCURVE",
"258 114 CURVE SMOOTH",
"227 63 LINE",
"210 63 LINE SMOOTH",
"183 63 OFFCURVE",
"167 48 OFFCURVE",
"167 35 CURVE SMOOTH",
"167 32 OFFCURVE",
"168 29 OFFCURVE",
"170 27 CURVE SMOOTH",
"187 10 LINE",
"97 -110 OFFCURVE",
"52 -187 OFFCURVE",
"52 -220 CURVE SMOOTH",
"52 -233 OFFCURVE",
"58 -242 OFFCURVE",
"69 -245 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"91 -212 OFFCURVE",
"90 -210 OFFCURVE",
"90 -208 CURVE SMOOTH",
"90 -197 OFFCURVE",
"108 -160 OFFCURVE",
"144 -97 CURVE SMOOTH",
"167 -58 OFFCURVE",
"186 -28 OFFCURVE",
"201 -5 CURVE",
"210 -18 OFFCURVE",
"215 -29 OFFCURVE",
"215 -38 CURVE SMOOTH",
"215 -50 OFFCURVE",
"210 -64 OFFCURVE",
"200 -80 CURVE SMOOTH",
"183 -107 OFFCURVE",
"163 -135 OFFCURVE",
"142 -163 CURVE SMOOTH",
"115 -200 OFFCURVE",
"99 -216 OFFCURVE",
"92 -213 CURVE"
);
},
{
closed = 1;
nodes = (
"82 58 OFFCURVE",
"79 63 OFFCURVE",
"79 72 CURVE SMOOTH",
"79 81 OFFCURVE",
"83 92 OFFCURVE",
"92 105 CURVE SMOOTH",
"113 140 OFFCURVE",
"139 173 OFFCURVE",
"170 203 CURVE SMOOTH",
"223 254 OFFCURVE",
"269 279 OFFCURVE",
"308 279 CURVE SMOOTH",
"319 279 OFFCURVE",
"328 270 OFFCURVE",
"335 252 CURVE",
"298 212 OFFCURVE",
"258 174 OFFCURVE",
"214 139 CURVE SMOOTH",
"163 99 OFFCURVE",
"126 73 OFFCURVE",
"102 62 CURVE SMOOTH",
"97 59 OFFCURVE",
"92 58 OFFCURVE",
"89 58 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01270 1070 49 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0126 49 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 49 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 70 118 70 134 70 150 70 166 70 182 70 198 70 214 70 230 70 246 70 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 70 22 70 38 70 54 70 70 70 86 70 102 70 118 70 134 70 150 70 166 70 182 70 198 70 214 70 230 70 246 70 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 70 22 70 38 70 54 70 70 70 86 70 102 70 118 70 134 70 150 70 166 70 182 70 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 70 213 70 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01226 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01276 49 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01264 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 367;
}
);
leftKerningGroup = a;
note = q;
rightKerningGroup = q;
unicode = 0071;
},
{
color = 3;
glyphname = r;
lastChange = "2022-03-22 15:02:13 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{20, 0}";
},
{
name = top;
position = "{288, 268}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"10 4 OFFCURVE",
"19 8 OFFCURVE",
"32 15 CURVE SMOOTH",
"59 30 LINE",
"69 52 LINE",
"94 89 OFFCURVE",
"114 116 OFFCURVE",
"129 131 CURVE SMOOTH",
"208 204 OFFCURVE",
"276 241 OFFCURVE",
"333 241 CURVE SMOOTH",
"336 241 OFFCURVE",
"337 239 OFFCURVE",
"337 234 CURVE SMOOTH",
"337 231 LINE SMOOTH",
"337 226 OFFCURVE",
"336 223 OFFCURVE",
"336 221 CURVE SMOOTH",
"336 219 LINE",
"337 218 OFFCURVE",
"339 217 OFFCURVE",
"340 217 CURVE SMOOTH",
"351 217 OFFCURVE",
"361 245 OFFCURVE",
"361 264 CURVE SMOOTH",
"361 273 OFFCURVE",
"359 278 OFFCURVE",
"354 278 CURVE SMOOTH",
"316 278 OFFCURVE",
"273 261 OFFCURVE",
"224 227 CURVE",
"221 224 OFFCURVE",
"211 217 OFFCURVE",
"195 204 CURVE SMOOTH",
"129 149 LINE",
"156 193 OFFCURVE",
"180 231 OFFCURVE",
"203 262 CURVE SMOOTH",
"205 265 OFFCURVE",
"206 267 OFFCURVE",
"206 269 CURVE SMOOTH",
"206 271 OFFCURVE",
"204 272 OFFCURVE",
"201 272 CURVE SMOOTH",
"193 272 OFFCURVE",
"178 267 OFFCURVE",
"156 256 CURVE SMOOTH",
"133 246 OFFCURVE",
"121 239 OFFCURVE",
"120 236 CURVE",
"119 221 OFFCURVE",
"117 210 OFFCURVE",
"116 202 CURVE",
"103 173 OFFCURVE",
"91 151 OFFCURVE",
"80 136 CURVE",
"49 86 LINE SMOOTH",
"41 73 OFFCURVE",
"34 64 OFFCURVE",
"30 59 CURVE SMOOTH",
"14 35 LINE SMOOTH",
"9 28 OFFCURVE",
"4 21 OFFCURVE",
"1 16 CURVE",
"-1 9 LINE",
"-1 6 OFFCURVE",
"1 4 OFFCURVE",
"5 4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0120 1064 11 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 280;
}
);
leftKerningGroup = n;
note = r;
rightKerningGroup = r;
unicode = 0072;
},
{
glyphname = racute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 38, -32}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 280;
}
);
leftKerningGroup = n;
rightKerningGroup = r;
unicode = 0155;
},
{
glyphname = rcaron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 38, -32}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 280;
}
);
leftKerningGroup = n;
rightKerningGroup = r;
unicode = 0159;
},
{
glyphname = rcommaaccent;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -230, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 280;
}
);
leftKerningGroup = n;
rightKerningGroup = r;
unicode = 0157;
},
{
glyphname = rdblgrave;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 38, -32}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 280;
}
);
leftKerningGroup = n;
rightKerningGroup = r;
unicode = 0211;
},
{
glyphname = rinvertedbreve;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 38, -32}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 280;
}
);
leftKerningGroup = n;
rightKerningGroup = r;
unicode = 0213;
},
{
color = 3;
glyphname = s;
lastChange = "2022-03-22 13:53:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{76, 6}";
},
{
name = cedilla;
position = "{123, 13}";
},
{
name = top;
position = "{306, 300}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"130 9 OFFCURVE",
"168 15 OFFCURVE",
"187 27 CURVE",
"195 30 OFFCURVE",
"200 51 OFFCURVE",
"212 55 CURVE SMOOTH",
"220 58 OFFCURVE",
"224 62 OFFCURVE",
"224 69 CURVE SMOOTH",
"224 73 OFFCURVE",
"222 75 OFFCURVE",
"217 75 CURVE SMOOTH",
"214 75 OFFCURVE",
"211 74 OFFCURVE",
"207 72 CURVE",
"199 70 OFFCURVE",
"192 69 OFFCURVE",
"187 69 CURVE",
"186 70 OFFCURVE",
"183 75 OFFCURVE",
"178 84 CURVE SMOOTH",
"173 92 OFFCURVE",
"165 104 OFFCURVE",
"156 119 CURVE SMOOTH",
"141 142 OFFCURVE",
"133 160 OFFCURVE",
"133 171 CURVE SMOOTH",
"133 206 OFFCURVE",
"149 234 OFFCURVE",
"182 255 CURVE SMOOTH",
"209 272 OFFCURVE",
"240 281 OFFCURVE",
"275 281 CURVE SMOOTH",
"282 281 OFFCURVE",
"291 280 OFFCURVE",
"303 277 CURVE SMOOTH",
"315 274 OFFCURVE",
"324 272 OFFCURVE",
"330 272 CURVE",
"351 275 OFFCURVE",
"362 283 OFFCURVE",
"362 296 CURVE SMOOTH",
"362 309 OFFCURVE",
"347 316 OFFCURVE",
"317 316 CURVE SMOOTH",
"254 316 OFFCURVE",
"197 297 OFFCURVE",
"146 259 CURVE SMOOTH",
"107 230 OFFCURVE",
"88 196 OFFCURVE",
"88 157 CURVE SMOOTH",
"88 147 OFFCURVE",
"98 130 OFFCURVE",
"119 107 CURVE SMOOTH",
"140 84 OFFCURVE",
"150 69 OFFCURVE",
"150 62 CURVE SMOOTH",
"150 59 OFFCURVE",
"149 57 OFFCURVE",
"146 56 CURVE SMOOTH",
"98 42 OFFCURVE",
"55 35 OFFCURVE",
"15 35 CURVE SMOOTH",
"-7 35 OFFCURVE",
"-18 33 OFFCURVE",
"-18 23 CURVE SMOOTH",
"-18 20 OFFCURVE",
"-16 17 OFFCURVE",
"-12 14 CURVE SMOOTH",
"-10 12 OFFCURVE",
"19 9 OFFCURVE",
"75 9 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1070 43 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 9 118 9 134 9 150 9 166 9 182 9 198 9 214 9 230 9 246 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 9 22 9 38 9 54 9 70 9 86 9 102 9 118 9 134 9 150 9 166 9 182 9 198 9 214 9 230 9 246 9 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 9 22 9 38 9 54 9 70 9 86 9 102 9 118 9 134 9 150 9 166 9 182 9 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 9 213 9 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01235 1063 29 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01247 1064 5 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 271;
}
);
leftKerningGroup = s;
note = s;
rightKerningGroup = s;
unicode = 0073;
},
{
glyphname = sacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 56, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 271;
}
);
leftKerningGroup = s;
rightKerningGroup = s;
unicode = 015B;
},
{
glyphname = scaron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 56, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 271;
}
);
leftKerningGroup = s;
rightKerningGroup = s;
unicode = 0161;
},
{
glyphname = scedilla;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, -127, 13}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 271;
}
);
leftKerningGroup = s;
rightKerningGroup = s;
unicode = 015F;
},
{
glyphname = scircumflex;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 56, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 271;
}
);
leftKerningGroup = s;
rightKerningGroup = s;
unicode = 015D;
},
{
glyphname = scommaaccent;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -174, 6}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 271;
}
);
leftKerningGroup = s;
rightKerningGroup = s;
unicode = 0219;
},
{
glyphname = germandbls;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
background = {
components = (
{
name = s;
transform = "{1, 0, 0, 1, 154, 0}";
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-143 -314 OFFCURVE",
"-53 -174 OFFCURVE",
"4 -71 CURVE SMOOTH",
"20 -43 OFFCURVE",
"56 18 OFFCURVE",
"83 66 CURVE SMOOTH",
"199 276 OFFCURVE",
"299 463 OFFCURVE",
"433 558 CURVE SMOOTH",
"456 573 OFFCURVE",
"475 581 OFFCURVE",
"490 581 CURVE SMOOTH",
"501 581 OFFCURVE",
"505 563 OFFCURVE",
"505 539 CURVE SMOOTH",
"505 489 OFFCURVE",
"489 411 OFFCURVE",
"484 388 CURVE SMOOTH",
"479 363 OFFCURVE",
"470 351 OFFCURVE",
"462 350 CURVE SMOOTH",
"393 341 OFFCURVE",
"339 315 OFFCURVE",
"294 269 CURVE SMOOTH",
"260 235 OFFCURVE",
"238 204 OFFCURVE",
"238 178 CURVE SMOOTH",
"238 155 OFFCURVE",
"252 130 OFFCURVE",
"273 107 CURVE SMOOTH",
"294 84 OFFCURVE",
"304 69 OFFCURVE",
"304 62 CURVE SMOOTH",
"304 59 OFFCURVE",
"303 57 OFFCURVE",
"300 56 CURVE SMOOTH",
"251 42 OFFCURVE",
"207 35 OFFCURVE",
"167 35 CURVE SMOOTH",
"147 35 OFFCURVE",
"136 32 OFFCURVE",
"136 23 CURVE SMOOTH",
"136 20 OFFCURVE",
"138 17 OFFCURVE",
"142 14 CURVE SMOOTH",
"144 12 OFFCURVE",
"172 9 OFFCURVE",
"226 9 CURVE SMOOTH",
"283 9 OFFCURVE",
"322 15 OFFCURVE",
"341 27 CURVE",
"349 30 OFFCURVE",
"354 51 OFFCURVE",
"366 55 CURVE SMOOTH",
"374 58 OFFCURVE",
"378 62 OFFCURVE",
"378 69 CURVE SMOOTH",
"378 73 OFFCURVE",
"376 75 OFFCURVE",
"371 75 CURVE SMOOTH",
"368 75 OFFCURVE",
"365 74 OFFCURVE",
"361 72 CURVE",
"353 70 OFFCURVE",
"346 69 OFFCURVE",
"341 69 CURVE",
"340 70 OFFCURVE",
"337 75 OFFCURVE",
"332 84 CURVE SMOOTH",
"327 92 OFFCURVE",
"319 104 OFFCURVE",
"310 119 CURVE SMOOTH",
"295 142 OFFCURVE",
"283 171 OFFCURVE",
"283 182 CURVE SMOOTH",
"283 217 OFFCURVE",
"301 245 OFFCURVE",
"331 271 CURVE SMOOTH",
"368 304 OFFCURVE",
"401 313 OFFCURVE",
"463 323 CURVE SMOOTH",
"483 327 OFFCURVE",
"490 343 OFFCURVE",
"495 355 CURVE SMOOTH",
"505 380 OFFCURVE",
"530 433 OFFCURVE",
"539 466 CURVE SMOOTH",
"547 498 OFFCURVE",
"551 522 OFFCURVE",
"551 539 CURVE SMOOTH",
"551 557 OFFCURVE",
"547 568 OFFCURVE",
"540 576 CURVE",
"525 589 OFFCURVE",
"508 597 OFFCURVE",
"484 597 CURVE SMOOTH",
"444 597 OFFCURVE",
"399 584 OFFCURVE",
"354 540 CURVE",
"270 447 OFFCURVE",
"211 351 OFFCURVE",
"161 271 CURVE",
"132 266 OFFCURVE",
"109 260 OFFCURVE",
"92 255 CURVE SMOOTH",
"74 250 OFFCURVE",
"64 243 OFFCURVE",
"64 238 CURVE SMOOTH",
"64 236 OFFCURVE",
"67 234 OFFCURVE",
"73 233 CURVE SMOOTH",
"78 232 OFFCURVE",
"87 232 OFFCURVE",
"98 233 CURVE SMOOTH",
"109 234 OFFCURVE",
"122 236 OFFCURVE",
"138 237 CURVE",
"115 198 OFFCURVE",
"91 151 OFFCURVE",
"72 115 CURVE SMOOTH",
"48 70 OFFCURVE",
"19 16 OFFCURVE",
"-12 -29 CURVE SMOOTH",
"-85 -140 OFFCURVE",
"-151 -221 OFFCURVE",
"-190 -253 CURVE SMOOTH",
"-223 -280 OFFCURVE",
"-251 -294 OFFCURVE",
"-272 -294 CURVE SMOOTH",
"-291 -294 OFFCURVE",
"-300 -276 OFFCURVE",
"-303 -251 CURVE",
"-298 -220 LINE SMOOTH",
"-297 -213 OFFCURVE",
"-296 -208 OFFCURVE",
"-296 -204 CURVE SMOOTH",
"-296 -197 OFFCURVE",
"-298 -193 OFFCURVE",
"-301 -193 CURVE SMOOTH",
"-312 -193 OFFCURVE",
"-321 -207 OFFCURVE",
"-329 -235 CURVE SMOOTH",
"-331 -243 OFFCURVE",
"-332 -250 OFFCURVE",
"-332 -256 CURVE SMOOTH",
"-332 -270 OFFCURVE",
"-328 -281 OFFCURVE",
"-320 -291 CURVE SMOOTH",
"-309 -306 OFFCURVE",
"-292 -314 OFFCURVE",
"-268 -314 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01247 1067 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01255 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 55 213 55 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01243 1064 22 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 1061 59 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 1063 8 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 421;
}
);
note = germandbls;
unicode = 00DF;
},
{
color = 3;
glyphname = t;
lastChange = "2022-03-22 15:02:34 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{23, 0}";
},
{
name = cedilla;
position = "{77, 6}";
},
{
name = center;
position = "{83, 170}";
},
{
name = top;
position = "{325, 459}";
},
{
name = topright;
position = "{343, 500}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"83 3 OFFCURVE",
"87 4 OFFCURVE",
"90 5 CURVE SMOOTH",
"111 14 OFFCURVE",
"132 24 OFFCURVE",
"151 38 CURVE SMOOTH",
"188 66 LINE SMOOTH",
"193 70 OFFCURVE",
"196 74 OFFCURVE",
"196 79 CURVE SMOOTH",
"196 84 OFFCURVE",
"193 87 OFFCURVE",
"186 87 CURVE SMOOTH",
"183 87 OFFCURVE",
"169 79 OFFCURVE",
"144 64 CURVE SMOOTH",
"131 55 OFFCURVE",
"120 49 OFFCURVE",
"112 44 CURVE SMOOTH",
"104 39 OFFCURVE",
"98 36 OFFCURVE",
"95 35 CURVE SMOOTH",
"84 30 OFFCURVE",
"74 28 OFFCURVE",
"66 28 CURVE SMOOTH",
"55 28 OFFCURVE",
"49 34 OFFCURVE",
"49 45 CURVE SMOOTH",
"49 52 OFFCURVE",
"53 66 OFFCURVE",
"60 86 CURVE SMOOTH",
"81 146 OFFCURVE",
"113 206 OFFCURVE",
"158 265 CURVE",
"171 274 OFFCURVE",
"181 278 OFFCURVE",
"189 279 CURVE SMOOTH",
"224 283 OFFCURVE",
"249 285 OFFCURVE",
"264 285 CURVE SMOOTH",
"286 286 OFFCURVE",
"297 289 OFFCURVE",
"297 296 CURVE SMOOTH",
"297 298 OFFCURVE",
"294 300 OFFCURVE",
"288 301 CURVE SMOOTH",
"268 302 OFFCURVE",
"249 303 OFFCURVE",
"234 303 CURVE SMOOTH",
"226 303 OFFCURVE",
"219 302 OFFCURVE",
"213 302 CURVE SMOOTH",
"205 303 OFFCURVE",
"201 306 OFFCURVE",
"201 312 CURVE SMOOTH",
"201 315 OFFCURVE",
"203 320 OFFCURVE",
"207 325 CURVE SMOOTH",
"271 398 LINE",
"292 418 OFFCURVE",
"315 436 OFFCURVE",
"339 452 CURVE",
"342 453 OFFCURVE",
"343 454 OFFCURVE",
"343 457 CURVE SMOOTH",
"343 458 OFFCURVE",
"340 459 OFFCURVE",
"335 459 CURVE SMOOTH",
"315 459 OFFCURVE",
"296 453 OFFCURVE",
"277 441 CURVE SMOOTH",
"264 434 OFFCURVE",
"246 416 OFFCURVE",
"223 388 CURVE SMOOTH",
"200 361 OFFCURVE",
"177 333 OFFCURVE",
"154 304 CURVE",
"126 303 OFFCURVE",
"104 300 OFFCURVE",
"87 296 CURVE SMOOTH",
"80 294 OFFCURVE",
"76 292 OFFCURVE",
"76 289 CURVE SMOOTH",
"76 284 OFFCURVE",
"83 278 OFFCURVE",
"98 271 CURVE SMOOTH",
"102 269 OFFCURVE",
"104 264 OFFCURVE",
"104 256 CURVE SMOOTH",
"104 251 OFFCURVE",
"104 245 OFFCURVE",
"102 238 CURVE",
"62 173 LINE SMOOTH",
"38 134 OFFCURVE",
"22 104 OFFCURVE",
"11 81 CURVE SMOOTH",
"6 69 OFFCURVE",
"3 59 OFFCURVE",
"3 52 CURVE SMOOTH",
"3 34 OFFCURVE",
"15 21 OFFCURVE",
"39 12 CURVE SMOOTH",
"55 6 OFFCURVE",
"68 3 OFFCURVE",
"78 3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 206;
}
);
leftKerningGroup = t;
note = t;
rightKerningGroup = t;
unicode = 0074;
},
{
glyphname = tbar;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, -167, -13}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 206;
}
);
leftKerningGroup = t;
rightKerningGroup = t;
unicode = 0167;
},
{
glyphname = tcaron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 93, -54}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 206;
}
);
leftKerningGroup = t;
rightKerningGroup = t;
unicode = 0165;
},
{
glyphname = tcedilla;
lastChange = "2022-03-25 01:00:13 +0000";
layers = (
{
components = (
{
name = tcommaaccent;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 206;
}
);
leftKerningGroup = t;
rightKerningGroup = t;
unicode = 0163;
},
{
glyphname = tcommaaccent;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -227, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 206;
}
);
leftKerningGroup = t;
rightKerningGroup = t;
unicode = 021B;
},
{
color = 3;
glyphname = u;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{71, 0}";
},
{
name = horn;
position = "{385, 268}";
},
{
name = ogonek;
position = "{257, 10}";
},
{
name = top;
position = "{319, 280}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"238 -2 OFFCURVE",
"248 3 OFFCURVE",
"261 12 CURVE SMOOTH",
"270 19 OFFCURVE",
"276 24 OFFCURVE",
"281 27 CURVE SMOOTH",
"286 30 OFFCURVE",
"289 31 OFFCURVE",
"290 32 CURVE",
"313 45 OFFCURVE",
"333 57 OFFCURVE",
"356 69 CURVE SMOOTH",
"381 82 OFFCURVE",
"407 92 OFFCURVE",
"433 99 CURVE SMOOTH",
"443 102 OFFCURVE",
"448 106 OFFCURVE",
"448 112 CURVE SMOOTH",
"448 116 OFFCURVE",
"445 118 OFFCURVE",
"440 118 CURVE SMOOTH",
"438 118 OFFCURVE",
"435 117 OFFCURVE",
"431 116 CURVE SMOOTH",
"362 89 OFFCURVE",
"312 69 OFFCURVE",
"277 54 CURVE",
"329 158 LINE SMOOTH",
"342 183 OFFCURVE",
"364 213 OFFCURVE",
"395 250 CURVE SMOOTH",
"398 253 OFFCURVE",
"399 256 OFFCURVE",
"399 259 CURVE SMOOTH",
"399 265 OFFCURVE",
"394 268 OFFCURVE",
"385 268 CURVE SMOOTH",
"378 268 OFFCURVE",
"372 265 OFFCURVE",
"365 260 CURVE",
"321 218 OFFCURVE",
"267 176 OFFCURVE",
"203 133 CURVE SMOOTH",
"176 114 OFFCURVE",
"148 96 OFFCURVE",
"120 77 CURVE SMOOTH",
"87 56 OFFCURVE",
"65 45 OFFCURVE",
"55 45 CURVE SMOOTH",
"50 45 OFFCURVE",
"47 48 OFFCURVE",
"47 53 CURVE SMOOTH",
"47 71 OFFCURVE",
"63 101 OFFCURVE",
"95 142 CURVE SMOOTH",
"131 189 OFFCURVE",
"167 232 OFFCURVE",
"203 275 CURVE",
"204 278 OFFCURVE",
"205 280 OFFCURVE",
"205 282 CURVE SMOOTH",
"205 289 OFFCURVE",
"201 292 OFFCURVE",
"194 292 CURVE SMOOTH",
"191 292 OFFCURVE",
"187 291 OFFCURVE",
"182 288 CURVE SMOOTH",
"171 282 OFFCURVE",
"155 276 OFFCURVE",
"136 270 CURVE SMOOTH",
"119 265 OFFCURVE",
"111 261 OFFCURVE",
"110 258 CURVE SMOOTH",
"107 249 OFFCURVE",
"105 242 OFFCURVE",
"104 236 CURVE SMOOTH",
"103 229 OFFCURVE",
"101 224 OFFCURVE",
"100 219 CURVE",
"84 192 OFFCURVE",
"70 169 OFFCURVE",
"58 152 CURVE SMOOTH",
"46 134 OFFCURVE",
"34 116 OFFCURVE",
"23 98 CURVE SMOOTH",
"8 73 OFFCURVE",
"0 52 OFFCURVE",
"0 35 CURVE SMOOTH",
"0 15 OFFCURVE",
"6 5 OFFCURVE",
"18 5 CURVE SMOOTH",
"36 5 OFFCURVE",
"69 17 OFFCURVE",
"114 47 CURVE SMOOTH",
"190 97 LINE SMOOTH",
"212 112 OFFCURVE",
"232 127 OFFCURVE",
"249 140 CURVE SMOOTH",
"266 153 OFFCURVE",
"282 164 OFFCURVE",
"295 173 CURVE",
"266 116 OFFCURVE",
"240 66 OFFCURVE",
"213 25 CURVE",
"211 17 LINE",
"211 4 OFFCURVE",
"218 -2 OFFCURVE",
"233 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01217 10 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01266 10 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 381;
}
);
leftKerningGroup = u;
note = u;
rightKerningGroup = u;
unicode = 0075;
},
{
glyphname = uacute;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 00FA;
},
{
glyphname = ubreve;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 016D;
},
{
color = 9;
glyphname = ucaron;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 01D4;
},
{
glyphname = ucircumflex;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 00FB;
},
{
glyphname = udblgrave;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 0215;
},
{
glyphname = udieresis;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 00FC;
},
{
color = 9;
glyphname = udieresiscaron;
lastChange = "2022-03-25 01:03:20 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 69, -20}";
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 98, 94}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 01DA;
},
{
color = 9;
glyphname = udieresisgrave;
lastChange = "2022-03-25 01:03:20 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 69, -20}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 98, 94}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 01DC;
},
{
color = 9;
glyphname = udieresismacron;
lastChange = "2022-03-25 01:03:20 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 69, -20}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 98, 94}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 01D6;
},
{
glyphname = udotbelow;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -179, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EE5;
},
{
glyphname = ugrave;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 00F9;
},
{
glyphname = uhookabove;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EE7;
},
{
glyphname = uhorn;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 135, -32}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 401;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
rightMetricsKey = "=+20";
unicode = 01B0;
},
{
glyphname = uhornacute;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 401;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EE9;
},
{
glyphname = uhorndotbelow;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -179, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 401;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EF1;
},
{
glyphname = uhorngrave;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 401;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EEB;
},
{
glyphname = uhornhookabove;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 401;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EED;
},
{
glyphname = uhorntilde;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 401;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EEF;
},
{
glyphname = uhungarumlaut;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 0171;
},
{
glyphname = uinvertedbreve;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 0217;
},
{
glyphname = umacron;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 016B;
},
{
glyphname = uogonek;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 7, 10}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 0173;
},
{
glyphname = uring;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 016F;
},
{
glyphname = utilde;
lastChange = "2022-03-25 01:02:51 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 69, -20}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 0169;
},
{
glyphname = v;
lastChange = "2022-03-22 13:50:19 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"50 -10 OFFCURVE",
"68 -3 OFFCURVE",
"93 10 CURVE SMOOTH",
"116 22 OFFCURVE",
"135 34 OFFCURVE",
"150 45 CURVE SMOOTH",
"228 105 OFFCURVE",
"290 160 OFFCURVE",
"335 210 CURVE",
"360 213 OFFCURVE",
"381 214 OFFCURVE",
"396 215 CURVE SMOOTH",
"411 216 OFFCURVE",
"419 220 OFFCURVE",
"419 229 CURVE SMOOTH",
"419 232 OFFCURVE",
"416 233 OFFCURVE",
"411 233 CURVE SMOOTH",
"405 233 LINE",
"402 232 OFFCURVE",
"399 232 OFFCURVE",
"397 232 CURVE SMOOTH",
"389 232 LINE SMOOTH",
"377 232 OFFCURVE",
"370 234 OFFCURVE",
"368 239 CURVE",
"367 240 OFFCURVE",
"367 244 OFFCURVE",
"367 252 CURVE",
"374 262 OFFCURVE",
"371 261 OFFCURVE",
"383 273 CURVE SMOOTH",
"387 277 OFFCURVE",
"389 281 OFFCURVE",
"389 284 CURVE SMOOTH",
"389 294 OFFCURVE",
"381 299 OFFCURVE",
"365 299 CURVE SMOOTH",
"362 299 OFFCURVE",
"359 298 OFFCURVE",
"355 297 CURVE SMOOTH",
"337 292 OFFCURVE",
"325 280 OFFCURVE",
"320 263 CURVE SMOOTH",
"314 244 LINE SMOOTH",
"313 241 OFFCURVE",
"313 239 OFFCURVE",
"312 237 CURVE SMOOTH",
"293 208 OFFCURVE",
"271 182 OFFCURVE",
"248 159 CURVE SMOOTH",
"233 146 OFFCURVE",
"213 126 OFFCURVE",
"182 101 CURVE SMOOTH",
"123 52 OFFCURVE",
"87 26 OFFCURVE",
"76 24 CURVE SMOOTH",
"67 23 OFFCURVE",
"62 28 OFFCURVE",
"62 39 CURVE SMOOTH",
"62 49 OFFCURVE",
"64 58 OFFCURVE",
"69 67 CURVE SMOOTH",
"84 99 OFFCURVE",
"102 129 OFFCURVE",
"121 160 CURVE",
"122 160 OFFCURVE",
"137 181 OFFCURVE",
"167 224 CURVE SMOOTH",
"169 227 OFFCURVE",
"170 230 OFFCURVE",
"170 234 CURVE SMOOTH",
"170 246 OFFCURVE",
"160 258 OFFCURVE",
"149 258 CURVE SMOOTH",
"145 258 OFFCURVE",
"142 256 OFFCURVE",
"139 252 CURVE SMOOTH",
"132 245 OFFCURVE",
"125 238 OFFCURVE",
"118 233 CURVE SMOOTH",
"111 227 OFFCURVE",
"105 222 OFFCURVE",
"100 217 CURVE SMOOTH",
"99 216 OFFCURVE",
"100 214 OFFCURVE",
"103 211 CURVE SMOOTH",
"106 208 OFFCURVE",
"106 206 OFFCURVE",
"105 204 CURVE SMOOTH",
"68 148 OFFCURVE",
"38 97 OFFCURVE",
"15 50 CURVE SMOOTH",
"8 34 OFFCURVE",
"4 23 OFFCURVE",
"4 18 CURVE SMOOTH",
"4 15 OFFCURVE",
"5 14 OFFCURVE",
"6 13 CURVE SMOOTH",
"7 12 OFFCURVE",
"10 7 OFFCURVE",
"17 -2 CURVE SMOOTH",
"20 -7 OFFCURVE",
"28 -10 OFFCURVE",
"40 -10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01212 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 330;
}
);
note = v;
unicode = 0076;
},
{
color = 3;
glyphname = w;
lastChange = "2022-03-22 13:50:16 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{340, 300}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"305 24 OFFCURVE",
"349 46 OFFCURVE",
"398 88 CURVE SMOOTH",
"450 131 OFFCURVE",
"481 177 OFFCURVE",
"490 225 CURVE",
"498 225 OFFCURVE",
"506 226 OFFCURVE",
"513 228 CURVE SMOOTH",
"523 231 OFFCURVE",
"529 232 OFFCURVE",
"530 232 CURVE SMOOTH",
"541 233 OFFCURVE",
"547 238 OFFCURVE",
"547 245 CURVE SMOOTH",
"547 250 OFFCURVE",
"544 252 OFFCURVE",
"538 252 CURVE SMOOTH",
"535 252 OFFCURVE",
"532 252 OFFCURVE",
"529 251 CURVE SMOOTH",
"525 250 OFFCURVE",
"520 250 OFFCURVE",
"516 250 CURVE SMOOTH",
"508 250 OFFCURVE",
"499 251 OFFCURVE",
"490 253 CURVE",
"485 266 OFFCURVE",
"464 277 OFFCURVE",
"447 277 CURVE SMOOTH",
"434 277 OFFCURVE",
"428 272 OFFCURVE",
"428 261 CURVE SMOOTH",
"428 254 OFFCURVE",
"430 249 OFFCURVE",
"434 245 CURVE SMOOTH",
"453 225 LINE",
"444 183 OFFCURVE",
"422 144 OFFCURVE",
"387 108 CURVE SMOOTH",
"351 72 OFFCURVE",
"319 52 OFFCURVE",
"290 52 CURVE SMOOTH",
"271 52 OFFCURVE",
"260 80 OFFCURVE",
"263 110 CURVE SMOOTH",
"269 177 OFFCURVE",
"290 239 OFFCURVE",
"325 295 CURVE",
"328 298 OFFCURVE",
"329 302 OFFCURVE",
"329 305 CURVE SMOOTH",
"329 310 OFFCURVE",
"325 312 OFFCURVE",
"317 312 CURVE SMOOTH",
"296 312 OFFCURVE",
"283 306 OFFCURVE",
"276 293 CURVE SMOOTH",
"261 265 OFFCURVE",
"244 240 OFFCURVE",
"225 219 CURVE SMOOTH",
"173 163 LINE",
"152 142 LINE SMOOTH",
"143 133 OFFCURVE",
"131 123 OFFCURVE",
"118 110 CURVE SMOOTH",
"86 82 OFFCURVE",
"67 68 OFFCURVE",
"60 68 CURVE SMOOTH",
"55 68 OFFCURVE",
"52 70 OFFCURVE",
"52 75 CURVE SMOOTH",
"52 80 OFFCURVE",
"56 89 OFFCURVE",
"62 100 CURVE SMOOTH",
"109 180 OFFCURVE",
"145 232 OFFCURVE",
"172 263 CURVE SMOOTH",
"175 266 OFFCURVE",
"176 269 OFFCURVE",
"176 273 CURVE SMOOTH",
"176 286 OFFCURVE",
"170 292 OFFCURVE",
"159 292 CURVE SMOOTH",
"154 292 OFFCURVE",
"151 290 OFFCURVE",
"148 285 CURVE SMOOTH",
"140 271 OFFCURVE",
"116 257 OFFCURVE",
"106 247 CURVE",
"105 236 OFFCURVE",
"106 228 OFFCURVE",
"107 221 CURVE",
"54 151 LINE SMOOTH",
"34 125 OFFCURVE",
"20 99 OFFCURVE",
"9 76 CURVE SMOOTH",
"7 72 OFFCURVE",
"6 68 OFFCURVE",
"6 64 CURVE SMOOTH",
"6 43 OFFCURVE",
"17 33 OFFCURVE",
"40 33 CURVE SMOOTH",
"52 33 OFFCURVE",
"65 38 OFFCURVE",
"78 47 CURVE SMOOTH",
"127 81 OFFCURVE",
"167 117 OFFCURVE",
"199 154 CURVE SMOOTH",
"230 190 LINE",
"225 171 OFFCURVE",
"222 145 OFFCURVE",
"219 112 CURVE SMOOTH",
"215 60 OFFCURVE",
"232 24 OFFCURVE",
"266 24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01255 1075 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01257 1075 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 467;
}
);
leftKerningGroup = w;
note = w;
rightKerningGroup = w;
unicode = 0077;
},
{
glyphname = wacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 90, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 467;
}
);
leftKerningGroup = w;
rightKerningGroup = w;
unicode = 1E83;
},
{
glyphname = wcircumflex;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 90, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 467;
}
);
leftKerningGroup = w;
rightKerningGroup = w;
unicode = 0175;
},
{
glyphname = wdieresis;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 90, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 467;
}
);
leftKerningGroup = w;
rightKerningGroup = w;
unicode = 1E85;
},
{
glyphname = wgrave;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 90, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 467;
}
);
leftKerningGroup = w;
rightKerningGroup = w;
unicode = 1E81;
},
{
glyphname = x;
lastChange = "2022-03-22 13:40:57 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-180 -149 OFFCURVE",
"-177 -147 OFFCURVE",
"-172 -142 CURVE SMOOTH",
"-83 -34 OFFCURVE",
"24 62 OFFCURVE",
"149 150 CURVE",
"144 127 OFFCURVE",
"139 107 OFFCURVE",
"136 91 CURVE SMOOTH",
"129 63 OFFCURVE",
"123 41 OFFCURVE",
"118 26 CURVE SMOOTH",
"113 11 OFFCURVE",
"110 1 OFFCURVE",
"107 -2 CURVE SMOOTH",
"105 -5 OFFCURVE",
"104 -8 OFFCURVE",
"104 -10 CURVE SMOOTH",
"104 -14 OFFCURVE",
"108 -16 OFFCURVE",
"115 -16 CURVE SMOOTH",
"123 -16 OFFCURVE",
"131 -13 OFFCURVE",
"138 -8 CURVE SMOOTH",
"188 29 OFFCURVE",
"259 60 OFFCURVE",
"352 85 CURVE SMOOTH",
"356 86 OFFCURVE",
"358 88 OFFCURVE",
"358 91 CURVE SMOOTH",
"358 93 LINE SMOOTH",
"357 97 OFFCURVE",
"355 99 OFFCURVE",
"352 99 CURVE",
"313 90 OFFCURVE",
"286 81 OFFCURVE",
"267 74 CURVE SMOOTH",
"206 53 OFFCURVE",
"171 41 OFFCURVE",
"161 36 CURVE",
"168 61 OFFCURVE",
"172 81 OFFCURVE",
"175 94 CURVE SMOOTH",
"192 172 LINE",
"260 217 OFFCURVE",
"306 249 OFFCURVE",
"337 270 CURVE SMOOTH",
"344 274 OFFCURVE",
"347 279 OFFCURVE",
"347 284 CURVE SMOOTH",
"347 287 OFFCURVE",
"345 289 OFFCURVE",
"341 289 CURVE SMOOTH",
"338 289 OFFCURVE",
"334 288 OFFCURVE",
"329 285 CURVE SMOOTH",
"197 204 LINE",
"204 233 OFFCURVE",
"208 251 OFFCURVE",
"208 257 CURVE SMOOTH",
"208 268 OFFCURVE",
"203 273 OFFCURVE",
"194 273 CURVE SMOOTH",
"188 273 OFFCURVE",
"180 271 OFFCURVE",
"170 267 CURVE SMOOTH",
"115 244 OFFCURVE",
"82 228 OFFCURVE",
"72 218 CURVE SMOOTH",
"67 213 OFFCURVE",
"65 209 OFFCURVE",
"65 206 CURVE SMOOTH",
"65 202 OFFCURVE",
"67 200 OFFCURVE",
"72 200 CURVE SMOOTH",
"77 200 OFFCURVE",
"82 203 OFFCURVE",
"87 208 CURVE SMOOTH",
"101 222 OFFCURVE",
"119 233 OFFCURVE",
"140 240 CURVE SMOOTH",
"150 243 OFFCURVE",
"155 235 OFFCURVE",
"155 216 CURVE SMOOTH",
"155 203 OFFCURVE",
"153 188 OFFCURVE",
"148 171 CURVE",
"19 83 OFFCURVE",
"-91 -16 OFFCURVE",
"-183 -125 CURVE SMOOTH",
"-188 -130 OFFCURVE",
"-190 -135 OFFCURVE",
"-190 -140 CURVE SMOOTH",
"-190 -146 OFFCURVE",
"-188 -149 OFFCURVE",
"-183 -149 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01214 4 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01245 4 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01259 4 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = x;
unicode = 0078;
},
{
color = 3;
glyphname = y;
lastChange = "2022-03-21 21:12:21 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{335, 0}";
},
{
name = top;
position = "{305, 270}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"89 -358 OFFCURVE",
"198 -276 OFFCURVE",
"282 -111 CURVE SMOOTH",
"310 -56 OFFCURVE",
"333 2 OFFCURVE",
"352 63 CURVE SMOOTH",
"360 89 OFFCURVE",
"381 108 OFFCURVE",
"414 120 CURVE SMOOTH",
"435 128 OFFCURVE",
"450 133 OFFCURVE",
"458 136 CURVE SMOOTH",
"465 138 OFFCURVE",
"469 140 OFFCURVE",
"469 143 CURVE SMOOTH",
"469 147 OFFCURVE",
"464 149 OFFCURVE",
"453 149 CURVE SMOOTH",
"437 149 OFFCURVE",
"409 141 OFFCURVE",
"368 125 CURVE",
"381 175 LINE",
"389 204 LINE SMOOTH",
"391 211 OFFCURVE",
"393 217 OFFCURVE",
"394 222 CURVE",
"409 239 OFFCURVE",
"417 252 OFFCURVE",
"417 261 CURVE SMOOTH",
"417 268 OFFCURVE",
"412 272 OFFCURVE",
"402 272 CURVE SMOOTH",
"395 272 OFFCURVE",
"387 271 OFFCURVE",
"379 268 CURVE SMOOTH",
"358 261 OFFCURVE",
"348 252 OFFCURVE",
"345 241 CURVE SMOOTH",
"340 220 LINE",
"305 197 OFFCURVE",
"265 170 OFFCURVE",
"214 141 CURVE SMOOTH",
"143 100 OFFCURVE",
"101 79 OFFCURVE",
"87 79 CURVE SMOOTH",
"82 79 OFFCURVE",
"80 81 OFFCURVE",
"80 84 CURVE SMOOTH",
"80 89 OFFCURVE",
"84 97 OFFCURVE",
"92 109 CURVE SMOOTH",
"111 136 OFFCURVE",
"124 156 OFFCURVE",
"135 167 CURVE SMOOTH",
"168 201 OFFCURVE",
"192 225 OFFCURVE",
"207 239 CURVE",
"208 242 OFFCURVE",
"209 243 OFFCURVE",
"209 244 CURVE SMOOTH",
"209 247 OFFCURVE",
"206 248 OFFCURVE",
"201 248 CURVE SMOOTH",
"190 248 OFFCURVE",
"173 244 OFFCURVE",
"151 236 CURVE SMOOTH",
"128 228 OFFCURVE",
"115 221 OFFCURVE",
"110 215 CURVE SMOOTH",
"108 213 OFFCURVE",
"108 210 OFFCURVE",
"108 205 CURVE SMOOTH",
"108 194 LINE SMOOTH",
"108 188 OFFCURVE",
"106 183 OFFCURVE",
"103 179 CURVE SMOOTH",
"83 151 OFFCURVE",
"66 126 OFFCURVE",
"51 104 CURVE SMOOTH",
"36 82 OFFCURVE",
"23 63 OFFCURVE",
"12 48 CURVE SMOOTH",
"8 41 OFFCURVE",
"6 36 OFFCURVE",
"6 33 CURVE SMOOTH",
"6 28 OFFCURVE",
"10 25 OFFCURVE",
"18 25 CURVE SMOOTH",
"46 25 OFFCURVE",
"90 43 OFFCURVE",
"149 80 CURVE SMOOTH",
"244 137 OFFCURVE",
"304 174 OFFCURVE",
"335 189 CURVE",
"314 102 LINE",
"241 71 OFFCURVE",
"175 39 OFFCURVE",
"118 6 CURVE SMOOTH",
"65 -25 OFFCURVE",
"10 -61 OFFCURVE",
"-50 -106 CURVE SMOOTH",
"-110 -151 OFFCURVE",
"-145 -182 OFFCURVE",
"-156 -198 CURVE SMOOTH",
"-169 -219 OFFCURVE",
"-176 -240 OFFCURVE",
"-176 -260 CURVE SMOOTH",
"-176 -318 OFFCURVE",
"-116 -358 OFFCURVE",
"-45 -358 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-96 -337 OFFCURVE",
"-141 -306 OFFCURVE",
"-141 -261 CURVE SMOOTH",
"-141 -246 OFFCURVE",
"-135 -229 OFFCURVE",
"-124 -210 CURVE SMOOTH",
"-113 -192 OFFCURVE",
"-82 -163 OFFCURVE",
"-31 -124 CURVE SMOOTH",
"23 -81 OFFCURVE",
"77 -45 OFFCURVE",
"130 -16 CURVE SMOOTH",
"200 23 OFFCURVE",
"259 54 OFFCURVE",
"307 77 CURVE",
"287 0 OFFCURVE",
"267 -59 OFFCURVE",
"247 -100 CURVE SMOOTH",
"212 -171 OFFCURVE",
"178 -223 OFFCURVE",
"144 -257 CURVE SMOOTH",
"91 -310 OFFCURVE",
"28 -337 OFFCURVE",
"-43 -337 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01287 1069 11 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 102 87 118 87 134 87 150 87 166 87 182 87 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 87 213 87 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01290 1061 6 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 430;
}
);
leftKerningGroup = y;
note = y;
rightKerningGroup = g;
unicode = 0079;
},
{
glyphname = yacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 55, -30}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
leftKerningGroup = y;
rightKerningGroup = g;
unicode = 00FD;
},
{
glyphname = ycircumflex;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 55, -30}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
leftKerningGroup = y;
rightKerningGroup = g;
unicode = 0177;
},
{
glyphname = ydieresis;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 55, -30}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
leftKerningGroup = y;
rightKerningGroup = g;
unicode = 00FF;
},
{
glyphname = ydotbelow;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 85, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
leftKerningGroup = y;
rightKerningGroup = g;
unicode = 1EF5;
},
{
glyphname = ygrave;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 55, -30}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
leftKerningGroup = y;
rightKerningGroup = g;
unicode = 1EF3;
},
{
glyphname = yhookabove;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 55, -30}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
leftKerningGroup = y;
rightKerningGroup = g;
unicode = 1EF7;
},
{
glyphname = ymacron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 55, -30}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
leftKerningGroup = y;
rightKerningGroup = g;
unicode = 0233;
},
{
glyphname = ytilde;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 55, -30}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
leftKerningGroup = y;
rightKerningGroup = g;
unicode = 1EF9;
},
{
color = 3;
glyphname = z;
lastChange = "2022-03-22 13:53:06 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{283, 288}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"3 6 OFFCURVE",
"7 7 OFFCURVE",
"10 10 CURVE",
"85 51 OFFCURVE",
"156 72 OFFCURVE",
"222 72 CURVE SMOOTH",
"247 72 OFFCURVE",
"260 68 OFFCURVE",
"260 61 CURVE SMOOTH",
"260 54 OFFCURVE",
"254 42 OFFCURVE",
"242 25 CURVE SMOOTH",
"239 20 OFFCURVE",
"237 16 OFFCURVE",
"237 15 CURVE SMOOTH",
"237 14 OFFCURVE",
"238 13 OFFCURVE",
"239 13 CURVE SMOOTH",
"243 13 OFFCURVE",
"247 15 OFFCURVE",
"252 20 CURVE SMOOTH",
"276 45 OFFCURVE",
"288 67 OFFCURVE",
"288 88 CURVE SMOOTH",
"288 103 OFFCURVE",
"279 109 OFFCURVE",
"260 109 CURVE SMOOTH",
"220 109 OFFCURVE",
"163 96 OFFCURVE",
"87 71 CURVE",
"140 127 OFFCURVE",
"177 162 OFFCURVE",
"198 181 CURVE SMOOTH",
"243 222 OFFCURVE",
"284 249 OFFCURVE",
"320 264 CURVE SMOOTH",
"325 266 OFFCURVE",
"328 269 OFFCURVE",
"328 272 CURVE SMOOTH",
"328 284 OFFCURVE",
"313 288 OFFCURVE",
"282 288 CURVE SMOOTH",
"263 288 OFFCURVE",
"240 286 OFFCURVE",
"212 282 CURVE SMOOTH",
"169 276 OFFCURVE",
"139 267 OFFCURVE",
"122 256 CURVE SMOOTH",
"111 248 OFFCURVE",
"105 240 OFFCURVE",
"105 232 CURVE SMOOTH",
"105 227 OFFCURVE",
"107 224 OFFCURVE",
"111 224 CURVE SMOOTH",
"112 224 OFFCURVE",
"114 225 OFFCURVE",
"117 226 CURVE",
"146 249 OFFCURVE",
"182 260 OFFCURVE",
"225 260 CURVE SMOOTH",
"232 260 OFFCURVE",
"239 259 OFFCURVE",
"246 258 CURVE",
"209 234 OFFCURVE",
"165 196 OFFCURVE",
"113 146 CURVE SMOOTH",
"-7 29 LINE SMOOTH",
"-12 25 OFFCURVE",
"-14 21 OFFCURVE",
"-14 16 CURVE SMOOTH",
"-14 9 OFFCURVE",
"-10 6 OFFCURVE",
"-2 6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0128 1064 22 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01233 22 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 307;
}
);
leftKerningGroup = z;
note = z;
rightKerningGroup = z;
unicode = 007A;
},
{
glyphname = zacute;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 33, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 307;
}
);
leftKerningGroup = z;
rightKerningGroup = z;
unicode = 017A;
},
{
glyphname = zcaron;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 33, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 307;
}
);
leftKerningGroup = z;
rightKerningGroup = z;
unicode = 017E;
},
{
glyphname = zdotaccent;
lastChange = "2022-03-25 00:46:28 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 33, -12}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 307;
}
);
leftKerningGroup = z;
rightKerningGroup = z;
unicode = 017C;
},
{
glyphname = f_f;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-9 -112 OFFCURVE",
"2 -101 OFFCURVE",
"2 -90 CURVE SMOOTH",
"2 -67 OFFCURVE",
"8 -44 OFFCURVE",
"19 -20 CURVE SMOOTH",
"54 51 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"181 253 OFFCURVE",
"197 262 OFFCURVE",
"217 263 CURVE SMOOTH",
"246 265 OFFCURVE",
"275 266 OFFCURVE",
"302 267 CURVE",
"308 260 LINE SMOOTH",
"317 251 OFFCURVE",
"324 247 OFFCURVE",
"331 247 CURVE",
"246 122 OFFCURVE",
"191 29 OFFCURVE",
"166 -34 CURVE SMOOTH",
"162 -43 OFFCURVE",
"160 -53 OFFCURVE",
"160 -62 CURVE SMOOTH",
"160 -69 OFFCURVE",
"161 -76 OFFCURVE",
"164 -85 CURVE SMOOTH",
"167 -94 OFFCURVE",
"168 -99 OFFCURVE",
"168 -101 CURVE SMOOTH",
"168 -108 OFFCURVE",
"171 -112 OFFCURVE",
"176 -112 CURVE SMOOTH",
"184 -112 OFFCURVE",
"195 -101 OFFCURVE",
"195 -90 CURVE SMOOTH",
"195 -67 OFFCURVE",
"201 -44 OFFCURVE",
"212 -20 CURVE SMOOTH",
"247 51 OFFCURVE",
"296 135 OFFCURVE",
"363 235 CURVE SMOOTH",
"374 253 OFFCURVE",
"390 262 OFFCURVE",
"410 263 CURVE SMOOTH",
"455 266 OFFCURVE",
"498 267 OFFCURVE",
"538 267 CURVE SMOOTH",
"551 267 OFFCURVE",
"557 270 OFFCURVE",
"557 276 CURVE SMOOTH",
"557 281 OFFCURVE",
"552 284 OFFCURVE",
"543 285 CURVE SMOOTH",
"518 289 OFFCURVE",
"481 291 OFFCURVE",
"431 291 CURVE SMOOTH",
"400 291 LINE",
"448 359 OFFCURVE",
"493 409 OFFCURVE",
"535 440 CURVE SMOOTH",
"576 471 OFFCURVE",
"610 486 OFFCURVE",
"636 486 CURVE SMOOTH",
"658 486 OFFCURVE",
"678 478 OFFCURVE",
"697 461 CURVE",
"720 474 OFFCURVE",
"731 484 OFFCURVE",
"731 491 CURVE SMOOTH",
"731 494 OFFCURVE",
"729 496 OFFCURVE",
"726 497 CURVE SMOOTH",
"707 506 OFFCURVE",
"687 511 OFFCURVE",
"666 511 CURVE SMOOTH",
"613 511 OFFCURVE",
"560 490 OFFCURVE",
"506 448 CURVE SMOOTH",
"459 411 OFFCURVE",
"411 359 OFFCURVE",
"362 290 CURVE",
"356 289 OFFCURVE",
"351 289 OFFCURVE",
"345 289 CURVE SMOOTH",
"316 290 OFFCURVE",
"280 291 OFFCURVE",
"245 291 CURVE SMOOTH",
"207 291 LINE",
"255 359 OFFCURVE",
"300 409 OFFCURVE",
"342 440 CURVE SMOOTH",
"383 471 OFFCURVE",
"417 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"527 474 OFFCURVE",
"538 484 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"266 411 OFFCURVE",
"218 359 OFFCURVE",
"169 290 CURVE",
"160 289 OFFCURVE",
"151 289 OFFCURVE",
"141 288 CURVE SMOOTH",
"107 285 LINE SMOOTH",
"103 285 OFFCURVE",
"101 284 OFFCURVE",
"101 281 CURVE SMOOTH",
"101 276 OFFCURVE",
"106 269 OFFCURVE",
"115 260 CURVE SMOOTH",
"124 251 OFFCURVE",
"131 247 OFFCURVE",
"138 247 CURVE",
"53 122 OFFCURVE",
"-2 29 OFFCURVE",
"-27 -34 CURVE SMOOTH",
"-31 -43 OFFCURVE",
"-33 -53 OFFCURVE",
"-33 -62 CURVE SMOOTH",
"-33 -69 OFFCURVE",
"-32 -76 OFFCURVE",
"-29 -85 CURVE SMOOTH",
"-26 -94 OFFCURVE",
"-25 -99 OFFCURVE",
"-25 -101 CURVE SMOOTH",
"-25 -108 OFFCURVE",
"-22 -112 OFFCURVE",
"-17 -112 CURVE SMOOTH"
);
}
);
width = 432;
}
);
leftKerningGroup = f;
leftMetricsKey = f;
rightKerningGroup = f;
rightMetricsKey = f;
},
{
glyphname = f_f_i;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-9 -112 OFFCURVE",
"2 -101 OFFCURVE",
"2 -90 CURVE SMOOTH",
"2 -67 OFFCURVE",
"8 -44 OFFCURVE",
"19 -20 CURVE SMOOTH",
"54 51 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"181 253 OFFCURVE",
"197 262 OFFCURVE",
"217 263 CURVE SMOOTH",
"246 265 OFFCURVE",
"275 266 OFFCURVE",
"302 267 CURVE",
"308 260 LINE SMOOTH",
"316 250 OFFCURVE",
"324 247 OFFCURVE",
"331 247 CURVE",
"246 122 OFFCURVE",
"191 29 OFFCURVE",
"166 -34 CURVE SMOOTH",
"162 -43 OFFCURVE",
"160 -53 OFFCURVE",
"160 -62 CURVE SMOOTH",
"160 -69 OFFCURVE",
"161 -76 OFFCURVE",
"164 -85 CURVE SMOOTH",
"167 -94 OFFCURVE",
"168 -99 OFFCURVE",
"168 -101 CURVE SMOOTH",
"168 -108 OFFCURVE",
"171 -112 OFFCURVE",
"176 -112 CURVE SMOOTH",
"184 -112 OFFCURVE",
"195 -101 OFFCURVE",
"195 -90 CURVE SMOOTH",
"195 -67 OFFCURVE",
"201 -44 OFFCURVE",
"212 -20 CURVE SMOOTH",
"247 51 OFFCURVE",
"296 135 OFFCURVE",
"363 235 CURVE SMOOTH",
"374 253 OFFCURVE",
"390 262 OFFCURVE",
"410 263 CURVE SMOOTH",
"455 266 OFFCURVE",
"498 267 OFFCURVE",
"538 267 CURVE SMOOTH",
"551 267 OFFCURVE",
"557 270 OFFCURVE",
"557 276 CURVE SMOOTH",
"557 281 OFFCURVE",
"552 284 OFFCURVE",
"543 285 CURVE SMOOTH",
"518 289 OFFCURVE",
"481 291 OFFCURVE",
"431 291 CURVE SMOOTH",
"400 291 LINE",
"448 359 OFFCURVE",
"493 409 OFFCURVE",
"535 440 CURVE SMOOTH",
"576 471 OFFCURVE",
"610 486 OFFCURVE",
"636 486 CURVE SMOOTH",
"658 486 OFFCURVE",
"678 478 OFFCURVE",
"697 461 CURVE",
"720 474 OFFCURVE",
"731 484 OFFCURVE",
"731 491 CURVE SMOOTH",
"731 494 OFFCURVE",
"729 496 OFFCURVE",
"726 497 CURVE SMOOTH",
"707 506 OFFCURVE",
"687 511 OFFCURVE",
"666 511 CURVE SMOOTH",
"613 511 OFFCURVE",
"560 490 OFFCURVE",
"506 448 CURVE SMOOTH",
"459 411 OFFCURVE",
"411 359 OFFCURVE",
"362 290 CURVE",
"356 289 OFFCURVE",
"351 289 OFFCURVE",
"345 289 CURVE SMOOTH",
"316 290 OFFCURVE",
"280 291 OFFCURVE",
"245 291 CURVE SMOOTH",
"207 291 LINE",
"255 359 OFFCURVE",
"300 409 OFFCURVE",
"342 440 CURVE SMOOTH",
"383 471 OFFCURVE",
"417 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"527 474 OFFCURVE",
"538 484 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"266 411 OFFCURVE",
"218 359 OFFCURVE",
"169 290 CURVE",
"160 289 OFFCURVE",
"151 289 OFFCURVE",
"141 288 CURVE SMOOTH",
"107 285 LINE SMOOTH",
"103 285 OFFCURVE",
"101 284 OFFCURVE",
"101 281 CURVE SMOOTH",
"101 276 OFFCURVE",
"106 269 OFFCURVE",
"115 260 CURVE SMOOTH",
"124 251 OFFCURVE",
"131 247 OFFCURVE",
"138 247 CURVE",
"53 122 OFFCURVE",
"-2 29 OFFCURVE",
"-27 -34 CURVE SMOOTH",
"-31 -43 OFFCURVE",
"-33 -53 OFFCURVE",
"-33 -62 CURVE SMOOTH",
"-33 -69 OFFCURVE",
"-32 -76 OFFCURVE",
"-29 -85 CURVE SMOOTH",
"-26 -94 OFFCURVE",
"-25 -99 OFFCURVE",
"-25 -101 CURVE SMOOTH",
"-25 -108 OFFCURVE",
"-22 -112 OFFCURVE",
"-17 -112 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"376 -5 OFFCURVE",
"394 3 OFFCURVE",
"423 18 CURVE",
"445 33 OFFCURVE",
"479 49 OFFCURVE",
"526 67 CURVE SMOOTH",
"537 71 OFFCURVE",
"550 76 OFFCURVE",
"566 81 CURVE SMOOTH",
"621 100 LINE SMOOTH",
"625 101 OFFCURVE",
"627 105 OFFCURVE",
"627 110 CURVE SMOOTH",
"627 113 OFFCURVE",
"626 117 OFFCURVE",
"625 121 CURVE",
"619 120 OFFCURVE",
"609 117 OFFCURVE",
"594 112 CURVE SMOOTH",
"579 107 OFFCURVE",
"560 101 OFFCURVE",
"537 92 CURVE SMOOTH",
"490 76 OFFCURVE",
"460 64 OFFCURVE",
"445 57 CURVE",
"521 155 LINE SMOOTH",
"555 199 OFFCURVE",
"576 232 OFFCURVE",
"583 255 CURVE SMOOTH",
"584 259 OFFCURVE",
"582 261 OFFCURVE",
"577 261 CURVE SMOOTH",
"568 261 OFFCURVE",
"554 257 OFFCURVE",
"535 248 CURVE SMOOTH",
"527 245 OFFCURVE",
"505 235 OFFCURVE",
"505 229 CURVE",
"497 193 OFFCURVE",
"472 148 OFFCURVE",
"444 107 CURVE SMOOTH",
"369 0 LINE SMOOTH",
"368 -1 OFFCURVE",
"368 -2 OFFCURVE",
"368 -3 CURVE SMOOTH",
"368 -4 OFFCURVE",
"369 -5 OFFCURVE",
"370 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"634 339 OFFCURVE",
"654 343 OFFCURVE",
"659 345 CURVE SMOOTH",
"662 346 OFFCURVE",
"668 350 OFFCURVE",
"675 355 CURVE SMOOTH",
"682 360 OFFCURVE",
"692 368 OFFCURVE",
"705 377 CURVE SMOOTH",
"707 378 OFFCURVE",
"708 379 OFFCURVE",
"708 382 CURVE SMOOTH",
"708 391 OFFCURVE",
"685 402 OFFCURVE",
"666 402 CURVE SMOOTH",
"655 402 OFFCURVE",
"649 399 OFFCURVE",
"646 392 CURVE",
"637 381 OFFCURVE",
"629 370 OFFCURVE",
"622 361 CURVE SMOOTH",
"615 351 OFFCURVE",
"607 342 OFFCURVE",
"600 333 CURVE"
);
}
);
width = 616;
}
);
leftKerningGroup = f;
leftMetricsKey = f;
rightKerningGroup = i;
},
{
glyphname = f_f_l;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-9 -112 OFFCURVE",
"2 -101 OFFCURVE",
"2 -90 CURVE SMOOTH",
"2 -67 OFFCURVE",
"8 -44 OFFCURVE",
"19 -20 CURVE SMOOTH",
"54 51 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"181 253 OFFCURVE",
"197 262 OFFCURVE",
"217 263 CURVE SMOOTH",
"246 265 OFFCURVE",
"275 266 OFFCURVE",
"302 267 CURVE",
"308 260 LINE SMOOTH",
"316 250 OFFCURVE",
"324 247 OFFCURVE",
"331 247 CURVE",
"246 122 OFFCURVE",
"191 29 OFFCURVE",
"166 -34 CURVE SMOOTH",
"162 -43 OFFCURVE",
"160 -53 OFFCURVE",
"160 -62 CURVE SMOOTH",
"160 -69 OFFCURVE",
"161 -76 OFFCURVE",
"164 -85 CURVE SMOOTH",
"167 -94 OFFCURVE",
"168 -99 OFFCURVE",
"168 -101 CURVE SMOOTH",
"168 -108 OFFCURVE",
"171 -112 OFFCURVE",
"176 -112 CURVE SMOOTH",
"184 -112 OFFCURVE",
"195 -101 OFFCURVE",
"195 -90 CURVE SMOOTH",
"195 -67 OFFCURVE",
"201 -44 OFFCURVE",
"212 -20 CURVE SMOOTH",
"247 51 OFFCURVE",
"296 135 OFFCURVE",
"363 235 CURVE SMOOTH",
"374 253 OFFCURVE",
"390 262 OFFCURVE",
"410 263 CURVE SMOOTH",
"455 266 OFFCURVE",
"498 267 OFFCURVE",
"538 267 CURVE SMOOTH",
"551 267 OFFCURVE",
"557 270 OFFCURVE",
"557 276 CURVE SMOOTH",
"557 281 OFFCURVE",
"552 284 OFFCURVE",
"543 285 CURVE SMOOTH",
"518 289 OFFCURVE",
"481 291 OFFCURVE",
"431 291 CURVE SMOOTH",
"400 291 LINE",
"448 359 OFFCURVE",
"493 409 OFFCURVE",
"535 440 CURVE SMOOTH",
"576 471 OFFCURVE",
"610 486 OFFCURVE",
"636 486 CURVE SMOOTH",
"658 486 OFFCURVE",
"678 478 OFFCURVE",
"697 461 CURVE",
"720 474 OFFCURVE",
"731 484 OFFCURVE",
"731 491 CURVE SMOOTH",
"731 494 OFFCURVE",
"729 496 OFFCURVE",
"726 497 CURVE SMOOTH",
"707 506 OFFCURVE",
"687 511 OFFCURVE",
"666 511 CURVE SMOOTH",
"613 511 OFFCURVE",
"560 490 OFFCURVE",
"506 448 CURVE SMOOTH",
"459 411 OFFCURVE",
"411 359 OFFCURVE",
"362 290 CURVE",
"356 289 OFFCURVE",
"351 289 OFFCURVE",
"345 289 CURVE SMOOTH",
"316 290 OFFCURVE",
"280 291 OFFCURVE",
"245 291 CURVE SMOOTH",
"207 291 LINE",
"255 359 OFFCURVE",
"300 409 OFFCURVE",
"342 440 CURVE SMOOTH",
"383 471 OFFCURVE",
"417 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"527 474 OFFCURVE",
"538 484 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"266 411 OFFCURVE",
"218 359 OFFCURVE",
"169 290 CURVE",
"160 289 OFFCURVE",
"151 289 OFFCURVE",
"141 288 CURVE SMOOTH",
"107 285 LINE SMOOTH",
"103 285 OFFCURVE",
"101 284 OFFCURVE",
"101 281 CURVE SMOOTH",
"101 276 OFFCURVE",
"106 269 OFFCURVE",
"115 260 CURVE SMOOTH",
"124 251 OFFCURVE",
"131 247 OFFCURVE",
"138 247 CURVE",
"53 122 OFFCURVE",
"-2 29 OFFCURVE",
"-27 -34 CURVE SMOOTH",
"-31 -43 OFFCURVE",
"-33 -53 OFFCURVE",
"-33 -62 CURVE SMOOTH",
"-33 -69 OFFCURVE",
"-32 -76 OFFCURVE",
"-29 -85 CURVE SMOOTH",
"-26 -94 OFFCURVE",
"-25 -99 OFFCURVE",
"-25 -101 CURVE SMOOTH",
"-25 -108 OFFCURVE",
"-22 -112 OFFCURVE",
"-17 -112 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"495 3 OFFCURVE",
"519 13 OFFCURVE",
"546 28 CURVE SMOOTH",
"557 34 OFFCURVE",
"567 40 OFFCURVE",
"577 46 CURVE SMOOTH",
"587 52 OFFCURVE",
"597 58 OFFCURVE",
"608 63 CURVE SMOOTH",
"611 65 OFFCURVE",
"613 73 OFFCURVE",
"613 86 CURVE",
"589 69 OFFCURVE",
"499 25 OFFCURVE",
"483 25 CURVE SMOOTH",
"468 25 OFFCURVE",
"462 44 OFFCURVE",
"462 57 CURVE SMOOTH",
"462 86 OFFCURVE",
"508 162 OFFCURVE",
"600 283 CURVE SMOOTH",
"680 388 OFFCURVE",
"739 459 OFFCURVE",
"776 495 CURVE SMOOTH",
"807 526 OFFCURVE",
"828 541 OFFCURVE",
"839 541 CURVE SMOOTH",
"850 541 OFFCURVE",
"855 544 OFFCURVE",
"855 550 CURVE SMOOTH",
"855 557 OFFCURVE",
"850 560 OFFCURVE",
"841 560 CURVE SMOOTH",
"832 560 OFFCURVE",
"815 555 OFFCURVE",
"789 544 CURVE SMOOTH",
"762 534 OFFCURVE",
"747 527 OFFCURVE",
"744 522 CURVE",
"551 287 OFFCURVE",
"440 131 OFFCURVE",
"413 53 CURVE",
"415 35 OFFCURVE",
"424 20 OFFCURVE",
"439 9 CURVE SMOOTH",
"452 0 OFFCURVE",
"463 -4 OFFCURVE",
"472 -2 CURVE SMOOTH"
);
}
);
width = 589;
}
);
leftKerningGroup = f;
leftMetricsKey = f;
rightKerningGroup = l;
},
{
glyphname = fi;
lastChange = "2022-03-25 00:46:13 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-9 -112 OFFCURVE",
"2 -101 OFFCURVE",
"2 -90 CURVE SMOOTH",
"2 -67 OFFCURVE",
"8 -44 OFFCURVE",
"19 -20 CURVE SMOOTH",
"54 51 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"181 253 OFFCURVE",
"197 262 OFFCURVE",
"217 263 CURVE SMOOTH",
"246 266 OFFCURVE",
"258 267 OFFCURVE",
"321 267 CURVE",
"294 210 OFFCURVE",
"258 148 OFFCURVE",
"230 107 CURVE SMOOTH",
"155 0 LINE SMOOTH",
"154 -1 OFFCURVE",
"154 -2 OFFCURVE",
"154 -3 CURVE SMOOTH",
"154 -4 OFFCURVE",
"155 -5 OFFCURVE",
"156 -5 CURVE SMOOTH",
"162 -5 OFFCURVE",
"180 3 OFFCURVE",
"209 18 CURVE",
"231 33 OFFCURVE",
"265 49 OFFCURVE",
"312 67 CURVE SMOOTH",
"323 71 OFFCURVE",
"336 76 OFFCURVE",
"352 81 CURVE SMOOTH",
"407 100 LINE SMOOTH",
"411 101 OFFCURVE",
"413 105 OFFCURVE",
"413 110 CURVE SMOOTH",
"413 113 OFFCURVE",
"412 117 OFFCURVE",
"411 121 CURVE",
"405 120 OFFCURVE",
"395 117 OFFCURVE",
"380 112 CURVE SMOOTH",
"365 107 OFFCURVE",
"346 101 OFFCURVE",
"323 92 CURVE SMOOTH",
"276 76 OFFCURVE",
"246 64 OFFCURVE",
"231 57 CURVE",
"307 155 LINE SMOOTH",
"340 198 OFFCURVE",
"368 235 OFFCURVE",
"376 259 CURVE",
"376 262 OFFCURVE",
"380 276 OFFCURVE",
"380 283 CURVE SMOOTH",
"380 285 OFFCURVE",
"379 287 OFFCURVE",
"378 287 CURVE SMOOTH",
"207 291 LINE",
"255 359 OFFCURVE",
"300 409 OFFCURVE",
"342 440 CURVE SMOOTH",
"383 471 OFFCURVE",
"417 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"527 474 OFFCURVE",
"538 484 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"266 411 OFFCURVE",
"218 359 OFFCURVE",
"169 290 CURVE",
"160 289 OFFCURVE",
"151 289 OFFCURVE",
"141 288 CURVE SMOOTH",
"107 285 LINE SMOOTH",
"103 285 OFFCURVE",
"101 284 OFFCURVE",
"101 281 CURVE SMOOTH",
"101 276 OFFCURVE",
"106 269 OFFCURVE",
"115 260 CURVE SMOOTH",
"124 251 OFFCURVE",
"131 247 OFFCURVE",
"138 247 CURVE",
"53 122 OFFCURVE",
"-2 29 OFFCURVE",
"-27 -34 CURVE SMOOTH",
"-31 -43 OFFCURVE",
"-33 -53 OFFCURVE",
"-33 -62 CURVE SMOOTH",
"-33 -69 OFFCURVE",
"-32 -76 OFFCURVE",
"-29 -85 CURVE SMOOTH",
"-26 -94 OFFCURVE",
"-25 -99 OFFCURVE",
"-25 -101 CURVE SMOOTH",
"-25 -108 OFFCURVE",
"-22 -112 OFFCURVE",
"-17 -112 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"420 339 OFFCURVE",
"440 343 OFFCURVE",
"445 345 CURVE SMOOTH",
"448 346 OFFCURVE",
"454 350 OFFCURVE",
"461 355 CURVE SMOOTH",
"468 360 OFFCURVE",
"478 368 OFFCURVE",
"491 377 CURVE SMOOTH",
"493 378 OFFCURVE",
"494 379 OFFCURVE",
"494 382 CURVE SMOOTH",
"494 391 OFFCURVE",
"471 402 OFFCURVE",
"452 402 CURVE SMOOTH",
"441 402 OFFCURVE",
"435 399 OFFCURVE",
"432 392 CURVE",
"423 381 OFFCURVE",
"415 370 OFFCURVE",
"408 361 CURVE SMOOTH",
"401 351 OFFCURVE",
"393 342 OFFCURVE",
"386 333 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01224 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01226 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01267 1063 75 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 1061 30 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 415;
}
);
leftKerningGroup = f;
note = fi;
rightKerningGroup = i;
unicode = FB01;
},
{
glyphname = fl;
lastChange = "2022-03-25 00:46:13 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-9 -112 OFFCURVE",
"2 -101 OFFCURVE",
"2 -90 CURVE SMOOTH",
"2 -67 OFFCURVE",
"8 -44 OFFCURVE",
"19 -20 CURVE SMOOTH",
"54 51 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"181 253 OFFCURVE",
"197 262 OFFCURVE",
"217 263 CURVE SMOOTH",
"262 266 OFFCURVE",
"286 267 OFFCURVE",
"326 267 CURVE SMOOTH",
"339 267 OFFCURVE",
"345 270 OFFCURVE",
"345 276 CURVE SMOOTH",
"345 281 OFFCURVE",
"340 284 OFFCURVE",
"331 285 CURVE SMOOTH",
"304 290 OFFCURVE",
"252 291 OFFCURVE",
"207 291 CURVE",
"255 359 OFFCURVE",
"300 409 OFFCURVE",
"342 440 CURVE SMOOTH",
"383 471 OFFCURVE",
"417 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"527 474 OFFCURVE",
"538 484 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"266 411 OFFCURVE",
"218 359 OFFCURVE",
"169 290 CURVE",
"160 289 OFFCURVE",
"151 289 OFFCURVE",
"141 288 CURVE SMOOTH",
"107 285 LINE SMOOTH",
"103 285 OFFCURVE",
"101 284 OFFCURVE",
"101 281 CURVE SMOOTH",
"101 276 OFFCURVE",
"106 269 OFFCURVE",
"115 260 CURVE SMOOTH",
"124 251 OFFCURVE",
"131 247 OFFCURVE",
"138 247 CURVE",
"53 122 OFFCURVE",
"-2 29 OFFCURVE",
"-27 -34 CURVE SMOOTH",
"-31 -43 OFFCURVE",
"-33 -53 OFFCURVE",
"-33 -62 CURVE SMOOTH",
"-33 -69 OFFCURVE",
"-32 -76 OFFCURVE",
"-29 -85 CURVE SMOOTH",
"-26 -94 OFFCURVE",
"-25 -99 OFFCURVE",
"-25 -101 CURVE SMOOTH",
"-25 -108 OFFCURVE",
"-22 -112 OFFCURVE",
"-17 -112 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"292 3 OFFCURVE",
"316 13 OFFCURVE",
"343 28 CURVE SMOOTH",
"354 34 OFFCURVE",
"364 40 OFFCURVE",
"374 46 CURVE SMOOTH",
"384 52 OFFCURVE",
"394 58 OFFCURVE",
"405 63 CURVE SMOOTH",
"408 65 OFFCURVE",
"410 73 OFFCURVE",
"410 86 CURVE",
"385 71 OFFCURVE",
"345 51 OFFCURVE",
"288 26 CURVE SMOOTH",
"286 25 OFFCURVE",
"283 25 OFFCURVE",
"280 25 CURVE SMOOTH",
"269 25 OFFCURVE",
"263 33 OFFCURVE",
"260 50 CURVE",
"259 51 OFFCURVE",
"259 54 OFFCURVE",
"259 57 CURVE SMOOTH",
"259 86 OFFCURVE",
"305 162 OFFCURVE",
"397 283 CURVE SMOOTH",
"477 388 OFFCURVE",
"536 459 OFFCURVE",
"573 495 CURVE SMOOTH",
"604 526 OFFCURVE",
"625 541 OFFCURVE",
"636 541 CURVE SMOOTH",
"647 541 OFFCURVE",
"652 544 OFFCURVE",
"652 550 CURVE SMOOTH",
"652 557 OFFCURVE",
"647 560 OFFCURVE",
"638 560 CURVE SMOOTH",
"629 560 OFFCURVE",
"612 555 OFFCURVE",
"586 544 CURVE SMOOTH",
"559 534 OFFCURVE",
"544 527 OFFCURVE",
"541 522 CURVE",
"348 287 OFFCURVE",
"237 131 OFFCURVE",
"210 53 CURVE",
"212 35 OFFCURVE",
"221 20 OFFCURVE",
"236 9 CURVE SMOOTH",
"249 0 OFFCURVE",
"260 -4 OFFCURVE",
"269 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01253 1063 6 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1064 21 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01240 31 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01268 31 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 386;
}
);
leftKerningGroup = f;
leftMetricsKey = f;
note = fl;
rightKerningGroup = l;
rightMetricsKey = l;
unicode = FB02;
},
{
glyphname = ordfeminine;
lastChange = "2022-03-22 10:12:22 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"121 226 OFFCURVE",
"126 228 OFFCURVE",
"133 231 CURVE SMOOTH",
"155 241 OFFCURVE",
"186 261 OFFCURVE",
"225 293 CURVE SMOOTH",
"236 302 OFFCURVE",
"245 310 OFFCURVE",
"253 317 CURVE SMOOTH",
"269 330 LINE",
"259 307 OFFCURVE",
"254 285 OFFCURVE",
"254 260 CURVE SMOOTH",
"254 244 OFFCURVE",
"257 234 OFFCURVE",
"263 234 CURVE SMOOTH",
"270 234 OFFCURVE",
"276 243 OFFCURVE",
"276 249 CURVE SMOOTH",
"276 250 LINE",
"276 257 LINE SMOOTH",
"276 275 OFFCURVE",
"285 301 OFFCURVE",
"304 337 CURVE SMOOTH",
"320 369 OFFCURVE",
"334 391 OFFCURVE",
"344 403 CURVE",
"346 404 OFFCURVE",
"346 405 OFFCURVE",
"346 407 CURVE SMOOTH",
"346 410 OFFCURVE",
"344 410 OFFCURVE",
"341 410 CURVE SMOOTH",
"330 410 OFFCURVE",
"320 406 OFFCURVE",
"312 401 CURVE",
"305 406 OFFCURVE",
"294 409 OFFCURVE",
"280 409 CURVE SMOOTH",
"254 409 OFFCURVE",
"221 393 OFFCURVE",
"180 359 CURVE SMOOTH",
"147 331 OFFCURVE",
"123 303 OFFCURVE",
"108 275 CURVE SMOOTH",
"103 265 OFFCURVE",
"99 254 OFFCURVE",
"99 245 CURVE SMOOTH",
"99 233 OFFCURVE",
"105 226 OFFCURVE",
"115 226 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"139 257 OFFCURVE",
"138 257 OFFCURVE",
"138 263 CURVE SMOOTH",
"138 268 OFFCURVE",
"139 274 OFFCURVE",
"143 280 CURVE SMOOTH",
"153 297 OFFCURVE",
"175 320 OFFCURVE",
"210 348 CURVE SMOOTH",
"241 372 OFFCURVE",
"263 384 OFFCURVE",
"277 384 CURVE SMOOTH",
"283 384 OFFCURVE",
"287 380 OFFCURVE",
"289 375 CURVE",
"277 363 OFFCURVE",
"253 343 OFFCURVE",
"217 313 CURVE SMOOTH",
"210 307 OFFCURVE",
"204 302 OFFCURVE",
"198 298 CURVE",
"188 289 OFFCURVE",
"178 282 OFFCURVE",
"170 276 CURVE SMOOTH",
"157 267 OFFCURVE",
"148 261 OFFCURVE",
"141 258 CURVE SMOOTH"
);
}
);
width = 220;
}
);
leftKerningGroup = ord;
note = ordfeminine;
rightKerningGroup = ord;
unicode = 00AA;
},
{
glyphname = ordmasculine;
lastChange = "2022-03-22 13:53:52 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"134 225 OFFCURVE",
"143 227 OFFCURVE",
"150 229 CURVE SMOOTH",
"179 237 OFFCURVE",
"211 255 OFFCURVE",
"245 281 CURVE SMOOTH",
"260 292 OFFCURVE",
"276 307 OFFCURVE",
"288 324 CURVE SMOOTH",
"303 345 OFFCURVE",
"311 362 OFFCURVE",
"311 374 CURVE SMOOTH",
"311 378 LINE",
"310 378 OFFCURVE",
"310 379 OFFCURVE",
"310 380 CURVE",
"316 380 OFFCURVE",
"323 381 OFFCURVE",
"331 382 CURVE SMOOTH",
"338 383 OFFCURVE",
"343 386 OFFCURVE",
"343 390 CURVE SMOOTH",
"343 394 OFFCURVE",
"339 397 OFFCURVE",
"331 397 CURVE SMOOTH",
"267 396 LINE",
"267 396 OFFCURVE",
"265 397 OFFCURVE",
"264 398 CURVE",
"248 406 LINE SMOOTH",
"244 408 OFFCURVE",
"239 411 OFFCURVE",
"233 412 CURVE SMOOTH",
"228 412 OFFCURVE",
"222 411 OFFCURVE",
"217 408 CURVE SMOOTH",
"201 398 LINE",
"187 394 OFFCURVE",
"177 393 OFFCURVE",
"170 393 CURVE SMOOTH",
"162 393 OFFCURVE",
"158 389 OFFCURVE",
"158 383 CURVE SMOOTH",
"158 378 OFFCURVE",
"161 375 OFFCURVE",
"167 373 CURVE SMOOTH",
"171 372 OFFCURVE",
"174 371 OFFCURVE",
"176 370 CURVE SMOOTH",
"178 369 OFFCURVE",
"180 373 OFFCURVE",
"179 373 CURVE",
"177 372 LINE",
"161 353 OFFCURVE",
"149 338 OFFCURVE",
"140 326 CURVE SMOOTH",
"117 300 OFFCURVE",
"105 275 OFFCURVE",
"105 250 CURVE SMOOTH",
"105 234 OFFCURVE",
"114 225 OFFCURVE",
"129 225 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"130 244 OFFCURVE",
"128 245 OFFCURVE",
"128 250 CURVE SMOOTH",
"128 253 LINE SMOOTH",
"129 260 OFFCURVE",
"133 270 OFFCURVE",
"143 285 CURVE SMOOTH",
"151 298 OFFCURVE",
"159 309 OFFCURVE",
"166 318 CURVE SMOOTH",
"188 344 OFFCURVE",
"205 362 OFFCURVE",
"217 370 CURVE SMOOTH",
"225 374 OFFCURVE",
"237 377 OFFCURVE",
"254 377 CURVE SMOOTH",
"280 377 LINE",
"283 374 OFFCURVE",
"284 371 OFFCURVE",
"284 368 CURVE SMOOTH",
"284 359 OFFCURVE",
"277 345 OFFCURVE",
"264 328 CURVE SMOOTH",
"253 314 OFFCURVE",
"242 302 OFFCURVE",
"230 294 CURVE SMOOTH",
"198 270 OFFCURVE",
"168 253 OFFCURVE",
"141 245 CURVE SMOOTH",
"139 244 OFFCURVE",
"137 244 OFFCURVE",
"135 244 CURVE SMOOTH"
);
}
);
width = 196;
}
);
leftKerningGroup = ord;
note = ordmasculine;
rightKerningGroup = ord;
unicode = 00BA;
},
{
glyphname = Omega;
lastChange = "2022-03-21 16:38:52 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"364 -8 OFFCURVE",
"366 -7 OFFCURVE",
"368 -6 CURVE",
"368 -5 LINE SMOOTH",
"368 -4 OFFCURVE",
"368 -4 OFFCURVE",
"369 -4 CURVE",
"378 2 OFFCURVE",
"388 4 OFFCURVE",
"397 4 CURVE SMOOTH",
"420 4 OFFCURVE",
"443 -8 OFFCURVE",
"473 -8 CURVE SMOOTH",
"500 -8 OFFCURVE",
"527 4 OFFCURVE",
"547 60 CURVE",
"548 65 OFFCURVE",
"549 69 OFFCURVE",
"549 72 CURVE SMOOTH",
"549 76 OFFCURVE",
"548 78 OFFCURVE",
"546 78 CURVE SMOOTH",
"543 78 OFFCURVE",
"538 72 OFFCURVE",
"534 62 CURVE SMOOTH",
"521 27 OFFCURVE",
"503 17 OFFCURVE",
"480 17 CURVE SMOOTH",
"467 17 OFFCURVE",
"453 19 OFFCURVE",
"439 24 CURVE SMOOTH",
"424 29 OFFCURVE",
"410 32 OFFCURVE",
"397 33 CURVE",
"410 54 OFFCURVE",
"425 77 OFFCURVE",
"442 101 CURVE SMOOTH",
"458 124 OFFCURVE",
"472 149 OFFCURVE",
"483 174 CURVE SMOOTH",
"500 210 OFFCURVE",
"516 264 OFFCURVE",
"527 305 CURVE SMOOTH",
"534 337 OFFCURVE",
"537 369 OFFCURVE",
"537 398 CURVE SMOOTH",
"537 485 OFFCURVE",
"507 550 OFFCURVE",
"460 587 CURVE SMOOTH",
"429 612 OFFCURVE",
"389 625 OFFCURVE",
"349 625 CURVE SMOOTH",
"274 625 OFFCURVE",
"197 584 OFFCURVE",
"150 516 CURVE SMOOTH",
"115 465 OFFCURVE",
"104 406 OFFCURVE",
"104 342 CURVE SMOOTH",
"104 230 OFFCURVE",
"146 109 OFFCURVE",
"202 26 CURVE",
"185 26 OFFCURVE",
"99 55 OFFCURVE",
"67 55 CURVE SMOOTH",
"37 55 OFFCURVE",
"15 45 OFFCURVE",
"15 16 CURVE SMOOTH",
"15 -3 OFFCURVE",
"33 -12 OFFCURVE",
"33 1 CURVE SMOOTH",
"33 8 OFFCURVE",
"35 21 OFFCURVE",
"44 24 CURVE SMOOTH",
"50 25 OFFCURVE",
"56 26 OFFCURVE",
"62 26 CURVE SMOOTH",
"101 26 OFFCURVE",
"143 7 OFFCURVE",
"184 7 CURVE SMOOTH",
"195 7 OFFCURVE",
"206 8 OFFCURVE",
"217 12 CURVE",
"223 16 OFFCURVE",
"226 21 OFFCURVE",
"226 27 CURVE SMOOTH",
"226 31 OFFCURVE",
"224 36 OFFCURVE",
"221 40 CURVE SMOOTH",
"174 110 OFFCURVE",
"143 230 OFFCURVE",
"143 326 CURVE SMOOTH",
"143 378 OFFCURVE",
"151 426 OFFCURVE",
"170 462 CURVE SMOOTH",
"207 533 OFFCURVE",
"273 566 OFFCURVE",
"334 566 CURVE SMOOTH",
"404 566 OFFCURVE",
"468 523 OFFCURVE",
"486 448 CURVE SMOOTH",
"491 425 OFFCURVE",
"494 402 OFFCURVE",
"494 375 CURVE SMOOTH",
"494 251 OFFCURVE",
"431 83 OFFCURVE",
"353 21 CURVE",
"352 17 OFFCURVE",
"351 13 OFFCURVE",
"351 10 CURVE SMOOTH",
"351 0 OFFCURVE",
"355 -8 OFFCURVE",
"362 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01259 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01264 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01266 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01247 1061 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01250 1062 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 567;
}
);
note = uni03A9;
unicode = 03A9;
},
{
glyphname = pi;
lastChange = "2022-03-22 10:23:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"286 10 OFFCURVE",
"293 12 OFFCURVE",
"302 15 CURVE SMOOTH",
"317 20 OFFCURVE",
"337 44 OFFCURVE",
"361 87 CURVE SMOOTH",
"385 130 OFFCURVE",
"397 159 OFFCURVE",
"397 176 CURVE SMOOTH",
"397 179 OFFCURVE",
"396 180 OFFCURVE",
"395 180 CURVE SMOOTH",
"392 180 OFFCURVE",
"390 176 OFFCURVE",
"387 168 CURVE SMOOTH",
"382 159 OFFCURVE",
"378 149 OFFCURVE",
"374 139 CURVE SMOOTH",
"362 109 LINE SMOOTH",
"351 85 OFFCURVE",
"339 67 OFFCURVE",
"328 56 CURVE SMOOTH",
"311 39 OFFCURVE",
"297 30 OFFCURVE",
"287 30 CURVE SMOOTH",
"270 30 OFFCURVE",
"262 53 OFFCURVE",
"262 98 CURVE SMOOTH",
"262 133 OFFCURVE",
"267 175 OFFCURVE",
"276 223 CURVE SMOOTH",
"284 264 OFFCURVE",
"292 306 OFFCURVE",
"301 347 CURVE",
"342 343 OFFCURVE",
"376 358 OFFCURVE",
"402 392 CURVE",
"409 399 OFFCURVE",
"412 408 OFFCURVE",
"412 417 CURVE SMOOTH",
"412 422 OFFCURVE",
"411 424 OFFCURVE",
"409 424 CURVE SMOOTH",
"410 424 OFFCURVE",
"402 417 OFFCURVE",
"386 403 CURVE SMOOTH",
"371 389 OFFCURVE",
"352 382 OFFCURVE",
"331 382 CURVE SMOOTH",
"310 382 OFFCURVE",
"280 390 OFFCURVE",
"243 407 CURVE SMOOTH",
"206 424 OFFCURVE",
"176 432 OFFCURVE",
"155 432 CURVE SMOOTH",
"112 432 OFFCURVE",
"75 409 OFFCURVE",
"42 363 CURVE SMOOTH",
"35 354 OFFCURVE",
"32 346 OFFCURVE",
"32 338 CURVE SMOOTH",
"32 333 OFFCURVE",
"33 331 OFFCURVE",
"36 331 CURVE SMOOTH",
"37 331 OFFCURVE",
"39 333 OFFCURVE",
"42 336 CURVE SMOOTH",
"59 355 OFFCURVE",
"74 366 OFFCURVE",
"85 373 CURVE",
"100 380 OFFCURVE",
"118 384 OFFCURVE",
"141 384 CURVE SMOOTH",
"146 384 LINE",
"146 343 OFFCURVE",
"140 283 OFFCURVE",
"129 203 CURVE SMOOTH",
"117 107 LINE SMOOTH",
"114 83 OFFCURVE",
"112 66 OFFCURVE",
"112 57 CURVE SMOOTH",
"112 52 OFFCURVE",
"115 49 OFFCURVE",
"120 49 CURVE SMOOTH",
"123 49 OFFCURVE",
"126 51 OFFCURVE",
"127 55 CURVE",
"142 88 OFFCURVE",
"154 141 OFFCURVE",
"164 214 CURVE SMOOTH",
"173 275 OFFCURVE",
"177 331 OFFCURVE",
"178 380 CURVE",
"217 369 OFFCURVE",
"246 361 OFFCURVE",
"265 354 CURVE",
"246 280 OFFCURVE",
"236 194 OFFCURVE",
"236 95 CURVE SMOOTH",
"236 38 OFFCURVE",
"250 10 OFFCURVE",
"279 10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01231 1070 36 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 31 118 31 134 31 150 31 166 31 182 31 198 31 214 31 230 31 246 31 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 31 22 31 38 31 54 31 70 31 86 31 102 31 118 31 134 31 150 31 166 31 182 31 198 31 214 31 230 31 246 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 31 22 31 38 31 54 31 70 31 86 31 102 31 118 31 134 31 150 31 166 31 182 31 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 31 213 31 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01210 1067 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01212 1062 29 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 401;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = zero;
lastChange = "2022-03-22 14:16:02 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"205 -25 OFFCURVE",
"255 -12 OFFCURVE",
"311 13 CURVE SMOOTH",
"366 39 OFFCURVE",
"413 72 OFFCURVE",
"453 113 CURVE SMOOTH",
"536 198 OFFCURVE",
"578 278 OFFCURVE",
"578 353 CURVE SMOOTH",
"578 428 OFFCURVE",
"531 466 OFFCURVE",
"436 466 CURVE SMOOTH",
"359 466 OFFCURVE",
"290 449 OFFCURVE",
"228 417 CURVE SMOOTH",
"154 380 OFFCURVE",
"117 331 OFFCURVE",
"117 271 CURVE SMOOTH",
"117 266 OFFCURVE",
"118 261 OFFCURVE",
"119 254 CURVE",
"90 217 OFFCURVE",
"69 177 OFFCURVE",
"58 132 CURVE SMOOTH",
"53 111 OFFCURVE",
"50 92 OFFCURVE",
"50 77 CURVE SMOOTH",
"50 9 OFFCURVE",
"87 -25 OFFCURVE",
"162 -25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"115 -4 OFFCURVE",
"87 21 OFFCURVE",
"87 72 CURVE SMOOTH",
"87 87 OFFCURVE",
"89 103 OFFCURVE",
"94 119 CURVE SMOOTH",
"100 142 OFFCURVE",
"115 171 OFFCURVE",
"139 208 CURVE",
"148 195 OFFCURVE",
"156 188 OFFCURVE",
"163 188 CURVE SMOOTH",
"167 188 OFFCURVE",
"169 190 OFFCURVE",
"169 195 CURVE SMOOTH",
"169 204 OFFCURVE",
"163 215 OFFCURVE",
"151 228 CURVE",
"185 275 OFFCURVE",
"234 317 OFFCURVE",
"297 353 CURVE SMOOTH",
"343 378 OFFCURVE",
"385 396 OFFCURVE",
"422 406 CURVE SMOOTH",
"426 407 OFFCURVE",
"428 410 OFFCURVE",
"428 415 CURVE SMOOTH",
"428 421 OFFCURVE",
"425 428 OFFCURVE",
"419 435 CURVE",
"433 435 LINE SMOOTH",
"510 438 OFFCURVE",
"549 410 OFFCURVE",
"549 349 CURVE SMOOTH",
"549 284 OFFCURVE",
"511 211 OFFCURVE",
"436 128 CURVE SMOOTH",
"403 91 OFFCURVE",
"360 60 OFFCURVE",
"308 35 CURVE SMOOTH",
"256 9 OFFCURVE",
"210 -4 OFFCURVE",
"170 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"146 323 OFFCURVE",
"173 359 OFFCURVE",
"222 386 CURVE SMOOTH",
"263 409 OFFCURVE",
"313 425 OFFCURVE",
"373 432 CURVE",
"282 396 OFFCURVE",
"205 345 OFFCURVE",
"142 280 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 31 218 31 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01220 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01222 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01227 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01234 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01248 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01252 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 52 213 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01254 1061 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 1064 33 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 502;
}
);
leftKerningGroup = zero;
note = zero;
rightKerningGroup = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2022-03-22 15:03:21 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"23 -36 OFFCURVE",
"58 -20 OFFCURVE",
"91 12 CURVE",
"102 17 OFFCURVE",
"112 21 OFFCURVE",
"123 25 CURVE SMOOTH",
"134 29 OFFCURVE",
"145 33 OFFCURVE",
"156 38 CURVE SMOOTH",
"182 47 OFFCURVE",
"203 52 OFFCURVE",
"219 52 CURVE SMOOTH",
"242 52 LINE SMOOTH",
"253 52 OFFCURVE",
"259 56 OFFCURVE",
"259 65 CURVE SMOOTH",
"259 73 OFFCURVE",
"253 77 OFFCURVE",
"242 77 CURVE SMOOTH",
"219 77 LINE SMOOTH",
"192 77 OFFCURVE",
"158 70 OFFCURVE",
"117 57 CURVE",
"177 168 OFFCURVE",
"221 248 OFFCURVE",
"252 301 CURVE SMOOTH",
"269 330 OFFCURVE",
"289 362 OFFCURVE",
"312 397 CURVE SMOOTH",
"329 420 OFFCURVE",
"337 433 OFFCURVE",
"337 438 CURVE",
"320 440 OFFCURVE",
"295 427 OFFCURVE",
"262 399 CURVE SMOOTH",
"239 380 OFFCURVE",
"221 364 OFFCURVE",
"207 353 CURVE SMOOTH",
"193 341 OFFCURVE",
"183 333 OFFCURVE",
"176 330 CURVE SMOOTH",
"163 323 OFFCURVE",
"157 315 OFFCURVE",
"157 306 CURVE SMOOTH",
"157 303 OFFCURVE",
"158 302 OFFCURVE",
"161 302 CURVE SMOOTH",
"162 302 OFFCURVE",
"165 303 OFFCURVE",
"168 305 CURVE SMOOTH",
"209 328 OFFCURVE",
"235 345 OFFCURVE",
"246 355 CURVE",
"241 346 OFFCURVE",
"236 339 OFFCURVE",
"233 333 CURVE SMOOTH",
"229 326 OFFCURVE",
"226 321 OFFCURVE",
"223 317 CURVE",
"183 246 OFFCURVE",
"151 188 OFFCURVE",
"126 143 CURVE SMOOTH",
"101 97 OFFCURVE",
"82 63 OFFCURVE",
"71 42 CURVE",
"42 33 LINE SMOOTH",
"32 30 OFFCURVE",
"22 26 OFFCURVE",
"12 23 CURVE SMOOTH",
"-10 14 OFFCURVE",
"-27 3 OFFCURVE",
"-38 -10 CURVE",
"-39 -12 OFFCURVE",
"-39 -14 OFFCURVE",
"-39 -17 CURVE SMOOTH",
"-39 -30 OFFCURVE",
"-30 -36 OFFCURVE",
"-13 -36 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
leftKerningGroup = one;
note = one;
rightKerningGroup = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2022-03-22 14:14:38 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"24 -14 OFFCURVE",
"47 -7 OFFCURVE",
"82 7 CURVE SMOOTH",
"125 24 OFFCURVE",
"155 34 OFFCURVE",
"172 39 CURVE SMOOTH",
"217 51 OFFCURVE",
"252 57 OFFCURVE",
"279 57 CURVE SMOOTH",
"314 57 OFFCURVE",
"346 50 OFFCURVE",
"346 22 CURVE SMOOTH",
"346 15 OFFCURVE",
"343 9 OFFCURVE",
"337 4 CURVE SMOOTH",
"331 -1 OFFCURVE",
"328 -4 OFFCURVE",
"328 -7 CURVE SMOOTH",
"328 -12 OFFCURVE",
"331 -14 OFFCURVE",
"338 -14 CURVE SMOOTH",
"343 -14 OFFCURVE",
"347 -13 OFFCURVE",
"352 -10 CURVE SMOOTH",
"374 3 OFFCURVE",
"385 18 OFFCURVE",
"385 35 CURVE SMOOTH",
"385 52 OFFCURVE",
"379 63 OFFCURVE",
"366 68 CURVE SMOOTH",
"351 75 OFFCURVE",
"327 78 OFFCURVE",
"294 78 CURVE SMOOTH",
"259 78 OFFCURVE",
"221 75 OFFCURVE",
"178 68 CURVE SMOOTH",
"138 61 OFFCURVE",
"109 54 OFFCURVE",
"90 47 CURVE",
"121 84 OFFCURVE",
"157 118 OFFCURVE",
"196 147 CURVE SMOOTH",
"215 162 OFFCURVE",
"252 186 OFFCURVE",
"312 222 CURVE SMOOTH",
"410 283 OFFCURVE",
"461 332 OFFCURVE",
"464 369 CURVE SMOOTH",
"468 423 OFFCURVE",
"438 450 OFFCURVE",
"374 450 CURVE SMOOTH",
"365 450 OFFCURVE",
"356 449 OFFCURVE",
"345 448 CURVE SMOOTH",
"316 445 OFFCURVE",
"282 433 OFFCURVE",
"242 412 CURVE SMOOTH",
"193 387 OFFCURVE",
"169 363 OFFCURVE",
"169 340 CURVE SMOOTH",
"169 328 OFFCURVE",
"173 322 OFFCURVE",
"180 322 CURVE SMOOTH",
"183 322 OFFCURVE",
"187 324 OFFCURVE",
"191 328 CURVE SMOOTH",
"216 355 OFFCURVE",
"229 371 OFFCURVE",
"230 378 CURVE",
"273 413 OFFCURVE",
"316 430 OFFCURVE",
"357 430 CURVE SMOOTH",
"397 430 OFFCURVE",
"423 408 OFFCURVE",
"423 374 CURVE SMOOTH",
"423 339 OFFCURVE",
"390 300 OFFCURVE",
"320 257 CURVE SMOOTH",
"247 212 OFFCURVE",
"183 167 OFFCURVE",
"124 123 CURVE SMOOTH",
"42 61 OFFCURVE",
"1 19 OFFCURVE",
"1 -4 CURVE SMOOTH",
"1 -11 OFFCURVE",
"5 -14 OFFCURVE",
"13 -14 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 44 218 44 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01216 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 16 213 16 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01218 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01220 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 12 119 12 135 12 151 12 167 12 183 12 199 12 215 12 231 12 247 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 12 23 12 39 12 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 12 70 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0127 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01228 1061 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 392;
}
);
leftKerningGroup = two;
note = two;
rightKerningGroup = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2022-03-22 15:03:41 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-67 -97 OFFCURVE",
"-64 -96 OFFCURVE",
"-61 -95 CURVE SMOOTH",
"31 -72 OFFCURVE",
"118 -38 OFFCURVE",
"201 7 CURVE SMOOTH",
"318 70 OFFCURVE",
"376 134 OFFCURVE",
"376 199 CURVE SMOOTH",
"376 251 OFFCURVE",
"340 297 OFFCURVE",
"288 308 CURVE",
"339 335 OFFCURVE",
"364 360 OFFCURVE",
"364 385 CURVE SMOOTH",
"364 418 OFFCURVE",
"336 435 OFFCURVE",
"279 435 CURVE SMOOTH",
"247 435 OFFCURVE",
"218 430 OFFCURVE",
"192 420 CURVE SMOOTH",
"170 412 OFFCURVE",
"155 403 OFFCURVE",
"148 394 CURVE SMOOTH",
"144 389 OFFCURVE",
"142 384 OFFCURVE",
"142 380 CURVE SMOOTH",
"142 373 OFFCURVE",
"145 369 OFFCURVE",
"151 369 CURVE SMOOTH",
"154 369 OFFCURVE",
"158 372 OFFCURVE",
"163 379 CURVE SMOOTH",
"168 385 OFFCURVE",
"179 391 OFFCURVE",
"196 398 CURVE SMOOTH",
"217 406 OFFCURVE",
"240 410 OFFCURVE",
"265 410 CURVE SMOOTH",
"300 410 OFFCURVE",
"317 400 OFFCURVE",
"317 381 CURVE SMOOTH",
"317 360 OFFCURVE",
"288 338 OFFCURVE",
"229 313 CURVE",
"184 315 OFFCURVE",
"135 307 OFFCURVE",
"135 283 CURVE SMOOTH",
"135 270 OFFCURVE",
"142 263 OFFCURVE",
"165 263 CURVE SMOOTH",
"185 263 OFFCURVE",
"209 269 OFFCURVE",
"237 282 CURVE",
"274 278 LINE SMOOTH",
"314 274 OFFCURVE",
"343 237 OFFCURVE",
"343 198 CURVE SMOOTH",
"343 141 OFFCURVE",
"289 82 OFFCURVE",
"182 22 CURVE SMOOTH",
"101 -23 OFFCURVE",
"23 -56 OFFCURVE",
"-57 -75 CURVE SMOOTH",
"-70 -78 OFFCURVE",
"-76 -83 OFFCURVE",
"-76 -90 CURVE SMOOTH",
"-76 -94 OFFCURVE",
"-74 -97 OFFCURVE",
"-69 -97 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 1070 21 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 21 218 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\0129 21 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 9 218 9 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01243 1068 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01236 1063 23 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01240 36 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
leftKerningGroup = three;
note = three;
rightKerningGroup = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2022-03-22 15:03:37 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"212 -49 OFFCURVE",
"246 -32 OFFCURVE",
"289 3 CURVE SMOOTH",
"290 4 OFFCURVE",
"291 6 OFFCURVE",
"291 7 CURVE SMOOTH",
"291 9 OFFCURVE",
"288 12 OFFCURVE",
"281 12 CURVE SMOOTH",
"277 12 OFFCURVE",
"273 11 OFFCURVE",
"268 8 CURVE SMOOTH",
"246 -8 OFFCURVE",
"232 -16 OFFCURVE",
"225 -16 CURVE SMOOTH",
"219 -16 OFFCURVE",
"216 -9 OFFCURVE",
"216 5 CURVE SMOOTH",
"216 24 OFFCURVE",
"227 54 OFFCURVE",
"248 93 CURVE SMOOTH",
"291 167 LINE",
"342 176 OFFCURVE",
"387 180 OFFCURVE",
"424 180 CURVE SMOOTH",
"449 180 OFFCURVE",
"473 178 OFFCURVE",
"495 174 CURVE SMOOTH",
"507 172 OFFCURVE",
"513 174 OFFCURVE",
"513 180 CURVE SMOOTH",
"513 187 OFFCURVE",
"504 191 OFFCURVE",
"485 194 CURVE SMOOTH",
"470 196 OFFCURVE",
"454 197 OFFCURVE",
"438 197 CURVE SMOOTH",
"429 197 OFFCURVE",
"384 193 OFFCURVE",
"301 185 CURVE",
"350 260 LINE SMOOTH",
"362 278 OFFCURVE",
"370 290 OFFCURVE",
"374 295 CURVE SMOOTH",
"418 356 OFFCURVE",
"458 399 OFFCURVE",
"495 424 CURVE SMOOTH",
"522 441 OFFCURVE",
"529 450 OFFCURVE",
"516 450 CURVE SMOOTH",
"508 450 OFFCURVE",
"494 443 OFFCURVE",
"473 430 CURVE SMOOTH",
"453 416 OFFCURVE",
"440 406 OFFCURVE",
"435 399 CURVE SMOOTH",
"422 381 OFFCURVE",
"393 346 OFFCURVE",
"348 294 CURVE SMOOTH",
"313 253 OFFCURVE",
"285 216 OFFCURVE",
"264 183 CURVE",
"101 152 LINE",
"242 270 LINE SMOOTH",
"303 321 OFFCURVE",
"353 365 OFFCURVE",
"392 404 CURVE SMOOTH",
"393 405 OFFCURVE",
"393 406 OFFCURVE",
"393 407 CURVE SMOOTH",
"393 415 OFFCURVE",
"389 419 OFFCURVE",
"381 419 CURVE SMOOTH",
"380 419 OFFCURVE",
"379 418 OFFCURVE",
"378 417 CURVE SMOOTH",
"287 328 OFFCURVE",
"167 232 OFFCURVE",
"18 129 CURVE SMOOTH",
"14 126 OFFCURVE",
"12 121 OFFCURVE",
"12 116 CURVE SMOOTH",
"13 110 OFFCURVE",
"16 107 OFFCURVE",
"19 106 CURVE SMOOTH",
"28 103 OFFCURVE",
"65 110 OFFCURVE",
"130 128 CURVE SMOOTH",
"206 149 OFFCURVE",
"245 159 OFFCURVE",
"248 159 CURVE",
"203 83 OFFCURVE",
"175 28 OFFCURVE",
"166 -9 CURVE SMOOTH",
"165 -16 OFFCURVE",
"164 -20 OFFCURVE",
"164 -25 CURVE SMOOTH",
"164 -41 OFFCURVE",
"172 -49 OFFCURVE",
"187 -49 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01225 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01240 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0127 35 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 35 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 458;
}
);
leftKerningGroup = four;
note = four;
rightKerningGroup = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2022-03-22 15:03:29 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-37 -43 OFFCURVE",
"-34 -42 OFFCURVE",
"-31 -41 CURVE SMOOTH",
"61 -18 OFFCURVE",
"148 16 OFFCURVE",
"231 61 CURVE SMOOTH",
"336 118 OFFCURVE",
"394 176 OFFCURVE",
"404 233 CURVE SMOOTH",
"406 243 OFFCURVE",
"407 253 OFFCURVE",
"407 262 CURVE SMOOTH",
"407 331 OFFCURVE",
"364 365 OFFCURVE",
"279 365 CURVE SMOOTH",
"248 365 OFFCURVE",
"214 359 OFFCURVE",
"178 348 CURVE",
"196 389 OFFCURVE",
"212 413 OFFCURVE",
"227 422 CURVE",
"242 422 OFFCURVE",
"257 421 OFFCURVE",
"271 421 CURVE SMOOTH",
"345 421 OFFCURVE",
"404 427 OFFCURVE",
"447 439 CURVE SMOOTH",
"451 440 OFFCURVE",
"452 442 OFFCURVE",
"451 447 CURVE SMOOTH",
"450 451 OFFCURVE",
"448 452 OFFCURVE",
"443 451 CURVE SMOOTH",
"419 444 OFFCURVE",
"392 440 OFFCURVE",
"361 440 CURVE SMOOTH",
"344 440 OFFCURVE",
"319 442 OFFCURVE",
"288 445 CURVE SMOOTH",
"244 448 LINE SMOOTH",
"232 449 OFFCURVE",
"222 449 OFFCURVE",
"215 450 CURVE SMOOTH",
"208 450 OFFCURVE",
"193 431 OFFCURVE",
"170 393 CURVE SMOOTH",
"157 372 OFFCURVE",
"142 349 OFFCURVE",
"123 325 CURVE",
"120 324 LINE SMOOTH",
"108 318 OFFCURVE",
"102 310 OFFCURVE",
"102 301 CURVE SMOOTH",
"102 294 OFFCURVE",
"108 290 OFFCURVE",
"119 290 CURVE SMOOTH",
"132 290 OFFCURVE",
"153 296 OFFCURVE",
"182 308 CURVE SMOOTH",
"216 323 OFFCURVE",
"251 330 OFFCURVE",
"288 330 CURVE SMOOTH",
"345 330 OFFCURVE",
"374 307 OFFCURVE",
"374 261 CURVE SMOOTH",
"374 254 OFFCURVE",
"373 247 OFFCURVE",
"372 239 CURVE SMOOTH",
"363 186 OFFCURVE",
"311 131 OFFCURVE",
"214 76 CURVE SMOOTH",
"137 33 OFFCURVE",
"56 0 OFFCURVE",
"-27 -21 CURVE SMOOTH",
"-40 -24 OFFCURVE",
"-46 -29 OFFCURVE",
"-46 -36 CURVE SMOOTH",
"-46 -40 OFFCURVE",
"-44 -43 OFFCURVE",
"-39 -43 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 1068 25 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 25 218 25 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0126 1064 27 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 27 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
leftKerningGroup = five;
note = five;
rightKerningGroup = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2022-03-22 15:03:32 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"250 -8 OFFCURVE",
"274 -6 OFFCURVE",
"299 -1 CURVE SMOOTH",
"306 0 OFFCURVE",
"309 4 OFFCURVE",
"309 12 CURVE SMOOTH",
"309 14 OFFCURVE",
"306 16 OFFCURVE",
"301 16 CURVE SMOOTH",
"297 16 LINE",
"274 11 OFFCURVE",
"252 9 OFFCURVE",
"231 9 CURVE SMOOTH",
"198 9 OFFCURVE",
"175 15 OFFCURVE",
"160 28 CURVE",
"174 24 OFFCURVE",
"189 22 OFFCURVE",
"206 22 CURVE SMOOTH",
"263 22 OFFCURVE",
"320 41 OFFCURVE",
"379 80 CURVE SMOOTH",
"438 119 OFFCURVE",
"467 156 OFFCURVE",
"467 193 CURVE SMOOTH",
"467 212 OFFCURVE",
"457 227 OFFCURVE",
"437 238 CURVE SMOOTH",
"422 247 OFFCURVE",
"402 251 OFFCURVE",
"379 251 CURVE SMOOTH",
"334 251 OFFCURVE",
"285 235 OFFCURVE",
"233 203 CURVE SMOOTH",
"181 171 OFFCURVE",
"146 136 OFFCURVE",
"129 99 CURVE",
"126 104 LINE SMOOTH",
"116 121 OFFCURVE",
"110 139 OFFCURVE",
"110 159 CURVE SMOOTH",
"110 218 OFFCURVE",
"154 277 OFFCURVE",
"242 334 CURVE SMOOTH",
"325 388 OFFCURVE",
"411 420 OFFCURVE",
"500 430 CURVE SMOOTH",
"514 431 OFFCURVE",
"521 435 OFFCURVE",
"521 442 CURVE SMOOTH",
"521 449 OFFCURVE",
"515 454 OFFCURVE",
"503 454 CURVE SMOOTH",
"501 454 OFFCURVE",
"498 453 OFFCURVE",
"495 453 CURVE SMOOTH",
"414 444 OFFCURVE",
"326 420 OFFCURVE",
"233 357 CURVE SMOOTH",
"130 288 OFFCURVE",
"79 208 OFFCURVE",
"79 139 CURVE SMOOTH",
"79 98 OFFCURVE",
"95 66 OFFCURVE",
"127 44 CURVE",
"133 32 LINE",
"151 5 OFFCURVE",
"182 -8 OFFCURVE",
"227 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"191 48 OFFCURVE",
"166 57 OFFCURVE",
"147 76 CURVE",
"154 109 OFFCURVE",
"185 149 OFFCURVE",
"227 181 CURVE SMOOTH",
"272 215 OFFCURVE",
"310 225 OFFCURVE",
"355 225 CURVE SMOOTH",
"396 225 OFFCURVE",
"431 212 OFFCURVE",
"431 184 CURVE SMOOTH",
"431 176 OFFCURVE",
"428 166 OFFCURVE",
"421 155 CURVE SMOOTH",
"405 129 OFFCURVE",
"378 105 OFFCURVE",
"339 83 CURVE SMOOTH",
"298 60 OFFCURVE",
"259 48 OFFCURVE",
"223 48 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 1065 36 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 4 213 4 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01225 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01227 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01221 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01211 1063 46 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01252 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 52 119 52 135 52 151 52 167 52 183 52 199 52 215 52 231 52 247 52 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 52 23 52 39 52 55 52 71 52 87 52 103 52 119 52 135 52 151 52 167 52 183 52 199 52 215 52 231 52 247 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 52 23 52 39 52 55 52 71 52 87 52 103 52 119 52 135 52 151 52 167 52 183 52 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 52 214 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01231 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 450;
}
);
leftKerningGroup = six;
note = six;
rightKerningGroup = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2022-03-22 15:04:16 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"121 -45 OFFCURVE",
"125 -43 OFFCURVE",
"126 -40 CURVE SMOOTH",
"135 -7 OFFCURVE",
"154 34 OFFCURVE",
"183 82 CURVE SMOOTH",
"212 131 OFFCURVE",
"244 172 OFFCURVE",
"277 207 CURVE SMOOTH",
"312 242 OFFCURVE",
"357 284 OFFCURVE",
"417 331 CURVE SMOOTH",
"472 374 OFFCURVE",
"505 397 OFFCURVE",
"515 400 CURVE SMOOTH",
"529 404 OFFCURVE",
"536 411 OFFCURVE",
"536 420 CURVE SMOOTH",
"536 432 OFFCURVE",
"529 438 OFFCURVE",
"516 438 CURVE SMOOTH",
"512 438 OFFCURVE",
"509 437 OFFCURVE",
"506 435 CURVE SMOOTH",
"499 431 OFFCURVE",
"450 425 OFFCURVE",
"361 418 CURVE SMOOTH",
"319 415 OFFCURVE",
"285 412 OFFCURVE",
"260 410 CURVE SMOOTH",
"234 408 OFFCURVE",
"216 407 OFFCURVE",
"207 407 CURVE SMOOTH",
"185 407 OFFCURVE",
"169 400 OFFCURVE",
"158 386 CURVE SMOOTH",
"149 375 OFFCURVE",
"145 362 OFFCURVE",
"145 347 CURVE SMOOTH",
"145 343 OFFCURVE",
"146 339 OFFCURVE",
"147 335 CURVE",
"152 324 OFFCURVE",
"157 318 OFFCURVE",
"161 318 CURVE SMOOTH",
"164 318 OFFCURVE",
"167 321 OFFCURVE",
"169 328 CURVE SMOOTH",
"170 334 OFFCURVE",
"170 339 OFFCURVE",
"169 342 CURVE SMOOTH",
"168 346 OFFCURVE",
"167 349 OFFCURVE",
"167 352 CURVE SMOOTH",
"167 374 OFFCURVE",
"182 385 OFFCURVE",
"212 385 CURVE SMOOTH",
"281 385 OFFCURVE",
"362 391 OFFCURVE",
"457 404 CURVE",
"397 359 OFFCURVE",
"333 301 OFFCURVE",
"262 226 CURVE SMOOTH",
"229 191 OFFCURVE",
"196 147 OFFCURVE",
"162 94 CURVE SMOOTH",
"128 40 OFFCURVE",
"107 -4 OFFCURVE",
"99 -38 CURVE SMOOTH",
"98 -43 OFFCURVE",
"103 -45 OFFCURVE",
"114 -45 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01243 1064 24 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01221 24 43 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 419;
}
);
leftKerningGroup = seven;
note = seven;
rightKerningGroup = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2022-03-22 15:04:19 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"139 -14 OFFCURVE",
"188 -1 OFFCURVE",
"241 25 CURVE SMOOTH",
"302 56 OFFCURVE",
"341 93 OFFCURVE",
"359 136 CURVE SMOOTH",
"365 150 OFFCURVE",
"368 163 OFFCURVE",
"368 174 CURVE SMOOTH",
"368 203 OFFCURVE",
"344 232 OFFCURVE",
"296 261 CURVE",
"421 356 OFFCURVE",
"549 438 OFFCURVE",
"679 505 CURVE SMOOTH",
"681 506 OFFCURVE",
"682 507 OFFCURVE",
"682 509 CURVE SMOOTH",
"682 515 OFFCURVE",
"680 518 OFFCURVE",
"676 518 CURVE SMOOTH",
"675 518 OFFCURVE",
"673 518 OFFCURVE",
"671 517 CURVE SMOOTH",
"576 480 OFFCURVE",
"447 399 OFFCURVE",
"282 272 CURVE",
"251 286 OFFCURVE",
"235 304 OFFCURVE",
"235 327 CURVE SMOOTH",
"235 330 OFFCURVE",
"235 333 OFFCURVE",
"236 337 CURVE SMOOTH",
"247 403 OFFCURVE",
"302 436 OFFCURVE",
"402 436 CURVE SMOOTH",
"419 436 OFFCURVE",
"436 435 OFFCURVE",
"453 433 CURVE SMOOTH",
"460 433 OFFCURVE",
"474 445 OFFCURVE",
"474 452 CURVE SMOOTH",
"474 453 OFFCURVE",
"473 454 OFFCURVE",
"472 454 CURVE SMOOTH",
"456 458 OFFCURVE",
"438 460 OFFCURVE",
"417 460 CURVE SMOOTH",
"366 460 OFFCURVE",
"319 449 OFFCURVE",
"278 428 CURVE SMOOTH",
"229 404 OFFCURVE",
"201 371 OFFCURVE",
"194 329 CURVE SMOOTH",
"192 318 OFFCURVE",
"198 303 OFFCURVE",
"211 284 CURVE SMOOTH",
"226 266 OFFCURVE",
"239 254 OFFCURVE",
"251 249 CURVE",
"162 182 OFFCURVE",
"101 124 OFFCURVE",
"68 75 CURVE SMOOTH",
"53 52 OFFCURVE",
"45 34 OFFCURVE",
"45 19 CURVE SMOOTH",
"45 -3 OFFCURVE",
"62 -14 OFFCURVE",
"96 -14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"94 13 OFFCURVE",
"82 19 OFFCURVE",
"82 30 CURVE SMOOTH",
"82 39 OFFCURVE",
"89 55 OFFCURVE",
"104 76 CURVE SMOOTH",
"139 127 OFFCURVE",
"193 182 OFFCURVE",
"266 239 CURVE",
"308 211 OFFCURVE",
"329 185 OFFCURVE",
"329 161 CURVE SMOOTH",
"329 154 OFFCURVE",
"327 146 OFFCURVE",
"324 136 CURVE",
"307 96 OFFCURVE",
"277 64 OFFCURVE",
"234 41 CURVE SMOOTH",
"199 22 OFFCURVE",
"160 13 OFFCURVE",
"119 13 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 1070 45 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 4 213 4 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01253 1063 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 1061 33 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 442;
}
);
leftKerningGroup = eight;
note = eight;
rightKerningGroup = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2022-03-22 14:15:37 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"214 -28 LINE SMOOTH",
"221 -27 OFFCURVE",
"224 -25 OFFCURVE",
"224 -23 CURVE",
"224 -23 OFFCURVE",
"224 -22 OFFCURVE",
"223 -21 CURVE SMOOTH",
"215 -9 OFFCURVE",
"211 5 OFFCURVE",
"211 21 CURVE SMOOTH",
"211 76 OFFCURVE",
"256 151 OFFCURVE",
"346 247 CURVE SMOOTH",
"403 307 OFFCURVE",
"459 358 OFFCURVE",
"514 400 CURVE SMOOTH",
"519 403 OFFCURVE",
"521 406 OFFCURVE",
"521 409 CURVE SMOOTH",
"521 411 OFFCURVE",
"520 412 OFFCURVE",
"519 413 CURVE SMOOTH",
"516 416 OFFCURVE",
"509 418 OFFCURVE",
"500 418 CURVE SMOOTH",
"488 418 OFFCURVE",
"479 415 OFFCURVE",
"472 410 CURVE SMOOTH",
"347 305 OFFCURVE",
"258 252 OFFCURVE",
"205 252 CURVE SMOOTH",
"178 252 OFFCURVE",
"165 264 OFFCURVE",
"165 287 CURVE SMOOTH",
"165 302 OFFCURVE",
"174 321 OFFCURVE",
"191 344 CURVE SMOOTH",
"207 363 OFFCURVE",
"221 377 OFFCURVE",
"234 385 CURVE SMOOTH",
"305 432 OFFCURVE",
"379 455 OFFCURVE",
"456 455 CURVE SMOOTH",
"475 455 OFFCURVE",
"492 453 OFFCURVE",
"511 450 CURVE SMOOTH",
"515 449 OFFCURVE",
"518 451 OFFCURVE",
"518 457 CURVE SMOOTH",
"518 460 OFFCURVE",
"516 462 OFFCURVE",
"513 463 CURVE",
"494 466 OFFCURVE",
"476 468 OFFCURVE",
"456 468 CURVE SMOOTH",
"367 468 OFFCURVE",
"285 443 OFFCURVE",
"210 394 CURVE SMOOTH",
"193 383 OFFCURVE",
"177 367 OFFCURVE",
"163 347 CURVE SMOOTH",
"147 324 OFFCURVE",
"139 303 OFFCURVE",
"139 285 CURVE SMOOTH",
"139 252 OFFCURVE",
"158 236 OFFCURVE",
"195 236 CURVE SMOOTH",
"233 236 OFFCURVE",
"283 252 OFFCURVE",
"344 284 CURVE",
"236 178 OFFCURVE",
"182 92 OFFCURVE",
"182 27 CURVE SMOOTH",
"182 8 OFFCURVE",
"187 -9 OFFCURVE",
"197 -24 CURVE",
"200 -27 OFFCURVE",
"204 -28 OFFCURVE",
"210 -28 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 12 218 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0124 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01240 1067 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01224 16 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01214 16 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 428;
}
);
leftKerningGroup = nine;
note = nine;
rightKerningGroup = nine;
unicode = 0039;
},
{
color = 3;
glyphname = zero.lf;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"205 -25 OFFCURVE",
"255 -12 OFFCURVE",
"311 13 CURVE SMOOTH",
"366 39 OFFCURVE",
"413 72 OFFCURVE",
"453 113 CURVE SMOOTH",
"536 198 OFFCURVE",
"578 278 OFFCURVE",
"578 353 CURVE SMOOTH",
"578 428 OFFCURVE",
"531 466 OFFCURVE",
"436 466 CURVE SMOOTH",
"359 466 OFFCURVE",
"290 449 OFFCURVE",
"228 417 CURVE SMOOTH",
"154 380 OFFCURVE",
"117 331 OFFCURVE",
"117 271 CURVE SMOOTH",
"117 266 OFFCURVE",
"118 261 OFFCURVE",
"119 254 CURVE",
"90 217 OFFCURVE",
"69 177 OFFCURVE",
"58 132 CURVE SMOOTH",
"53 111 OFFCURVE",
"50 92 OFFCURVE",
"50 77 CURVE SMOOTH",
"50 9 OFFCURVE",
"87 -25 OFFCURVE",
"162 -25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"115 -4 OFFCURVE",
"87 21 OFFCURVE",
"87 72 CURVE SMOOTH",
"87 87 OFFCURVE",
"89 103 OFFCURVE",
"94 119 CURVE SMOOTH",
"100 142 OFFCURVE",
"115 171 OFFCURVE",
"139 208 CURVE",
"148 195 OFFCURVE",
"156 188 OFFCURVE",
"163 188 CURVE SMOOTH",
"167 188 OFFCURVE",
"169 190 OFFCURVE",
"169 195 CURVE SMOOTH",
"169 204 OFFCURVE",
"163 215 OFFCURVE",
"151 228 CURVE",
"185 275 OFFCURVE",
"234 317 OFFCURVE",
"297 353 CURVE SMOOTH",
"343 378 OFFCURVE",
"385 396 OFFCURVE",
"422 406 CURVE SMOOTH",
"426 407 OFFCURVE",
"428 410 OFFCURVE",
"428 415 CURVE SMOOTH",
"428 421 OFFCURVE",
"425 428 OFFCURVE",
"419 435 CURVE",
"433 435 LINE SMOOTH",
"510 438 OFFCURVE",
"549 410 OFFCURVE",
"549 349 CURVE SMOOTH",
"549 284 OFFCURVE",
"511 211 OFFCURVE",
"436 128 CURVE SMOOTH",
"403 91 OFFCURVE",
"360 60 OFFCURVE",
"308 35 CURVE SMOOTH",
"256 9 OFFCURVE",
"210 -4 OFFCURVE",
"170 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"146 323 OFFCURVE",
"173 359 OFFCURVE",
"222 386 CURVE SMOOTH",
"263 409 OFFCURVE",
"313 425 OFFCURVE",
"373 432 CURVE",
"282 396 OFFCURVE",
"205 345 OFFCURVE",
"142 280 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 31 218 31 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01220 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01222 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01227 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01234 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01248 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01252 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 52 213 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01254 1061 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 1064 33 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 502;
}
);
leftKerningGroup = zero;
leftMetricsKey = zero;
widthMetricsKey = zero;
note = zero;
rightKerningGroup = zero;
},
{
color = 3;
glyphname = one.lf;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"23 -56 OFFCURVE",
"58 -40 OFFCURVE",
"91 -8 CURVE",
"102 -3 OFFCURVE",
"112 1 OFFCURVE",
"123 5 CURVE SMOOTH",
"134 9 OFFCURVE",
"145 13 OFFCURVE",
"156 18 CURVE SMOOTH",
"182 27 OFFCURVE",
"203 32 OFFCURVE",
"219 32 CURVE SMOOTH",
"242 32 LINE SMOOTH",
"253 32 OFFCURVE",
"259 36 OFFCURVE",
"259 45 CURVE SMOOTH",
"259 53 OFFCURVE",
"253 57 OFFCURVE",
"242 57 CURVE SMOOTH",
"219 57 LINE SMOOTH",
"192 57 OFFCURVE",
"158 50 OFFCURVE",
"117 37 CURVE",
"177 148 OFFCURVE",
"221 228 OFFCURVE",
"252 281 CURVE SMOOTH",
"269 310 OFFCURVE",
"289 342 OFFCURVE",
"312 377 CURVE SMOOTH",
"329 400 OFFCURVE",
"337 413 OFFCURVE",
"337 418 CURVE",
"320 420 OFFCURVE",
"295 407 OFFCURVE",
"262 379 CURVE SMOOTH",
"239 360 OFFCURVE",
"221 344 OFFCURVE",
"207 333 CURVE SMOOTH",
"193 321 OFFCURVE",
"183 313 OFFCURVE",
"176 310 CURVE SMOOTH",
"163 303 OFFCURVE",
"157 295 OFFCURVE",
"157 286 CURVE SMOOTH",
"157 283 OFFCURVE",
"158 282 OFFCURVE",
"161 282 CURVE SMOOTH",
"162 282 OFFCURVE",
"165 283 OFFCURVE",
"168 285 CURVE SMOOTH",
"209 308 OFFCURVE",
"235 325 OFFCURVE",
"246 335 CURVE",
"241 326 OFFCURVE",
"236 319 OFFCURVE",
"233 313 CURVE SMOOTH",
"229 306 OFFCURVE",
"226 301 OFFCURVE",
"223 297 CURVE",
"183 226 OFFCURVE",
"151 168 OFFCURVE",
"126 123 CURVE SMOOTH",
"101 77 OFFCURVE",
"82 43 OFFCURVE",
"71 22 CURVE",
"42 13 LINE SMOOTH",
"32 10 OFFCURVE",
"22 6 OFFCURVE",
"12 3 CURVE SMOOTH",
"-10 -6 OFFCURVE",
"-27 -17 OFFCURVE",
"-38 -30 CURVE",
"-39 -32 OFFCURVE",
"-39 -34 OFFCURVE",
"-39 -37 CURVE SMOOTH",
"-39 -50 OFFCURVE",
"-30 -56 OFFCURVE",
"-13 -56 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
leftKerningGroup = one;
leftMetricsKey = one;
widthMetricsKey = one;
note = one;
rightKerningGroup = one;
},
{
color = 3;
glyphname = two.lf;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"24 -14 OFFCURVE",
"47 -7 OFFCURVE",
"82 7 CURVE SMOOTH",
"125 24 OFFCURVE",
"155 34 OFFCURVE",
"172 39 CURVE SMOOTH",
"217 51 OFFCURVE",
"252 57 OFFCURVE",
"279 57 CURVE SMOOTH",
"314 57 OFFCURVE",
"346 50 OFFCURVE",
"346 22 CURVE SMOOTH",
"346 15 OFFCURVE",
"343 9 OFFCURVE",
"337 4 CURVE SMOOTH",
"331 -1 OFFCURVE",
"328 -4 OFFCURVE",
"328 -7 CURVE SMOOTH",
"328 -12 OFFCURVE",
"331 -14 OFFCURVE",
"338 -14 CURVE SMOOTH",
"343 -14 OFFCURVE",
"347 -13 OFFCURVE",
"352 -10 CURVE SMOOTH",
"374 3 OFFCURVE",
"385 18 OFFCURVE",
"385 35 CURVE SMOOTH",
"385 52 OFFCURVE",
"379 63 OFFCURVE",
"366 68 CURVE SMOOTH",
"351 75 OFFCURVE",
"327 78 OFFCURVE",
"294 78 CURVE SMOOTH",
"259 78 OFFCURVE",
"221 75 OFFCURVE",
"178 68 CURVE SMOOTH",
"138 61 OFFCURVE",
"109 54 OFFCURVE",
"90 47 CURVE",
"121 84 OFFCURVE",
"157 118 OFFCURVE",
"196 147 CURVE SMOOTH",
"215 162 OFFCURVE",
"252 186 OFFCURVE",
"312 222 CURVE SMOOTH",
"410 283 OFFCURVE",
"461 332 OFFCURVE",
"464 369 CURVE SMOOTH",
"468 423 OFFCURVE",
"438 450 OFFCURVE",
"374 450 CURVE SMOOTH",
"365 450 OFFCURVE",
"356 449 OFFCURVE",
"345 448 CURVE SMOOTH",
"316 445 OFFCURVE",
"282 433 OFFCURVE",
"242 412 CURVE SMOOTH",
"193 387 OFFCURVE",
"169 363 OFFCURVE",
"169 340 CURVE SMOOTH",
"169 328 OFFCURVE",
"173 322 OFFCURVE",
"180 322 CURVE SMOOTH",
"183 322 OFFCURVE",
"187 324 OFFCURVE",
"191 328 CURVE SMOOTH",
"216 355 OFFCURVE",
"229 371 OFFCURVE",
"230 378 CURVE",
"273 413 OFFCURVE",
"316 430 OFFCURVE",
"357 430 CURVE SMOOTH",
"397 430 OFFCURVE",
"423 408 OFFCURVE",
"423 374 CURVE SMOOTH",
"423 339 OFFCURVE",
"390 300 OFFCURVE",
"320 257 CURVE SMOOTH",
"247 212 OFFCURVE",
"183 167 OFFCURVE",
"124 123 CURVE SMOOTH",
"42 61 OFFCURVE",
"1 19 OFFCURVE",
"1 -4 CURVE SMOOTH",
"1 -11 OFFCURVE",
"5 -14 OFFCURVE",
"13 -14 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 44 218 44 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01216 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 16 213 16 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01218 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01220 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 12 119 12 135 12 151 12 167 12 183 12 199 12 215 12 231 12 247 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 12 23 12 39 12 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 12 70 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0127 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01228 1061 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 392;
}
);
leftKerningGroup = two;
leftMetricsKey = two;
widthMetricsKey = two;
note = two;
rightKerningGroup = two;
},
{
color = 3;
glyphname = three.lf;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-67 -97 OFFCURVE",
"-64 -96 OFFCURVE",
"-61 -95 CURVE SMOOTH",
"31 -72 OFFCURVE",
"118 -38 OFFCURVE",
"201 7 CURVE SMOOTH",
"318 70 OFFCURVE",
"376 134 OFFCURVE",
"376 199 CURVE SMOOTH",
"376 251 OFFCURVE",
"340 297 OFFCURVE",
"288 308 CURVE",
"339 335 OFFCURVE",
"364 360 OFFCURVE",
"364 385 CURVE SMOOTH",
"364 418 OFFCURVE",
"336 435 OFFCURVE",
"279 435 CURVE SMOOTH",
"247 435 OFFCURVE",
"218 430 OFFCURVE",
"192 420 CURVE SMOOTH",
"170 412 OFFCURVE",
"155 403 OFFCURVE",
"148 394 CURVE SMOOTH",
"144 389 OFFCURVE",
"142 384 OFFCURVE",
"142 380 CURVE SMOOTH",
"142 373 OFFCURVE",
"145 369 OFFCURVE",
"151 369 CURVE SMOOTH",
"154 369 OFFCURVE",
"158 372 OFFCURVE",
"163 379 CURVE SMOOTH",
"168 385 OFFCURVE",
"179 391 OFFCURVE",
"196 398 CURVE SMOOTH",
"217 406 OFFCURVE",
"240 410 OFFCURVE",
"265 410 CURVE SMOOTH",
"300 410 OFFCURVE",
"317 400 OFFCURVE",
"317 381 CURVE SMOOTH",
"317 360 OFFCURVE",
"288 338 OFFCURVE",
"229 313 CURVE",
"184 315 OFFCURVE",
"135 307 OFFCURVE",
"135 283 CURVE SMOOTH",
"135 270 OFFCURVE",
"142 263 OFFCURVE",
"165 263 CURVE SMOOTH",
"185 263 OFFCURVE",
"209 269 OFFCURVE",
"237 282 CURVE",
"274 278 LINE SMOOTH",
"314 274 OFFCURVE",
"343 237 OFFCURVE",
"343 198 CURVE SMOOTH",
"343 141 OFFCURVE",
"289 82 OFFCURVE",
"182 22 CURVE SMOOTH",
"101 -23 OFFCURVE",
"23 -56 OFFCURVE",
"-57 -75 CURVE SMOOTH",
"-70 -78 OFFCURVE",
"-76 -83 OFFCURVE",
"-76 -90 CURVE SMOOTH",
"-76 -94 OFFCURVE",
"-74 -97 OFFCURVE",
"-69 -97 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 1070 21 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 21 218 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\0129 21 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 9 218 9 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01243 1068 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01236 1063 23 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01240 36 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
leftKerningGroup = three;
leftMetricsKey = three;
widthMetricsKey = three;
note = three;
rightKerningGroup = three;
},
{
color = 3;
glyphname = four.lf;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"212 -49 OFFCURVE",
"246 -32 OFFCURVE",
"289 3 CURVE SMOOTH",
"290 4 OFFCURVE",
"291 6 OFFCURVE",
"291 7 CURVE SMOOTH",
"291 9 OFFCURVE",
"288 12 OFFCURVE",
"281 12 CURVE SMOOTH",
"277 12 OFFCURVE",
"273 11 OFFCURVE",
"268 8 CURVE SMOOTH",
"246 -8 OFFCURVE",
"232 -16 OFFCURVE",
"225 -16 CURVE SMOOTH",
"219 -16 OFFCURVE",
"216 -9 OFFCURVE",
"216 5 CURVE SMOOTH",
"216 24 OFFCURVE",
"227 54 OFFCURVE",
"248 93 CURVE SMOOTH",
"291 167 LINE",
"342 176 OFFCURVE",
"387 180 OFFCURVE",
"424 180 CURVE SMOOTH",
"449 180 OFFCURVE",
"473 178 OFFCURVE",
"495 174 CURVE SMOOTH",
"507 172 OFFCURVE",
"513 174 OFFCURVE",
"513 180 CURVE SMOOTH",
"513 187 OFFCURVE",
"504 191 OFFCURVE",
"485 194 CURVE SMOOTH",
"470 196 OFFCURVE",
"454 197 OFFCURVE",
"438 197 CURVE SMOOTH",
"429 197 OFFCURVE",
"384 193 OFFCURVE",
"301 185 CURVE",
"350 260 LINE SMOOTH",
"362 278 OFFCURVE",
"370 290 OFFCURVE",
"374 295 CURVE SMOOTH",
"418 356 OFFCURVE",
"458 399 OFFCURVE",
"495 424 CURVE SMOOTH",
"522 441 OFFCURVE",
"529 450 OFFCURVE",
"516 450 CURVE SMOOTH",
"508 450 OFFCURVE",
"494 443 OFFCURVE",
"473 430 CURVE SMOOTH",
"453 416 OFFCURVE",
"440 406 OFFCURVE",
"435 399 CURVE SMOOTH",
"422 381 OFFCURVE",
"393 346 OFFCURVE",
"348 294 CURVE SMOOTH",
"313 253 OFFCURVE",
"285 216 OFFCURVE",
"264 183 CURVE",
"101 152 LINE",
"242 270 LINE SMOOTH",
"303 321 OFFCURVE",
"353 365 OFFCURVE",
"392 404 CURVE SMOOTH",
"393 405 OFFCURVE",
"393 406 OFFCURVE",
"393 407 CURVE SMOOTH",
"393 415 OFFCURVE",
"389 419 OFFCURVE",
"381 419 CURVE SMOOTH",
"380 419 OFFCURVE",
"379 418 OFFCURVE",
"378 417 CURVE SMOOTH",
"287 328 OFFCURVE",
"167 232 OFFCURVE",
"18 129 CURVE SMOOTH",
"14 126 OFFCURVE",
"12 121 OFFCURVE",
"12 116 CURVE SMOOTH",
"13 110 OFFCURVE",
"16 107 OFFCURVE",
"19 106 CURVE SMOOTH",
"28 103 OFFCURVE",
"65 110 OFFCURVE",
"130 128 CURVE SMOOTH",
"206 149 OFFCURVE",
"245 159 OFFCURVE",
"248 159 CURVE",
"203 83 OFFCURVE",
"175 28 OFFCURVE",
"166 -9 CURVE SMOOTH",
"165 -16 OFFCURVE",
"164 -20 OFFCURVE",
"164 -25 CURVE SMOOTH",
"164 -41 OFFCURVE",
"172 -49 OFFCURVE",
"187 -49 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01225 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01240 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0127 35 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 35 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 458;
}
);
leftKerningGroup = four;
leftMetricsKey = four;
widthMetricsKey = four;
note = four;
rightKerningGroup = four;
},
{
color = 3;
glyphname = five.lf;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-37 -83 OFFCURVE",
"-34 -82 OFFCURVE",
"-31 -81 CURVE SMOOTH",
"61 -58 OFFCURVE",
"148 -24 OFFCURVE",
"231 21 CURVE SMOOTH",
"336 78 OFFCURVE",
"394 136 OFFCURVE",
"404 193 CURVE SMOOTH",
"406 203 OFFCURVE",
"407 213 OFFCURVE",
"407 222 CURVE SMOOTH",
"407 291 OFFCURVE",
"364 325 OFFCURVE",
"279 325 CURVE SMOOTH",
"248 325 OFFCURVE",
"214 319 OFFCURVE",
"178 308 CURVE",
"196 349 OFFCURVE",
"212 373 OFFCURVE",
"227 382 CURVE",
"242 382 OFFCURVE",
"257 381 OFFCURVE",
"271 381 CURVE SMOOTH",
"345 381 OFFCURVE",
"404 387 OFFCURVE",
"447 399 CURVE SMOOTH",
"451 400 OFFCURVE",
"452 402 OFFCURVE",
"451 407 CURVE SMOOTH",
"450 411 OFFCURVE",
"448 412 OFFCURVE",
"443 411 CURVE SMOOTH",
"419 404 OFFCURVE",
"392 400 OFFCURVE",
"361 400 CURVE SMOOTH",
"344 400 OFFCURVE",
"319 402 OFFCURVE",
"288 405 CURVE SMOOTH",
"244 408 LINE SMOOTH",
"232 409 OFFCURVE",
"222 409 OFFCURVE",
"215 410 CURVE SMOOTH",
"208 410 OFFCURVE",
"193 391 OFFCURVE",
"170 353 CURVE SMOOTH",
"157 332 OFFCURVE",
"142 309 OFFCURVE",
"123 285 CURVE",
"120 284 LINE SMOOTH",
"108 278 OFFCURVE",
"102 270 OFFCURVE",
"102 261 CURVE SMOOTH",
"102 254 OFFCURVE",
"108 250 OFFCURVE",
"119 250 CURVE SMOOTH",
"132 250 OFFCURVE",
"153 256 OFFCURVE",
"182 268 CURVE SMOOTH",
"216 283 OFFCURVE",
"251 290 OFFCURVE",
"288 290 CURVE SMOOTH",
"345 290 OFFCURVE",
"374 267 OFFCURVE",
"374 221 CURVE SMOOTH",
"374 214 OFFCURVE",
"373 207 OFFCURVE",
"372 199 CURVE SMOOTH",
"363 146 OFFCURVE",
"311 91 OFFCURVE",
"214 36 CURVE SMOOTH",
"137 -7 OFFCURVE",
"56 -40 OFFCURVE",
"-27 -61 CURVE SMOOTH",
"-40 -64 OFFCURVE",
"-46 -69 OFFCURVE",
"-46 -76 CURVE SMOOTH",
"-46 -80 OFFCURVE",
"-44 -83 OFFCURVE",
"-39 -83 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 1068 25 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 25 218 25 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0126 1064 27 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 27 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
leftKerningGroup = five;
leftMetricsKey = five;
widthMetricsKey = five;
note = five;
rightKerningGroup = five;
},
{
color = 3;
glyphname = six.lf;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"250 -28 OFFCURVE",
"274 -26 OFFCURVE",
"299 -21 CURVE SMOOTH",
"306 -20 OFFCURVE",
"309 -16 OFFCURVE",
"309 -8 CURVE SMOOTH",
"309 -6 OFFCURVE",
"306 -4 OFFCURVE",
"301 -4 CURVE SMOOTH",
"297 -4 LINE",
"274 -9 OFFCURVE",
"252 -11 OFFCURVE",
"231 -11 CURVE SMOOTH",
"198 -11 OFFCURVE",
"175 -5 OFFCURVE",
"160 8 CURVE",
"174 4 OFFCURVE",
"189 2 OFFCURVE",
"206 2 CURVE SMOOTH",
"263 2 OFFCURVE",
"320 21 OFFCURVE",
"379 60 CURVE SMOOTH",
"438 99 OFFCURVE",
"467 136 OFFCURVE",
"467 173 CURVE SMOOTH",
"467 192 OFFCURVE",
"457 207 OFFCURVE",
"437 218 CURVE SMOOTH",
"422 227 OFFCURVE",
"402 231 OFFCURVE",
"379 231 CURVE SMOOTH",
"334 231 OFFCURVE",
"285 215 OFFCURVE",
"233 183 CURVE SMOOTH",
"181 151 OFFCURVE",
"146 116 OFFCURVE",
"129 79 CURVE",
"126 84 LINE SMOOTH",
"116 101 OFFCURVE",
"110 119 OFFCURVE",
"110 139 CURVE SMOOTH",
"110 198 OFFCURVE",
"154 257 OFFCURVE",
"242 314 CURVE SMOOTH",
"325 368 OFFCURVE",
"411 400 OFFCURVE",
"500 410 CURVE SMOOTH",
"514 411 OFFCURVE",
"521 415 OFFCURVE",
"521 422 CURVE SMOOTH",
"521 429 OFFCURVE",
"515 434 OFFCURVE",
"503 434 CURVE SMOOTH",
"501 434 OFFCURVE",
"498 433 OFFCURVE",
"495 433 CURVE SMOOTH",
"414 424 OFFCURVE",
"326 400 OFFCURVE",
"233 337 CURVE SMOOTH",
"130 268 OFFCURVE",
"79 188 OFFCURVE",
"79 119 CURVE SMOOTH",
"79 78 OFFCURVE",
"95 46 OFFCURVE",
"127 24 CURVE",
"133 12 LINE",
"151 -15 OFFCURVE",
"182 -28 OFFCURVE",
"227 -28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"191 28 OFFCURVE",
"166 37 OFFCURVE",
"147 56 CURVE",
"154 89 OFFCURVE",
"185 129 OFFCURVE",
"227 161 CURVE SMOOTH",
"272 195 OFFCURVE",
"310 205 OFFCURVE",
"355 205 CURVE SMOOTH",
"396 205 OFFCURVE",
"431 192 OFFCURVE",
"431 164 CURVE SMOOTH",
"431 156 OFFCURVE",
"428 146 OFFCURVE",
"421 135 CURVE SMOOTH",
"405 109 OFFCURVE",
"378 85 OFFCURVE",
"339 63 CURVE SMOOTH",
"298 40 OFFCURVE",
"259 28 OFFCURVE",
"223 28 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 1065 36 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 4 213 4 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01225 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01227 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01221 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01211 1063 46 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01252 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 52 119 52 135 52 151 52 167 52 183 52 199 52 215 52 231 52 247 52 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 52 23 52 39 52 55 52 71 52 87 52 103 52 119 52 135 52 151 52 167 52 183 52 199 52 215 52 231 52 247 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 52 23 52 39 52 55 52 71 52 87 52 103 52 119 52 135 52 151 52 167 52 183 52 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 52 214 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01231 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 450;
}
);
leftKerningGroup = six;
leftMetricsKey = six;
widthMetricsKey = six;
note = six;
rightKerningGroup = six;
},
{
color = 3;
glyphname = seven.lf;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"121 -45 OFFCURVE",
"125 -43 OFFCURVE",
"126 -40 CURVE SMOOTH",
"135 -7 OFFCURVE",
"154 34 OFFCURVE",
"183 82 CURVE SMOOTH",
"212 131 OFFCURVE",
"244 172 OFFCURVE",
"277 207 CURVE SMOOTH",
"312 242 OFFCURVE",
"357 284 OFFCURVE",
"417 331 CURVE SMOOTH",
"472 374 OFFCURVE",
"505 397 OFFCURVE",
"515 400 CURVE SMOOTH",
"529 404 OFFCURVE",
"536 411 OFFCURVE",
"536 420 CURVE SMOOTH",
"536 432 OFFCURVE",
"529 438 OFFCURVE",
"516 438 CURVE SMOOTH",
"512 438 OFFCURVE",
"509 437 OFFCURVE",
"506 435 CURVE SMOOTH",
"499 431 OFFCURVE",
"450 425 OFFCURVE",
"361 418 CURVE SMOOTH",
"319 415 OFFCURVE",
"285 412 OFFCURVE",
"260 410 CURVE SMOOTH",
"234 408 OFFCURVE",
"216 407 OFFCURVE",
"207 407 CURVE SMOOTH",
"185 407 OFFCURVE",
"169 400 OFFCURVE",
"158 386 CURVE SMOOTH",
"149 375 OFFCURVE",
"145 362 OFFCURVE",
"145 347 CURVE SMOOTH",
"145 343 OFFCURVE",
"146 339 OFFCURVE",
"147 335 CURVE",
"152 324 OFFCURVE",
"157 318 OFFCURVE",
"161 318 CURVE SMOOTH",
"164 318 OFFCURVE",
"167 321 OFFCURVE",
"169 328 CURVE SMOOTH",
"170 334 OFFCURVE",
"170 339 OFFCURVE",
"169 342 CURVE SMOOTH",
"168 346 OFFCURVE",
"167 349 OFFCURVE",
"167 352 CURVE SMOOTH",
"167 374 OFFCURVE",
"182 385 OFFCURVE",
"212 385 CURVE SMOOTH",
"281 385 OFFCURVE",
"362 391 OFFCURVE",
"457 404 CURVE",
"397 359 OFFCURVE",
"333 301 OFFCURVE",
"262 226 CURVE SMOOTH",
"229 191 OFFCURVE",
"196 147 OFFCURVE",
"162 94 CURVE SMOOTH",
"128 40 OFFCURVE",
"107 -4 OFFCURVE",
"99 -38 CURVE SMOOTH",
"98 -43 OFFCURVE",
"103 -45 OFFCURVE",
"114 -45 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01243 1064 24 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01221 24 43 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 419;
}
);
leftKerningGroup = seven;
leftMetricsKey = seven;
widthMetricsKey = seven;
note = seven;
rightKerningGroup = seven;
},
{
color = 3;
glyphname = eight.lf;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"139 -54 OFFCURVE",
"188 -41 OFFCURVE",
"241 -15 CURVE SMOOTH",
"302 16 OFFCURVE",
"341 53 OFFCURVE",
"359 96 CURVE SMOOTH",
"365 110 OFFCURVE",
"368 123 OFFCURVE",
"368 134 CURVE SMOOTH",
"368 163 OFFCURVE",
"344 192 OFFCURVE",
"296 221 CURVE",
"421 316 OFFCURVE",
"549 398 OFFCURVE",
"679 465 CURVE SMOOTH",
"681 466 OFFCURVE",
"682 467 OFFCURVE",
"682 469 CURVE SMOOTH",
"682 475 OFFCURVE",
"680 478 OFFCURVE",
"676 478 CURVE SMOOTH",
"675 478 OFFCURVE",
"673 478 OFFCURVE",
"671 477 CURVE SMOOTH",
"576 440 OFFCURVE",
"447 359 OFFCURVE",
"282 232 CURVE",
"251 246 OFFCURVE",
"235 264 OFFCURVE",
"235 287 CURVE SMOOTH",
"235 290 OFFCURVE",
"235 293 OFFCURVE",
"236 297 CURVE SMOOTH",
"247 363 OFFCURVE",
"302 396 OFFCURVE",
"402 396 CURVE SMOOTH",
"419 396 OFFCURVE",
"436 395 OFFCURVE",
"453 393 CURVE SMOOTH",
"460 393 OFFCURVE",
"474 405 OFFCURVE",
"474 412 CURVE SMOOTH",
"474 413 OFFCURVE",
"473 414 OFFCURVE",
"472 414 CURVE SMOOTH",
"456 418 OFFCURVE",
"438 420 OFFCURVE",
"417 420 CURVE SMOOTH",
"366 420 OFFCURVE",
"319 409 OFFCURVE",
"278 388 CURVE SMOOTH",
"229 364 OFFCURVE",
"201 331 OFFCURVE",
"194 289 CURVE SMOOTH",
"192 278 OFFCURVE",
"198 263 OFFCURVE",
"211 244 CURVE SMOOTH",
"226 226 OFFCURVE",
"239 214 OFFCURVE",
"251 209 CURVE",
"162 142 OFFCURVE",
"101 84 OFFCURVE",
"68 35 CURVE SMOOTH",
"53 12 OFFCURVE",
"45 -6 OFFCURVE",
"45 -21 CURVE SMOOTH",
"45 -43 OFFCURVE",
"62 -54 OFFCURVE",
"96 -54 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"94 -27 OFFCURVE",
"82 -21 OFFCURVE",
"82 -10 CURVE SMOOTH",
"82 -1 OFFCURVE",
"89 15 OFFCURVE",
"104 36 CURVE SMOOTH",
"139 87 OFFCURVE",
"193 142 OFFCURVE",
"266 199 CURVE",
"308 171 OFFCURVE",
"329 145 OFFCURVE",
"329 121 CURVE SMOOTH",
"329 114 OFFCURVE",
"327 106 OFFCURVE",
"324 96 CURVE",
"307 56 OFFCURVE",
"277 24 OFFCURVE",
"234 1 CURVE SMOOTH",
"199 -18 OFFCURVE",
"160 -27 OFFCURVE",
"119 -27 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 1070 45 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 4 213 4 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01253 1063 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 1061 33 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 442;
}
);
leftKerningGroup = eight;
leftMetricsKey = eight;
widthMetricsKey = eight;
note = eight;
rightKerningGroup = eight;
},
{
color = 3;
glyphname = nine.lf;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"214 -68 LINE SMOOTH",
"221 -67 OFFCURVE",
"224 -65 OFFCURVE",
"224 -63 CURVE",
"224 -63 OFFCURVE",
"224 -62 OFFCURVE",
"223 -61 CURVE SMOOTH",
"215 -49 OFFCURVE",
"211 -35 OFFCURVE",
"211 -19 CURVE SMOOTH",
"211 36 OFFCURVE",
"256 111 OFFCURVE",
"346 207 CURVE SMOOTH",
"403 267 OFFCURVE",
"459 318 OFFCURVE",
"514 360 CURVE SMOOTH",
"519 363 OFFCURVE",
"521 366 OFFCURVE",
"521 369 CURVE SMOOTH",
"521 371 OFFCURVE",
"520 372 OFFCURVE",
"519 373 CURVE SMOOTH",
"516 376 OFFCURVE",
"509 378 OFFCURVE",
"500 378 CURVE SMOOTH",
"488 378 OFFCURVE",
"479 375 OFFCURVE",
"472 370 CURVE SMOOTH",
"347 265 OFFCURVE",
"258 212 OFFCURVE",
"205 212 CURVE SMOOTH",
"178 212 OFFCURVE",
"165 224 OFFCURVE",
"165 247 CURVE SMOOTH",
"165 262 OFFCURVE",
"174 281 OFFCURVE",
"191 304 CURVE SMOOTH",
"207 323 OFFCURVE",
"221 337 OFFCURVE",
"234 345 CURVE SMOOTH",
"305 392 OFFCURVE",
"379 415 OFFCURVE",
"456 415 CURVE SMOOTH",
"475 415 OFFCURVE",
"492 413 OFFCURVE",
"511 410 CURVE SMOOTH",
"515 409 OFFCURVE",
"518 411 OFFCURVE",
"518 417 CURVE SMOOTH",
"518 420 OFFCURVE",
"516 422 OFFCURVE",
"513 423 CURVE",
"494 426 OFFCURVE",
"476 428 OFFCURVE",
"456 428 CURVE SMOOTH",
"367 428 OFFCURVE",
"285 403 OFFCURVE",
"210 354 CURVE SMOOTH",
"193 343 OFFCURVE",
"177 327 OFFCURVE",
"163 307 CURVE SMOOTH",
"147 284 OFFCURVE",
"139 263 OFFCURVE",
"139 245 CURVE SMOOTH",
"139 212 OFFCURVE",
"158 196 OFFCURVE",
"195 196 CURVE SMOOTH",
"233 196 OFFCURVE",
"283 212 OFFCURVE",
"344 244 CURVE",
"236 138 OFFCURVE",
"182 52 OFFCURVE",
"182 -13 CURVE SMOOTH",
"182 -32 OFFCURVE",
"187 -49 OFFCURVE",
"197 -64 CURVE",
"200 -67 OFFCURVE",
"204 -68 OFFCURVE",
"210 -68 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 12 218 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0124 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01240 1067 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01224 16 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01214 16 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 428;
}
);
leftKerningGroup = nine;
leftMetricsKey = nine;
widthMetricsKey = nine;
note = nine;
rightKerningGroup = nine;
},
{
glyphname = onesuperior;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"77 201 OFFCURVE",
"98 210 OFFCURVE",
"118 230 CURVE",
"125 233 OFFCURVE",
"131 235 OFFCURVE",
"137 237 CURVE SMOOTH",
"157 245 LINE SMOOTH",
"173 251 OFFCURVE",
"185 254 OFFCURVE",
"195 254 CURVE SMOOTH",
"209 254 LINE SMOOTH",
"215 254 OFFCURVE",
"219 256 OFFCURVE",
"219 261 CURVE SMOOTH",
"219 266 OFFCURVE",
"215 269 OFFCURVE",
"209 269 CURVE SMOOTH",
"195 269 LINE SMOOTH",
"179 269 OFFCURVE",
"158 264 OFFCURVE",
"134 257 CURVE",
"170 323 OFFCURVE",
"196 371 OFFCURVE",
"215 403 CURVE SMOOTH",
"225 420 OFFCURVE",
"237 440 OFFCURVE",
"251 461 CURVE SMOOTH",
"261 474 OFFCURVE",
"266 482 OFFCURVE",
"266 485 CURVE",
"255 486 OFFCURVE",
"240 479 OFFCURVE",
"221 462 CURVE SMOOTH",
"188 434 LINE SMOOTH",
"179 427 OFFCURVE",
"173 422 OFFCURVE",
"169 420 CURVE SMOOTH",
"161 416 OFFCURVE",
"158 411 OFFCURVE",
"158 406 CURVE SMOOTH",
"158 404 OFFCURVE",
"158 404 OFFCURVE",
"160 404 CURVE SMOOTH",
"161 404 OFFCURVE",
"162 404 OFFCURVE",
"164 405 CURVE SMOOTH",
"189 419 OFFCURVE",
"204 429 OFFCURVE",
"211 435 CURVE",
"208 430 OFFCURVE",
"205 426 OFFCURVE",
"203 422 CURVE SMOOTH",
"201 418 OFFCURVE",
"199 415 OFFCURVE",
"197 413 CURVE",
"139 308 LINE SMOOTH",
"124 281 OFFCURVE",
"113 260 OFFCURVE",
"106 248 CURVE",
"101 246 OFFCURVE",
"95 244 OFFCURVE",
"89 242 CURVE SMOOTH",
"71 236 LINE SMOOTH",
"57 231 OFFCURVE",
"47 224 OFFCURVE",
"41 216 CURVE SMOOTH",
"40 215 OFFCURVE",
"40 214 OFFCURVE",
"40 212 CURVE SMOOTH",
"40 204 OFFCURVE",
"45 201 OFFCURVE",
"56 201 CURVE SMOOTH"
);
}
);
width = 306;
}
);
unicode = 00B9;
},
{
glyphname = twosuperior;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"20 199 OFFCURVE",
"34 203 OFFCURVE",
"56 211 CURVE SMOOTH",
"82 221 OFFCURVE",
"100 227 OFFCURVE",
"110 230 CURVE SMOOTH",
"136 238 OFFCURVE",
"157 241 OFFCURVE",
"173 241 CURVE SMOOTH",
"194 241 OFFCURVE",
"212 237 OFFCURVE",
"212 222 CURVE SMOOTH",
"212 219 OFFCURVE",
"211 216 OFFCURVE",
"207 213 CURVE SMOOTH",
"204 210 LINE SMOOTH",
"202 208 OFFCURVE",
"201 207 OFFCURVE",
"201 205 CURVE SMOOTH",
"201 201 OFFCURVE",
"203 199 OFFCURVE",
"209 199 CURVE SMOOTH",
"212 199 OFFCURVE",
"215 199 OFFCURVE",
"218 201 CURVE SMOOTH",
"231 209 OFFCURVE",
"239 219 OFFCURVE",
"239 230 CURVE SMOOTH",
"239 241 OFFCURVE",
"234 249 OFFCURVE",
"227 252 CURVE SMOOTH",
"218 256 OFFCURVE",
"202 258 OFFCURVE",
"182 258 CURVE SMOOTH",
"161 258 OFFCURVE",
"139 256 OFFCURVE",
"113 252 CURVE SMOOTH",
"89 248 OFFCURVE",
"70 243 OFFCURVE",
"59 239 CURVE",
"62 236 LINE",
"83 261 OFFCURVE",
"104 280 OFFCURVE",
"125 295 CURVE SMOOTH",
"136 304 OFFCURVE",
"158 319 OFFCURVE",
"194 340 CURVE SMOOTH",
"256 379 OFFCURVE",
"285 408 OFFCURVE",
"286 430 CURVE SMOOTH",
"289 464 OFFCURVE",
"271 481 OFFCURVE",
"230 481 CURVE SMOOTH",
"223 481 LINE",
"220 480 OFFCURVE",
"217 480 OFFCURVE",
"213 480 CURVE SMOOTH",
"194 478 OFFCURVE",
"172 470 OFFCURVE",
"150 458 CURVE SMOOTH",
"119 442 OFFCURVE",
"105 427 OFFCURVE",
"105 413 CURVE SMOOTH",
"105 405 OFFCURVE",
"109 400 OFFCURVE",
"114 400 CURVE SMOOTH",
"117 400 OFFCURVE",
"120 402 OFFCURVE",
"122 405 CURVE",
"136 419 OFFCURVE",
"144 430 OFFCURVE",
"146 435 CURVE",
"172 456 OFFCURVE",
"196 465 OFFCURVE",
"219 465 CURVE SMOOTH",
"243 465 OFFCURVE",
"258 453 OFFCURVE",
"258 433 CURVE SMOOTH",
"258 414 OFFCURVE",
"240 392 OFFCURVE",
"197 365 CURVE SMOOTH",
"153 338 OFFCURVE",
"115 311 OFFCURVE",
"79 285 CURVE SMOOTH",
"30 248 OFFCURVE",
"5 221 OFFCURVE",
"5 207 CURVE SMOOTH",
"5 201 OFFCURVE",
"7 199 OFFCURVE",
"14 199 CURVE SMOOTH"
);
}
);
width = 286;
}
);
unicode = 00B2;
},
{
glyphname = threesuperior;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-12 150 OFFCURVE",
"-10 150 OFFCURVE",
"-8 151 CURVE",
"-9 153 LINE",
"-8 151 LINE",
"48 165 OFFCURVE",
"100 186 OFFCURVE",
"150 212 CURVE SMOOTH",
"221 251 OFFCURVE",
"256 290 OFFCURVE",
"256 329 CURVE SMOOTH",
"256 360 OFFCURVE",
"236 387 OFFCURVE",
"206 395 CURVE",
"235 411 OFFCURVE",
"248 426 OFFCURVE",
"248 441 CURVE SMOOTH",
"248 462 OFFCURVE",
"231 473 OFFCURVE",
"195 473 CURVE SMOOTH",
"177 473 OFFCURVE",
"159 470 OFFCURVE",
"142 464 CURVE SMOOTH",
"129 459 OFFCURVE",
"120 453 OFFCURVE",
"115 448 CURVE SMOOTH",
"113 445 OFFCURVE",
"111 442 OFFCURVE",
"111 438 CURVE SMOOTH",
"111 432 OFFCURVE",
"114 429 OFFCURVE",
"119 429 CURVE SMOOTH",
"121 429 OFFCURVE",
"124 431 OFFCURVE",
"127 436 CURVE",
"130 439 OFFCURVE",
"136 443 OFFCURVE",
"146 447 CURVE SMOOTH",
"158 451 OFFCURVE",
"172 454 OFFCURVE",
"187 454 CURVE SMOOTH",
"206 454 OFFCURVE",
"216 449 OFFCURVE",
"216 439 CURVE SMOOTH",
"216 428 OFFCURVE",
"200 415 OFFCURVE",
"165 400 CURVE",
"131 401 OFFCURVE",
"107 394 OFFCURVE",
"107 380 CURVE SMOOTH",
"107 370 OFFCURVE",
"114 366 OFFCURVE",
"127 366 CURVE SMOOTH",
"140 366 OFFCURVE",
"155 370 OFFCURVE",
"171 377 CURVE",
"192 375 LINE SMOOTH",
"214 373 OFFCURVE",
"232 352 OFFCURVE",
"232 329 CURVE SMOOTH",
"232 295 OFFCURVE",
"199 260 OFFCURVE",
"136 225 CURVE SMOOTH",
"88 198 OFFCURVE",
"41 178 OFFCURVE",
"-7 167 CURVE SMOOTH",
"-16 165 OFFCURVE",
"-20 161 OFFCURVE",
"-20 156 CURVE SMOOTH",
"-20 152 OFFCURVE",
"-18 150 OFFCURVE",
"-13 150 CURVE SMOOTH"
);
}
);
width = 296;
}
);
unicode = 00B3;
},
{
glyphname = foursuperior;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"123 194 OFFCURVE",
"143 204 OFFCURVE",
"170 225 CURVE",
"170 226 OFFCURVE",
"172 228 OFFCURVE",
"172 229 CURVE SMOOTH",
"172 232 OFFCURVE",
"168 234 OFFCURVE",
"163 234 CURVE SMOOTH",
"161 234 OFFCURVE",
"159 233 OFFCURVE",
"155 232 CURVE",
"142 222 OFFCURVE",
"134 217 OFFCURVE",
"130 217 CURVE SMOOTH",
"128 217 OFFCURVE",
"127 220 OFFCURVE",
"127 228 CURVE SMOOTH",
"127 239 OFFCURVE",
"133 257 OFFCURVE",
"146 280 CURVE SMOOTH",
"171 323 LINE",
"201 329 OFFCURVE",
"228 331 OFFCURVE",
"249 331 CURVE SMOOTH",
"265 331 OFFCURVE",
"279 330 OFFCURVE",
"292 327 CURVE SMOOTH",
"300 326 OFFCURVE",
"305 328 OFFCURVE",
"305 333 CURVE SMOOTH",
"305 339 OFFCURVE",
"298 341 OFFCURVE",
"286 343 CURVE SMOOTH",
"277 345 OFFCURVE",
"267 345 OFFCURVE",
"258 345 CURVE SMOOTH",
"253 345 OFFCURVE",
"229 343 OFFCURVE",
"180 338 CURVE",
"184 346 OFFCURVE",
"189 352 OFFCURVE",
"193 358 CURVE SMOOTH",
"198 367 OFFCURVE",
"203 374 OFFCURVE",
"207 380 CURVE SMOOTH",
"221 401 LINE SMOOTH",
"247 437 OFFCURVE",
"271 463 OFFCURVE",
"293 478 CURVE SMOOTH",
"304 485 OFFCURVE",
"311 491 OFFCURVE",
"311 494 CURVE SMOOTH",
"311 496 OFFCURVE",
"309 497 OFFCURVE",
"305 497 CURVE SMOOTH",
"300 497 OFFCURVE",
"292 494 OFFCURVE",
"278 485 CURVE SMOOTH",
"263 475 OFFCURVE",
"257 470 OFFCURVE",
"254 466 CURVE SMOOTH",
"247 455 OFFCURVE",
"229 434 OFFCURVE",
"202 403 CURVE SMOOTH",
"181 378 OFFCURVE",
"165 356 OFFCURVE",
"152 337 CURVE",
"55 318 LINE",
"57 315 LINE",
"141 385 LINE SMOOTH",
"178 416 OFFCURVE",
"208 443 OFFCURVE",
"232 466 CURVE SMOOTH",
"233 467 OFFCURVE",
"233 468 OFFCURVE",
"233 469 CURVE SMOOTH",
"233 475 OFFCURVE",
"229 478 OFFCURVE",
"224 478 CURVE SMOOTH",
"222 478 OFFCURVE",
"222 478 OFFCURVE",
"220 477 CURVE",
"166 423 OFFCURVE",
"94 366 OFFCURVE",
"5 304 CURVE",
"1 302 OFFCURVE",
"0 298 OFFCURVE",
"0 294 CURVE SMOOTH",
"1 290 OFFCURVE",
"3 288 OFFCURVE",
"6 287 CURVE SMOOTH",
"12 285 OFFCURVE",
"35 289 OFFCURVE",
"74 300 CURVE SMOOTH",
"109 310 OFFCURVE",
"131 316 OFFCURVE",
"140 318 CURVE",
"114 274 OFFCURVE",
"98 242 OFFCURVE",
"93 220 CURVE",
"92 219 OFFCURVE",
"92 218 OFFCURVE",
"92 217 CURVE SMOOTH",
"92 214 OFFCURVE",
"91 212 OFFCURVE",
"91 210 CURVE SMOOTH",
"91 199 OFFCURVE",
"97 194 OFFCURVE",
"107 194 CURVE SMOOTH"
);
}
);
width = 351;
}
);
unicode = 2074;
},
{
color = 3;
glyphname = fraction;
lastChange = "2022-03-22 12:22:33 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"117 -78 LINE SMOOTH",
"121 -78 OFFCURVE",
"124 -75 OFFCURVE",
"122 -72 CURVE",
"122 -69 OFFCURVE",
"124 -40 OFFCURVE",
"131 -20 CURVE SMOOTH",
"136 -2 OFFCURVE",
"164 52 OFFCURVE",
"184 88 CURVE SMOOTH",
"237 188 OFFCURVE",
"316 299 OFFCURVE",
"459 446 CURVE",
"460 449 LINE",
"460 451 OFFCURVE",
"455 452 OFFCURVE",
"451 451 CURVE SMOOTH",
"424 447 OFFCURVE",
"379 406 OFFCURVE",
"317 327 CURVE SMOOTH",
"256 252 OFFCURVE",
"205 176 OFFCURVE",
"159 95 CURVE SMOOTH",
"117 20 OFFCURVE",
"96 -31 OFFCURVE",
"96 -58 CURVE SMOOTH",
"96 -62 OFFCURVE",
"97 -66 OFFCURVE",
"98 -69 CURVE SMOOTH",
"100 -74 OFFCURVE",
"109 -78 OFFCURVE",
"115 -78 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 446;
}
);
note = fraction;
unicode = 2044;
},
{
color = 3;
glyphname = onehalf;
lastChange = "2022-03-22 12:22:33 +0000";
layers = (
{
components = (
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 66, 0}";
},
{
name = onesuperior;
},
{
name = twosuperior;
transform = "{1, 0, 0, 1, 372, -229}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 698;
}
);
unicode = 00BD;
},
{
color = 3;
glyphname = onequarter;
lastChange = "2022-03-22 12:22:33 +0000";
layers = (
{
components = (
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 66, 0}";
},
{
name = onesuperior;
},
{
name = foursuperior;
transform = "{1, 0, 0, 1, 344, -230}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 695;
}
);
unicode = 00BC;
},
{
color = 3;
glyphname = threequarters;
lastChange = "2022-03-22 12:22:33 +0000";
layers = (
{
components = (
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 66, 0}";
},
{
name = foursuperior;
transform = "{1, 0, 0, 1, 344, -230}";
},
{
name = threesuperior;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 695;
}
);
unicode = 00BE;
},
{
glyphname = period;
lastChange = "2022-03-22 14:50:52 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"114 6 OFFCURVE",
"118 19 OFFCURVE",
"133 44 CURVE SMOOTH",
"138 53 OFFCURVE",
"140 60 OFFCURVE",
"140 65 CURVE SMOOTH",
"140 72 OFFCURVE",
"136 75 OFFCURVE",
"128 75 CURVE SMOOTH",
"116 75 OFFCURVE",
"105 71 OFFCURVE",
"94 62 CURVE",
"87 54 OFFCURVE",
"80 47 OFFCURVE",
"75 40 CURVE SMOOTH",
"69 33 OFFCURVE",
"64 26 OFFCURVE",
"59 21 CURVE SMOOTH",
"51 11 OFFCURVE",
"59 6 OFFCURVE",
"82 6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 200;
}
);
leftKerningGroup = period;
note = period;
rightKerningGroup = period;
unicode = 002E;
},
{
glyphname = comma;
lastChange = "2022-03-22 10:23:40 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"32 -77 OFFCURVE",
"37 -75 OFFCURVE",
"42 -71 CURVE SMOOTH",
"100 -26 OFFCURVE",
"131 9 OFFCURVE",
"134 36 CURVE SMOOTH",
"135 47 OFFCURVE",
"134 57 OFFCURVE",
"130 66 CURVE SMOOTH",
"125 78 OFFCURVE",
"117 84 OFFCURVE",
"108 84 CURVE SMOOTH",
"93 84 OFFCURVE",
"77 74 OFFCURVE",
"77 63 CURVE SMOOTH",
"77 60 OFFCURVE",
"79 55 OFFCURVE",
"82 47 CURVE SMOOTH",
"85 39 OFFCURVE",
"86 32 OFFCURVE",
"86 27 CURVE SMOOTH",
"86 -12 OFFCURVE",
"72 -39 OFFCURVE",
"43 -56 CURVE SMOOTH",
"30 -63 OFFCURVE",
"24 -69 OFFCURVE",
"24 -74 CURVE SMOOTH",
"24 -76 OFFCURVE",
"25 -77 OFFCURVE",
"28 -77 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 200;
}
);
leftKerningGroup = period;
note = comma;
rightKerningGroup = period;
unicode = 002C;
},
{
glyphname = colon;
lastChange = "2022-03-22 14:52:59 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"183 212 OFFCURVE",
"189 225 OFFCURVE",
"202 250 CURVE SMOOTH",
"207 259 OFFCURVE",
"209 266 OFFCURVE",
"209 271 CURVE SMOOTH",
"209 278 OFFCURVE",
"205 282 OFFCURVE",
"197 282 CURVE SMOOTH",
"186 282 OFFCURVE",
"174 277 OFFCURVE",
"163 268 CURVE SMOOTH",
"148 253 OFFCURVE",
"137 239 OFFCURVE",
"128 227 CURVE SMOOTH",
"120 217 OFFCURVE",
"128 212 OFFCURVE",
"152 212 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 33 OFFCURVE",
"109 36 OFFCURVE",
"114 42 CURVE SMOOTH",
"131 66 OFFCURVE",
"141 80 OFFCURVE",
"141 91 CURVE SMOOTH",
"141 98 OFFCURVE",
"137 102 OFFCURVE",
"128 102 CURVE SMOOTH",
"116 102 OFFCURVE",
"105 98 OFFCURVE",
"94 89 CURVE",
"59 48 LINE SMOOTH",
"51 38 OFFCURVE",
"59 33 OFFCURVE",
"82 33 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 200;
}
);
leftKerningGroup = colon;
note = colon;
rightKerningGroup = colon;
unicode = 003A;
},
{
color = 3;
glyphname = semicolon;
lastChange = "2022-03-22 10:24:21 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"32 -77 OFFCURVE",
"37 -75 OFFCURVE",
"42 -71 CURVE SMOOTH",
"101 -25 OFFCURVE",
"132 11 OFFCURVE",
"134 36 CURVE SMOOTH",
"135 47 OFFCURVE",
"133 57 OFFCURVE",
"129 66 CURVE SMOOTH",
"124 78 OFFCURVE",
"116 84 OFFCURVE",
"107 84 CURVE SMOOTH",
"92 84 OFFCURVE",
"76 74 OFFCURVE",
"76 63 CURVE SMOOTH",
"76 62 OFFCURVE",
"77 60 OFFCURVE",
"78 57 CURVE SMOOTH",
"83 47 OFFCURVE",
"85 37 OFFCURVE",
"85 27 CURVE SMOOTH",
"85 -12 OFFCURVE",
"71 -39 OFFCURVE",
"43 -56 CURVE SMOOTH",
"30 -63 OFFCURVE",
"24 -69 OFFCURVE",
"24 -74 CURVE SMOOTH",
"24 -76 OFFCURVE",
"25 -77 OFFCURVE",
"28 -77 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"183 212 OFFCURVE",
"189 225 OFFCURVE",
"202 250 CURVE SMOOTH",
"207 259 OFFCURVE",
"209 266 OFFCURVE",
"209 271 CURVE SMOOTH",
"209 278 OFFCURVE",
"205 282 OFFCURVE",
"197 282 CURVE SMOOTH",
"186 282 OFFCURVE",
"174 277 OFFCURVE",
"163 268 CURVE SMOOTH",
"148 253 OFFCURVE",
"137 239 OFFCURVE",
"128 227 CURVE SMOOTH",
"120 217 OFFCURVE",
"128 212 OFFCURVE",
"152 212 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 200;
}
);
leftKerningGroup = colon;
note = semicolon;
rightKerningGroup = colon;
unicode = 003B;
},
{
color = 3;
glyphname = ellipsis;
lastChange = "2022-03-22 10:25:16 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"479 -14 OFFCURVE",
"500 4 OFFCURVE",
"504 27 CURVE SMOOTH",
"508 50 OFFCURVE",
"493 68 OFFCURVE",
"470 68 CURVE SMOOTH",
"445 68 OFFCURVE",
"421 46 OFFCURVE",
"421 20 CURVE SMOOTH",
"421 1 OFFCURVE",
"436 -14 OFFCURVE",
"456 -14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 -14 OFFCURVE",
"100 4 OFFCURVE",
"104 27 CURVE SMOOTH",
"108 50 OFFCURVE",
"93 68 OFFCURVE",
"70 68 CURVE SMOOTH",
"45 68 OFFCURVE",
"21 46 OFFCURVE",
"21 20 CURVE SMOOTH",
"21 1 OFFCURVE",
"36 -14 OFFCURVE",
"56 -14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"273 -14 OFFCURVE",
"294 4 OFFCURVE",
"298 27 CURVE SMOOTH",
"302 50 OFFCURVE",
"287 68 OFFCURVE",
"264 68 CURVE SMOOTH",
"239 68 OFFCURVE",
"215 46 OFFCURVE",
"215 20 CURVE SMOOTH",
"215 1 OFFCURVE",
"230 -14 OFFCURVE",
"250 -14 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"114 6 OFFCURVE",
"118 19 OFFCURVE",
"133 44 CURVE SMOOTH",
"138 53 OFFCURVE",
"140 60 OFFCURVE",
"140 65 CURVE SMOOTH",
"140 72 OFFCURVE",
"136 75 OFFCURVE",
"128 75 CURVE SMOOTH",
"116 75 OFFCURVE",
"105 71 OFFCURVE",
"94 62 CURVE",
"87 54 OFFCURVE",
"80 47 OFFCURVE",
"75 40 CURVE SMOOTH",
"69 33 OFFCURVE",
"64 26 OFFCURVE",
"59 21 CURVE SMOOTH",
"51 11 OFFCURVE",
"59 6 OFFCURVE",
"82 6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"254 6 OFFCURVE",
"258 19 OFFCURVE",
"273 44 CURVE SMOOTH",
"278 53 OFFCURVE",
"280 60 OFFCURVE",
"280 65 CURVE SMOOTH",
"280 72 OFFCURVE",
"276 75 OFFCURVE",
"268 75 CURVE SMOOTH",
"256 75 OFFCURVE",
"245 71 OFFCURVE",
"234 62 CURVE",
"227 54 OFFCURVE",
"220 47 OFFCURVE",
"215 40 CURVE SMOOTH",
"209 33 OFFCURVE",
"204 26 OFFCURVE",
"199 21 CURVE SMOOTH",
"191 11 OFFCURVE",
"199 6 OFFCURVE",
"222 6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"394 6 OFFCURVE",
"398 19 OFFCURVE",
"413 44 CURVE SMOOTH",
"418 53 OFFCURVE",
"420 60 OFFCURVE",
"420 65 CURVE SMOOTH",
"420 72 OFFCURVE",
"416 75 OFFCURVE",
"408 75 CURVE SMOOTH",
"396 75 OFFCURVE",
"385 71 OFFCURVE",
"374 62 CURVE",
"367 54 OFFCURVE",
"360 47 OFFCURVE",
"355 40 CURVE SMOOTH",
"349 33 OFFCURVE",
"344 26 OFFCURVE",
"339 21 CURVE SMOOTH",
"331 11 OFFCURVE",
"339 6 OFFCURVE",
"362 6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0123 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01215 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01227 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 9 119 9 135 9 151 9 167 9 183 9 199 9 215 9 231 9 247 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 9 23 9 39 9 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 9 70 9 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 480;
}
);
leftKerningGroup = period;
leftMetricsKey = period;
note = ellipsis;
rightKerningGroup = period;
rightMetricsKey = period;
unicode = 2026;
},
{
glyphname = exclam;
lastChange = "2022-03-22 14:50:11 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"148 143 OFFCURVE",
"164 164 OFFCURVE",
"191 206 CURVE SMOOTH",
"226 262 OFFCURVE",
"249 296 OFFCURVE",
"262 312 CURVE SMOOTH",
"339 410 OFFCURVE",
"395 476 OFFCURVE",
"429 509 CURVE SMOOTH",
"460 540 OFFCURVE",
"481 555 OFFCURVE",
"492 555 CURVE SMOOTH",
"503 555 OFFCURVE",
"508 558 OFFCURVE",
"508 564 CURVE SMOOTH",
"508 571 OFFCURVE",
"503 574 OFFCURVE",
"494 574 CURVE SMOOTH",
"486 574 OFFCURVE",
"469 569 OFFCURVE",
"443 558 CURVE SMOOTH",
"415 547 OFFCURVE",
"400 539 OFFCURVE",
"397 536 CURVE SMOOTH",
"306 429 OFFCURVE",
"247 353 OFFCURVE",
"220 307 CURVE SMOOTH",
"185 251 OFFCURVE",
"167 221 OFFCURVE",
"166 216 CURVE",
"147 184 OFFCURVE",
"139 161 OFFCURVE",
"140 147 CURVE SMOOTH",
"140 144 OFFCURVE",
"141 143 OFFCURVE",
"143 143 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"71 1 OFFCURVE",
"81 4 OFFCURVE",
"86 10 CURVE SMOOTH",
"97 22 OFFCURVE",
"110 34 OFFCURVE",
"126 45 CURVE SMOOTH",
"129 47 OFFCURVE",
"130 49 OFFCURVE",
"130 51 CURVE SMOOTH",
"130 59 OFFCURVE",
"120 63 OFFCURVE",
"99 63 CURVE SMOOTH",
"88 63 OFFCURVE",
"81 61 OFFCURVE",
"76 57 CURVE",
"61 41 OFFCURVE",
"50 27 OFFCURVE",
"41 15 CURVE SMOOTH",
"34 6 OFFCURVE",
"39 1 OFFCURVE",
"57 1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01230 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 37 119 37 135 37 151 37 167 37 183 37 199 37 215 37 231 37 247 37 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 37 23 37 39 37 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 37 70 37 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 260;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = exclamdown;
lastChange = "2022-03-24 22:52:26 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-144 -241 OFFCURVE",
"-127 -235 OFFCURVE",
"-99 -224 CURVE SMOOTH",
"-71 -213 OFFCURVE",
"-56 -205 OFFCURVE",
"-53 -202 CURVE SMOOTH",
"-28 -173 OFFCURVE",
"-3 -143 OFFCURVE",
"24 -113 CURVE SMOOTH",
"67 -62 OFFCURVE",
"100 -15 OFFCURVE",
"124 26 CURVE SMOOTH",
"178 118 LINE SMOOTH",
"197 150 OFFCURVE",
"204 173 OFFCURVE",
"203 186 CURVE SMOOTH",
"203 189 OFFCURVE",
"202 191 OFFCURVE",
"200 191 CURVE SMOOTH",
"195 191 OFFCURVE",
"179 170 OFFCURVE",
"152 127 CURVE SMOOTH",
"135 99 OFFCURVE",
"120 76 OFFCURVE",
"108 59 CURVE SMOOTH",
"96 42 OFFCURVE",
"87 29 OFFCURVE",
"81 22 CURVE SMOOTH",
"1 -81 OFFCURVE",
"-55 -145 OFFCURVE",
"-86 -176 CURVE SMOOTH",
"-117 -207 OFFCURVE",
"-138 -222 OFFCURVE",
"-147 -222 CURVE SMOOTH",
"-159 -222 OFFCURVE",
"-165 -225 OFFCURVE",
"-165 -231 CURVE SMOOTH",
"-165 -238 OFFCURVE",
"-160 -241 OFFCURVE",
"-150 -241 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"255 270 OFFCURVE",
"263 272 OFFCURVE",
"268 277 CURVE SMOOTH",
"303 318 LINE SMOOTH",
"305 321 OFFCURVE",
"306 323 OFFCURVE",
"306 325 CURVE SMOOTH",
"306 330 OFFCURVE",
"299 333 OFFCURVE",
"285 333 CURVE SMOOTH",
"272 333 OFFCURVE",
"263 330 OFFCURVE",
"258 324 CURVE SMOOTH",
"245 309 OFFCURVE",
"232 297 OFFCURVE",
"218 288 CURVE SMOOTH",
"215 286 OFFCURVE",
"214 284 OFFCURVE",
"214 282 CURVE SMOOTH",
"214 274 OFFCURVE",
"224 270 OFFCURVE",
"244 270 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01211 3 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 260;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = question;
lastChange = "2022-03-24 22:53:13 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"227 175 OFFCURVE",
"233 181 OFFCURVE",
"239 193 CURVE SMOOTH",
"254 226 OFFCURVE",
"289 252 OFFCURVE",
"344 273 CURVE SMOOTH",
"481 326 LINE",
"528 351 OFFCURVE",
"553 384 OFFCURVE",
"557 427 CURVE SMOOTH",
"564 513 OFFCURVE",
"495 572 OFFCURVE",
"394 572 CURVE SMOOTH",
"358 572 OFFCURVE",
"325 564 OFFCURVE",
"294 549 CURVE SMOOTH",
"251 528 OFFCURVE",
"224 496 OFFCURVE",
"211 455 CURVE SMOOTH",
"208 447 OFFCURVE",
"207 438 OFFCURVE",
"207 429 CURVE SMOOTH",
"207 396 OFFCURVE",
"227 366 OFFCURVE",
"250 357 CURVE SMOOTH",
"259 354 OFFCURVE",
"263 355 OFFCURVE",
"263 360 CURVE SMOOTH",
"263 363 OFFCURVE",
"261 366 OFFCURVE",
"257 368 CURVE SMOOTH",
"243 374 OFFCURVE",
"236 394 OFFCURVE",
"236 427 CURVE SMOOTH",
"236 438 OFFCURVE",
"237 448 OFFCURVE",
"240 455 CURVE SMOOTH",
"268 530 OFFCURVE",
"316 554 OFFCURVE",
"408 551 CURVE SMOOTH",
"479 549 OFFCURVE",
"524 502 OFFCURVE",
"524 440 CURVE SMOOTH",
"524 394 OFFCURVE",
"498 358 OFFCURVE",
"446 331 CURVE",
"310 277 LINE SMOOTH",
"258 256 OFFCURVE",
"227 229 OFFCURVE",
"218 198 CURVE SMOOTH",
"216 192 OFFCURVE",
"215 187 OFFCURVE",
"215 183 CURVE SMOOTH",
"215 178 OFFCURVE",
"217 175 OFFCURVE",
"220 175 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"160 3 OFFCURVE",
"170 6 OFFCURVE",
"175 12 CURVE SMOOTH",
"186 24 OFFCURVE",
"199 36 OFFCURVE",
"215 47 CURVE SMOOTH",
"218 49 OFFCURVE",
"219 51 OFFCURVE",
"219 53 CURVE SMOOTH",
"219 61 OFFCURVE",
"208 65 OFFCURVE",
"187 65 CURVE SMOOTH",
"177 65 OFFCURVE",
"170 63 OFFCURVE",
"165 59 CURVE",
"150 43 OFFCURVE",
"139 29 OFFCURVE",
"130 17 CURVE SMOOTH",
"123 8 OFFCURVE",
"128 3 OFFCURVE",
"146 3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 1065 37 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 28 213 28 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01258 51 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 470;
}
);
note = question;
unicode = 003F;
},
{
glyphname = questiondown;
lastChange = "2022-03-24 22:52:52 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"228 -236 OFFCURVE",
"262 -228 OFFCURVE",
"292 -213 CURVE SMOOTH",
"334 -192 OFFCURVE",
"362 -161 OFFCURVE",
"375 -119 CURVE SMOOTH",
"378 -111 OFFCURVE",
"379 -102 OFFCURVE",
"379 -93 CURVE SMOOTH",
"379 -61 OFFCURVE",
"360 -30 OFFCURVE",
"337 -21 CURVE SMOOTH",
"328 -18 OFFCURVE",
"324 -20 OFFCURVE",
"324 -25 CURVE SMOOTH",
"324 -29 OFFCURVE",
"326 -31 OFFCURVE",
"330 -32 CURVE SMOOTH",
"343 -37 OFFCURVE",
"350 -57 OFFCURVE",
"350 -90 CURVE SMOOTH",
"350 -101 OFFCURVE",
"349 -111 OFFCURVE",
"346 -118 CURVE SMOOTH",
"333 -155 OFFCURVE",
"315 -180 OFFCURVE",
"290 -194 CURVE SMOOTH",
"265 -208 OFFCURVE",
"230 -215 OFFCURVE",
"184 -215 CURVE SMOOTH",
"142 -215 OFFCURVE",
"110 -203 OFFCURVE",
"88 -176 CURVE SMOOTH",
"70 -155 OFFCURVE",
"62 -132 OFFCURVE",
"62 -105 CURVE SMOOTH",
"62 -59 OFFCURVE",
"86 -23 OFFCURVE",
"140 5 CURVE",
"277 59 LINE SMOOTH",
"329 80 OFFCURVE",
"360 107 OFFCURVE",
"369 138 CURVE SMOOTH",
"371 144 OFFCURVE",
"372 149 OFFCURVE",
"372 153 CURVE SMOOTH",
"372 158 OFFCURVE",
"370 161 OFFCURVE",
"367 161 CURVE SMOOTH",
"360 161 OFFCURVE",
"354 155 OFFCURVE",
"348 143 CURVE SMOOTH",
"333 111 OFFCURVE",
"297 84 OFFCURVE",
"242 63 CURVE SMOOTH",
"105 11 LINE",
"53 -16 OFFCURVE",
"28 -55 OFFCURVE",
"28 -104 CURVE SMOOTH",
"28 -183 OFFCURVE",
"98 -236 OFFCURVE",
"192 -236 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"409 271 OFFCURVE",
"417 273 OFFCURVE",
"422 277 CURVE",
"437 293 OFFCURVE",
"448 307 OFFCURVE",
"457 319 CURVE SMOOTH",
"465 328 OFFCURVE",
"459 333 OFFCURVE",
"439 333 CURVE SMOOTH",
"426 333 OFFCURVE",
"417 330 OFFCURVE",
"412 325 CURVE SMOOTH",
"399 310 OFFCURVE",
"385 298 OFFCURVE",
"372 289 CURVE SMOOTH",
"369 287 OFFCURVE",
"368 285 OFFCURVE",
"368 283 CURVE SMOOTH",
"368 275 OFFCURVE",
"378 271 OFFCURVE",
"399 271 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01259 1065 50 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 50 218 50 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 50 25 50 41 50 57 50 73 50 89 50 105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 50 25 50 41 50 57 50 73 50 89 50 105 50 121 50 137 50 153 50 169 50 185 50 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01213 5 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 480;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = periodcentered;
lastChange = "2022-03-22 10:26:29 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"153 144 OFFCURVE",
"157 157 OFFCURVE",
"172 182 CURVE SMOOTH",
"177 191 OFFCURVE",
"179 198 OFFCURVE",
"179 203 CURVE SMOOTH",
"179 210 OFFCURVE",
"175 213 OFFCURVE",
"167 213 CURVE SMOOTH",
"155 213 OFFCURVE",
"144 209 OFFCURVE",
"133 200 CURVE",
"126 192 OFFCURVE",
"119 185 OFFCURVE",
"114 178 CURVE SMOOTH",
"108 171 OFFCURVE",
"103 164 OFFCURVE",
"98 159 CURVE SMOOTH",
"90 149 OFFCURVE",
"98 144 OFFCURVE",
"121 144 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 221;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = bullet;
lastChange = "2022-03-22 10:26:40 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"380 5 OFFCURVE",
"463 84 OFFCURVE",
"463 187 CURVE SMOOTH",
"463 287 OFFCURVE",
"382 368 OFFCURVE",
"282 368 CURVE SMOOTH",
"181 368 OFFCURVE",
"100 287 OFFCURVE",
"100 187 CURVE SMOOTH",
"100 86 OFFCURVE",
"181 5 OFFCURVE",
"282 5 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 483;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = asterisk;
lastChange = "2022-03-22 14:46:51 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"273 364 OFFCURVE",
"283 382 OFFCURVE",
"294 419 CURVE SMOOTH",
"318 489 LINE",
"418 423 LINE",
"426 421 LINE",
"430 421 OFFCURVE",
"430 424 OFFCURVE",
"426 431 CURVE SMOOTH",
"421 438 OFFCURVE",
"415 444 OFFCURVE",
"407 449 CURVE",
"340 501 LINE",
"417 531 LINE SMOOTH",
"435 538 OFFCURVE",
"444 544 OFFCURVE",
"444 551 CURVE SMOOTH",
"444 554 OFFCURVE",
"441 555 OFFCURVE",
"434 554 CURVE",
"405 546 OFFCURVE",
"382 539 OFFCURVE",
"363 532 CURVE SMOOTH",
"328 520 LINE",
"353 592 LINE SMOOTH",
"356 601 OFFCURVE",
"357 609 OFFCURVE",
"357 616 CURVE SMOOTH",
"357 622 LINE SMOOTH",
"356 631 OFFCURVE",
"352 629 OFFCURVE",
"346 618 CURVE",
"333 587 OFFCURVE",
"323 562 OFFCURVE",
"316 543 CURVE SMOOTH",
"315 539 OFFCURVE",
"313 536 OFFCURVE",
"312 533 CURVE SMOOTH",
"309 525 LINE",
"253 568 LINE SMOOTH",
"232 585 OFFCURVE",
"216 593 OFFCURVE",
"207 593 CURVE SMOOTH",
"203 593 OFFCURVE",
"201 591 OFFCURVE",
"201 587 CURVE SMOOTH",
"201 582 OFFCURVE",
"204 577 OFFCURVE",
"209 570 CURVE",
"240 545 OFFCURVE",
"267 524 OFFCURVE",
"290 508 CURVE",
"265 499 OFFCURVE",
"244 492 OFFCURVE",
"228 486 CURVE SMOOTH",
"211 480 OFFCURVE",
"200 475 OFFCURVE",
"193 470 CURVE SMOOTH",
"184 464 OFFCURVE",
"180 458 OFFCURVE",
"180 453 CURVE SMOOTH",
"180 450 OFFCURVE",
"183 448 OFFCURVE",
"190 448 CURVE SMOOTH",
"199 448 OFFCURVE",
"215 452 OFFCURVE",
"236 460 CURVE SMOOTH",
"292 482 LINE",
"281 455 OFFCURVE",
"273 434 OFFCURVE",
"268 418 CURVE SMOOTH",
"262 401 OFFCURVE",
"258 389 OFFCURVE",
"257 382 CURVE SMOOTH",
"256 370 OFFCURVE",
"258 364 OFFCURVE",
"264 364 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 322;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = numbersign;
lastChange = "2022-03-22 10:27:06 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"436 -73 OFFCURVE",
"441 -69 OFFCURVE",
"443 -62 CURVE SMOOTH",
"463 10 OFFCURVE",
"499 92 OFFCURVE",
"552 188 CURVE",
"572 189 OFFCURVE",
"592 189 OFFCURVE",
"612 189 CURVE SMOOTH",
"670 189 OFFCURVE",
"727 186 OFFCURVE",
"783 178 CURVE SMOOTH",
"796 176 OFFCURVE",
"803 179 OFFCURVE",
"803 187 CURVE SMOOTH",
"803 191 OFFCURVE",
"799 194 OFFCURVE",
"792 195 CURVE SMOOTH",
"719 205 OFFCURVE",
"642 210 OFFCURVE",
"563 210 CURVE",
"586 251 LINE",
"610 291 LINE",
"726 298 OFFCURVE",
"796 310 OFFCURVE",
"821 325 CURVE SMOOTH",
"831 332 OFFCURVE",
"836 339 OFFCURVE",
"836 347 CURVE SMOOTH",
"836 358 OFFCURVE",
"832 363 OFFCURVE",
"825 363 CURVE SMOOTH",
"818 363 OFFCURVE",
"815 357 OFFCURVE",
"814 345 CURVE",
"789 329 OFFCURVE",
"726 319 OFFCURVE",
"623 314 CURVE",
"698 443 LINE SMOOTH",
"700 447 OFFCURVE",
"701 450 OFFCURVE",
"701 453 CURVE SMOOTH",
"701 457 OFFCURVE",
"699 459 OFFCURVE",
"696 459 CURVE SMOOTH",
"691 459 OFFCURVE",
"687 455 OFFCURVE",
"683 448 CURVE SMOOTH",
"666 419 OFFCURVE",
"640 374 OFFCURVE",
"601 314 CURVE",
"492 311 LINE SMOOTH",
"461 310 OFFCURVE",
"434 310 OFFCURVE",
"413 309 CURVE",
"491 429 LINE",
"494 432 OFFCURVE",
"495 436 OFFCURVE",
"495 441 CURVE SMOOTH",
"495 450 OFFCURVE",
"492 455 OFFCURVE",
"485 455 CURVE SMOOTH",
"482 455 OFFCURVE",
"479 453 OFFCURVE",
"476 448 CURVE SMOOTH",
"381 309 LINE",
"150 305 LINE",
"141 304 OFFCURVE",
"136 299 OFFCURVE",
"136 291 CURVE SMOOTH",
"136 280 OFFCURVE",
"141 275 OFFCURVE",
"150 275 CURVE SMOOTH",
"152 275 LINE SMOOTH",
"229 278 OFFCURVE",
"299 280 OFFCURVE",
"363 281 CURVE",
"339 242 OFFCURVE",
"321 213 OFFCURVE",
"309 192 CURVE",
"123 179 LINE SMOOTH",
"114 178 OFFCURVE",
"110 173 OFFCURVE",
"110 164 CURVE SMOOTH",
"110 154 OFFCURVE",
"115 149 OFFCURVE",
"124 149 CURVE SMOOTH",
"126 149 LINE",
"291 162 LINE",
"272 131 OFFCURVE",
"258 107 OFFCURVE",
"249 88 CURVE SMOOTH",
"236 64 OFFCURVE",
"232 49 OFFCURVE",
"232 44 CURVE SMOOTH",
"232 32 OFFCURVE",
"241 24 OFFCURVE",
"250 24 CURVE SMOOTH",
"255 24 OFFCURVE",
"260 27 OFFCURVE",
"263 33 CURVE SMOOTH",
"276 58 OFFCURVE",
"288 82 OFFCURVE",
"299 105 CURVE SMOOTH",
"310 127 OFFCURVE",
"320 147 OFFCURVE",
"329 166 CURVE",
"524 187 LINE",
"471 98 OFFCURVE",
"435 17 OFFCURVE",
"415 -54 CURVE SMOOTH",
"412 -67 OFFCURVE",
"417 -73 OFFCURVE",
"429 -73 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"396 282 LINE",
"443 283 OFFCURVE",
"507 286 OFFCURVE",
"587 290 CURVE",
"582 281 OFFCURVE",
"575 269 OFFCURVE",
"567 256 CURVE SMOOTH",
"558 243 OFFCURVE",
"549 227 OFFCURVE",
"538 209 CURVE",
"495 206 OFFCURVE",
"458 204 OFFCURVE",
"426 202 CURVE SMOOTH",
"394 200 OFFCURVE",
"367 198 OFFCURVE",
"346 195 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01261 1061 79 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01286 1061 13 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01286 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01234 18 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01245 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 798;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = slash;
lastChange = "2022-03-22 14:12:32 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"43 -138 OFFCURVE",
"53 -134 OFFCURVE",
"66 -125 CURVE SMOOTH",
"79 -116 OFFCURVE",
"85 -109 OFFCURVE",
"86 -102 CURVE SMOOTH",
"88 -82 OFFCURVE",
"102 -51 OFFCURVE",
"128 -10 CURVE SMOOTH",
"190 84 OFFCURVE",
"284 197 OFFCURVE",
"411 329 CURVE SMOOTH",
"504 426 OFFCURVE",
"576 501 OFFCURVE",
"627 555 CURVE SMOOTH",
"678 608 OFFCURVE",
"708 641 OFFCURVE",
"718 652 CURVE",
"721 657 OFFCURVE",
"719 659 OFFCURVE",
"712 659 CURVE SMOOTH",
"689 659 OFFCURVE",
"661 640 OFFCURVE",
"628 602 CURVE SMOOTH",
"337 285 LINE SMOOTH",
"208 144 OFFCURVE",
"119 39 OFFCURVE",
"72 -33 CURVE SMOOTH",
"45 -74 OFFCURVE",
"30 -107 OFFCURVE",
"27 -132 CURVE SMOOTH",
"27 -136 OFFCURVE",
"29 -138 OFFCURVE",
"34 -138 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0120 1077 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01221 1077 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 507;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = backslash;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"497 -116 LINE",
"514 -116 OFFCURVE",
"523 -105 OFFCURVE",
"523 -84 CURVE SMOOTH",
"523 -5 OFFCURVE",
"477 113 OFFCURVE",
"386 268 CURVE SMOOTH",
"318 381 OFFCURVE",
"245 489 OFFCURVE",
"164 590 CURVE SMOOTH",
"117 649 OFFCURVE",
"86 684 OFFCURVE",
"72 696 CURVE SMOOTH",
"57 709 OFFCURVE",
"41 715 OFFCURVE",
"24 715 CURVE SMOOTH",
"15 715 OFFCURVE",
"10 713 OFFCURVE",
"10 709 CURVE",
"105 608 OFFCURVE",
"186 511 OFFCURVE",
"254 420 CURVE SMOOTH",
"416 202 OFFCURVE",
"497 30 OFFCURVE",
"497 -96 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 1067 1 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 551;
}
);
note = backslash;
unicode = 005C;
},
{
color = 3;
glyphname = periodcentered.loclCAT.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"109 261 OFFCURVE",
"113 274 OFFCURVE",
"128 299 CURVE SMOOTH",
"133 308 OFFCURVE",
"135 315 OFFCURVE",
"135 320 CURVE SMOOTH",
"135 327 OFFCURVE",
"131 330 OFFCURVE",
"123 330 CURVE SMOOTH",
"111 330 OFFCURVE",
"100 326 OFFCURVE",
"89 317 CURVE",
"82 309 OFFCURVE",
"75 302 OFFCURVE",
"70 295 CURVE SMOOTH",
"64 288 OFFCURVE",
"59 281 OFFCURVE",
"54 276 CURVE SMOOTH",
"46 266 OFFCURVE",
"54 261 OFFCURVE",
"77 261 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
color = 3;
glyphname = periodcentered.loclCAT;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"199 261 OFFCURVE",
"203 274 OFFCURVE",
"218 299 CURVE SMOOTH",
"223 308 OFFCURVE",
"225 315 OFFCURVE",
"225 320 CURVE SMOOTH",
"225 327 OFFCURVE",
"221 330 OFFCURVE",
"213 330 CURVE SMOOTH",
"201 330 OFFCURVE",
"190 326 OFFCURVE",
"179 317 CURVE",
"172 309 OFFCURVE",
"165 302 OFFCURVE",
"160 295 CURVE SMOOTH",
"154 288 OFFCURVE",
"149 281 OFFCURVE",
"144 276 CURVE SMOOTH",
"136 266 OFFCURVE",
"144 261 OFFCURVE",
"167 261 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = parenleft;
lastChange = "2022-03-24 22:56:30 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"200 -193 OFFCURVE",
"213 -171 OFFCURVE",
"209 -158 CURVE SMOOTH",
"196 -108 OFFCURVE",
"190 -55 OFFCURVE",
"190 0 CURVE SMOOTH",
"190 141 OFFCURVE",
"226 264 OFFCURVE",
"298 369 CURVE SMOOTH",
"377 485 OFFCURVE",
"481 549 OFFCURVE",
"612 561 CURVE SMOOTH",
"623 562 OFFCURVE",
"629 572 OFFCURVE",
"629 591 CURVE SMOOTH",
"629 604 OFFCURVE",
"625 611 OFFCURVE",
"617 611 CURVE SMOOTH",
"616 611 LINE SMOOTH",
"482 602 OFFCURVE",
"372 541 OFFCURVE",
"286 426 CURVE SMOOTH",
"202 315 OFFCURVE",
"160 180 OFFCURVE",
"160 21 CURVE SMOOTH",
"160 -47 OFFCURVE",
"169 -116 OFFCURVE",
"186 -187 CURVE SMOOTH",
"187 -191 OFFCURVE",
"189 -193 OFFCURVE",
"192 -193 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 1065 2 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 14 213 14 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2022-03-24 22:56:38 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-97 -187 LINE SMOOTH",
"37 -178 OFFCURVE",
"147 -117 OFFCURVE",
"233 -2 CURVE SMOOTH",
"317 109 OFFCURVE",
"359 244 OFFCURVE",
"359 403 CURVE SMOOTH",
"359 471 OFFCURVE",
"350 540 OFFCURVE",
"333 611 CURVE SMOOTH",
"332 615 OFFCURVE",
"330 617 OFFCURVE",
"328 617 CURVE SMOOTH",
"319 617 OFFCURVE",
"306 595 OFFCURVE",
"310 582 CURVE SMOOTH",
"323 532 OFFCURVE",
"329 479 OFFCURVE",
"329 424 CURVE SMOOTH",
"329 283 OFFCURVE",
"293 160 OFFCURVE",
"221 55 CURVE SMOOTH",
"142 -61 OFFCURVE",
"38 -125 OFFCURVE",
"-93 -137 CURVE SMOOTH",
"-104 -138 OFFCURVE",
"-110 -148 OFFCURVE",
"-110 -167 CURVE SMOOTH",
"-110 -180 OFFCURVE",
"-106 -187 OFFCURVE",
"-98 -187 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 1065 14 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 14 218 14 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 450;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = braceleft;
lastChange = "2022-03-22 13:21:10 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"340 -134 OFFCURVE",
"344 -133 OFFCURVE",
"344 -131 CURVE",
"341 -129 LINE",
"291 -123 LINE SMOOTH",
"252 -116 OFFCURVE",
"231 -93 OFFCURVE",
"231 -44 CURVE SMOOTH",
"231 -17 OFFCURVE",
"237 24 OFFCURVE",
"250 77 CURVE SMOOTH",
"263 130 OFFCURVE",
"269 171 OFFCURVE",
"269 199 CURVE SMOOTH",
"269 259 OFFCURVE",
"223 300 OFFCURVE",
"162 305 CURVE",
"201 304 OFFCURVE",
"236 318 OFFCURVE",
"267 348 CURVE SMOOTH",
"295 375 OFFCURVE",
"315 408 OFFCURVE",
"327 448 CURVE SMOOTH",
"328 451 OFFCURVE",
"331 464 OFFCURVE",
"336 485 CURVE SMOOTH",
"354 576 LINE SMOOTH",
"363 623 OFFCURVE",
"377 658 OFFCURVE",
"396 679 CURVE SMOOTH",
"421 707 OFFCURVE",
"460 721 OFFCURVE",
"515 721 CURVE",
"523 724 LINE",
"520 725 OFFCURVE",
"518 726 OFFCURVE",
"517 726 CURVE SMOOTH",
"431 726 OFFCURVE",
"373 701 OFFCURVE",
"342 650 CURVE SMOOTH",
"327 623 OFFCURVE",
"313 570 OFFCURVE",
"301 489 CURVE SMOOTH",
"290 417 OFFCURVE",
"270 369 OFFCURVE",
"243 346 CURVE SMOOTH",
"222 327 OFFCURVE",
"183 315 OFFCURVE",
"126 309 CURVE",
"121 301 LINE",
"199 300 OFFCURVE",
"238 268 OFFCURVE",
"238 205 CURVE SMOOTH",
"238 179 OFFCURVE",
"231 138 OFFCURVE",
"218 83 CURVE SMOOTH",
"205 28 OFFCURVE",
"198 -12 OFFCURVE",
"198 -39 CURVE SMOOTH",
"198 -77 OFFCURVE",
"211 -103 OFFCURVE",
"238 -118 CURVE SMOOTH",
"257 -129 OFFCURVE",
"289 -134 OFFCURVE",
"332 -134 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 48 218 48 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 48 121 48 137 48 153 48 169 48 185 48 201 48 217 48 233 48 249 48 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 48 25 48 41 48 57 48 73 48 89 48 105 48 121 48 137 48 153 48 169 48 185 48 201 48 217 48 233 48 249 48 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 48 25 48 41 48 57 48 73 48 89 48 105 48 121 48 137 48 153 48 169 48 185 48 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01226 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01232 1068 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 32 118 32 134 32 150 32 166 32 182 32 198 32 214 32 230 32 246 32 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 32 22 32 38 32 54 32 70 32 86 32 102 32 118 32 134 32 150 32 166 32 182 32 198 32 214 32 230 32 246 32 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 32 22 32 38 32 54 32 70 32 86 32 102 32 118 32 134 32 150 32 166 32 182 32 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 32 213 32 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0120 40 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01223 40 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 370;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = braceright;
lastChange = "2022-03-22 10:30:22 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"88 -131 OFFCURVE",
"155 -95 OFFCURVE",
"190 -24 CURVE",
"253 177 LINE",
"283 250 OFFCURVE",
"340 286 OFFCURVE",
"424 287 CURVE",
"431 296 LINE",
"358 303 OFFCURVE",
"321 330 OFFCURVE",
"321 376 CURVE SMOOTH",
"321 408 OFFCURVE",
"331 453 OFFCURVE",
"352 511 CURVE SMOOTH",
"373 572 OFFCURVE",
"384 617 OFFCURVE",
"384 648 CURVE SMOOTH",
"384 679 OFFCURVE",
"369 701 OFFCURVE",
"339 712 CURVE SMOOTH",
"322 719 OFFCURVE",
"292 722 OFFCURVE",
"251 722 CURVE",
"248 721 OFFCURVE",
"245 719 OFFCURVE",
"244 718 CURVE",
"244 717 OFFCURVE",
"245 716 OFFCURVE",
"246 716 CURVE SMOOTH",
"269 713 OFFCURVE",
"292 709 OFFCURVE",
"315 705 CURVE",
"337 698 OFFCURVE",
"348 679 OFFCURVE",
"348 648 CURVE SMOOTH",
"348 620 OFFCURVE",
"338 576 OFFCURVE",
"319 517 CURVE SMOOTH",
"300 458 OFFCURVE",
"290 413 OFFCURVE",
"290 384 CURVE SMOOTH",
"290 356 OFFCURVE",
"302 334 OFFCURVE",
"326 318 CURVE SMOOTH",
"346 304 OFFCURVE",
"371 296 OFFCURVE",
"401 294 CURVE",
"350 289 OFFCURVE",
"303 267 OFFCURVE",
"260 226 CURVE SMOOTH",
"232 199 OFFCURVE",
"206 143 OFFCURVE",
"181 58 CURVE SMOOTH",
"157 -26 OFFCURVE",
"132 -78 OFFCURVE",
"106 -99 CURVE SMOOTH",
"92 -111 OFFCURVE",
"68 -119 OFFCURVE",
"35 -122 CURVE SMOOTH",
"4 -125 OFFCURVE",
"-13 -127 OFFCURVE",
"-15 -129 CURVE",
"-15 -130 OFFCURVE",
"-13 -131 OFFCURVE",
"-9 -131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 38 218 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0126 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01210 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 10 213 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01212 18 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01230 18 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 395;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = bracketleft;
lastChange = "2022-03-22 10:30:32 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"319 -17 OFFCURVE",
"348 -12 OFFCURVE",
"348 -3 CURVE SMOOTH",
"348 5 OFFCURVE",
"337 9 OFFCURVE",
"316 9 CURVE SMOOTH",
"307 9 OFFCURVE",
"253 4 OFFCURVE",
"244 4 CURVE SMOOTH",
"193 4 OFFCURVE",
"167 23 OFFCURVE",
"167 60 CURVE SMOOTH",
"167 125 OFFCURVE",
"211 235 OFFCURVE",
"298 392 CURVE SMOOTH",
"385 546 OFFCURVE",
"456 642 OFFCURVE",
"511 680 CURVE SMOOTH",
"518 685 OFFCURVE",
"539 687 OFFCURVE",
"574 687 CURVE SMOOTH",
"589 687 OFFCURVE",
"622 683 OFFCURVE",
"638 683 CURVE SMOOTH",
"645 683 OFFCURVE",
"650 683 OFFCURVE",
"652 684 CURVE",
"653 697 LINE SMOOTH",
"654 711 OFFCURVE",
"620 718 OFFCURVE",
"552 718 CURVE SMOOTH",
"526 718 OFFCURVE",
"505 713 OFFCURVE",
"488 703 CURVE SMOOTH",
"425 665 OFFCURVE",
"349 561 OFFCURVE",
"260 390 CURVE SMOOTH",
"172 220 OFFCURVE",
"128 96 OFFCURVE",
"128 19 CURVE SMOOTH",
"128 2 OFFCURVE",
"146 -9 OFFCURVE",
"183 -14 CURVE SMOOTH",
"196 -16 OFFCURVE",
"222 -17 OFFCURVE",
"261 -17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 1070 28 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 13 213 13 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01224 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01226 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01234 1064 7 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01215 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 15 119 15 135 15 151 15 167 15 183 15 199 15 215 15 231 15 247 15 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 15 23 15 39 15 55 15 71 15 87 15 103 15 119 15 135 15 151 15 167 15 183 15 199 15 215 15 231 15 247 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 15 23 15 39 15 55 15 71 15 87 15 103 15 119 15 135 15 151 15 167 15 183 15 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 15 214 15 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 485;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = bracketright;
lastChange = "2022-03-22 10:30:39 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"119 -17 OFFCURVE",
"155 -16 OFFCURVE",
"174 -13 CURVE SMOOTH",
"218 -7 OFFCURVE",
"249 6 OFFCURVE",
"268 27 CURVE SMOOTH",
"337 100 OFFCURVE",
"399 202 OFFCURVE",
"454 333 CURVE SMOOTH",
"510 466 OFFCURVE",
"538 581 OFFCURVE",
"538 679 CURVE SMOOTH",
"538 696 OFFCURVE",
"533 707 OFFCURVE",
"523 712 CURVE SMOOTH",
"518 715 OFFCURVE",
"505 716 OFFCURVE",
"485 716 CURVE SMOOTH",
"452 716 OFFCURVE",
"429 715 OFFCURVE",
"416 713 CURVE SMOOTH",
"390 708 OFFCURVE",
"370 698 OFFCURVE",
"356 684 CURVE",
"364 684 OFFCURVE",
"381 685 OFFCURVE",
"406 687 CURVE SMOOTH",
"427 688 OFFCURVE",
"443 689 OFFCURVE",
"455 689 CURVE SMOOTH",
"472 689 OFFCURVE",
"486 686 OFFCURVE",
"495 680 CURVE",
"498 664 OFFCURVE",
"499 652 OFFCURVE",
"499 643 CURVE SMOOTH",
"499 570 OFFCURVE",
"471 469 OFFCURVE",
"416 339 CURVE SMOOTH",
"363 217 OFFCURVE",
"311 125 OFFCURVE",
"259 63 CURVE SMOOTH",
"228 26 OFFCURVE",
"181 8 OFFCURVE",
"116 8 CURVE SMOOTH",
"71 8 LINE",
"60 6 OFFCURVE",
"47 -2 OFFCURVE",
"32 -15 CURVE",
"40 -16 OFFCURVE",
"52 -17 OFFCURVE",
"68 -17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1070 21 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 21 218 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0129 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01212 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01235 1064 29 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01214 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 485;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = hyphen;
lastChange = "2022-03-22 14:53:12 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"210 224 OFFCURVE",
"278 227 OFFCURVE",
"351 226 CURVE",
"360 225 OFFCURVE",
"367 225 OFFCURVE",
"372 225 CURVE SMOOTH",
"383 225 LINE SMOOTH",
"390 225 OFFCURVE",
"394 227 OFFCURVE",
"394 232 CURVE SMOOTH",
"394 235 OFFCURVE",
"391 238 OFFCURVE",
"385 239 CURVE SMOOTH",
"357 243 LINE SMOOTH",
"322 248 OFFCURVE",
"282 251 OFFCURVE",
"238 251 CURVE SMOOTH",
"212 251 OFFCURVE",
"185 250 OFFCURVE",
"156 248 CURVE",
"141 238 OFFCURVE",
"133 228 OFFCURVE",
"133 219 CURVE SMOOTH",
"133 215 OFFCURVE",
"136 213 OFFCURVE",
"142 213 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01214 1061 7 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 375;
}
);
leftKerningGroup = hyphen;
note = hyphen;
rightKerningGroup = hyphen;
unicode = 002D;
},
{
glyphname = softhyphen;
lastChange = "2022-03-22 14:49:12 +0000";
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 375;
}
);
leftKerningGroup = hyphen;
leftMetricsKey = hyphen;
rightKerningGroup = hyphen;
rightMetricsKey = hyphen;
unicode = 00AD;
},
{
glyphname = endash;
lastChange = "2022-03-22 14:49:12 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"226 222 OFFCURVE",
"318 226 OFFCURVE",
"422 226 CURVE SMOOTH",
"470 226 LINE SMOOTH",
"481 225 OFFCURVE",
"491 225 OFFCURVE",
"498 225 CURVE SMOOTH",
"514 225 LINE SMOOTH",
"523 225 OFFCURVE",
"527 227 OFFCURVE",
"527 232 CURVE SMOOTH",
"527 235 OFFCURVE",
"523 238 OFFCURVE",
"516 239 CURVE SMOOTH",
"479 243 LINE SMOOTH",
"434 249 OFFCURVE",
"378 251 OFFCURVE",
"311 251 CURVE SMOOTH",
"267 251 OFFCURVE",
"217 250 OFFCURVE",
"163 248 CURVE",
"143 238 OFFCURVE",
"133 228 OFFCURVE",
"133 219 CURVE SMOOTH",
"133 215 OFFCURVE",
"137 213 OFFCURVE",
"144 213 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01214 1061 7 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 508;
}
);
leftKerningGroup = hyphen;
leftMetricsKey = hyphen;
note = endash;
rightKerningGroup = hyphen;
rightMetricsKey = hyphen;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2022-03-22 14:49:12 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"256 222 OFFCURVE",
"378 226 OFFCURVE",
"517 226 CURVE SMOOTH",
"581 226 LINE SMOOTH",
"597 225 OFFCURVE",
"610 225 OFFCURVE",
"620 225 CURVE SMOOTH",
"640 225 LINE SMOOTH",
"652 225 OFFCURVE",
"658 227 OFFCURVE",
"658 232 CURVE SMOOTH",
"658 235 OFFCURVE",
"653 238 OFFCURVE",
"643 239 CURVE SMOOTH",
"592 243 LINE SMOOTH",
"528 249 OFFCURVE",
"452 251 OFFCURVE",
"363 251 CURVE SMOOTH",
"305 251 OFFCURVE",
"241 250 OFFCURVE",
"172 248 CURVE",
"146 238 OFFCURVE",
"133 228 OFFCURVE",
"133 219 CURVE SMOOTH",
"133 215 OFFCURVE",
"138 213 OFFCURVE",
"147 213 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01214 1061 7 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 639;
}
);
leftKerningGroup = hyphen;
leftMetricsKey = hyphen;
note = emdash;
rightKerningGroup = hyphen;
rightMetricsKey = hyphen;
unicode = 2014;
},
{
glyphname = hyphentwo;
lastChange = "2022-03-22 14:49:12 +0000";
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 375;
}
);
leftKerningGroup = hyphen;
leftMetricsKey = hyphen;
rightKerningGroup = hyphen;
rightMetricsKey = hyphen;
unicode = 2010;
},
{
color = 3;
glyphname = underscore;
lastChange = "2022-03-22 10:32:04 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"-40 -73 OFFCURVE",
"-8 -73 OFFCURVE",
"32 -71 CURVE SMOOTH",
"94 -68 LINE SMOOTH",
"110 -67 OFFCURVE",
"122 -67 OFFCURVE",
"129 -67 CURVE SMOOTH",
"228 -62 OFFCURVE",
"213 -60 OFFCURVE",
"396 -60 CURVE",
"403 -53 LINE",
"400 -34 OFFCURVE",
"391 -25 OFFCURVE",
"375 -25 CURVE SMOOTH",
"-65 -25 LINE SMOOTH",
"-76 -25 OFFCURVE",
"-82 -31 OFFCURVE",
"-82 -44 CURVE SMOOTH",
"-82 -63 OFFCURVE",
"-76 -73 OFFCURVE",
"-65 -73 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"120 -46 OFFCURVE",
"188 -43 OFFCURVE",
"261 -44 CURVE",
"270 -45 OFFCURVE",
"277 -45 OFFCURVE",
"282 -45 CURVE SMOOTH",
"293 -45 LINE SMOOTH",
"300 -45 OFFCURVE",
"304 -43 OFFCURVE",
"304 -38 CURVE SMOOTH",
"304 -35 OFFCURVE",
"301 -32 OFFCURVE",
"295 -31 CURVE SMOOTH",
"267 -27 LINE SMOOTH",
"232 -22 OFFCURVE",
"192 -19 OFFCURVE",
"148 -19 CURVE SMOOTH",
"122 -19 OFFCURVE",
"95 -20 OFFCURVE",
"66 -22 CURVE",
"51 -32 OFFCURVE",
"43 -42 OFFCURVE",
"43 -51 CURVE SMOOTH",
"43 -55 OFFCURVE",
"46 -57 OFFCURVE",
"52 -57 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01214 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 376;
}
);
leftKerningGroup = period;
note = underscore;
rightKerningGroup = period;
unicode = 005F;
},
{
color = 3;
glyphname = quotesinglbase;
lastChange = "2022-03-22 10:41:02 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"43 -123 OFFCURVE",
"63 -99 OFFCURVE",
"90 -52 CURVE SMOOTH",
"117 -7 OFFCURVE",
"130 23 OFFCURVE",
"130 40 CURVE SMOOTH",
"130 45 OFFCURVE",
"129 51 OFFCURVE",
"127 56 CURVE",
"127 55 LINE",
"119 67 OFFCURVE",
"111 73 OFFCURVE",
"103 73 CURVE SMOOTH",
"92 73 OFFCURVE",
"82 55 OFFCURVE",
"82 43 CURVE SMOOTH",
"82 40 OFFCURVE",
"83 35 OFFCURVE",
"85 29 CURVE SMOOTH",
"87 23 OFFCURVE",
"88 18 OFFCURVE",
"88 14 CURVE SMOOTH",
"88 -9 OFFCURVE",
"78 -38 OFFCURVE",
"59 -73 CURVE SMOOTH",
"40 -108 OFFCURVE",
"30 -124 OFFCURVE",
"30 -122 CURVE SMOOTH",
"30 -123 OFFCURVE",
"30 -123 OFFCURVE",
"31 -123 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 200;
}
);
leftKerningGroup = period;
note = quotesinglbase;
rightKerningGroup = period;
unicode = 201A;
},
{
color = 3;
glyphname = quotedblbase;
lastChange = "2022-03-22 10:41:02 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"127 -123 OFFCURVE",
"147 -99 OFFCURVE",
"174 -52 CURVE SMOOTH",
"201 -7 OFFCURVE",
"214 23 OFFCURVE",
"214 40 CURVE SMOOTH",
"214 45 OFFCURVE",
"213 51 OFFCURVE",
"211 56 CURVE",
"211 55 LINE",
"203 67 OFFCURVE",
"195 73 OFFCURVE",
"187 73 CURVE SMOOTH",
"176 73 OFFCURVE",
"166 55 OFFCURVE",
"166 43 CURVE SMOOTH",
"166 40 OFFCURVE",
"167 35 OFFCURVE",
"169 29 CURVE SMOOTH",
"171 23 OFFCURVE",
"172 18 OFFCURVE",
"172 14 CURVE SMOOTH",
"172 -9 OFFCURVE",
"162 -38 OFFCURVE",
"143 -73 CURVE SMOOTH",
"124 -108 OFFCURVE",
"114 -124 OFFCURVE",
"114 -122 CURVE SMOOTH",
"114 -123 OFFCURVE",
"114 -123 OFFCURVE",
"115 -123 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"43 -123 OFFCURVE",
"63 -99 OFFCURVE",
"90 -52 CURVE SMOOTH",
"116 -7 OFFCURVE",
"129 23 OFFCURVE",
"129 40 CURVE SMOOTH",
"129 47 OFFCURVE",
"128 52 OFFCURVE",
"127 56 CURVE",
"127 55 LINE",
"117 67 OFFCURVE",
"109 73 OFFCURVE",
"103 73 CURVE SMOOTH",
"92 73 OFFCURVE",
"82 55 OFFCURVE",
"82 43 CURVE SMOOTH",
"82 40 OFFCURVE",
"83 35 OFFCURVE",
"85 29 CURVE SMOOTH",
"87 23 OFFCURVE",
"88 18 OFFCURVE",
"88 14 CURVE SMOOTH",
"88 -9 OFFCURVE",
"78 -38 OFFCURVE",
"59 -73 CURVE SMOOTH",
"40 -108 OFFCURVE",
"30 -124 OFFCURVE",
"30 -122 CURVE SMOOTH",
"30 -123 OFFCURVE",
"30 -123 OFFCURVE",
"31 -123 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 284;
}
);
leftKerningGroup = period;
note = quotedblbase;
rightKerningGroup = period;
unicode = 201E;
},
{
color = 3;
glyphname = quotedblleft;
lastChange = "2022-03-24 22:55:59 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"220 336 OFFCURVE",
"236 346 OFFCURVE",
"236 357 CURVE SMOOTH",
"236 358 OFFCURVE",
"235 360 OFFCURVE",
"234 363 CURVE SMOOTH",
"229 377 OFFCURVE",
"226 387 OFFCURVE",
"226 392 CURVE SMOOTH",
"226 408 OFFCURVE",
"232 423 OFFCURVE",
"243 438 CURVE",
"248 443 OFFCURVE",
"254 449 OFFCURVE",
"259 455 CURVE SMOOTH",
"264 461 OFFCURVE",
"269 467 OFFCURVE",
"274 472 CURVE",
"282 483 OFFCURVE",
"286 490 OFFCURVE",
"286 494 CURVE SMOOTH",
"286 495 OFFCURVE",
"285 496 OFFCURVE",
"284 497 CURVE",
"282 497 OFFCURVE",
"279 495 OFFCURVE",
"274 491 CURVE SMOOTH",
"212 443 OFFCURVE",
"180 407 OFFCURVE",
"178 384 CURVE SMOOTH",
"177 373 OFFCURVE",
"179 363 OFFCURVE",
"183 354 CURVE SMOOTH",
"188 342 OFFCURVE",
"195 336 OFFCURVE",
"205 336 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"316 336 OFFCURVE",
"332 346 OFFCURVE",
"332 357 CURVE SMOOTH",
"332 359 OFFCURVE",
"331 364 OFFCURVE",
"328 372 CURVE SMOOTH",
"325 379 OFFCURVE",
"323 386 OFFCURVE",
"323 392 CURVE SMOOTH",
"323 427 OFFCURVE",
"345 446 OFFCURVE",
"364 466 CURVE SMOOTH",
"375 479 OFFCURVE",
"380 489 OFFCURVE",
"380 494 CURVE SMOOTH",
"380 495 OFFCURVE",
"380 495 OFFCURVE",
"379 495 CURVE SMOOTH",
"368 495 OFFCURVE",
"349 480 OFFCURVE",
"320 449 CURVE SMOOTH",
"291 418 OFFCURVE",
"276 396 OFFCURVE",
"275 384 CURVE SMOOTH",
"274 373 OFFCURVE",
"275 363 OFFCURVE",
"279 354 CURVE SMOOTH",
"284 342 OFFCURVE",
"291 336 OFFCURVE",
"301 336 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"267 531 OFFCURVE",
"247 507 OFFCURVE",
"220 460 CURVE SMOOTH",
"193 415 OFFCURVE",
"180 385 OFFCURVE",
"180 368 CURVE SMOOTH",
"180 363 OFFCURVE",
"181 357 OFFCURVE",
"183 352 CURVE",
"183 353 LINE",
"191 341 OFFCURVE",
"199 335 OFFCURVE",
"207 335 CURVE SMOOTH",
"218 335 OFFCURVE",
"228 353 OFFCURVE",
"228 365 CURVE SMOOTH",
"228 368 OFFCURVE",
"227 373 OFFCURVE",
"225 379 CURVE SMOOTH",
"223 385 OFFCURVE",
"222 390 OFFCURVE",
"222 394 CURVE SMOOTH",
"222 417 OFFCURVE",
"232 446 OFFCURVE",
"251 481 CURVE SMOOTH",
"270 516 OFFCURVE",
"280 532 OFFCURVE",
"280 530 CURVE SMOOTH",
"280 531 OFFCURVE",
"280 531 OFFCURVE",
"279 531 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"351 531 OFFCURVE",
"331 507 OFFCURVE",
"304 460 CURVE SMOOTH",
"278 415 OFFCURVE",
"265 385 OFFCURVE",
"265 368 CURVE SMOOTH",
"265 361 OFFCURVE",
"266 356 OFFCURVE",
"267 352 CURVE",
"267 353 LINE",
"277 341 OFFCURVE",
"285 335 OFFCURVE",
"291 335 CURVE SMOOTH",
"302 335 OFFCURVE",
"312 353 OFFCURVE",
"312 365 CURVE SMOOTH",
"312 368 OFFCURVE",
"311 373 OFFCURVE",
"309 379 CURVE SMOOTH",
"307 385 OFFCURVE",
"306 390 OFFCURVE",
"306 394 CURVE SMOOTH",
"306 417 OFFCURVE",
"316 446 OFFCURVE",
"335 481 CURVE SMOOTH",
"354 516 OFFCURVE",
"364 532 OFFCURVE",
"364 530 CURVE SMOOTH",
"364 531 OFFCURVE",
"364 531 OFFCURVE",
"363 531 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 234;
}
);
note = quotedblleft;
unicode = 201C;
},
{
color = 3;
glyphname = quotedblright;
lastChange = "2022-03-24 22:55:21 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"170 336 OFFCURVE",
"174 338 OFFCURVE",
"179 342 CURVE SMOOTH",
"241 390 OFFCURVE",
"273 426 OFFCURVE",
"275 450 CURVE SMOOTH",
"276 470 OFFCURVE",
"267 498 OFFCURVE",
"248 498 CURVE SMOOTH",
"233 498 OFFCURVE",
"217 488 OFFCURVE",
"217 477 CURVE SMOOTH",
"217 476 OFFCURVE",
"218 474 OFFCURVE",
"219 471 CURVE SMOOTH",
"224 461 OFFCURVE",
"226 451 OFFCURVE",
"226 441 CURVE SMOOTH",
"227 416 OFFCURVE",
"168 354 OFFCURVE",
"168 339 CURVE SMOOTH",
"168 337 OFFCURVE",
"168 336 OFFCURVE",
"169 336 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"268 337 OFFCURVE",
"271 339 OFFCURVE",
"276 342 CURVE",
"337 389 OFFCURVE",
"369 425 OFFCURVE",
"371 450 CURVE SMOOTH",
"372 459 OFFCURVE",
"370 469 OFFCURVE",
"367 480 CURVE SMOOTH",
"362 492 OFFCURVE",
"354 498 OFFCURVE",
"345 498 CURVE SMOOTH",
"330 498 OFFCURVE",
"314 488 OFFCURVE",
"314 476 CURVE SMOOTH",
"314 474 OFFCURVE",
"316 469 OFFCURVE",
"319 461 CURVE SMOOTH",
"322 453 OFFCURVE",
"323 446 OFFCURVE",
"323 441 CURVE SMOOTH",
"323 413 OFFCURVE",
"309 386 OFFCURVE",
"282 360 CURVE SMOOTH",
"271 349 OFFCURVE",
"266 342 OFFCURVE",
"266 338 CURVE SMOOTH",
"266 337 OFFCURVE",
"266 337 OFFCURVE",
"267 337 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"287 335 OFFCURVE",
"307 359 OFFCURVE",
"334 406 CURVE SMOOTH",
"361 451 OFFCURVE",
"374 481 OFFCURVE",
"374 498 CURVE SMOOTH",
"374 503 OFFCURVE",
"373 509 OFFCURVE",
"371 514 CURVE",
"371 513 LINE",
"363 525 OFFCURVE",
"355 531 OFFCURVE",
"347 531 CURVE SMOOTH",
"336 531 OFFCURVE",
"326 513 OFFCURVE",
"326 501 CURVE SMOOTH",
"326 498 OFFCURVE",
"327 493 OFFCURVE",
"329 487 CURVE SMOOTH",
"331 481 OFFCURVE",
"332 476 OFFCURVE",
"332 472 CURVE SMOOTH",
"332 449 OFFCURVE",
"322 420 OFFCURVE",
"303 385 CURVE SMOOTH",
"284 350 OFFCURVE",
"274 334 OFFCURVE",
"274 336 CURVE SMOOTH",
"274 335 OFFCURVE",
"274 335 OFFCURVE",
"275 335 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"203 335 OFFCURVE",
"223 359 OFFCURVE",
"250 406 CURVE SMOOTH",
"276 451 OFFCURVE",
"289 481 OFFCURVE",
"289 498 CURVE SMOOTH",
"289 505 OFFCURVE",
"288 510 OFFCURVE",
"287 514 CURVE",
"287 513 LINE",
"277 525 OFFCURVE",
"269 531 OFFCURVE",
"263 531 CURVE SMOOTH",
"252 531 OFFCURVE",
"242 513 OFFCURVE",
"242 501 CURVE SMOOTH",
"242 498 OFFCURVE",
"243 493 OFFCURVE",
"245 487 CURVE SMOOTH",
"247 481 OFFCURVE",
"248 476 OFFCURVE",
"248 472 CURVE SMOOTH",
"248 449 OFFCURVE",
"238 420 OFFCURVE",
"219 385 CURVE SMOOTH",
"200 350 OFFCURVE",
"190 334 OFFCURVE",
"190 336 CURVE SMOOTH",
"190 335 OFFCURVE",
"190 335 OFFCURVE",
"191 335 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 284;
}
);
note = quotedblright;
unicode = 201D;
},
{
color = 3;
glyphname = quoteleft;
lastChange = "2022-03-22 14:51:51 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"248 328 OFFCURVE",
"264 338 OFFCURVE",
"264 349 CURVE SMOOTH",
"264 350 OFFCURVE",
"263 352 OFFCURVE",
"262 355 CURVE SMOOTH",
"257 369 OFFCURVE",
"254 379 OFFCURVE",
"254 384 CURVE SMOOTH",
"254 401 OFFCURVE",
"261 416 OFFCURVE",
"275 429 CURVE SMOOTH",
"310 462 LINE",
"315 469 OFFCURVE",
"318 476 OFFCURVE",
"318 481 CURVE SMOOTH",
"318 486 OFFCURVE",
"316 488 OFFCURVE",
"313 488 CURVE SMOOTH",
"310 488 OFFCURVE",
"307 486 OFFCURVE",
"302 483 CURVE",
"240 435 OFFCURVE",
"208 399 OFFCURVE",
"206 376 CURVE SMOOTH",
"205 364 OFFCURVE",
"208 351 OFFCURVE",
"216 336 CURVE SMOOTH",
"219 331 OFFCURVE",
"225 328 OFFCURVE",
"232 328 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"306 531 OFFCURVE",
"286 507 OFFCURVE",
"259 460 CURVE SMOOTH",
"232 415 OFFCURVE",
"219 385 OFFCURVE",
"219 368 CURVE SMOOTH",
"219 363 OFFCURVE",
"220 357 OFFCURVE",
"222 352 CURVE",
"222 353 LINE",
"230 341 OFFCURVE",
"238 335 OFFCURVE",
"246 335 CURVE SMOOTH",
"257 335 OFFCURVE",
"267 353 OFFCURVE",
"267 365 CURVE SMOOTH",
"267 368 OFFCURVE",
"266 373 OFFCURVE",
"264 379 CURVE SMOOTH",
"262 385 OFFCURVE",
"261 390 OFFCURVE",
"261 394 CURVE SMOOTH",
"261 417 OFFCURVE",
"271 446 OFFCURVE",
"290 481 CURVE SMOOTH",
"309 516 OFFCURVE",
"319 532 OFFCURVE",
"319 530 CURVE SMOOTH",
"319 531 OFFCURVE",
"319 531 OFFCURVE",
"318 531 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 200;
}
);
note = quoteleft;
unicode = 2018;
},
{
color = 3;
glyphname = quoteright;
lastChange = "2022-03-22 10:41:02 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"205 337 OFFCURVE",
"208 339 OFFCURVE",
"213 342 CURVE",
"275 390 OFFCURVE",
"307 426 OFFCURVE",
"309 450 CURVE SMOOTH",
"310 470 OFFCURVE",
"302 498 OFFCURVE",
"282 498 CURVE SMOOTH",
"267 498 OFFCURVE",
"251 488 OFFCURVE",
"251 476 CURVE SMOOTH",
"251 474 OFFCURVE",
"253 469 OFFCURVE",
"256 461 CURVE SMOOTH",
"259 453 OFFCURVE",
"260 446 OFFCURVE",
"260 441 CURVE SMOOTH",
"260 411 OFFCURVE",
"227 384 OFFCURVE",
"205 364 CURVE",
"200 357 OFFCURVE",
"197 350 OFFCURVE",
"197 344 CURVE SMOOTH",
"197 339 OFFCURVE",
"199 337 OFFCURVE",
"202 337 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"232 335 OFFCURVE",
"252 359 OFFCURVE",
"279 406 CURVE SMOOTH",
"306 451 OFFCURVE",
"319 481 OFFCURVE",
"319 498 CURVE SMOOTH",
"319 503 OFFCURVE",
"318 509 OFFCURVE",
"316 514 CURVE",
"316 513 LINE",
"308 525 OFFCURVE",
"300 531 OFFCURVE",
"292 531 CURVE SMOOTH",
"281 531 OFFCURVE",
"271 513 OFFCURVE",
"271 501 CURVE SMOOTH",
"271 498 OFFCURVE",
"272 493 OFFCURVE",
"274 487 CURVE SMOOTH",
"276 481 OFFCURVE",
"277 476 OFFCURVE",
"277 472 CURVE SMOOTH",
"277 449 OFFCURVE",
"267 420 OFFCURVE",
"248 385 CURVE SMOOTH",
"229 350 OFFCURVE",
"219 334 OFFCURVE",
"219 336 CURVE SMOOTH",
"219 335 OFFCURVE",
"219 335 OFFCURVE",
"220 335 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 200;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = guillemetleft;
lastChange = "2022-03-22 14:51:49 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"165 24 LINE",
"170 34 LINE",
"171 170 LINE",
"256 230 LINE SMOOTH",
"301 264 OFFCURVE",
"326 286 OFFCURVE",
"333 297 CURVE",
"332 304 LINE",
"325 307 LINE SMOOTH",
"322 308 OFFCURVE",
"251 265 OFFCURVE",
"112 179 CURVE",
"117 152 OFFCURVE",
"122 128 OFFCURVE",
"129 101 CURVE SMOOTH",
"136 68 OFFCURVE",
"143 43 OFFCURVE",
"150 24 CURVE",
"158 21 LINE"
);
},
{
closed = 1;
nodes = (
"310 24 LINE",
"315 34 LINE",
"316 170 LINE",
"401 230 LINE SMOOTH",
"422 245 OFFCURVE",
"439 259 OFFCURVE",
"452 270 CURVE SMOOTH",
"465 281 OFFCURVE",
"473 290 OFFCURVE",
"477 297 CURVE",
"476 304 LINE",
"470 307 LINE SMOOTH",
"467 308 OFFCURVE",
"396 265 OFFCURVE",
"257 179 CURVE",
"264 152 OFFCURVE",
"269 126 OFFCURVE",
"274 99 CURVE SMOOTH",
"283 59 OFFCURVE",
"290 34 OFFCURVE",
"295 24 CURVE",
"303 21 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 451;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemetright;
lastChange = "2022-03-22 14:53:15 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"43 22 LINE",
"248 150 LINE",
"233 227 LINE SMOOTH",
"227 258 OFFCURVE",
"220 284 OFFCURVE",
"212 303 CURVE",
"203 307 LINE",
"195 303 LINE",
"190 294 LINE",
"189 158 LINE",
"107 99 LINE SMOOTH",
"54 60 OFFCURVE",
"27 36 OFFCURVE",
"27 27 CURVE",
"28 23 LINE",
"36 21 LINE"
);
},
{
closed = 1;
nodes = (
"188 22 LINE",
"393 150 LINE",
"371 249 OFFCURVE",
"358 300 OFFCURVE",
"355 303 CURVE",
"347 307 LINE",
"339 303 LINE",
"337 299 OFFCURVE",
"335 286 OFFCURVE",
"334 264 CURVE SMOOTH",
"333 249 OFFCURVE",
"333 228 OFFCURVE",
"334 203 CURVE SMOOTH",
"334 158 LINE",
"249 98 LINE SMOOTH",
"208 67 OFFCURVE",
"182 45 OFFCURVE",
"173 32 CURVE",
"173 23 LINE",
"180 21 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 451;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = guilsinglleft;
lastChange = "2022-03-22 10:38:42 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"165 24 LINE",
"170 34 LINE",
"171 170 LINE",
"256 230 LINE SMOOTH",
"301 264 OFFCURVE",
"326 286 OFFCURVE",
"333 297 CURVE",
"332 304 LINE",
"325 307 LINE SMOOTH",
"322 308 OFFCURVE",
"251 265 OFFCURVE",
"112 179 CURVE",
"117 152 OFFCURVE",
"122 128 OFFCURVE",
"129 101 CURVE SMOOTH",
"136 68 OFFCURVE",
"143 43 OFFCURVE",
"150 24 CURVE",
"158 21 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 307;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2022-03-22 10:38:42 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"43 22 LINE",
"248 150 LINE",
"233 227 LINE SMOOTH",
"227 258 OFFCURVE",
"220 284 OFFCURVE",
"212 303 CURVE",
"203 307 LINE",
"195 303 LINE",
"190 294 LINE",
"189 158 LINE",
"107 99 LINE SMOOTH",
"54 60 OFFCURVE",
"27 36 OFFCURVE",
"27 27 CURVE",
"28 23 LINE",
"36 21 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 306;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = quotedbl;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"304 332 OFFCURVE",
"308 336 OFFCURVE",
"311 342 CURVE",
"346 391 LINE SMOOTH",
"363 414 OFFCURVE",
"371 434 OFFCURVE",
"372 450 CURVE SMOOTH",
"373 470 OFFCURVE",
"365 498 OFFCURVE",
"345 498 CURVE SMOOTH",
"330 498 OFFCURVE",
"314 488 OFFCURVE",
"314 476 CURVE SMOOTH",
"314 474 OFFCURVE",
"316 469 OFFCURVE",
"319 461 CURVE SMOOTH",
"322 453 OFFCURVE",
"323 446 OFFCURVE",
"323 441 CURVE SMOOTH",
"323 416 OFFCURVE",
"315 386 OFFCURVE",
"299 349 CURVE",
"296 344 OFFCURVE",
"295 340 OFFCURVE",
"295 335 CURVE SMOOTH",
"295 331 OFFCURVE",
"297 330 OFFCURVE",
"300 331 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"204 332 OFFCURVE",
"208 336 OFFCURVE",
"211 342 CURVE",
"246 391 LINE SMOOTH",
"263 414 OFFCURVE",
"271 434 OFFCURVE",
"272 450 CURVE SMOOTH",
"273 470 OFFCURVE",
"265 498 OFFCURVE",
"245 498 CURVE SMOOTH",
"230 498 OFFCURVE",
"214 488 OFFCURVE",
"214 476 CURVE SMOOTH",
"214 474 OFFCURVE",
"216 469 OFFCURVE",
"219 461 CURVE SMOOTH",
"222 453 OFFCURVE",
"223 446 OFFCURVE",
"223 441 CURVE SMOOTH",
"223 416 OFFCURVE",
"215 386 OFFCURVE",
"199 349 CURVE",
"196 344 OFFCURVE",
"195 340 OFFCURVE",
"195 335 CURVE SMOOTH",
"195 331 OFFCURVE",
"197 330 OFFCURVE",
"200 331 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 316;
}
);
note = quotedbl;
unicode = 0022;
},
{
color = 3;
glyphname = quotesingle;
lastChange = "2022-03-22 10:42:05 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"203 337 OFFCURVE",
"206 339 OFFCURVE",
"211 342 CURVE",
"273 390 OFFCURVE",
"305 426 OFFCURVE",
"307 450 CURVE SMOOTH",
"308 470 OFFCURVE",
"299 498 OFFCURVE",
"280 498 CURVE SMOOTH",
"265 498 OFFCURVE",
"249 488 OFFCURVE",
"249 477 CURVE SMOOTH",
"249 476 OFFCURVE",
"250 474 OFFCURVE",
"251 471 CURVE SMOOTH",
"256 457 OFFCURVE",
"259 447 OFFCURVE",
"259 441 CURVE SMOOTH",
"259 424 OFFCURVE",
"252 410 OFFCURVE",
"238 397 CURVE SMOOTH",
"203 364 LINE",
"198 357 OFFCURVE",
"195 350 OFFCURVE",
"195 344 CURVE SMOOTH",
"195 339 OFFCURVE",
"197 337 OFFCURVE",
"200 337 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"204 332 OFFCURVE",
"208 336 OFFCURVE",
"211 342 CURVE",
"246 391 LINE SMOOTH",
"263 414 OFFCURVE",
"271 434 OFFCURVE",
"272 450 CURVE SMOOTH",
"273 470 OFFCURVE",
"265 498 OFFCURVE",
"245 498 CURVE SMOOTH",
"230 498 OFFCURVE",
"214 488 OFFCURVE",
"214 476 CURVE SMOOTH",
"214 474 OFFCURVE",
"216 469 OFFCURVE",
"219 461 CURVE SMOOTH",
"222 453 OFFCURVE",
"223 446 OFFCURVE",
"223 441 CURVE SMOOTH",
"223 416 OFFCURVE",
"215 386 OFFCURVE",
"199 349 CURVE",
"196 344 OFFCURVE",
"195 340 OFFCURVE",
"195 335 CURVE SMOOTH",
"195 331 OFFCURVE",
"197 330 OFFCURVE",
"200 331 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 216;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = "leftanglebracket-math";
lastChange = "2022-03-22 10:44:33 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"253 -62 OFFCURVE",
"257 -58 OFFCURVE",
"258 -49 CURVE SMOOTH",
"260 -41 OFFCURVE",
"197 211 OFFCURVE",
"184 285 CURVE",
"246 363 OFFCURVE",
"447 609 OFFCURVE",
"450 620 CURVE SMOOTH",
"451 624 OFFCURVE",
"449 626 OFFCURVE",
"444 626 CURVE SMOOTH",
"437 626 OFFCURVE",
"430 624 OFFCURVE",
"423 615 CURVE SMOOTH",
"349 525 OFFCURVE",
"142 296 OFFCURVE",
"141 289 CURVE SMOOTH",
"139 281 OFFCURVE",
"140 279 OFFCURVE",
"141 277 CURVE SMOOTH",
"167 217 OFFCURVE",
"220 -24 OFFCURVE",
"239 -58 CURVE",
"246 -62 LINE"
);
}
);
width = 330;
}
);
unicode = 27E8;
},
{
glyphname = "rightanglebracket-math";
lastChange = "2022-03-22 10:44:30 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"53 -62 OFFCURVE",
"60 -60 OFFCURVE",
"67 -51 CURVE SMOOTH",
"141 39 OFFCURVE",
"348 268 OFFCURVE",
"349 275 CURVE SMOOTH",
"351 283 OFFCURVE",
"350 285 OFFCURVE",
"349 287 CURVE SMOOTH",
"323 347 OFFCURVE",
"270 588 OFFCURVE",
"251 622 CURVE",
"244 626 LINE",
"237 626 OFFCURVE",
"233 622 OFFCURVE",
"232 613 CURVE SMOOTH",
"230 605 OFFCURVE",
"293 353 OFFCURVE",
"306 279 CURVE",
"244 201 OFFCURVE",
"43 -45 OFFCURVE",
"40 -56 CURVE SMOOTH",
"39 -60 OFFCURVE",
"41 -62 OFFCURVE",
"46 -62 CURVE SMOOTH"
);
}
);
width = 330;
}
);
unicode = 27E9;
},
{
glyphname = cedi;
lastChange = "2022-03-22 14:08:10 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"578 446 OFFCURVE",
"546 464 OFFCURVE",
"485 458 CURVE SMOOTH",
"386 450 OFFCURVE",
"257 362 OFFCURVE",
"173 268 CURVE",
"120 258 OFFCURVE",
"81 251 OFFCURVE",
"85 227 CURVE",
"85 224 OFFCURVE",
"88 220 OFFCURVE",
"93 220 CURVE",
"95 221 OFFCURVE",
"100 222 OFFCURVE",
"109 224 CURVE SMOOTH",
"117 225 OFFCURVE",
"127 227 OFFCURVE",
"140 230 CURVE",
"133 222 OFFCURVE",
"128 213 OFFCURVE",
"123 204 CURVE SMOOTH",
"118 195 OFFCURVE",
"113 186 OFFCURVE",
"108 178 CURVE",
"105 177 OFFCURVE",
"102 177 OFFCURVE",
"99 177 CURVE",
"78 173 OFFCURVE",
"59 169 OFFCURVE",
"60 146 CURVE SMOOTH",
"61 139 OFFCURVE",
"62 139 OFFCURVE",
"70 139 CURVE SMOOTH",
"75 139 OFFCURVE",
"82 140 OFFCURVE",
"91 142 CURVE",
"47 27 OFFCURVE",
"115 -39 OFFCURVE",
"232 -28 CURVE SMOOTH",
"320 -20 OFFCURVE",
"440 52 OFFCURVE",
"514 129 CURVE SMOOTH",
"522 137 OFFCURVE",
"519 147 OFFCURVE",
"507 139 CURVE",
"440 69 OFFCURVE",
"323 12 OFFCURVE",
"247 4 CURVE SMOOTH",
"142 -4 OFFCURVE",
"107 68 OFFCURVE",
"138 163 CURVE",
"181 174 OFFCURVE",
"245 183 OFFCURVE",
"305 188 CURVE SMOOTH",
"341 191 OFFCURVE",
"374 193 OFFCURVE",
"398 193 CURVE",
"422 214 OFFCURVE",
"353 215 OFFCURVE",
"284 208 CURVE SMOOTH",
"241 205 OFFCURVE",
"197 197 OFFCURVE",
"150 189 CURVE",
"161 208 OFFCURVE",
"178 233 OFFCURVE",
"189 248 CURVE",
"217 256 OFFCURVE",
"254 262 OFFCURVE",
"291 265 CURVE SMOOTH",
"314 268 OFFCURVE",
"337 269 OFFCURVE",
"360 270 CURVE SMOOTH",
"383 271 OFFCURVE",
"404 271 OFFCURVE",
"423 272 CURVE",
"446 295 OFFCURVE",
"382 296 OFFCURVE",
"309 289 CURVE SMOOTH",
"294 287 OFFCURVE",
"278 285 OFFCURVE",
"263 284 CURVE SMOOTH",
"248 283 OFFCURVE",
"232 281 OFFCURVE",
"216 278 CURVE",
"285 353 OFFCURVE",
"401 428 OFFCURVE",
"484 442 CURVE SMOOTH",
"565 454 OFFCURVE",
"555 386 OFFCURVE",
"540 329 CURVE",
"566 332 OFFCURVE",
"585 379 OFFCURVE",
"582 404 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"290 -17 OFFCURVE",
"347 6 OFFCURVE",
"414 58 CURVE SMOOTH",
"423 65 OFFCURVE",
"466 104 OFFCURVE",
"466 113 CURVE SMOOTH",
"466 115 OFFCURVE",
"465 119 OFFCURVE",
"460 119 CURVE SMOOTH",
"450 119 OFFCURVE",
"334 0 OFFCURVE",
"221 0 CURVE SMOOTH",
"167 0 OFFCURVE",
"141 42 OFFCURVE",
"141 98 CURVE SMOOTH",
"141 111 OFFCURVE",
"142 124 OFFCURVE",
"145 138 CURVE SMOOTH",
"172 265 OFFCURVE",
"337 422 OFFCURVE",
"432 422 CURVE SMOOTH",
"439 422 LINE SMOOTH",
"458 422 OFFCURVE",
"491 417 OFFCURVE",
"491 394 CURVE SMOOTH",
"491 374 OFFCURVE",
"475 363 OFFCURVE",
"475 350 CURVE SMOOTH",
"475 344 OFFCURVE",
"479 339 OFFCURVE",
"483 339 CURVE SMOOTH",
"494 339 OFFCURVE",
"505 359 OFFCURVE",
"507 370 CURVE SMOOTH",
"508 377 OFFCURVE",
"509 383 OFFCURVE",
"509 389 CURVE SMOOTH",
"509 426 OFFCURVE",
"479 437 OFFCURVE",
"435 437 CURVE SMOOTH",
"316 437 OFFCURVE",
"125 290 OFFCURVE",
"94 142 CURVE SMOOTH",
"91 128 OFFCURVE",
"90 115 OFFCURVE",
"90 103 CURVE SMOOTH",
"90 29 OFFCURVE",
"142 -17 OFFCURVE",
"219 -17 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"216 -94 OFFCURVE",
"219 -91 OFFCURVE",
"220 -86 CURVE",
"220 -74 OFFCURVE",
"221 -51 OFFCURVE",
"224 -35 CURVE SMOOTH",
"239 57 OFFCURVE",
"301 167 OFFCURVE",
"344 245 CURVE SMOOTH",
"391 335 OFFCURVE",
"445 420 OFFCURVE",
"485 480 CURVE SMOOTH",
"491 489 OFFCURVE",
"500 504 OFFCURVE",
"500 506 CURVE",
"501 508 OFFCURVE",
"496 510 OFFCURVE",
"486 510 CURVE SMOOTH",
"477 510 OFFCURVE",
"467 498 OFFCURVE",
"460 490 CURVE SMOOTH",
"381 385 OFFCURVE",
"223 78 OFFCURVE",
"204 -42 CURVE SMOOTH",
"203 -50 OFFCURVE",
"201 -62 OFFCURVE",
"201 -73 CURVE SMOOTH",
"201 -84 OFFCURVE",
"203 -94 OFFCURVE",
"210 -94 CURVE SMOOTH"
);
}
);
width = 479;
}
);
unicode = 20B5;
},
{
glyphname = cent;
lastChange = "2022-03-22 10:55:04 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"95 -16 OFFCURVE",
"112 -5 OFFCURVE",
"130 16 CURVE SMOOTH",
"160 48 LINE SMOOTH",
"174 63 OFFCURVE",
"186 79 OFFCURVE",
"195 97 CURVE",
"220 104 OFFCURVE",
"258 120 OFFCURVE",
"307 147 CURVE SMOOTH",
"346 168 OFFCURVE",
"372 182 OFFCURVE",
"385 193 CURVE SMOOTH",
"391 198 OFFCURVE",
"394 202 OFFCURVE",
"394 206 CURVE SMOOTH",
"394 209 OFFCURVE",
"391 211 OFFCURVE",
"386 211 CURVE SMOOTH",
"382 211 OFFCURVE",
"377 209 OFFCURVE",
"372 206 CURVE SMOOTH",
"282 153 OFFCURVE",
"215 123 OFFCURVE",
"171 118 CURVE SMOOTH",
"149 115 OFFCURVE",
"138 124 OFFCURVE",
"138 147 CURVE SMOOTH",
"138 154 OFFCURVE",
"140 162 OFFCURVE",
"143 172 CURVE SMOOTH",
"154 205 OFFCURVE",
"176 239 OFFCURVE",
"211 275 CURVE SMOOTH",
"246 310 OFFCURVE",
"285 338 OFFCURVE",
"326 359 CURVE SMOOTH",
"338 365 OFFCURVE",
"350 368 OFFCURVE",
"362 368 CURVE SMOOTH",
"374 368 OFFCURVE",
"385 365 OFFCURVE",
"397 359 CURVE SMOOTH",
"400 358 OFFCURVE",
"402 357 OFFCURVE",
"404 357 CURVE SMOOTH",
"416 357 OFFCURVE",
"430 374 OFFCURVE",
"430 387 CURVE SMOOTH",
"430 392 OFFCURVE",
"428 396 OFFCURVE",
"423 399 CURVE",
"420 400 OFFCURVE",
"414 401 OFFCURVE",
"406 401 CURVE SMOOTH",
"399 401 OFFCURVE",
"389 400 OFFCURVE",
"377 399 CURVE",
"392 428 OFFCURVE",
"415 458 OFFCURVE",
"444 491 CURVE SMOOTH",
"446 493 OFFCURVE",
"447 495 OFFCURVE",
"447 496 CURVE SMOOTH",
"447 499 OFFCURVE",
"445 500 OFFCURVE",
"441 500 CURVE SMOOTH",
"426 500 OFFCURVE",
"409 489 OFFCURVE",
"390 468 CURVE SMOOTH",
"386 464 OFFCURVE",
"376 450 OFFCURVE",
"359 426 CURVE SMOOTH",
"345 408 OFFCURVE",
"332 393 OFFCURVE",
"319 381 CURVE",
"270 358 OFFCURVE",
"225 328 OFFCURVE",
"182 290 CURVE SMOOTH",
"138 250 OFFCURVE",
"110 212 OFFCURVE",
"98 176 CURVE SMOOTH",
"94 164 OFFCURVE",
"92 153 OFFCURVE",
"92 143 CURVE SMOOTH",
"92 112 OFFCURVE",
"110 95 OFFCURVE",
"147 92 CURVE",
"132 61 OFFCURVE",
"108 27 OFFCURVE",
"76 -8 CURVE SMOOTH",
"75 -9 OFFCURVE",
"74 -11 OFFCURVE",
"74 -13 CURVE SMOOTH",
"74 -15 OFFCURVE",
"76 -16 OFFCURVE",
"80 -16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 1070 48 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 20 213 20 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0123 40 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01244 40 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01246 40 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = colonsign;
lastChange = "2022-03-22 14:08:23 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"290 3 OFFCURVE",
"347 26 OFFCURVE",
"414 78 CURVE SMOOTH",
"423 85 OFFCURVE",
"466 124 OFFCURVE",
"466 133 CURVE SMOOTH",
"466 135 OFFCURVE",
"465 139 OFFCURVE",
"460 139 CURVE SMOOTH",
"450 139 OFFCURVE",
"334 20 OFFCURVE",
"221 20 CURVE SMOOTH",
"167 20 OFFCURVE",
"141 62 OFFCURVE",
"141 118 CURVE SMOOTH",
"141 131 OFFCURVE",
"142 144 OFFCURVE",
"145 158 CURVE SMOOTH",
"172 285 OFFCURVE",
"337 442 OFFCURVE",
"432 442 CURVE SMOOTH",
"439 442 LINE SMOOTH",
"458 442 OFFCURVE",
"491 437 OFFCURVE",
"491 414 CURVE SMOOTH",
"491 394 OFFCURVE",
"475 383 OFFCURVE",
"475 370 CURVE SMOOTH",
"475 364 OFFCURVE",
"479 359 OFFCURVE",
"483 359 CURVE SMOOTH",
"494 359 OFFCURVE",
"505 379 OFFCURVE",
"507 390 CURVE SMOOTH",
"508 397 OFFCURVE",
"509 403 OFFCURVE",
"509 409 CURVE SMOOTH",
"509 446 OFFCURVE",
"479 457 OFFCURVE",
"435 457 CURVE SMOOTH",
"316 457 OFFCURVE",
"125 310 OFFCURVE",
"94 162 CURVE SMOOTH",
"91 148 OFFCURVE",
"90 135 OFFCURVE",
"90 123 CURVE SMOOTH",
"90 49 OFFCURVE",
"142 3 OFFCURVE",
"219 3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 -74 OFFCURVE",
"167 -71 OFFCURVE",
"168 -66 CURVE",
"168 -54 OFFCURVE",
"169 -31 OFFCURVE",
"172 -15 CURVE SMOOTH",
"187 77 OFFCURVE",
"249 187 OFFCURVE",
"292 265 CURVE SMOOTH",
"339 355 OFFCURVE",
"393 440 OFFCURVE",
"433 500 CURVE SMOOTH",
"439 509 OFFCURVE",
"448 524 OFFCURVE",
"448 526 CURVE",
"449 528 OFFCURVE",
"444 530 OFFCURVE",
"434 530 CURVE SMOOTH",
"425 530 OFFCURVE",
"415 518 OFFCURVE",
"408 510 CURVE SMOOTH",
"329 405 OFFCURVE",
"171 98 OFFCURVE",
"152 -22 CURVE SMOOTH",
"151 -30 OFFCURVE",
"149 -42 OFFCURVE",
"149 -53 CURVE SMOOTH",
"149 -64 OFFCURVE",
"151 -74 OFFCURVE",
"158 -74 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"241 -74 OFFCURVE",
"244 -71 OFFCURVE",
"245 -66 CURVE",
"245 -54 OFFCURVE",
"246 -31 OFFCURVE",
"249 -15 CURVE SMOOTH",
"264 77 OFFCURVE",
"326 187 OFFCURVE",
"369 265 CURVE SMOOTH",
"416 355 OFFCURVE",
"470 440 OFFCURVE",
"510 500 CURVE SMOOTH",
"516 509 OFFCURVE",
"525 524 OFFCURVE",
"525 526 CURVE",
"526 528 OFFCURVE",
"521 530 OFFCURVE",
"511 530 CURVE SMOOTH",
"502 530 OFFCURVE",
"492 518 OFFCURVE",
"485 510 CURVE SMOOTH",
"406 405 OFFCURVE",
"248 98 OFFCURVE",
"229 -22 CURVE SMOOTH",
"228 -30 OFFCURVE",
"226 -42 OFFCURVE",
"226 -53 CURVE SMOOTH",
"226 -64 OFFCURVE",
"228 -74 OFFCURVE",
"235 -74 CURVE SMOOTH"
);
}
);
width = 495;
}
);
unicode = 20A1;
},
{
glyphname = currency;
lastChange = "2022-03-22 10:55:41 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"345 229 OFFCURVE",
"409 264 OFFCURVE",
"430 317 CURVE SMOOTH",
"436 332 OFFCURVE",
"440 349 OFFCURVE",
"440 364 CURVE SMOOTH",
"440 424 OFFCURVE",
"386 460 OFFCURVE",
"330 460 CURVE SMOOTH",
"283 460 OFFCURVE",
"245 427 OFFCURVE",
"224 387 CURVE SMOOTH",
"217 373 OFFCURVE",
"212 358 OFFCURVE",
"210 341 CURVE SMOOTH",
"209 335 OFFCURVE",
"208 329 OFFCURVE",
"208 322 CURVE SMOOTH",
"208 272 OFFCURVE",
"236 229 OFFCURVE",
"290 229 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"176 200 OFFCURVE",
"183 201 OFFCURVE",
"188 203 CURVE",
"199 217 OFFCURVE",
"230 243 OFFCURVE",
"245 256 CURVE",
"220 286 LINE",
"199 267 OFFCURVE",
"161 235 OFFCURVE",
"140 215 CURVE",
"137 205 OFFCURVE",
"153 200 OFFCURVE",
"169 200 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"470 193 OFFCURVE",
"476 195 OFFCURVE",
"476 201 CURVE SMOOTH",
"476 204 OFFCURVE",
"474 207 OFFCURVE",
"470 212 CURVE SMOOTH",
"455 230 OFFCURVE",
"432 259 OFFCURVE",
"407 291 CURVE",
"372 269 LINE",
"393 247 OFFCURVE",
"420 224 OFFCURVE",
"441 201 CURVE SMOOTH",
"445 196 OFFCURVE",
"455 193 OFFCURVE",
"463 193 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"264 249 OFFCURVE",
"247 288 OFFCURVE",
"247 322 CURVE SMOOTH",
"247 328 OFFCURVE",
"247 336 OFFCURVE",
"249 342 CURVE",
"256 389 OFFCURVE",
"285 438 OFFCURVE",
"329 438 CURVE SMOOTH",
"371 438 OFFCURVE",
"399 402 OFFCURVE",
"399 356 CURVE SMOOTH",
"399 343 OFFCURVE",
"397 330 OFFCURVE",
"392 318 CURVE SMOOTH",
"379 283 OFFCURVE",
"329 249 OFFCURVE",
"297 249 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"276 436 LINE",
"256 457 OFFCURVE",
"234 478 OFFCURVE",
"213 498 CURVE",
"203 492 OFFCURVE",
"199 481 OFFCURVE",
"199 470 CURVE SMOOTH",
"199 463 OFFCURVE",
"201 456 OFFCURVE",
"204 450 CURVE",
"219 438 OFFCURVE",
"235 423 OFFCURVE",
"250 408 CURVE"
);
},
{
closed = 1;
nodes = (
"457 420 OFFCURVE",
"484 452 OFFCURVE",
"510 472 CURVE",
"512 473 OFFCURVE",
"513 478 OFFCURVE",
"513 482 CURVE SMOOTH",
"513 487 OFFCURVE",
"511 493 OFFCURVE",
"506 493 CURVE SMOOTH",
"504 493 OFFCURVE",
"503 493 OFFCURVE",
"502 492 CURVE",
"480 484 OFFCURVE",
"437 455 OFFCURVE",
"395 425 CURVE",
"426 393 LINE"
);
}
);
width = 473;
}
);
unicode = 00A4;
},
{
glyphname = dollar;
lastChange = "2022-03-22 10:56:01 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"89 -79 OFFCURVE",
"91 -77 OFFCURVE",
"94 -74 CURVE",
"151 10 OFFCURVE",
"194 74 OFFCURVE",
"221 119 CURVE",
"275 127 OFFCURVE",
"302 140 OFFCURVE",
"302 158 CURVE SMOOTH",
"302 169 OFFCURVE",
"289 187 OFFCURVE",
"262 214 CURVE SMOOTH",
"236 241 OFFCURVE",
"223 262 OFFCURVE",
"223 277 CURVE SMOOTH",
"223 310 OFFCURVE",
"241 338 OFFCURVE",
"277 362 CURVE SMOOTH",
"308 382 OFFCURVE",
"337 392 OFFCURVE",
"366 392 CURVE SMOOTH",
"378 392 OFFCURVE",
"386 390 OFFCURVE",
"390 385 CURVE SMOOTH",
"400 374 OFFCURVE",
"411 368 OFFCURVE",
"422 368 CURVE SMOOTH",
"437 368 OFFCURVE",
"444 375 OFFCURVE",
"444 389 CURVE SMOOTH",
"444 395 OFFCURVE",
"442 401 OFFCURVE",
"438 407 CURVE SMOOTH",
"431 418 OFFCURVE",
"418 423 OFFCURVE",
"399 422 CURVE",
"410 447 OFFCURVE",
"421 467 OFFCURVE",
"434 484 CURVE SMOOTH",
"437 489 OFFCURVE",
"439 494 OFFCURVE",
"439 497 CURVE SMOOTH",
"439 500 OFFCURVE",
"438 502 OFFCURVE",
"435 502 CURVE SMOOTH",
"428 502 OFFCURVE",
"410 478 OFFCURVE",
"392 457 CURVE SMOOTH",
"381 445 OFFCURVE",
"371 432 OFFCURVE",
"364 418 CURVE",
"317 410 OFFCURVE",
"274 392 OFFCURVE",
"236 365 CURVE SMOOTH",
"197 336 OFFCURVE",
"178 302 OFFCURVE",
"178 263 CURVE SMOOTH",
"178 253 OFFCURVE",
"188 236 OFFCURVE",
"209 213 CURVE SMOOTH",
"230 190 OFFCURVE",
"240 175 OFFCURVE",
"240 168 CURVE SMOOTH",
"240 165 OFFCURVE",
"239 163 OFFCURVE",
"236 162 CURVE SMOOTH",
"188 148 OFFCURVE",
"145 141 OFFCURVE",
"105 141 CURVE SMOOTH",
"83 141 OFFCURVE",
"72 139 OFFCURVE",
"72 129 CURVE SMOOTH",
"72 126 OFFCURVE",
"74 123 OFFCURVE",
"77 121 CURVE SMOOTH",
"82 117 OFFCURVE",
"105 115 OFFCURVE",
"148 115 CURVE SMOOTH",
"176 115 LINE",
"113 -2 LINE SMOOTH",
"99 -29 OFFCURVE",
"91 -43 OFFCURVE",
"90 -45 CURVE SMOOTH",
"86 -52 OFFCURVE",
"84 -60 OFFCURVE",
"84 -69 CURVE SMOOTH",
"84 -76 OFFCURVE",
"85 -79 OFFCURVE",
"88 -79 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1070 45 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 12 213 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01237 1063 31 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01262 23 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 363;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = dong;
lastChange = "2022-03-22 12:50:52 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{104, -117}";
},
{
name = center;
position = "{457, 400}";
},
{
name = top;
position = "{531, 498}";
},
{
name = topright;
position = "{531, 498}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"324 -14 OFFCURVE",
"331 -9 OFFCURVE",
"331 1 CURVE SMOOTH",
"331 4 OFFCURVE",
"329 7 OFFCURVE",
"325 8 CURVE SMOOTH",
"316 12 OFFCURVE",
"311 23 OFFCURVE",
"311 41 CURVE SMOOTH",
"311 66 OFFCURVE",
"320 105 OFFCURVE",
"338 156 CURVE SMOOTH",
"351 192 OFFCURVE",
"362 221 OFFCURVE",
"373 242 CURVE",
"466 378 OFFCURVE",
"521 457 OFFCURVE",
"538 479 CURVE SMOOTH",
"544 486 OFFCURVE",
"547 492 OFFCURVE",
"547 498 CURVE SMOOTH",
"547 505 OFFCURVE",
"542 508 OFFCURVE",
"531 508 CURVE SMOOTH",
"520 508 OFFCURVE",
"511 506 OFFCURVE",
"506 501 CURVE SMOOTH",
"484 482 OFFCURVE",
"454 447 OFFCURVE",
"422 393 CURVE SMOOTH",
"353 277 LINE",
"340 284 OFFCURVE",
"325 288 OFFCURVE",
"307 288 CURVE SMOOTH",
"266 288 OFFCURVE",
"212 259 OFFCURVE",
"144 201 CURVE SMOOTH",
"90 155 OFFCURVE",
"50 109 OFFCURVE",
"25 63 CURVE SMOOTH",
"18 50 OFFCURVE",
"15 39 OFFCURVE",
"15 29 CURVE SMOOTH",
"15 10 OFFCURVE",
"25 1 OFFCURVE",
"44 1 CURVE SMOOTH",
"54 1 OFFCURVE",
"66 4 OFFCURVE",
"80 10 CURVE SMOOTH",
"133 34 OFFCURVE",
"212 94 OFFCURVE",
"317 190 CURVE",
"292 129 OFFCURVE",
"279 81 OFFCURVE",
"279 44 CURVE SMOOTH",
"279 25 OFFCURVE",
"283 9 OFFCURVE",
"290 -2 CURVE SMOOTH",
"295 -10 OFFCURVE",
"301 -14 OFFCURVE",
"310 -14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 46 OFFCURVE",
"74 52 OFFCURVE",
"74 62 CURVE SMOOTH",
"74 71 OFFCURVE",
"78 83 OFFCURVE",
"87 96 CURVE SMOOTH",
"106 127 OFFCURVE",
"137 160 OFFCURVE",
"182 197 CURVE SMOOTH",
"231 238 OFFCURVE",
"270 258 OFFCURVE",
"299 258 CURVE SMOOTH",
"308 258 OFFCURVE",
"317 251 OFFCURVE",
"324 237 CURVE",
"279 190 OFFCURVE",
"241 152 OFFCURVE",
"206 125 CURVE SMOOTH",
"157 86 OFFCURVE",
"120 61 OFFCURVE",
"97 50 CURVE SMOOTH",
"92 48 OFFCURVE",
"88 46 OFFCURVE",
"85 46 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"412 390 OFFCURVE",
"474 390 OFFCURVE",
"534 389 CURVE",
"542 388 OFFCURVE",
"548 388 OFFCURVE",
"552 388 CURVE SMOOTH",
"561 388 LINE SMOOTH",
"567 388 OFFCURVE",
"570 390 OFFCURVE",
"570 395 CURVE SMOOTH",
"570 398 OFFCURVE",
"567 401 OFFCURVE",
"562 402 CURVE SMOOTH",
"539 406 LINE SMOOTH",
"510 411 OFFCURVE",
"478 414 OFFCURVE",
"431 414 CURVE SMOOTH",
"420 414 OFFCURVE",
"387 413 OFFCURVE",
"363 411 CURVE",
"351 408 OFFCURVE",
"344 401 OFFCURVE",
"344 392 CURVE SMOOTH",
"344 388 OFFCURVE",
"346 386 OFFCURVE",
"351 386 CURVE"
);
},
{
closed = 1;
nodes = (
"60 -96 OFFCURVE",
"116 -93 OFFCURVE",
"176 -94 CURVE",
"184 -95 OFFCURVE",
"190 -95 OFFCURVE",
"194 -95 CURVE SMOOTH",
"203 -95 LINE SMOOTH",
"209 -95 OFFCURVE",
"212 -93 OFFCURVE",
"212 -88 CURVE SMOOTH",
"212 -85 OFFCURVE",
"209 -82 OFFCURVE",
"204 -81 CURVE SMOOTH",
"181 -77 LINE SMOOTH",
"152 -72 OFFCURVE",
"120 -69 OFFCURVE",
"83 -69 CURVE SMOOTH",
"62 -69 OFFCURVE",
"39 -70 OFFCURVE",
"15 -72 CURVE",
"2 -82 OFFCURVE",
"-4 -92 OFFCURVE",
"-4 -101 CURVE SMOOTH",
"-4 -105 OFFCURVE",
"-2 -107 OFFCURVE",
"3 -107 CURVE"
);
}
);
width = 427;
}
);
unicode = 20AB;
},
{
glyphname = euro;
lastChange = "2022-03-22 14:08:34 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"265 -29 OFFCURVE",
"274 -29 OFFCURVE",
"282 -28 CURVE SMOOTH",
"370 -20 OFFCURVE",
"490 52 OFFCURVE",
"564 129 CURVE SMOOTH",
"567 132 OFFCURVE",
"569 135 OFFCURVE",
"569 138 CURVE SMOOTH",
"569 140 OFFCURVE",
"567 142 OFFCURVE",
"564 142 CURVE SMOOTH",
"563 142 OFFCURVE",
"560 141 OFFCURVE",
"557 139 CURVE",
"485 64 OFFCURVE",
"357 3 OFFCURVE",
"282 3 CURVE SMOOTH",
"211 3 OFFCURVE",
"177 43 OFFCURVE",
"177 101 CURVE SMOOTH",
"177 120 OFFCURVE",
"181 141 OFFCURVE",
"188 163 CURVE",
"231 174 OFFCURVE",
"295 183 OFFCURVE",
"355 188 CURVE SMOOTH",
"391 191 OFFCURVE",
"424 193 OFFCURVE",
"448 193 CURVE",
"451 196 OFFCURVE",
"453 199 OFFCURVE",
"453 201 CURVE SMOOTH",
"453 209 OFFCURVE",
"432 212 OFFCURVE",
"402 212 CURVE SMOOTH",
"382 212 OFFCURVE",
"358 210 OFFCURVE",
"334 208 CURVE SMOOTH",
"291 205 OFFCURVE",
"247 197 OFFCURVE",
"200 189 CURVE",
"211 208 OFFCURVE",
"228 233 OFFCURVE",
"239 248 CURVE",
"267 256 OFFCURVE",
"304 262 OFFCURVE",
"341 265 CURVE SMOOTH",
"364 268 OFFCURVE",
"387 269 OFFCURVE",
"410 270 CURVE SMOOTH",
"433 271 OFFCURVE",
"454 271 OFFCURVE",
"473 272 CURVE",
"476 275 OFFCURVE",
"478 278 OFFCURVE",
"478 280 CURVE SMOOTH",
"478 289 OFFCURVE",
"457 293 OFFCURVE",
"427 293 CURVE SMOOTH",
"407 293 OFFCURVE",
"384 291 OFFCURVE",
"359 289 CURVE SMOOTH",
"344 287 OFFCURVE",
"328 285 OFFCURVE",
"313 284 CURVE SMOOTH",
"298 283 OFFCURVE",
"282 281 OFFCURVE",
"266 278 CURVE",
"335 353 OFFCURVE",
"451 428 OFFCURVE",
"534 442 CURVE SMOOTH",
"541 443 OFFCURVE",
"547 444 OFFCURVE",
"552 444 CURVE SMOOTH",
"589 444 OFFCURVE",
"600 421 OFFCURVE",
"600 391 CURVE SMOOTH",
"600 372 OFFCURVE",
"595 350 OFFCURVE",
"590 329 CURVE",
"616 332 OFFCURVE",
"635 379 OFFCURVE",
"632 404 CURVE SMOOTH",
"629 441 OFFCURVE",
"604 459 OFFCURVE",
"557 459 CURVE SMOOTH",
"550 459 OFFCURVE",
"543 459 OFFCURVE",
"535 458 CURVE SMOOTH",
"436 450 OFFCURVE",
"307 362 OFFCURVE",
"223 268 CURVE",
"170 258 OFFCURVE",
"131 251 OFFCURVE",
"135 227 CURVE",
"135 224 OFFCURVE",
"138 220 OFFCURVE",
"143 220 CURVE",
"145 221 OFFCURVE",
"150 222 OFFCURVE",
"159 224 CURVE SMOOTH",
"167 225 OFFCURVE",
"177 227 OFFCURVE",
"190 230 CURVE",
"183 222 OFFCURVE",
"178 213 OFFCURVE",
"173 204 CURVE SMOOTH",
"168 195 OFFCURVE",
"163 186 OFFCURVE",
"158 178 CURVE",
"155 177 OFFCURVE",
"152 177 OFFCURVE",
"149 177 CURVE",
"129 173 OFFCURVE",
"110 169 OFFCURVE",
"110 148 CURVE SMOOTH",
"110 139 OFFCURVE",
"111 139 OFFCURVE",
"120 139 CURVE SMOOTH",
"125 139 OFFCURVE",
"132 140 OFFCURVE",
"141 142 CURVE",
"132 118 OFFCURVE",
"127 96 OFFCURVE",
"127 77 CURVE SMOOTH",
"127 9 OFFCURVE",
"179 -29 OFFCURVE",
"257 -29 CURVE SMOOTH"
);
}
);
width = 592;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = florin;
lastChange = "2022-03-22 10:56:32 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-123 -314 OFFCURVE",
"-33 -174 OFFCURVE",
"24 -71 CURVE SMOOTH",
"40 -43 OFFCURVE",
"76 18 OFFCURVE",
"103 66 CURVE SMOOTH",
"134 122 OFFCURVE",
"166 181 OFFCURVE",
"186 220 CURVE",
"205 227 OFFCURVE",
"251 231 OFFCURVE",
"322 232 CURVE",
"329 236 LINE",
"332 239 LINE",
"334 246 OFFCURVE",
"325 250 OFFCURVE",
"306 252 CURVE SMOOTH",
"299 253 OFFCURVE",
"289 254 OFFCURVE",
"276 254 CURVE SMOOTH",
"270 254 OFFCURVE",
"263 253 OFFCURVE",
"255 253 CURVE SMOOTH",
"240 252 OFFCURVE",
"227 253 OFFCURVE",
"208 254 CURVE",
"256 339 OFFCURVE",
"357 490 OFFCURVE",
"453 558 CURVE SMOOTH",
"476 573 OFFCURVE",
"495 581 OFFCURVE",
"510 581 CURVE SMOOTH",
"533 581 OFFCURVE",
"545 568 OFFCURVE",
"545 542 CURVE SMOOTH",
"545 531 OFFCURVE",
"542 517 OFFCURVE",
"538 501 CURVE SMOOTH",
"536 491 OFFCURVE",
"535 483 OFFCURVE",
"535 478 CURVE SMOOTH",
"535 472 OFFCURVE",
"536 469 OFFCURVE",
"539 469 CURVE SMOOTH",
"547 469 OFFCURVE",
"553 476 OFFCURVE",
"558 491 CURVE",
"565 500 OFFCURVE",
"568 510 OFFCURVE",
"571 517 CURVE SMOOTH",
"573 524 OFFCURVE",
"573 531 OFFCURVE",
"573 538 CURVE SMOOTH",
"573 553 OFFCURVE",
"569 566 OFFCURVE",
"560 576 CURVE",
"545 589 OFFCURVE",
"528 597 OFFCURVE",
"504 597 CURVE SMOOTH",
"464 597 OFFCURVE",
"419 584 OFFCURVE",
"374 540 CURVE",
"290 447 OFFCURVE",
"231 351 OFFCURVE",
"170 251 CURVE",
"141 246 OFFCURVE",
"118 240 OFFCURVE",
"101 235 CURVE SMOOTH",
"82 229 OFFCURVE",
"73 223 OFFCURVE",
"73 218 CURVE SMOOTH",
"73 215 OFFCURVE",
"76 214 OFFCURVE",
"82 213 CURVE SMOOTH",
"87 212 OFFCURVE",
"96 212 OFFCURVE",
"107 213 CURVE SMOOTH",
"118 214 OFFCURVE",
"131 216 OFFCURVE",
"147 217 CURVE",
"135 198 OFFCURVE",
"111 151 OFFCURVE",
"92 115 CURVE SMOOTH",
"68 70 OFFCURVE",
"39 16 OFFCURVE",
"8 -29 CURVE SMOOTH",
"-65 -140 OFFCURVE",
"-131 -221 OFFCURVE",
"-170 -253 CURVE SMOOTH",
"-203 -280 OFFCURVE",
"-231 -294 OFFCURVE",
"-252 -294 CURVE SMOOTH",
"-271 -294 OFFCURVE",
"-280 -276 OFFCURVE",
"-283 -251 CURVE",
"-278 -220 LINE SMOOTH",
"-277 -213 OFFCURVE",
"-277 -208 OFFCURVE",
"-277 -204 CURVE SMOOTH",
"-277 -197 OFFCURVE",
"-278 -193 OFFCURVE",
"-281 -193 CURVE SMOOTH",
"-292 -193 OFFCURVE",
"-301 -207 OFFCURVE",
"-309 -235 CURVE SMOOTH",
"-311 -243 OFFCURVE",
"-312 -250 OFFCURVE",
"-312 -256 CURVE SMOOTH",
"-312 -270 OFFCURVE",
"-308 -281 OFFCURVE",
"-300 -291 CURVE SMOOTH",
"-289 -306 OFFCURVE",
"-272 -314 OFFCURVE",
"-248 -314 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01239 1073 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01219 1061 27 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01251 1062 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01261 39 75 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 285;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = franc;
lastChange = "2022-03-22 14:07:38 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"117 -9 OFFCURVE",
"147 4 OFFCURVE",
"148 14 CURVE SMOOTH",
"148 19 OFFCURVE",
"147 26 OFFCURVE",
"148 32 CURVE SMOOTH",
"154 76 OFFCURVE",
"183 163 OFFCURVE",
"201 208 CURVE",
"219 208 OFFCURVE",
"376 210 OFFCURVE",
"401 217 CURVE SMOOTH",
"409 219 OFFCURVE",
"412 222 OFFCURVE",
"412 224 CURVE SMOOTH",
"412 229 OFFCURVE",
"401 233 OFFCURVE",
"386 233 CURVE SMOOTH",
"209 233 LINE",
"212 252 OFFCURVE",
"289 417 OFFCURVE",
"301 423 CURVE SMOOTH",
"309 428 OFFCURVE",
"337 428 OFFCURVE",
"346 428 CURVE SMOOTH",
"379 428 OFFCURVE",
"411 425 OFFCURVE",
"442 423 CURVE SMOOTH",
"451 423 OFFCURVE",
"459 422 OFFCURVE",
"466 422 CURVE SMOOTH",
"470 422 OFFCURVE",
"474 422 OFFCURVE",
"477 423 CURVE",
"469 409 OFFCURVE",
"454 364 OFFCURVE",
"454 355 CURVE SMOOTH",
"454 352 OFFCURVE",
"455 347 OFFCURVE",
"458 347 CURVE SMOOTH",
"463 347 OFFCURVE",
"467 355 OFFCURVE",
"467 358 CURVE",
"479 382 OFFCURVE",
"490 416 OFFCURVE",
"520 432 CURVE",
"523 433 OFFCURVE",
"526 434 OFFCURVE",
"526 438 CURVE SMOOTH",
"526 445 OFFCURVE",
"518 458 OFFCURVE",
"510 458 CURVE SMOOTH",
"502 458 OFFCURVE",
"502 447 OFFCURVE",
"479 447 CURVE SMOOTH",
"474 447 LINE SMOOTH",
"409 447 OFFCURVE",
"335 449 OFFCURVE",
"271 449 CURVE SMOOTH",
"250 449 OFFCURVE",
"218 447 OFFCURVE",
"218 433 CURVE SMOOTH",
"218 428 OFFCURVE",
"223 427 OFFCURVE",
"228 427 CURVE SMOOTH",
"236 427 LINE SMOOTH",
"242 427 OFFCURVE",
"248 427 OFFCURVE",
"248 422 CURVE SMOOTH",
"248 421 LINE SMOOTH",
"246 410 OFFCURVE",
"234 377 OFFCURVE",
"229 364 CURVE SMOOTH",
"212 317 OFFCURVE",
"205 303 OFFCURVE",
"186 257 CURVE",
"184 256 OFFCURVE",
"177 236 OFFCURVE",
"177 235 CURVE",
"173 232 OFFCURVE",
"153 236 OFFCURVE",
"153 226 CURVE SMOOTH",
"153 220 OFFCURVE",
"164 219 OFFCURVE",
"164 212 CURVE SMOOTH",
"164 211 LINE",
"134 135 LINE SMOOTH",
"118 95 OFFCURVE",
"103 52 OFFCURVE",
"99 10 CURVE SMOOTH",
"98 1 OFFCURVE",
"98 -9 OFFCURVE",
"105 -9 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"102 102 OFFCURVE",
"121 102 OFFCURVE",
"138 103 CURVE SMOOTH",
"177 106 OFFCURVE",
"215 109 OFFCURVE",
"253 109 CURVE SMOOTH",
"256 109 OFFCURVE",
"259 110 OFFCURVE",
"259 114 CURVE SMOOTH",
"259 116 OFFCURVE",
"258 117 OFFCURVE",
"256 118 CURVE SMOOTH",
"234 129 OFFCURVE",
"182 129 OFFCURVE",
"159 129 CURVE SMOOTH",
"129 129 OFFCURVE",
"99 128 OFFCURVE",
"69 124 CURVE",
"67 122 LINE",
"68 114 OFFCURVE",
"80 101 OFFCURVE",
"86 98 CURVE"
);
}
);
width = 446;
}
);
note = franc;
unicode = 20A3;
},
{
glyphname = guarani;
lastChange = "2022-03-22 14:08:13 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"290 -7 OFFCURVE",
"347 16 OFFCURVE",
"414 68 CURVE SMOOTH",
"423 75 OFFCURVE",
"466 114 OFFCURVE",
"466 123 CURVE SMOOTH",
"466 125 OFFCURVE",
"465 129 OFFCURVE",
"460 129 CURVE SMOOTH",
"450 129 OFFCURVE",
"334 10 OFFCURVE",
"221 10 CURVE SMOOTH",
"167 10 OFFCURVE",
"141 52 OFFCURVE",
"141 108 CURVE SMOOTH",
"141 121 OFFCURVE",
"142 134 OFFCURVE",
"145 148 CURVE SMOOTH",
"172 275 OFFCURVE",
"337 432 OFFCURVE",
"432 432 CURVE SMOOTH",
"439 432 LINE SMOOTH",
"458 432 OFFCURVE",
"491 427 OFFCURVE",
"491 404 CURVE SMOOTH",
"491 384 OFFCURVE",
"475 373 OFFCURVE",
"475 360 CURVE SMOOTH",
"475 354 OFFCURVE",
"479 349 OFFCURVE",
"483 349 CURVE SMOOTH",
"494 349 OFFCURVE",
"505 369 OFFCURVE",
"507 380 CURVE SMOOTH",
"508 387 OFFCURVE",
"509 393 OFFCURVE",
"509 399 CURVE SMOOTH",
"509 436 OFFCURVE",
"479 447 OFFCURVE",
"435 447 CURVE SMOOTH",
"316 447 OFFCURVE",
"125 300 OFFCURVE",
"94 152 CURVE SMOOTH",
"91 138 OFFCURVE",
"90 125 OFFCURVE",
"90 113 CURVE SMOOTH",
"90 39 OFFCURVE",
"142 -7 OFFCURVE",
"219 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"428 -16 OFFCURVE",
"440 -9 OFFCURVE",
"446 -7 CURVE SMOOTH",
"455 -3 OFFCURVE",
"467 6 OFFCURVE",
"467 16 CURVE SMOOTH",
"467 27 OFFCURVE",
"453 16 OFFCURVE",
"453 38 CURVE",
"490 151 LINE",
"500 173 LINE",
"507 181 OFFCURVE",
"567 183 OFFCURVE",
"567 192 CURVE SMOOTH",
"567 196 OFFCURVE",
"559 195 OFFCURVE",
"558 195 CURVE SMOOTH",
"493 195 OFFCURVE",
"361 193 OFFCURVE",
"298 190 CURVE",
"288 168 LINE",
"468 173 LINE",
"418 -7 LINE",
"418 -10 OFFCURVE",
"418 -16 OFFCURVE",
"422 -16 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"216 -84 OFFCURVE",
"219 -81 OFFCURVE",
"220 -76 CURVE",
"220 -64 OFFCURVE",
"221 -41 OFFCURVE",
"224 -25 CURVE SMOOTH",
"239 67 OFFCURVE",
"301 177 OFFCURVE",
"344 255 CURVE SMOOTH",
"391 345 OFFCURVE",
"445 430 OFFCURVE",
"485 490 CURVE SMOOTH",
"491 499 OFFCURVE",
"500 514 OFFCURVE",
"500 516 CURVE",
"501 518 OFFCURVE",
"496 520 OFFCURVE",
"486 520 CURVE SMOOTH",
"477 520 OFFCURVE",
"467 508 OFFCURVE",
"460 500 CURVE SMOOTH",
"381 395 OFFCURVE",
"223 88 OFFCURVE",
"204 -32 CURVE SMOOTH",
"203 -40 OFFCURVE",
"201 -52 OFFCURVE",
"201 -63 CURVE SMOOTH",
"201 -74 OFFCURVE",
"203 -84 OFFCURVE",
"210 -84 CURVE SMOOTH"
);
}
);
width = 557;
}
);
unicode = 20B2;
},
{
glyphname = kip;
lastChange = "2022-03-22 14:08:54 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"117 -39 OFFCURVE",
"147 -26 OFFCURVE",
"148 -16 CURVE SMOOTH",
"148 -11 OFFCURVE",
"147 -4 OFFCURVE",
"148 2 CURVE SMOOTH",
"154 46 OFFCURVE",
"183 133 OFFCURVE",
"201 178 CURVE",
"219 178 OFFCURVE",
"376 180 OFFCURVE",
"401 187 CURVE SMOOTH",
"422 193 OFFCURVE",
"410 203 OFFCURVE",
"386 203 CURVE SMOOTH",
"364 203 OFFCURVE",
"211 203 OFFCURVE",
"209 203 CURVE",
"212 222 OFFCURVE",
"289 387 OFFCURVE",
"301 393 CURVE SMOOTH",
"309 398 OFFCURVE",
"337 398 OFFCURVE",
"346 398 CURVE SMOOTH",
"379 398 OFFCURVE",
"411 395 OFFCURVE",
"442 393 CURVE SMOOTH",
"451 393 OFFCURVE",
"459 392 OFFCURVE",
"466 392 CURVE SMOOTH",
"470 392 OFFCURVE",
"474 392 OFFCURVE",
"477 393 CURVE",
"470 380 OFFCURVE",
"456 341 OFFCURVE",
"454 328 CURVE SMOOTH",
"453 325 OFFCURVE",
"454 317 OFFCURVE",
"458 317 CURVE SMOOTH",
"463 317 OFFCURVE",
"467 325 OFFCURVE",
"467 328 CURVE",
"479 352 OFFCURVE",
"490 386 OFFCURVE",
"520 402 CURVE SMOOTH",
"523 403 OFFCURVE",
"525 404 OFFCURVE",
"526 407 CURVE",
"527 414 OFFCURVE",
"518 428 OFFCURVE",
"510 428 CURVE SMOOTH",
"502 428 OFFCURVE",
"502 417 OFFCURVE",
"479 417 CURVE SMOOTH",
"474 417 LINE SMOOTH",
"409 417 OFFCURVE",
"335 419 OFFCURVE",
"271 419 CURVE SMOOTH",
"251 419 OFFCURVE",
"219 417 OFFCURVE",
"218 404 CURVE",
"217 398 OFFCURVE",
"222 397 OFFCURVE",
"228 397 CURVE SMOOTH",
"236 397 LINE SMOOTH",
"243 397 OFFCURVE",
"249 397 OFFCURVE",
"248 391 CURVE SMOOTH",
"246 380 OFFCURVE",
"234 347 OFFCURVE",
"229 334 CURVE SMOOTH",
"212 287 OFFCURVE",
"205 273 OFFCURVE",
"186 227 CURVE",
"184 226 OFFCURVE",
"177 206 OFFCURVE",
"177 205 CURVE",
"173 202 OFFCURVE",
"155 206 OFFCURVE",
"153 197 CURVE SMOOTH",
"152 190 OFFCURVE",
"165 189 OFFCURVE",
"164 181 CURVE",
"134 105 LINE SMOOTH",
"118 65 OFFCURVE",
"103 22 OFFCURVE",
"99 -20 CURVE SMOOTH",
"98 -29 OFFCURVE",
"98 -39 OFFCURVE",
"105 -39 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"454 -6 OFFCURVE",
"466 2 OFFCURVE",
"474 8 CURVE SMOOTH",
"480 12 OFFCURVE",
"483 16 OFFCURVE",
"483 19 CURVE SMOOTH",
"483 20 OFFCURVE",
"482 21 OFFCURVE",
"479 21 CURVE SMOOTH",
"475 21 LINE",
"465 18 OFFCURVE",
"459 16 OFFCURVE",
"448 16 CURVE SMOOTH",
"372 16 OFFCURVE",
"273 115 OFFCURVE",
"231 205 CURVE",
"259 228 OFFCURVE",
"295 251 OFFCURVE",
"369 305 CURVE SMOOTH",
"434 352 OFFCURVE",
"513 392 OFFCURVE",
"558 420 CURVE SMOOTH",
"569 427 OFFCURVE",
"580 446 OFFCURVE",
"582 458 CURVE SMOOTH",
"582 461 OFFCURVE",
"582 464 OFFCURVE",
"577 464 CURVE SMOOTH",
"551 464 OFFCURVE",
"250 244 OFFCURVE",
"202 217 CURVE",
"218 254 OFFCURVE",
"235 299 OFFCURVE",
"257 342 CURVE SMOOTH",
"273 373 OFFCURVE",
"292 403 OFFCURVE",
"309 433 CURVE SMOOTH",
"310 435 LINE SMOOTH",
"311 438 OFFCURVE",
"302 438 OFFCURVE",
"299 438 CURVE SMOOTH",
"289 438 OFFCURVE",
"260 436 OFFCURVE",
"254 426 CURVE SMOOTH",
"250 421 OFFCURVE",
"249 415 OFFCURVE",
"247 409 CURVE SMOOTH",
"176 246 OFFCURVE",
"129 124 OFFCURVE",
"104 31 CURVE SMOOTH",
"102 22 OFFCURVE",
"100 15 OFFCURVE",
"100 10 CURVE SMOOTH",
"100 3 LINE SMOOTH",
"100 -1 OFFCURVE",
"102 -3 OFFCURVE",
"106 -3 CURVE SMOOTH",
"120 -3 OFFCURVE",
"140 9 OFFCURVE",
"144 20 CURVE SMOOTH",
"147 28 OFFCURVE",
"148 34 OFFCURVE",
"150 40 CURVE SMOOTH",
"160 76 LINE SMOOTH",
"171 117 OFFCURVE",
"183 157 OFFCURVE",
"193 187 CURVE",
"229 130 OFFCURVE",
"340 -6 OFFCURVE",
"436 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"134 195 OFFCURVE",
"244 197 OFFCURVE",
"284 197 CURVE SMOOTH",
"324 197 OFFCURVE",
"451 198 OFFCURVE",
"489 203 CURVE",
"489 214 OFFCURVE",
"477 218 OFFCURVE",
"455 219 CURVE SMOOTH",
"412 220 OFFCURVE",
"288 220 OFFCURVE",
"233 220 CURVE SMOOTH",
"156 220 OFFCURVE",
"117 218 OFFCURVE",
"110 216 CURVE SMOOTH",
"100 214 OFFCURVE",
"96 210 OFFCURVE",
"96 207 CURVE SMOOTH",
"96 199 OFFCURVE",
"101 195 OFFCURVE",
"123 195 CURVE SMOOTH"
);
}
);
width = 535;
}
);
unicode = 20AD;
},
{
glyphname = lira;
lastChange = "2022-03-22 14:08:58 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"492 -23 OFFCURVE",
"561 26 OFFCURVE",
"561 78 CURVE SMOOTH",
"561 94 OFFCURVE",
"554 110 OFFCURVE",
"540 124 CURVE SMOOTH",
"534 130 OFFCURVE",
"523 124 OFFCURVE",
"523 118 CURVE SMOOTH",
"523 114 LINE",
"537 95 OFFCURVE",
"543 78 OFFCURVE",
"543 65 CURVE SMOOTH",
"543 19 OFFCURVE",
"473 6 OFFCURVE",
"415 6 CURVE SMOOTH",
"337 6 OFFCURVE",
"266 33 OFFCURVE",
"190 50 CURVE",
"203 73 OFFCURVE",
"210 89 OFFCURVE",
"218 113 CURVE SMOOTH",
"244 190 OFFCURVE",
"344 423 OFFCURVE",
"445 423 CURVE SMOOTH",
"475 423 OFFCURVE",
"490 409 OFFCURVE",
"490 383 CURVE SMOOTH",
"490 354 OFFCURVE",
"469 309 OFFCURVE",
"425 259 CURVE SMOOTH",
"398 229 OFFCURVE",
"362 211 OFFCURVE",
"362 208 CURVE SMOOTH",
"362 205 OFFCURVE",
"362 204 OFFCURVE",
"370 204 CURVE SMOOTH",
"386 204 OFFCURVE",
"415 216 OFFCURVE",
"442 242 CURVE SMOOTH",
"495 292 OFFCURVE",
"522 342 OFFCURVE",
"522 379 CURVE SMOOTH",
"522 415 OFFCURVE",
"498 438 OFFCURVE",
"449 438 CURVE SMOOTH",
"265 438 OFFCURVE",
"226 198 OFFCURVE",
"159 56 CURVE",
"131 64 OFFCURVE",
"99 72 OFFCURVE",
"68 72 CURVE SMOOTH",
"53 72 OFFCURVE",
"31 61 OFFCURVE",
"31 45 CURVE SMOOTH",
"31 18 OFFCURVE",
"64 -9 OFFCURVE",
"114 -9 CURVE SMOOTH",
"139 -9 OFFCURVE",
"164 6 OFFCURVE",
"175 23 CURVE",
"245 6 OFFCURVE",
"336 -23 OFFCURVE",
"410 -23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 2 OFFCURVE",
"60 23 OFFCURVE",
"60 36 CURVE SMOOTH",
"60 42 OFFCURVE",
"65 48 OFFCURVE",
"74 48 CURVE SMOOTH",
"98 48 OFFCURVE",
"125 39 OFFCURVE",
"148 31 CURVE",
"146 17 OFFCURVE",
"125 2 OFFCURVE",
"107 2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"158 109 OFFCURVE",
"177 109 OFFCURVE",
"194 110 CURVE SMOOTH",
"233 113 OFFCURVE",
"271 116 OFFCURVE",
"309 116 CURVE SMOOTH",
"312 116 OFFCURVE",
"315 117 OFFCURVE",
"315 121 CURVE SMOOTH",
"315 123 OFFCURVE",
"314 124 OFFCURVE",
"312 125 CURVE SMOOTH",
"290 136 OFFCURVE",
"238 136 OFFCURVE",
"215 136 CURVE SMOOTH",
"185 136 OFFCURVE",
"155 135 OFFCURVE",
"125 131 CURVE",
"123 129 LINE",
"124 121 OFFCURVE",
"136 108 OFFCURVE",
"142 105 CURVE"
);
},
{
closed = 1;
nodes = (
"176 170 OFFCURVE",
"196 170 OFFCURVE",
"213 171 CURVE SMOOTH",
"251 174 OFFCURVE",
"289 177 OFFCURVE",
"327 177 CURVE SMOOTH",
"331 177 OFFCURVE",
"334 177 OFFCURVE",
"334 181 CURVE SMOOTH",
"334 184 OFFCURVE",
"333 184 OFFCURVE",
"331 185 CURVE SMOOTH",
"308 196 OFFCURVE",
"256 197 OFFCURVE",
"233 197 CURVE SMOOTH",
"204 197 OFFCURVE",
"173 195 OFFCURVE",
"144 191 CURVE",
"142 189 LINE",
"143 181 OFFCURVE",
"154 168 OFFCURVE",
"160 165 CURVE"
);
}
);
width = 576;
}
);
note = lira;
unicode = 20A4;
},
{
glyphname = liraTurkish;
lastChange = "2022-03-22 14:08:28 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"194 -21 OFFCURVE",
"226 -14 OFFCURVE",
"253 1 CURVE SMOOTH",
"296 25 OFFCURVE",
"336 67 OFFCURVE",
"363 109 CURVE SMOOTH",
"380 136 OFFCURVE",
"404 175 OFFCURVE",
"404 194 CURVE SMOOTH",
"404 208 OFFCURVE",
"398 214 OFFCURVE",
"392 214 CURVE SMOOTH",
"388 214 OFFCURVE",
"383 210 OFFCURVE",
"381 203 CURVE SMOOTH",
"372 179 OFFCURVE",
"352 139 OFFCURVE",
"336 113 CURVE SMOOTH",
"298 46 OFFCURVE",
"246 -4 OFFCURVE",
"177 -4 CURVE SMOOTH",
"167 -4 OFFCURVE",
"156 -3 OFFCURVE",
"145 -1 CURVE SMOOTH",
"131 2 OFFCURVE",
"126 9 OFFCURVE",
"126 19 CURVE SMOOTH",
"126 25 OFFCURVE",
"128 32 OFFCURVE",
"131 40 CURVE SMOOTH",
"172 136 OFFCURVE",
"287 390 OFFCURVE",
"298 407 CURVE SMOOTH",
"299 408 OFFCURVE",
"300 409 OFFCURVE",
"300 411 CURVE SMOOTH",
"300 416 OFFCURVE",
"293 416 OFFCURVE",
"288 416 CURVE SMOOTH",
"274 416 OFFCURVE",
"251 412 OFFCURVE",
"246 402 CURVE SMOOTH",
"242 394 OFFCURVE",
"241 384 OFFCURVE",
"237 375 CURVE SMOOTH",
"216 326 LINE",
"87 28 LINE",
"86 24 OFFCURVE",
"86 21 OFFCURVE",
"86 18 CURVE SMOOTH",
"86 0 OFFCURVE",
"100 -10 OFFCURVE",
"117 -15 CURVE SMOOTH",
"131 -19 OFFCURVE",
"147 -21 OFFCURVE",
"164 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"67 104 OFFCURVE",
"78 105 OFFCURVE",
"91 108 CURVE SMOOTH",
"110 114 OFFCURVE",
"226 157 OFFCURVE",
"253 169 CURVE SMOOTH",
"263 173 OFFCURVE",
"269 180 OFFCURVE",
"269 184 CURVE SMOOTH",
"269 186 OFFCURVE",
"268 187 OFFCURVE",
"265 187 CURVE",
"213 173 OFFCURVE",
"143 152 OFFCURVE",
"92 139 CURVE SMOOTH",
"71 135 OFFCURVE",
"59 123 OFFCURVE",
"60 104 CURVE"
);
},
{
closed = 1;
nodes = (
"85 179 OFFCURVE",
"96 180 OFFCURVE",
"109 183 CURVE SMOOTH",
"128 189 OFFCURVE",
"244 232 OFFCURVE",
"271 244 CURVE SMOOTH",
"281 248 OFFCURVE",
"287 255 OFFCURVE",
"287 259 CURVE SMOOTH",
"287 261 OFFCURVE",
"286 262 OFFCURVE",
"283 262 CURVE",
"231 248 OFFCURVE",
"161 227 OFFCURVE",
"110 214 CURVE SMOOTH",
"89 210 OFFCURVE",
"77 198 OFFCURVE",
"78 179 CURVE"
);
}
);
width = 404;
}
);
unicode = 20BA;
},
{
glyphname = manat;
lastChange = "2022-03-22 10:58:07 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"177 -3 LINE",
"152 31 OFFCURVE",
"141 74 OFFCURVE",
"141 120 CURVE SMOOTH",
"141 253 OFFCURVE",
"235 409 OFFCURVE",
"358 409 CURVE SMOOTH",
"451 409 OFFCURVE",
"493 341 OFFCURVE",
"493 256 CURVE SMOOTH",
"493 169 OFFCURVE",
"449 65 OFFCURVE",
"370 -3 CURVE",
"390 -3 LINE",
"479 50 OFFCURVE",
"543 213 OFFCURVE",
"543 277 CURVE SMOOTH",
"543 374 OFFCURVE",
"463 423 OFFCURVE",
"362 423 CURVE SMOOTH",
"254 423 OFFCURVE",
"164 383 OFFCURVE",
"123 256 CURVE SMOOTH",
"115 229 OFFCURVE",
"110 193 OFFCURVE",
"110 156 CURVE SMOOTH",
"110 93 OFFCURVE",
"124 27 OFFCURVE",
"160 -3 CURVE"
);
},
{
closed = 1;
nodes = (
"287 25 OFFCURVE",
"293 29 OFFCURVE",
"294 36 CURVE SMOOTH",
"302 128 OFFCURVE",
"335 328 OFFCURVE",
"394 465 CURVE SMOOTH",
"397 473 OFFCURVE",
"402 486 OFFCURVE",
"401 487 CURVE",
"401 488 OFFCURVE",
"398 489 OFFCURVE",
"393 489 CURVE SMOOTH",
"386 489 LINE",
"376 487 OFFCURVE",
"370 477 OFFCURVE",
"365 469 CURVE SMOOTH",
"317 378 OFFCURVE",
"280 128 OFFCURVE",
"275 32 CURVE",
"274 27 OFFCURVE",
"277 25 OFFCURVE",
"282 25 CURVE SMOOTH"
);
}
);
width = 563;
}
);
unicode = 20BC;
},
{
glyphname = naira;
lastChange = "2022-03-22 10:58:13 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"440 -10 OFFCURVE",
"456 23 OFFCURVE",
"457 33 CURVE SMOOTH",
"458 39 OFFCURVE",
"457 38 OFFCURVE",
"454 40 CURVE",
"451 45 OFFCURVE",
"456 74 OFFCURVE",
"458 79 CURVE SMOOTH",
"494 192 OFFCURVE",
"547 352 OFFCURVE",
"585 433 CURVE SMOOTH",
"594 452 OFFCURVE",
"602 474 OFFCURVE",
"602 484 CURVE SMOOTH",
"602 488 OFFCURVE",
"599 494 OFFCURVE",
"593 494 CURVE SMOOTH",
"587 494 OFFCURVE",
"576 492 OFFCURVE",
"567 476 CURVE SMOOTH",
"517 383 OFFCURVE",
"459 163 OFFCURVE",
"433 56 CURVE",
"362 94 OFFCURVE",
"300 345 OFFCURVE",
"280 438 CURVE",
"277 442 OFFCURVE",
"261 461 OFFCURVE",
"255 461 CURVE SMOOTH",
"247 461 OFFCURVE",
"228 454 OFFCURVE",
"227 445 CURVE SMOOTH",
"226 441 OFFCURVE",
"227 437 OFFCURVE",
"227 432 CURVE SMOOTH",
"227 431 OFFCURVE",
"227 430 OFFCURVE",
"226 428 CURVE SMOOTH",
"175 298 OFFCURVE",
"110 116 OFFCURVE",
"90 51 CURVE SMOOTH",
"86 37 OFFCURVE",
"74 5 OFFCURVE",
"74 2 CURVE SMOOTH",
"74 -3 OFFCURVE",
"79 -7 OFFCURVE",
"85 -7 CURVE SMOOTH",
"98 -7 OFFCURVE",
"106 6 OFFCURVE",
"110 17 CURVE SMOOTH",
"143 126 OFFCURVE",
"240 414 OFFCURVE",
"242 420 CURVE",
"296 204 OFFCURVE",
"354 61 OFFCURVE",
"402 26 CURVE",
"403 12 OFFCURVE",
"407 -10 OFFCURVE",
"426 -10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"149 212 OFFCURVE",
"277 214 OFFCURVE",
"324 214 CURVE SMOOTH",
"369 214 OFFCURVE",
"516 215 OFFCURVE",
"561 220 CURVE",
"561 231 OFFCURVE",
"547 235 OFFCURVE",
"521 236 CURVE SMOOTH",
"472 237 OFFCURVE",
"327 237 OFFCURVE",
"264 237 CURVE SMOOTH",
"174 237 OFFCURVE",
"130 235 OFFCURVE",
"121 233 CURVE SMOOTH",
"110 231 OFFCURVE",
"105 227 OFFCURVE",
"105 224 CURVE SMOOTH",
"105 216 OFFCURVE",
"111 212 OFFCURVE",
"136 212 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"180 316 OFFCURVE",
"308 318 OFFCURVE",
"354 318 CURVE SMOOTH",
"400 318 OFFCURVE",
"547 319 OFFCURVE",
"592 324 CURVE",
"592 335 OFFCURVE",
"578 339 OFFCURVE",
"552 340 CURVE SMOOTH",
"503 341 OFFCURVE",
"358 341 OFFCURVE",
"295 341 CURVE SMOOTH",
"205 341 OFFCURVE",
"161 339 OFFCURVE",
"152 337 CURVE SMOOTH",
"141 335 OFFCURVE",
"136 331 OFFCURVE",
"136 328 CURVE SMOOTH",
"136 320 OFFCURVE",
"142 316 OFFCURVE",
"167 316 CURVE SMOOTH"
);
}
);
width = 582;
}
);
unicode = 20A6;
},
{
glyphname = peseta;
lastChange = "2022-03-22 10:58:22 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"99 240 OFFCURVE",
"202 242 OFFCURVE",
"240 242 CURVE SMOOTH",
"277 242 OFFCURVE",
"396 243 OFFCURVE",
"432 248 CURVE",
"432 259 OFFCURVE",
"421 263 OFFCURVE",
"400 264 CURVE SMOOTH",
"360 265 OFFCURVE",
"243 265 OFFCURVE",
"192 265 CURVE SMOOTH",
"119 265 OFFCURVE",
"83 263 OFFCURVE",
"76 261 CURVE SMOOTH",
"67 259 OFFCURVE",
"63 255 OFFCURVE",
"63 252 CURVE SMOOTH",
"63 244 OFFCURVE",
"68 240 OFFCURVE",
"88 240 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"105 -25 OFFCURVE",
"134 -5 OFFCURVE",
"137 4 CURVE",
"136 5 LINE",
"143 59 OFFCURVE",
"158 111 OFFCURVE",
"173 164 CURVE",
"224 164 OFFCURVE",
"265 170 OFFCURVE",
"304 182 CURVE SMOOTH",
"349 195 OFFCURVE",
"426 229 OFFCURVE",
"432 292 CURVE SMOOTH",
"433 310 OFFCURVE",
"428 329 OFFCURVE",
"419 344 CURVE SMOOTH",
"391 398 OFFCURVE",
"315 426 OFFCURVE",
"276 440 CURVE SMOOTH",
"261 444 OFFCURVE",
"242 448 OFFCURVE",
"228 448 CURVE SMOOTH",
"221 448 OFFCURVE",
"213 445 OFFCURVE",
"213 437 CURVE SMOOTH",
"213 429 OFFCURVE",
"219 425 OFFCURVE",
"225 420 CURVE",
"213 389 LINE SMOOTH",
"199 353 OFFCURVE",
"135 169 OFFCURVE",
"119 112 CURVE SMOOTH",
"108 72 OFFCURVE",
"96 31 OFFCURVE",
"91 -9 CURVE SMOOTH",
"91 -11 OFFCURVE",
"90 -15 OFFCURVE",
"90 -18 CURVE SMOOTH",
"90 -22 OFFCURVE",
"91 -25 OFFCURVE",
"94 -25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"149 270 OFFCURVE",
"252 272 OFFCURVE",
"290 272 CURVE SMOOTH",
"327 272 OFFCURVE",
"446 273 OFFCURVE",
"482 278 CURVE",
"482 289 OFFCURVE",
"471 293 OFFCURVE",
"450 294 CURVE SMOOTH",
"410 295 OFFCURVE",
"293 295 OFFCURVE",
"242 295 CURVE SMOOTH",
"169 295 OFFCURVE",
"133 293 OFFCURVE",
"126 291 CURVE SMOOTH",
"117 289 OFFCURVE",
"113 285 OFFCURVE",
"113 282 CURVE SMOOTH",
"113 274 OFFCURVE",
"118 270 OFFCURVE",
"138 270 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"178 180 OFFCURVE",
"180 185 OFFCURVE",
"181 191 CURVE SMOOTH",
"188 221 OFFCURVE",
"242 375 OFFCURVE",
"264 413 CURVE",
"315 395 OFFCURVE",
"398 359 OFFCURVE",
"398 291 CURVE SMOOTH",
"398 228 OFFCURVE",
"326 202 OFFCURVE",
"283 192 CURVE SMOOTH",
"253 185 OFFCURVE",
"219 180 OFFCURVE",
"185 180 CURVE SMOOTH"
);
}
);
width = 432;
}
);
unicode = 20A7;
},
{
glyphname = peso;
lastChange = "2022-03-22 10:58:34 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"105 -25 OFFCURVE",
"134 -5 OFFCURVE",
"137 4 CURVE",
"136 5 LINE",
"143 59 OFFCURVE",
"158 111 OFFCURVE",
"173 164 CURVE",
"224 164 OFFCURVE",
"265 170 OFFCURVE",
"304 182 CURVE SMOOTH",
"349 195 OFFCURVE",
"426 229 OFFCURVE",
"432 292 CURVE SMOOTH",
"433 310 OFFCURVE",
"428 329 OFFCURVE",
"419 344 CURVE SMOOTH",
"391 398 OFFCURVE",
"315 426 OFFCURVE",
"276 440 CURVE SMOOTH",
"261 444 OFFCURVE",
"242 448 OFFCURVE",
"228 448 CURVE SMOOTH",
"221 448 OFFCURVE",
"213 445 OFFCURVE",
"213 437 CURVE SMOOTH",
"213 429 OFFCURVE",
"219 425 OFFCURVE",
"225 420 CURVE",
"213 389 LINE SMOOTH",
"199 353 OFFCURVE",
"135 169 OFFCURVE",
"119 112 CURVE SMOOTH",
"108 72 OFFCURVE",
"96 31 OFFCURVE",
"91 -9 CURVE SMOOTH",
"91 -11 OFFCURVE",
"90 -15 OFFCURVE",
"90 -18 CURVE SMOOTH",
"90 -22 OFFCURVE",
"91 -25 OFFCURVE",
"94 -25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"139 240 OFFCURVE",
"242 242 OFFCURVE",
"280 242 CURVE SMOOTH",
"317 242 OFFCURVE",
"436 243 OFFCURVE",
"472 248 CURVE",
"472 259 OFFCURVE",
"461 263 OFFCURVE",
"440 264 CURVE SMOOTH",
"400 265 OFFCURVE",
"283 265 OFFCURVE",
"232 265 CURVE SMOOTH",
"159 265 OFFCURVE",
"123 263 OFFCURVE",
"116 261 CURVE SMOOTH",
"107 259 OFFCURVE",
"103 255 OFFCURVE",
"103 252 CURVE SMOOTH",
"103 244 OFFCURVE",
"108 240 OFFCURVE",
"128 240 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"178 180 OFFCURVE",
"180 185 OFFCURVE",
"181 191 CURVE SMOOTH",
"188 221 OFFCURVE",
"242 375 OFFCURVE",
"264 413 CURVE",
"315 395 OFFCURVE",
"398 359 OFFCURVE",
"398 291 CURVE SMOOTH",
"398 228 OFFCURVE",
"326 202 OFFCURVE",
"283 192 CURVE SMOOTH",
"253 185 OFFCURVE",
"219 180 OFFCURVE",
"185 180 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"159 305 OFFCURVE",
"262 307 OFFCURVE",
"300 307 CURVE SMOOTH",
"337 307 OFFCURVE",
"456 308 OFFCURVE",
"492 313 CURVE",
"492 324 OFFCURVE",
"481 328 OFFCURVE",
"460 329 CURVE SMOOTH",
"420 330 OFFCURVE",
"303 330 OFFCURVE",
"252 330 CURVE SMOOTH",
"179 330 OFFCURVE",
"143 328 OFFCURVE",
"136 326 CURVE SMOOTH",
"127 324 OFFCURVE",
"123 320 OFFCURVE",
"123 317 CURVE SMOOTH",
"123 309 OFFCURVE",
"128 305 OFFCURVE",
"148 305 CURVE SMOOTH"
);
}
);
width = 442;
}
);
unicode = 20B1;
},
{
glyphname = ruble;
lastChange = "2022-03-22 14:08:39 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"125 -25 OFFCURVE",
"154 -5 OFFCURVE",
"157 4 CURVE",
"156 5 LINE",
"163 59 OFFCURVE",
"178 111 OFFCURVE",
"193 164 CURVE",
"244 164 OFFCURVE",
"285 170 OFFCURVE",
"324 182 CURVE SMOOTH",
"369 195 OFFCURVE",
"446 229 OFFCURVE",
"452 292 CURVE SMOOTH",
"453 310 OFFCURVE",
"448 329 OFFCURVE",
"439 344 CURVE SMOOTH",
"411 398 OFFCURVE",
"335 426 OFFCURVE",
"296 440 CURVE SMOOTH",
"281 444 OFFCURVE",
"262 448 OFFCURVE",
"248 448 CURVE SMOOTH",
"241 448 OFFCURVE",
"233 445 OFFCURVE",
"233 437 CURVE SMOOTH",
"233 429 OFFCURVE",
"239 425 OFFCURVE",
"245 420 CURVE",
"233 389 LINE SMOOTH",
"219 353 OFFCURVE",
"155 169 OFFCURVE",
"139 112 CURVE SMOOTH",
"128 72 OFFCURVE",
"116 31 OFFCURVE",
"111 -9 CURVE SMOOTH",
"111 -11 OFFCURVE",
"110 -15 OFFCURVE",
"110 -18 CURVE SMOOTH",
"110 -22 OFFCURVE",
"111 -25 OFFCURVE",
"114 -25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"97 72 OFFCURVE",
"121 74 OFFCURVE",
"138 75 CURVE SMOOTH",
"177 78 OFFCURVE",
"215 81 OFFCURVE",
"253 81 CURVE SMOOTH",
"256 81 OFFCURVE",
"259 82 OFFCURVE",
"259 86 CURVE SMOOTH",
"259 88 OFFCURVE",
"258 89 OFFCURVE",
"256 90 CURVE SMOOTH",
"234 101 OFFCURVE",
"182 101 OFFCURVE",
"159 101 CURVE SMOOTH",
"129 101 OFFCURVE",
"99 100 OFFCURVE",
"69 96 CURVE",
"67 94 LINE",
"68 86 OFFCURVE",
"80 73 OFFCURVE",
"86 70 CURVE"
);
},
{
closed = 1;
nodes = (
"120 161 OFFCURVE",
"143 161 OFFCURVE",
"170 162 CURVE",
"175 186 LINE",
"131 185 OFFCURVE",
"108 184 OFFCURVE",
"103 182 CURVE SMOOTH",
"94 180 OFFCURVE",
"90 176 OFFCURVE",
"90 173 CURVE SMOOTH",
"90 165 OFFCURVE",
"95 161 OFFCURVE",
"115 161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"198 180 OFFCURVE",
"200 185 OFFCURVE",
"201 191 CURVE SMOOTH",
"208 221 OFFCURVE",
"262 375 OFFCURVE",
"284 413 CURVE",
"335 395 OFFCURVE",
"418 359 OFFCURVE",
"418 291 CURVE SMOOTH",
"418 228 OFFCURVE",
"346 202 OFFCURVE",
"303 192 CURVE SMOOTH",
"273 185 OFFCURVE",
"239 180 OFFCURVE",
"205 180 CURVE SMOOTH"
);
}
);
width = 422;
}
);
unicode = 20BD;
},
{
glyphname = rupeeIndian;
lastChange = "2022-03-22 10:58:51 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"402 -10 OFFCURVE",
"420 9 OFFCURVE",
"420 22 CURVE SMOOTH",
"420 24 OFFCURVE",
"418 26 OFFCURVE",
"416 26 CURVE SMOOTH",
"412 26 OFFCURVE",
"403 20 OFFCURVE",
"392 20 CURVE SMOOTH",
"353 20 OFFCURVE",
"305 67 OFFCURVE",
"279 90 CURVE SMOOTH",
"244 123 OFFCURVE",
"214 163 OFFCURVE",
"187 204 CURVE",
"305 204 OFFCURVE",
"455 247 OFFCURVE",
"472 334 CURVE SMOOTH",
"473 339 OFFCURVE",
"473 343 OFFCURVE",
"473 348 CURVE SMOOTH",
"473 361 OFFCURVE",
"470 373 OFFCURVE",
"465 384 CURVE SMOOTH",
"452 411 OFFCURVE",
"425 427 OFFCURVE",
"395 438 CURVE",
"345 432 LINE",
"389 418 OFFCURVE",
"430 392 OFFCURVE",
"430 346 CURVE SMOOTH",
"430 341 OFFCURVE",
"430 336 OFFCURVE",
"429 331 CURVE SMOOTH",
"412 247 OFFCURVE",
"286 221 OFFCURVE",
"160 221 CURVE",
"153 219 OFFCURVE",
"149 209 OFFCURVE",
"149 203 CURVE SMOOTH",
"149 176 OFFCURVE",
"199 113 OFFCURVE",
"231 83 CURVE SMOOTH",
"266 48 OFFCURVE",
"317 -10 OFFCURVE",
"372 -10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"190 315 OFFCURVE",
"293 317 OFFCURVE",
"331 317 CURVE SMOOTH",
"368 317 OFFCURVE",
"487 318 OFFCURVE",
"523 323 CURVE",
"523 334 OFFCURVE",
"512 338 OFFCURVE",
"491 339 CURVE SMOOTH",
"451 340 OFFCURVE",
"334 340 OFFCURVE",
"283 340 CURVE SMOOTH",
"210 340 OFFCURVE",
"174 338 OFFCURVE",
"167 336 CURVE SMOOTH",
"158 334 OFFCURVE",
"154 330 OFFCURVE",
"154 327 CURVE SMOOTH",
"154 319 OFFCURVE",
"159 315 OFFCURVE",
"179 315 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"215 419 OFFCURVE",
"318 421 OFFCURVE",
"356 421 CURVE SMOOTH",
"393 421 OFFCURVE",
"512 422 OFFCURVE",
"548 427 CURVE",
"548 438 OFFCURVE",
"537 442 OFFCURVE",
"516 443 CURVE SMOOTH",
"476 444 OFFCURVE",
"359 444 OFFCURVE",
"308 444 CURVE SMOOTH",
"235 444 OFFCURVE",
"199 442 OFFCURVE",
"192 440 CURVE SMOOTH",
"183 438 OFFCURVE",
"179 434 OFFCURVE",
"179 431 CURVE SMOOTH",
"179 423 OFFCURVE",
"184 419 OFFCURVE",
"204 419 CURVE SMOOTH"
);
}
);
width = 468;
}
);
unicode = 20B9;
},
{
glyphname = sterling;
lastChange = "2022-03-22 14:09:04 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"492 -13 OFFCURVE",
"561 36 OFFCURVE",
"561 88 CURVE SMOOTH",
"561 104 OFFCURVE",
"554 120 OFFCURVE",
"540 134 CURVE SMOOTH",
"534 140 OFFCURVE",
"523 134 OFFCURVE",
"523 128 CURVE SMOOTH",
"523 124 LINE",
"537 105 OFFCURVE",
"543 88 OFFCURVE",
"543 75 CURVE SMOOTH",
"543 29 OFFCURVE",
"473 16 OFFCURVE",
"415 16 CURVE SMOOTH",
"337 16 OFFCURVE",
"266 43 OFFCURVE",
"190 60 CURVE",
"203 83 OFFCURVE",
"210 99 OFFCURVE",
"218 123 CURVE SMOOTH",
"244 200 OFFCURVE",
"344 433 OFFCURVE",
"445 433 CURVE SMOOTH",
"475 433 OFFCURVE",
"490 419 OFFCURVE",
"490 393 CURVE SMOOTH",
"490 364 OFFCURVE",
"469 319 OFFCURVE",
"425 269 CURVE SMOOTH",
"398 239 OFFCURVE",
"362 221 OFFCURVE",
"362 218 CURVE SMOOTH",
"362 215 OFFCURVE",
"362 214 OFFCURVE",
"370 214 CURVE SMOOTH",
"386 214 OFFCURVE",
"415 226 OFFCURVE",
"442 252 CURVE SMOOTH",
"495 302 OFFCURVE",
"522 352 OFFCURVE",
"522 389 CURVE SMOOTH",
"522 425 OFFCURVE",
"498 448 OFFCURVE",
"449 448 CURVE SMOOTH",
"265 448 OFFCURVE",
"226 208 OFFCURVE",
"159 66 CURVE",
"131 74 OFFCURVE",
"99 82 OFFCURVE",
"68 82 CURVE SMOOTH",
"53 82 OFFCURVE",
"31 71 OFFCURVE",
"31 55 CURVE SMOOTH",
"31 28 OFFCURVE",
"64 1 OFFCURVE",
"114 1 CURVE SMOOTH",
"139 1 OFFCURVE",
"164 16 OFFCURVE",
"175 33 CURVE",
"245 16 OFFCURVE",
"336 -13 OFFCURVE",
"410 -13 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 12 OFFCURVE",
"60 33 OFFCURVE",
"60 46 CURVE SMOOTH",
"60 52 OFFCURVE",
"65 58 OFFCURVE",
"74 58 CURVE SMOOTH",
"98 58 OFFCURVE",
"125 49 OFFCURVE",
"148 41 CURVE",
"146 27 OFFCURVE",
"125 12 OFFCURVE",
"107 12 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"165 146 OFFCURVE",
"184 146 OFFCURVE",
"201 147 CURVE SMOOTH",
"240 150 OFFCURVE",
"278 153 OFFCURVE",
"316 153 CURVE SMOOTH",
"319 153 OFFCURVE",
"322 154 OFFCURVE",
"322 158 CURVE SMOOTH",
"322 160 OFFCURVE",
"321 161 OFFCURVE",
"319 162 CURVE SMOOTH",
"297 173 OFFCURVE",
"245 173 OFFCURVE",
"222 173 CURVE SMOOTH",
"192 173 OFFCURVE",
"162 172 OFFCURVE",
"132 168 CURVE",
"130 166 LINE",
"131 158 OFFCURVE",
"143 145 OFFCURVE",
"149 142 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0126 38 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01212 38 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01215 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01250 33 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 576;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = won;
lastChange = "2022-03-22 10:59:39 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"162 -25 OFFCURVE",
"165 -25 OFFCURVE",
"165 -24 CURVE",
"183 -16 OFFCURVE",
"180 -5 OFFCURVE",
"189 10 CURVE SMOOTH",
"286 156 LINE SMOOTH",
"313 195 OFFCURVE",
"390 318 OFFCURVE",
"410 350 CURVE",
"416 261 OFFCURVE",
"438 16 OFFCURVE",
"433 16 CURVE",
"434 5 OFFCURVE",
"427 -14 OFFCURVE",
"442 -14 CURVE SMOOTH",
"456 -14 OFFCURVE",
"467 4 OFFCURVE",
"475 17 CURVE SMOOTH",
"543 144 OFFCURVE",
"699 400 OFFCURVE",
"727 446 CURVE SMOOTH",
"733 456 OFFCURVE",
"739 474 OFFCURVE",
"740 482 CURVE SMOOTH",
"740 488 OFFCURVE",
"738 493 OFFCURVE",
"733 493 CURVE SMOOTH",
"726 493 OFFCURVE",
"722 490 OFFCURVE",
"704 463 CURVE SMOOTH",
"677 419 OFFCURVE",
"569 230 OFFCURVE",
"478 59 CURVE",
"463 136 OFFCURVE",
"455 337 OFFCURVE",
"440 419 CURVE SMOOTH",
"437 432 OFFCURVE",
"421 435 OFFCURVE",
"414 435 CURVE SMOOTH",
"403 435 OFFCURVE",
"392 429 OFFCURVE",
"391 417 CURVE SMOOTH",
"391 414 OFFCURVE",
"391 411 OFFCURVE",
"392 407 CURVE SMOOTH",
"395 392 OFFCURVE",
"395 385 OFFCURVE",
"396 375 CURVE",
"395 366 OFFCURVE",
"333 272 OFFCURVE",
"282 191 CURVE SMOOTH",
"262 156 OFFCURVE",
"203 65 OFFCURVE",
"187 40 CURVE",
"190 76 OFFCURVE",
"202 335 OFFCURVE",
"201 457 CURVE SMOOTH",
"201 460 OFFCURVE",
"199 462 OFFCURVE",
"197 462 CURVE SMOOTH",
"190 462 OFFCURVE",
"160 454 OFFCURVE",
"158 444 CURVE SMOOTH",
"158 443 OFFCURVE",
"159 443 OFFCURVE",
"159 442 CURVE SMOOTH",
"160 409 OFFCURVE",
"148 11 OFFCURVE",
"145 -21 CURVE",
"144 -24 OFFCURVE",
"158 -25 OFFCURVE",
"161 -25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"146 240 OFFCURVE",
"308 242 OFFCURVE",
"367 242 CURVE SMOOTH",
"425 242 OFFCURVE",
"611 243 OFFCURVE",
"667 248 CURVE",
"667 259 OFFCURVE",
"650 263 OFFCURVE",
"617 264 CURVE SMOOTH",
"555 265 OFFCURVE",
"372 265 OFFCURVE",
"292 265 CURVE SMOOTH",
"178 265 OFFCURVE",
"121 263 OFFCURVE",
"110 261 CURVE SMOOTH",
"96 259 OFFCURVE",
"90 255 OFFCURVE",
"90 252 CURVE SMOOTH",
"90 244 OFFCURVE",
"98 240 OFFCURVE",
"129 240 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"178 305 OFFCURVE",
"339 307 OFFCURVE",
"398 307 CURVE SMOOTH",
"456 307 OFFCURVE",
"642 308 OFFCURVE",
"699 313 CURVE",
"699 324 OFFCURVE",
"682 328 OFFCURVE",
"649 329 CURVE SMOOTH",
"586 330 OFFCURVE",
"403 330 OFFCURVE",
"323 330 CURVE SMOOTH",
"209 330 OFFCURVE",
"153 328 OFFCURVE",
"142 326 CURVE SMOOTH",
"128 324 OFFCURVE",
"121 320 OFFCURVE",
"121 317 CURVE SMOOTH",
"121 309 OFFCURVE",
"129 305 OFFCURVE",
"160 305 CURVE SMOOTH"
);
}
);
width = 648;
}
);
unicode = 20A9;
},
{
glyphname = yen;
lastChange = "2022-03-22 10:59:45 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"256 -20 OFFCURVE",
"281 -13 OFFCURVE",
"284 -2 CURVE SMOOTH",
"287 5 OFFCURVE",
"288 11 OFFCURVE",
"288 16 CURVE",
"307 121 LINE",
"308 121 OFFCURVE",
"309 121 OFFCURVE",
"310 122 CURVE",
"313 122 LINE SMOOTH",
"352 125 OFFCURVE",
"380 126 OFFCURVE",
"399 126 CURVE SMOOTH",
"402 126 OFFCURVE",
"404 127 OFFCURVE",
"404 130 CURVE SMOOTH",
"404 132 OFFCURVE",
"403 133 OFFCURVE",
"402 133 CURVE",
"392 138 OFFCURVE",
"362 141 OFFCURVE",
"311 142 CURVE",
"322 202 LINE",
"322 203 LINE",
"357 206 OFFCURVE",
"382 207 OFFCURVE",
"399 207 CURVE SMOOTH",
"402 207 OFFCURVE",
"404 209 OFFCURVE",
"404 212 CURVE",
"402 214 LINE",
"393 218 OFFCURVE",
"363 222 OFFCURVE",
"328 223 CURVE",
"347 248 OFFCURVE",
"365 270 OFFCURVE",
"384 291 CURVE SMOOTH",
"421 333 OFFCURVE",
"500 423 OFFCURVE",
"549 445 CURVE",
"550 446 OFFCURVE",
"549 449 OFFCURVE",
"549 455 CURVE SMOOTH",
"549 456 OFFCURVE",
"550 458 OFFCURVE",
"550 458 CURVE",
"549 459 OFFCURVE",
"546 460 OFFCURVE",
"542 460 CURVE SMOOTH",
"524 460 OFFCURVE",
"504 450 OFFCURVE",
"483 431 CURVE SMOOTH",
"450 398 OFFCURVE",
"427 372 OFFCURVE",
"412 354 CURVE SMOOTH",
"379 315 OFFCURVE",
"346 274 OFFCURVE",
"311 229 CURVE",
"260 302 OFFCURVE",
"220 358 OFFCURVE",
"191 397 CURVE SMOOTH",
"162 436 OFFCURVE",
"143 458 OFFCURVE",
"134 463 CURVE",
"134 464 LINE",
"133 465 OFFCURVE",
"132 465 OFFCURVE",
"130 465 CURVE SMOOTH",
"120 465 OFFCURVE",
"101 444 OFFCURVE",
"101 434 CURVE SMOOTH",
"101 430 OFFCURVE",
"104 427 OFFCURVE",
"109 424 CURVE SMOOTH",
"113 422 OFFCURVE",
"124 413 OFFCURVE",
"141 397 CURVE SMOOTH",
"158 381 OFFCURVE",
"180 355 OFFCURVE",
"206 319 CURVE SMOOTH",
"238 275 OFFCURVE",
"260 243 OFFCURVE",
"272 224 CURVE",
"253 223 OFFCURVE",
"237 223 OFFCURVE",
"226 222 CURVE SMOOTH",
"214 221 OFFCURVE",
"206 220 OFFCURVE",
"202 219 CURVE",
"201 218 LINE",
"201 211 OFFCURVE",
"213 199 OFFCURVE",
"217 199 CURVE SMOOTH",
"233 199 OFFCURVE",
"255 200 OFFCURVE",
"283 202 CURVE",
"282 199 OFFCURVE",
"281 194 OFFCURVE",
"280 187 CURVE SMOOTH",
"279 179 OFFCURVE",
"276 168 OFFCURVE",
"273 153 CURVE SMOOTH",
"271 143 LINE",
"252 142 OFFCURVE",
"236 142 OFFCURVE",
"225 141 CURVE SMOOTH",
"213 140 OFFCURVE",
"205 139 OFFCURVE",
"202 138 CURVE",
"201 137 OFFCURVE",
"201 137 OFFCURVE",
"201 136 CURVE SMOOTH",
"201 129 OFFCURVE",
"213 118 OFFCURVE",
"217 118 CURVE SMOOTH",
"238 118 LINE SMOOTH",
"246 118 OFFCURVE",
"255 118 OFFCURVE",
"265 119 CURVE",
"256 71 LINE SMOOTH",
"253 56 OFFCURVE",
"250 42 OFFCURVE",
"248 29 CURVE SMOOTH",
"245 15 OFFCURVE",
"243 4 OFFCURVE",
"242 -4 CURVE SMOOTH",
"240 -17 LINE SMOOTH",
"240 -19 OFFCURVE",
"241 -20 OFFCURVE",
"244 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01216 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01296 1061 22 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01246 1063 39 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01265 14 59 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01291 39 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 465;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = bulletoperator;
lastChange = "2022-03-22 10:59:58 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"303 162 OFFCURVE",
"337 194 OFFCURVE",
"337 237 CURVE SMOOTH",
"337 278 OFFCURVE",
"303 311 OFFCURVE",
"262 311 CURVE SMOOTH",
"221 311 OFFCURVE",
"187 278 OFFCURVE",
"187 237 CURVE SMOOTH",
"187 195 OFFCURVE",
"221 162 OFFCURVE",
"262 162 CURVE SMOOTH"
);
}
);
width = 417;
}
);
unicode = 2219;
},
{
glyphname = commercialMinusSign;
lastChange = "2022-03-22 11:00:01 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"240 -16 LINE SMOOTH",
"244 -16 OFFCURVE",
"247 -13 OFFCURVE",
"245 -10 CURVE",
"245 -7 OFFCURVE",
"247 22 OFFCURVE",
"254 42 CURVE SMOOTH",
"259 60 OFFCURVE",
"287 114 OFFCURVE",
"307 150 CURVE SMOOTH",
"360 250 OFFCURVE",
"439 361 OFFCURVE",
"582 508 CURVE",
"583 511 LINE",
"583 513 OFFCURVE",
"578 514 OFFCURVE",
"574 513 CURVE SMOOTH",
"547 509 OFFCURVE",
"502 468 OFFCURVE",
"440 389 CURVE SMOOTH",
"379 314 OFFCURVE",
"328 238 OFFCURVE",
"282 157 CURVE SMOOTH",
"240 82 OFFCURVE",
"219 31 OFFCURVE",
"219 4 CURVE SMOOTH",
"219 0 OFFCURVE",
"220 -4 OFFCURVE",
"221 -7 CURVE SMOOTH",
"223 -12 OFFCURVE",
"232 -16 OFFCURVE",
"238 -16 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"500 60 OFFCURVE",
"534 92 OFFCURVE",
"534 135 CURVE SMOOTH",
"534 176 OFFCURVE",
"500 209 OFFCURVE",
"459 209 CURVE SMOOTH",
"418 209 OFFCURVE",
"384 176 OFFCURVE",
"384 135 CURVE SMOOTH",
"384 93 OFFCURVE",
"418 60 OFFCURVE",
"459 60 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"266 261 OFFCURVE",
"300 293 OFFCURVE",
"300 336 CURVE SMOOTH",
"300 377 OFFCURVE",
"266 410 OFFCURVE",
"225 410 CURVE SMOOTH",
"184 410 OFFCURVE",
"150 377 OFFCURVE",
"150 336 CURVE SMOOTH",
"150 294 OFFCURVE",
"184 261 OFFCURVE",
"225 261 CURVE SMOOTH"
);
}
);
width = 593;
}
);
unicode = 2052;
},
{
glyphname = divisionslash;
lastChange = "2022-03-22 11:00:30 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"157 -16 LINE SMOOTH",
"161 -16 OFFCURVE",
"164 -13 OFFCURVE",
"162 -10 CURVE",
"162 -7 OFFCURVE",
"164 22 OFFCURVE",
"171 42 CURVE SMOOTH",
"176 60 OFFCURVE",
"204 114 OFFCURVE",
"224 150 CURVE SMOOTH",
"277 250 OFFCURVE",
"356 361 OFFCURVE",
"499 508 CURVE",
"500 511 LINE",
"500 513 OFFCURVE",
"495 514 OFFCURVE",
"491 513 CURVE SMOOTH",
"464 509 OFFCURVE",
"419 468 OFFCURVE",
"357 389 CURVE SMOOTH",
"296 314 OFFCURVE",
"245 238 OFFCURVE",
"199 157 CURVE SMOOTH",
"157 82 OFFCURVE",
"136 31 OFFCURVE",
"136 4 CURVE SMOOTH",
"136 0 OFFCURVE",
"137 -4 OFFCURVE",
"138 -7 CURVE SMOOTH",
"140 -12 OFFCURVE",
"149 -16 OFFCURVE",
"155 -16 CURVE SMOOTH"
);
}
);
width = 446;
}
);
unicode = 2215;
},
{
glyphname = plus;
lastChange = "2022-03-22 11:00:37 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"223 87 OFFCURVE",
"247 97 OFFCURVE",
"250 103 CURVE SMOOTH",
"262 131 OFFCURVE",
"279 177 OFFCURVE",
"302 236 CURVE SMOOTH",
"314 264 OFFCURVE",
"341 335 OFFCURVE",
"354 363 CURVE",
"355 367 OFFCURVE",
"356 371 OFFCURVE",
"356 373 CURVE SMOOTH",
"356 376 OFFCURVE",
"355 378 OFFCURVE",
"354 378 CURVE SMOOTH",
"351 379 OFFCURVE",
"348 377 OFFCURVE",
"346 374 CURVE",
"332 363 OFFCURVE",
"288 274 OFFCURVE",
"266 225 CURVE SMOOTH",
"252 194 OFFCURVE",
"216 107 OFFCURVE",
"215 92 CURVE",
"215 92 OFFCURVE",
"216 90 OFFCURVE",
"217 90 CURVE"
);
},
{
closed = 1;
nodes = (
"186 213 OFFCURVE",
"235 217 OFFCURVE",
"298 219 CURVE SMOOTH",
"328 220 OFFCURVE",
"405 224 OFFCURVE",
"435 224 CURVE",
"443 225 OFFCURVE",
"449 228 OFFCURVE",
"449 230 CURVE SMOOTH",
"449 233 OFFCURVE",
"445 235 OFFCURVE",
"442 235 CURVE",
"426 244 OFFCURVE",
"327 248 OFFCURVE",
"273 248 CURVE SMOOTH",
"239 248 OFFCURVE",
"145 246 OFFCURVE",
"131 240 CURVE",
"131 240 OFFCURVE",
"130 239 OFFCURVE",
"130 238 CURVE SMOOTH",
"130 231 OFFCURVE",
"149 213 OFFCURVE",
"155 213 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01235 1065 26 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01210 26 35 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01225 1064 15 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 429;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = minus;
lastChange = "2022-03-22 11:00:49 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"186 213 OFFCURVE",
"235 217 OFFCURVE",
"298 219 CURVE SMOOTH",
"328 220 OFFCURVE",
"405 224 OFFCURVE",
"435 224 CURVE",
"443 225 OFFCURVE",
"449 228 OFFCURVE",
"449 230 CURVE SMOOTH",
"449 233 OFFCURVE",
"445 235 OFFCURVE",
"442 235 CURVE",
"426 244 OFFCURVE",
"327 248 OFFCURVE",
"273 248 CURVE SMOOTH",
"239 248 OFFCURVE",
"145 246 OFFCURVE",
"131 240 CURVE",
"131 240 OFFCURVE",
"130 239 OFFCURVE",
"130 238 CURVE SMOOTH",
"130 231 OFFCURVE",
"149 213 OFFCURVE",
"155 213 CURVE SMOOTH"
);
}
);
width = 429;
}
);
unicode = 2212;
},
{
glyphname = multiply;
lastChange = "2022-03-22 11:00:56 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"185 75 OFFCURVE",
"264 150 OFFCURVE",
"306 192 CURVE SMOOTH",
"333 219 OFFCURVE",
"405 297 OFFCURVE",
"414 314 CURVE",
"414 314 OFFCURVE",
"414 317 OFFCURVE",
"413 318 CURVE",
"411 324 OFFCURVE",
"398 328 OFFCURVE",
"389 328 CURVE SMOOTH",
"385 328 OFFCURVE",
"382 327 OFFCURVE",
"381 326 CURVE SMOOTH",
"357 302 OFFCURVE",
"321 259 OFFCURVE",
"273 205 CURVE SMOOTH",
"249 180 OFFCURVE",
"192 115 OFFCURVE",
"167 91 CURVE",
"163 84 OFFCURVE",
"160 78 OFFCURVE",
"160 74 CURVE SMOOTH",
"160 73 LINE",
"162 70 OFFCURVE",
"165 70 OFFCURVE",
"168 72 CURVE"
);
},
{
closed = 1;
nodes = (
"405 77 OFFCURVE",
"406 77 OFFCURVE",
"406 78 CURVE SMOOTH",
"407 82 OFFCURVE",
"405 87 OFFCURVE",
"403 89 CURVE",
"395 111 OFFCURVE",
"320 187 OFFCURVE",
"278 226 CURVE SMOOTH",
"252 251 OFFCURVE",
"178 316 OFFCURVE",
"164 319 CURVE",
"164 319 OFFCURVE",
"163 319 OFFCURVE",
"162 317 CURVE SMOOTH",
"159 309 OFFCURVE",
"164 274 OFFCURVE",
"169 270 CURVE SMOOTH",
"193 247 OFFCURVE",
"233 217 OFFCURVE",
"283 174 CURVE SMOOTH",
"307 153 OFFCURVE",
"369 103 OFFCURVE",
"392 81 CURVE",
"397 78 OFFCURVE",
"401 77 OFFCURVE",
"403 77 CURVE SMOOTH"
);
}
);
width = 439;
}
);
unicode = 00D7;
},
{
glyphname = divide;
lastChange = "2022-03-22 11:01:02 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"164 167 OFFCURVE",
"183 168 OFFCURVE",
"208 169 CURVE SMOOTH",
"238 171 OFFCURVE",
"257 172 OFFCURVE",
"266 172 CURVE SMOOTH",
"393 176 OFFCURVE",
"473 178 OFFCURVE",
"507 178 CURVE SMOOTH",
"511 178 OFFCURVE",
"513 180 OFFCURVE",
"513 184 CURVE SMOOTH",
"513 185 OFFCURVE",
"512 186 OFFCURVE",
"510 187 CURVE SMOOTH",
"495 194 OFFCURVE",
"431 198 OFFCURVE",
"317 198 CURVE SMOOTH",
"255 198 OFFCURVE",
"206 197 OFFCURVE",
"170 195 CURVE SMOOTH",
"130 192 LINE",
"130 184 OFFCURVE",
"141 167 OFFCURVE",
"149 167 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"276 65 OFFCURVE",
"287 69 OFFCURVE",
"298 77 CURVE SMOOTH",
"299 78 OFFCURVE",
"306 81 OFFCURVE",
"317 84 CURVE SMOOTH",
"325 87 OFFCURVE",
"329 90 OFFCURVE",
"330 95 CURVE SMOOTH",
"331 109 OFFCURVE",
"320 116 OFFCURVE",
"297 116 CURVE SMOOTH",
"276 116 OFFCURVE",
"262 112 OFFCURVE",
"256 105 CURVE SMOOTH",
"252 100 OFFCURVE",
"250 92 OFFCURVE",
"250 81 CURVE SMOOTH",
"250 68 OFFCURVE",
"258 65 OFFCURVE",
"267 65 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"354 248 OFFCURVE",
"365 252 OFFCURVE",
"376 260 CURVE SMOOTH",
"377 261 OFFCURVE",
"384 264 OFFCURVE",
"395 267 CURVE SMOOTH",
"403 270 OFFCURVE",
"407 273 OFFCURVE",
"408 278 CURVE SMOOTH",
"409 292 OFFCURVE",
"398 299 OFFCURVE",
"375 299 CURVE SMOOTH",
"354 299 OFFCURVE",
"340 295 OFFCURVE",
"334 288 CURVE SMOOTH",
"330 283 OFFCURVE",
"328 275 OFFCURVE",
"328 264 CURVE SMOOTH",
"328 251 OFFCURVE",
"336 248 OFFCURVE",
"345 248 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01234 1064 13 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01245 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 503;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = equal;
lastChange = "2022-03-22 11:01:14 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"176 106 OFFCURVE",
"213 108 OFFCURVE",
"262 112 CURVE SMOOTH",
"311 116 OFFCURVE",
"347 118 OFFCURVE",
"371 118 CURVE SMOOTH",
"375 118 OFFCURVE",
"377 120 OFFCURVE",
"377 123 CURVE SMOOTH",
"377 125 OFFCURVE",
"376 126 OFFCURVE",
"374 126 CURVE",
"361 134 OFFCURVE",
"317 138 OFFCURVE",
"242 138 CURVE SMOOTH",
"180 138 OFFCURVE",
"143 136 OFFCURVE",
"133 131 CURVE",
"133 131 OFFCURVE",
"132 130 OFFCURVE",
"132 129 CURVE SMOOTH",
"132 123 OFFCURVE",
"147 106 OFFCURVE",
"152 106 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"165 209 OFFCURVE",
"180 210 OFFCURVE",
"198 211 CURVE SMOOTH",
"262 214 LINE SMOOTH",
"311 218 OFFCURVE",
"347 220 OFFCURVE",
"371 220 CURVE SMOOTH",
"375 220 OFFCURVE",
"377 222 OFFCURVE",
"377 226 CURVE SMOOTH",
"377 227 OFFCURVE",
"376 228 OFFCURVE",
"374 229 CURVE SMOOTH",
"360 237 OFFCURVE",
"316 240 OFFCURVE",
"242 240 CURVE SMOOTH",
"182 240 OFFCURVE",
"145 238 OFFCURVE",
"133 234 CURVE",
"133 234 OFFCURVE",
"132 233 OFFCURVE",
"132 232 CURVE SMOOTH",
"132 226 OFFCURVE",
"147 209 OFFCURVE",
"152 209 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01231 1064 24 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 1063 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 392;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = notequal;
lastChange = "2022-03-22 11:01:31 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"148 44 OFFCURVE",
"160 53 OFFCURVE",
"175 70 CURVE",
"203 108 LINE",
"263 113 OFFCURVE",
"320 116 OFFCURVE",
"373 116 CURVE",
"377 117 OFFCURVE",
"379 118 OFFCURVE",
"379 119 CURVE SMOOTH",
"379 121 OFFCURVE",
"378 123 OFFCURVE",
"376 124 CURVE SMOOTH",
"361 132 OFFCURVE",
"316 136 OFFCURVE",
"241 136 CURVE SMOOTH",
"224 136 LINE",
"288 217 LINE",
"297 218 OFFCURVE",
"309 218 OFFCURVE",
"323 218 CURVE SMOOTH",
"373 218 LINE",
"377 219 OFFCURVE",
"379 220 OFFCURVE",
"379 222 CURVE SMOOTH",
"379 227 OFFCURVE",
"353 231 OFFCURVE",
"302 235 CURVE",
"329 267 OFFCURVE",
"344 288 OFFCURVE",
"347 298 CURVE",
"347 301 OFFCURVE",
"345 302 OFFCURVE",
"342 302 CURVE SMOOTH",
"333 302 OFFCURVE",
"321 293 OFFCURVE",
"306 275 CURVE SMOOTH",
"278 237 LINE",
"254 238 OFFCURVE",
"233 239 OFFCURVE",
"214 239 CURVE SMOOTH",
"179 239 OFFCURVE",
"152 237 OFFCURVE",
"133 232 CURVE SMOOTH",
"132 232 OFFCURVE",
"132 232 OFFCURVE",
"132 231 CURVE SMOOTH",
"132 224 OFFCURVE",
"147 207 OFFCURVE",
"152 207 CURVE SMOOTH",
"165 207 OFFCURVE",
"184 208 OFFCURVE",
"207 210 CURVE SMOOTH",
"261 215 LINE",
"197 134 LINE",
"153 131 LINE SMOOTH",
"142 130 OFFCURVE",
"136 130 OFFCURVE",
"133 129 CURVE SMOOTH",
"132 129 OFFCURVE",
"132 129 OFFCURVE",
"132 128 CURVE SMOOTH",
"132 121 OFFCURVE",
"147 104 OFFCURVE",
"152 104 CURVE SMOOTH",
"156 104 OFFCURVE",
"160 104 OFFCURVE",
"163 105 CURVE",
"174 105 LINE",
"161 90 OFFCURVE",
"152 78 OFFCURVE",
"145 69 CURVE SMOOTH",
"138 60 OFFCURVE",
"134 53 OFFCURVE",
"133 49 CURVE SMOOTH",
"133 46 OFFCURVE",
"135 44 OFFCURVE",
"140 44 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0129 1062 15 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1064 41 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01226 21 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01238 41 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01246 41 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 394;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = greater;
lastChange = "2022-03-22 11:01:38 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"158 29 OFFCURVE",
"165 33 OFFCURVE",
"170 40 CURVE SMOOTH",
"181 55 OFFCURVE",
"193 70 OFFCURVE",
"204 85 CURVE SMOOTH",
"237 130 LINE SMOOTH",
"272 177 OFFCURVE",
"289 206 OFFCURVE",
"289 215 CURVE SMOOTH",
"289 218 OFFCURVE",
"288 220 OFFCURVE",
"286 221 CURVE SMOOTH",
"227 264 OFFCURVE",
"187 301 OFFCURVE",
"165 331 CURVE",
"157 335 LINE",
"150 335 OFFCURVE",
"146 331 OFFCURVE",
"146 322 CURVE SMOOTH",
"146 310 OFFCURVE",
"179 265 OFFCURVE",
"244 188 CURVE",
"178 97 OFFCURVE",
"145 46 OFFCURVE",
"145 35 CURVE SMOOTH",
"145 31 OFFCURVE",
"147 29 OFFCURVE",
"151 29 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 318;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = less;
lastChange = "2022-03-22 11:01:43 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"274 36 OFFCURVE",
"277 40 OFFCURVE",
"277 49 CURVE SMOOTH",
"277 57 OFFCURVE",
"245 102 OFFCURVE",
"180 183 CURVE",
"246 274 OFFCURVE",
"279 325 OFFCURVE",
"279 336 CURVE SMOOTH",
"279 340 OFFCURVE",
"277 342 OFFCURVE",
"272 342 CURVE SMOOTH",
"265 342 OFFCURVE",
"258 338 OFFCURVE",
"253 331 CURVE SMOOTH",
"187 241 LINE SMOOTH",
"152 194 OFFCURVE",
"135 165 OFFCURVE",
"135 156 CURVE SMOOTH",
"135 154 OFFCURVE",
"136 152 OFFCURVE",
"138 150 CURVE",
"193 111 OFFCURVE",
"233 74 OFFCURVE",
"259 40 CURVE",
"267 36 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 318;
}
);
note = less;
unicode = 003C;
},
{
glyphname = greaterequal;
lastChange = "2022-03-22 11:01:52 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"264 86 OFFCURVE",
"267 90 OFFCURVE",
"267 99 CURVE SMOOTH",
"267 107 OFFCURVE",
"235 152 OFFCURVE",
"170 233 CURVE",
"236 324 OFFCURVE",
"269 375 OFFCURVE",
"269 386 CURVE SMOOTH",
"269 390 OFFCURVE",
"267 392 OFFCURVE",
"262 392 CURVE SMOOTH",
"255 392 OFFCURVE",
"248 388 OFFCURVE",
"243 381 CURVE SMOOTH",
"177 291 LINE SMOOTH",
"142 244 OFFCURVE",
"125 215 OFFCURVE",
"125 206 CURVE SMOOTH",
"125 204 OFFCURVE",
"126 202 OFFCURVE",
"128 200 CURVE",
"183 161 OFFCURVE",
"223 124 OFFCURVE",
"249 90 CURVE",
"257 86 LINE"
);
},
{
closed = 1;
nodes = (
"139 11 OFFCURVE",
"169 13 OFFCURVE",
"209 17 CURVE SMOOTH",
"249 21 OFFCURVE",
"279 23 OFFCURVE",
"300 23 CURVE SMOOTH",
"304 23 OFFCURVE",
"306 25 OFFCURVE",
"306 28 CURVE SMOOTH",
"306 29 OFFCURVE",
"305 30 OFFCURVE",
"303 31 CURVE SMOOTH",
"290 39 OFFCURVE",
"254 43 OFFCURVE",
"197 43 CURVE SMOOTH",
"144 43 OFFCURVE",
"112 41 OFFCURVE",
"100 36 CURVE",
"99 36 OFFCURVE",
"99 36 OFFCURVE",
"98 35 CURVE",
"98 28 OFFCURVE",
"114 11 OFFCURVE",
"119 11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 318;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = lessequal;
lastChange = "2022-03-22 11:02:01 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"148 79 OFFCURVE",
"155 83 OFFCURVE",
"160 90 CURVE SMOOTH",
"171 105 OFFCURVE",
"183 120 OFFCURVE",
"194 135 CURVE SMOOTH",
"227 180 LINE SMOOTH",
"262 227 OFFCURVE",
"279 256 OFFCURVE",
"279 265 CURVE SMOOTH",
"279 268 OFFCURVE",
"278 270 OFFCURVE",
"276 271 CURVE SMOOTH",
"217 314 OFFCURVE",
"177 351 OFFCURVE",
"155 381 CURVE",
"147 385 LINE",
"140 385 OFFCURVE",
"136 381 OFFCURVE",
"136 372 CURVE SMOOTH",
"136 360 OFFCURVE",
"169 315 OFFCURVE",
"234 238 CURVE",
"168 147 OFFCURVE",
"135 96 OFFCURVE",
"135 85 CURVE SMOOTH",
"135 81 OFFCURVE",
"137 79 OFFCURVE",
"141 79 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"131 11 OFFCURVE",
"161 13 OFFCURVE",
"201 17 CURVE SMOOTH",
"242 21 OFFCURVE",
"272 23 OFFCURVE",
"293 23 CURVE SMOOTH",
"297 23 OFFCURVE",
"299 25 OFFCURVE",
"299 28 CURVE SMOOTH",
"299 29 OFFCURVE",
"298 30 OFFCURVE",
"296 31 CURVE SMOOTH",
"283 39 OFFCURVE",
"247 43 OFFCURVE",
"190 43 CURVE SMOOTH",
"137 43 OFFCURVE",
"105 41 OFFCURVE",
"93 36 CURVE",
"92 36 OFFCURVE",
"92 36 OFFCURVE",
"91 35 CURVE",
"91 28 OFFCURVE",
"107 11 OFFCURVE",
"112 11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 318;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = plusminus;
lastChange = "2022-03-22 11:02:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"311 78 OFFCURVE",
"314 80 OFFCURVE",
"317 84 CURVE",
"322 94 OFFCURVE",
"324 143 OFFCURVE",
"324 231 CURVE",
"356 231 LINE SMOOTH",
"368 231 OFFCURVE",
"383 231 OFFCURVE",
"400 232 CURVE SMOOTH",
"475 232 LINE",
"484 238 LINE",
"484 242 LINE SMOOTH",
"484 245 OFFCURVE",
"482 247 OFFCURVE",
"478 248 CURVE",
"468 253 OFFCURVE",
"417 255 OFFCURVE",
"324 255 CURVE",
"324 303 LINE SMOOTH",
"324 347 OFFCURVE",
"323 381 OFFCURVE",
"320 406 CURVE",
"315 411 LINE",
"307 411 OFFCURVE",
"293 401 OFFCURVE",
"293 393 CURVE SMOOTH",
"293 376 OFFCURVE",
"294 353 OFFCURVE",
"296 324 CURVE SMOOTH",
"298 291 OFFCURVE",
"299 268 OFFCURVE",
"299 255 CURVE",
"259 255 OFFCURVE",
"226 255 OFFCURVE",
"201 254 CURVE SMOOTH",
"176 253 OFFCURVE",
"157 252 OFFCURVE",
"146 251 CURVE",
"141 246 LINE",
"142 238 OFFCURVE",
"152 225 OFFCURVE",
"160 225 CURVE SMOOTH",
"177 225 OFFCURVE",
"201 226 OFFCURVE",
"230 227 CURVE SMOOTH",
"264 229 OFFCURVE",
"287 230 OFFCURVE",
"299 230 CURVE",
"299 131 OFFCURVE",
"302 81 OFFCURVE",
"309 78 CURVE"
);
},
{
closed = 1;
nodes = (
"232 5 OFFCURVE",
"262 7 OFFCURVE",
"302 11 CURVE SMOOTH",
"343 15 OFFCURVE",
"373 17 OFFCURVE",
"394 17 CURVE SMOOTH",
"398 17 OFFCURVE",
"400 19 OFFCURVE",
"400 22 CURVE SMOOTH",
"400 23 OFFCURVE",
"399 24 OFFCURVE",
"397 25 CURVE SMOOTH",
"384 33 OFFCURVE",
"348 37 OFFCURVE",
"291 37 CURVE SMOOTH",
"238 37 OFFCURVE",
"206 35 OFFCURVE",
"194 30 CURVE",
"193 30 OFFCURVE",
"193 30 OFFCURVE",
"192 29 CURVE",
"192 22 OFFCURVE",
"208 5 OFFCURVE",
"213 5 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01251 1065 42 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 51 22 51 38 51 54 51 70 51 86 51 102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 51 22 51 38 51 54 51 70 51 86 51 102 51 118 51 134 51 150 51 166 51 182 51 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 51 213 51 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01230 13 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01240 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 478;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = approxequal;
lastChange = "2022-03-22 11:02:29 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"379 241 OFFCURVE",
"385 242 OFFCURVE",
"391 244 CURVE SMOOTH",
"402 247 OFFCURVE",
"415 254 OFFCURVE",
"430 267 CURVE SMOOTH",
"449 281 OFFCURVE",
"457 293 OFFCURVE",
"456 302 CURVE SMOOTH",
"456 303 LINE",
"453 305 LINE",
"436 288 LINE SMOOTH",
"425 277 OFFCURVE",
"410 271 OFFCURVE",
"391 271 CURVE SMOOTH",
"374 271 OFFCURVE",
"351 277 OFFCURVE",
"320 289 CURVE SMOOTH",
"291 302 OFFCURVE",
"268 308 OFFCURVE",
"251 308 CURVE SMOOTH",
"238 308 OFFCURVE",
"223 301 OFFCURVE",
"204 288 CURVE SMOOTH",
"186 275 OFFCURVE",
"177 262 OFFCURVE",
"177 250 CURVE SMOOTH",
"177 247 OFFCURVE",
"178 246 OFFCURVE",
"181 246 CURVE SMOOTH",
"182 246 OFFCURVE",
"187 251 OFFCURVE",
"195 262 CURVE SMOOTH",
"204 273 OFFCURVE",
"217 278 OFFCURVE",
"235 278 CURVE SMOOTH",
"253 278 OFFCURVE",
"277 272 OFFCURVE",
"306 259 CURVE SMOOTH",
"336 247 OFFCURVE",
"358 241 OFFCURVE",
"373 241 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"379 145 OFFCURVE",
"385 146 OFFCURVE",
"391 148 CURVE SMOOTH",
"402 151 OFFCURVE",
"415 158 OFFCURVE",
"430 171 CURVE SMOOTH",
"449 185 OFFCURVE",
"457 197 OFFCURVE",
"456 206 CURVE SMOOTH",
"456 207 LINE",
"453 209 LINE",
"436 192 LINE SMOOTH",
"425 181 OFFCURVE",
"410 175 OFFCURVE",
"391 175 CURVE SMOOTH",
"374 175 OFFCURVE",
"351 181 OFFCURVE",
"320 193 CURVE SMOOTH",
"291 206 OFFCURVE",
"268 212 OFFCURVE",
"251 212 CURVE SMOOTH",
"238 212 OFFCURVE",
"223 205 OFFCURVE",
"204 192 CURVE SMOOTH",
"186 179 OFFCURVE",
"177 166 OFFCURVE",
"177 154 CURVE SMOOTH",
"177 151 OFFCURVE",
"178 150 OFFCURVE",
"181 150 CURVE SMOOTH",
"182 150 OFFCURVE",
"187 155 OFFCURVE",
"195 166 CURVE SMOOTH",
"204 177 OFFCURVE",
"217 182 OFFCURVE",
"235 182 CURVE SMOOTH",
"253 182 OFFCURVE",
"277 176 OFFCURVE",
"306 163 CURVE SMOOTH",
"336 151 OFFCURVE",
"358 145 OFFCURVE",
"373 145 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01220 1064 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 485;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = asciitilde;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"355 279 OFFCURVE",
"366 283 OFFCURVE",
"378 292 CURVE SMOOTH",
"391 301 OFFCURVE",
"399 311 OFFCURVE",
"406 320 CURVE SMOOTH",
"409 323 OFFCURVE",
"410 327 OFFCURVE",
"410 330 CURVE SMOOTH",
"410 333 OFFCURVE",
"408 335 OFFCURVE",
"403 334 CURVE SMOOTH",
"399 333 OFFCURVE",
"394 328 OFFCURVE",
"389 320 CURVE SMOOTH",
"382 311 OFFCURVE",
"374 306 OFFCURVE",
"365 306 CURVE SMOOTH",
"362 306 OFFCURVE",
"360 306 OFFCURVE",
"357 307 CURVE SMOOTH",
"345 310 OFFCURVE",
"329 318 OFFCURVE",
"310 331 CURVE SMOOTH",
"287 348 OFFCURVE",
"268 359 OFFCURVE",
"255 364 CURVE SMOOTH",
"246 368 OFFCURVE",
"237 370 OFFCURVE",
"230 370 CURVE SMOOTH",
"215 370 OFFCURVE",
"201 363 OFFCURVE",
"188 349 CURVE SMOOTH",
"173 333 LINE SMOOTH",
"168 327 OFFCURVE",
"164 321 OFFCURVE",
"159 316 CURVE SMOOTH",
"153 310 OFFCURVE",
"150 305 OFFCURVE",
"150 302 CURVE SMOOTH",
"150 300 OFFCURVE",
"151 299 OFFCURVE",
"153 299 CURVE SMOOTH",
"156 299 OFFCURVE",
"161 302 OFFCURVE",
"166 307 CURVE SMOOTH",
"187 328 OFFCURVE",
"204 338 OFFCURVE",
"219 338 CURVE SMOOTH",
"228 338 OFFCURVE",
"237 335 OFFCURVE",
"248 330 CURVE SMOOTH",
"258 325 OFFCURVE",
"274 315 OFFCURVE",
"295 300 CURVE SMOOTH",
"315 287 OFFCURVE",
"332 279 OFFCURVE",
"345 279 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 367;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = asciicircum;
lastChange = "2022-03-22 11:02:46 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"433 360 OFFCURVE",
"442 363 OFFCURVE",
"454 372 CURVE SMOOTH",
"467 381 OFFCURVE",
"473 388 OFFCURVE",
"474 395 CURVE",
"460 391 OFFCURVE",
"440 405 OFFCURVE",
"413 438 CURVE SMOOTH",
"386 471 OFFCURVE",
"370 487 OFFCURVE",
"364 487 CURVE SMOOTH",
"362 487 OFFCURVE",
"361 487 OFFCURVE",
"360 486 CURVE SMOOTH",
"339 471 OFFCURVE",
"299 444 OFFCURVE",
"240 405 CURVE SMOOTH",
"225 395 OFFCURVE",
"215 385 OFFCURVE",
"210 376 CURVE SMOOTH",
"207 368 OFFCURVE",
"208 364 OFFCURVE",
"215 364 CURVE SMOOTH",
"218 364 OFFCURVE",
"223 366 OFFCURVE",
"228 370 CURVE SMOOTH",
"280 412 OFFCURVE",
"316 433 OFFCURVE",
"333 433 CURVE SMOOTH",
"341 433 OFFCURVE",
"357 422 OFFCURVE",
"381 399 CURVE SMOOTH",
"392 388 OFFCURVE",
"402 379 OFFCURVE",
"410 373 CURVE SMOOTH",
"418 367 OFFCURVE",
"424 363 OFFCURVE",
"427 362 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 459;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = infinity;
lastChange = "2022-03-22 11:02:50 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"290 154 OFFCURVE",
"330 165 OFFCURVE",
"371 187 CURVE",
"400 207 OFFCURVE",
"429 227 OFFCURVE",
"460 246 CURVE SMOOTH",
"473 255 OFFCURVE",
"484 263 OFFCURVE",
"493 271 CURVE",
"493 229 OFFCURVE",
"505 201 OFFCURVE",
"529 186 CURVE SMOOTH",
"544 177 OFFCURVE",
"562 172 OFFCURVE",
"581 172 CURVE SMOOTH",
"620 172 OFFCURVE",
"661 187 OFFCURVE",
"706 218 CURVE SMOOTH",
"787 274 OFFCURVE",
"824 340 OFFCURVE",
"824 389 CURVE SMOOTH",
"824 394 OFFCURVE",
"823 399 OFFCURVE",
"822 406 CURVE SMOOTH",
"810 457 OFFCURVE",
"785 482 OFFCURVE",
"748 482 CURVE SMOOTH",
"697 482 OFFCURVE",
"625 436 OFFCURVE",
"532 343 CURVE",
"531 395 OFFCURVE",
"516 430 OFFCURVE",
"486 449 CURVE SMOOTH",
"463 463 OFFCURVE",
"436 470 OFFCURVE",
"407 470 CURVE SMOOTH",
"348 470 OFFCURVE",
"290 447 OFFCURVE",
"232 401 CURVE SMOOTH",
"171 352 OFFCURVE",
"141 298 OFFCURVE",
"141 239 CURVE SMOOTH",
"141 196 OFFCURVE",
"158 171 OFFCURVE",
"192 162 CURVE SMOOTH",
"213 157 OFFCURVE",
"233 154 OFFCURVE",
"251 154 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"185 171 OFFCURVE",
"162 190 OFFCURVE",
"162 227 CURVE SMOOTH",
"162 252 OFFCURVE",
"174 285 OFFCURVE",
"198 324 CURVE SMOOTH",
"219 357 OFFCURVE",
"246 384 OFFCURVE",
"280 406 CURVE SMOOTH",
"319 431 OFFCURVE",
"356 443 OFFCURVE",
"392 443 CURVE SMOOTH",
"417 443 OFFCURVE",
"440 437 OFFCURVE",
"459 424 CURVE SMOOTH",
"477 413 OFFCURVE",
"488 396 OFFCURVE",
"492 371 CURVE SMOOTH",
"494 362 OFFCURVE",
"495 349 OFFCURVE",
"495 333 CURVE SMOOTH",
"495 324 OFFCURVE",
"494 315 OFFCURVE",
"494 305 CURVE",
"451 264 OFFCURVE",
"405 230 OFFCURVE",
"355 205 CURVE SMOOTH",
"309 182 OFFCURVE",
"268 171 OFFCURVE",
"232 171 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"593 204 OFFCURVE",
"579 208 OFFCURVE",
"566 216 CURVE SMOOTH",
"544 229 OFFCURVE",
"533 259 OFFCURVE",
"532 305 CURVE",
"567 338 OFFCURVE",
"601 370 OFFCURVE",
"636 402 CURVE SMOOTH",
"671 435 OFFCURVE",
"700 451 OFFCURVE",
"723 451 CURVE SMOOTH",
"772 451 OFFCURVE",
"796 425 OFFCURVE",
"796 373 CURVE SMOOTH",
"796 348 OFFCURVE",
"791 327 OFFCURVE",
"782 312 CURVE SMOOTH",
"765 285 OFFCURVE",
"741 262 OFFCURVE",
"710 241 CURVE SMOOTH",
"675 216 OFFCURVE",
"641 204 OFFCURVE",
"610 204 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01230 1066 59 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1070 47 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 1065 2 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 2 218 2 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 47 218 47 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 47 121 47 137 47 153 47 169 47 185 47 201 47 217 47 233 47 249 47 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 47 25 47 41 47 57 47 73 47 89 47 105 47 121 47 137 47 153 47 169 47 185 47 201 47 217 47 233 47 249 47 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 47 25 47 41 47 57 47 73 47 89 47 105 47 121 47 137 47 153 47 169 47 185 47 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01213 1064 43 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 1063 24 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01269 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 798;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = integral;
lastChange = "2022-03-22 11:02:52 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-238 -300 OFFCURVE",
"-183 -272 OFFCURVE",
"-129 -221 CURVE SMOOTH",
"-81 -173 OFFCURVE",
"-20 -93 OFFCURVE",
"19 -20 CURVE SMOOTH",
"55 49 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"245 346 OFFCURVE",
"374 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"511 458 OFFCURVE",
"516 456 OFFCURVE",
"521 456 CURVE SMOOTH",
"537 456 OFFCURVE",
"538 476 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"265 411 OFFCURVE",
"216 359 OFFCURVE",
"169 290 CURVE SMOOTH",
"104 194 OFFCURVE",
"39 103 OFFCURVE",
"-14 -5 CURVE SMOOTH",
"-74 -126 OFFCURVE",
"-185 -265 OFFCURVE",
"-254 -271 CURVE SMOOTH",
"-275 -274 OFFCURVE",
"-297 -268 OFFCURVE",
"-317 -252 CURVE",
"-323 -250 OFFCURVE",
"-328 -249 OFFCURVE",
"-332 -249 CURVE SMOOTH",
"-351 -249 OFFCURVE",
"-348 -270 OFFCURVE",
"-348 -286 CURVE SMOOTH",
"-348 -289 OFFCURVE",
"-346 -291 OFFCURVE",
"-343 -291 CURVE",
"-328 -297 OFFCURVE",
"-312 -300 OFFCURVE",
"-296 -300 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01232 1063 43 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 249;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = Ohm;
lastChange = "2022-03-22 11:02:55 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"404 -8 OFFCURVE",
"406 -7 OFFCURVE",
"408 -6 CURVE",
"408 -5 LINE SMOOTH",
"408 -4 OFFCURVE",
"408 -4 OFFCURVE",
"409 -4 CURVE",
"418 2 OFFCURVE",
"428 4 OFFCURVE",
"437 4 CURVE SMOOTH",
"460 4 OFFCURVE",
"483 -8 OFFCURVE",
"513 -8 CURVE SMOOTH",
"540 -8 OFFCURVE",
"567 4 OFFCURVE",
"587 60 CURVE",
"588 65 OFFCURVE",
"589 69 OFFCURVE",
"589 72 CURVE SMOOTH",
"589 76 OFFCURVE",
"588 78 OFFCURVE",
"586 78 CURVE SMOOTH",
"583 78 OFFCURVE",
"578 72 OFFCURVE",
"574 62 CURVE SMOOTH",
"561 27 OFFCURVE",
"543 17 OFFCURVE",
"520 17 CURVE SMOOTH",
"507 17 OFFCURVE",
"493 19 OFFCURVE",
"479 24 CURVE SMOOTH",
"464 29 OFFCURVE",
"450 32 OFFCURVE",
"437 33 CURVE",
"450 54 OFFCURVE",
"465 77 OFFCURVE",
"482 101 CURVE SMOOTH",
"498 124 OFFCURVE",
"512 149 OFFCURVE",
"523 174 CURVE SMOOTH",
"540 210 OFFCURVE",
"556 264 OFFCURVE",
"567 305 CURVE SMOOTH",
"574 337 OFFCURVE",
"577 369 OFFCURVE",
"577 398 CURVE SMOOTH",
"577 485 OFFCURVE",
"547 550 OFFCURVE",
"500 587 CURVE SMOOTH",
"469 612 OFFCURVE",
"429 625 OFFCURVE",
"389 625 CURVE SMOOTH",
"314 625 OFFCURVE",
"237 584 OFFCURVE",
"190 516 CURVE SMOOTH",
"155 465 OFFCURVE",
"144 406 OFFCURVE",
"144 342 CURVE SMOOTH",
"144 230 OFFCURVE",
"186 109 OFFCURVE",
"242 26 CURVE",
"225 26 OFFCURVE",
"139 55 OFFCURVE",
"107 55 CURVE SMOOTH",
"77 55 OFFCURVE",
"55 45 OFFCURVE",
"55 16 CURVE SMOOTH",
"55 -3 OFFCURVE",
"73 -12 OFFCURVE",
"73 1 CURVE SMOOTH",
"73 8 OFFCURVE",
"75 21 OFFCURVE",
"84 24 CURVE SMOOTH",
"90 25 OFFCURVE",
"96 26 OFFCURVE",
"102 26 CURVE SMOOTH",
"141 26 OFFCURVE",
"183 7 OFFCURVE",
"224 7 CURVE SMOOTH",
"235 7 OFFCURVE",
"246 8 OFFCURVE",
"257 12 CURVE",
"263 16 OFFCURVE",
"266 21 OFFCURVE",
"266 27 CURVE SMOOTH",
"266 31 OFFCURVE",
"264 36 OFFCURVE",
"261 40 CURVE SMOOTH",
"214 110 OFFCURVE",
"183 230 OFFCURVE",
"183 326 CURVE SMOOTH",
"183 378 OFFCURVE",
"191 426 OFFCURVE",
"210 462 CURVE SMOOTH",
"247 533 OFFCURVE",
"313 566 OFFCURVE",
"374 566 CURVE SMOOTH",
"444 566 OFFCURVE",
"508 523 OFFCURVE",
"526 448 CURVE SMOOTH",
"531 425 OFFCURVE",
"534 402 OFFCURVE",
"534 375 CURVE SMOOTH",
"534 251 OFFCURVE",
"471 83 OFFCURVE",
"393 21 CURVE",
"392 17 OFFCURVE",
"391 13 OFFCURVE",
"391 10 CURVE SMOOTH",
"391 0 OFFCURVE",
"395 -8 OFFCURVE",
"402 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01259 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01264 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01266 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01247 1061 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01250 1062 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 607;
}
);
note = Omega;
unicode = 2126;
},
{
glyphname = increment;
lastChange = "2022-03-22 11:03:44 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"447 -4 LINE",
"464 7 OFFCURVE",
"485 28 OFFCURVE",
"485 55 CURVE SMOOTH",
"485 57 OFFCURVE",
"484 59 OFFCURVE",
"483 60 CURVE",
"320 440 LINE",
"319 441 OFFCURVE",
"317 442 OFFCURVE",
"315 442 CURVE SMOOTH",
"308 442 OFFCURVE",
"293 426 OFFCURVE",
"288 413 CURVE",
"287 412 LINE",
"100 31 LINE",
"98 29 OFFCURVE",
"97 26 OFFCURVE",
"97 23 CURVE SMOOTH",
"97 12 OFFCURVE",
"105 -4 OFFCURVE",
"112 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"295 374 LINE",
"438 35 LINE",
"128 35 LINE"
);
}
);
width = 523;
}
);
note = Delta;
unicode = 2206;
},
{
glyphname = product;
lastChange = "2022-03-22 11:03:48 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"367 -23 OFFCURVE",
"375 -21 OFFCURVE",
"385 -18 CURVE SMOOTH",
"400 -14 OFFCURVE",
"421 6 OFFCURVE",
"450 41 CURVE SMOOTH",
"477 78 OFFCURVE",
"490 103 OFFCURVE",
"490 117 CURVE SMOOTH",
"490 118 OFFCURVE",
"489 119 OFFCURVE",
"487 120 CURVE",
"484 120 OFFCURVE",
"481 116 OFFCURVE",
"478 109 CURVE SMOOTH",
"450 58 OFFCURVE",
"428 26 OFFCURVE",
"413 15 CURVE SMOOTH",
"395 1 OFFCURVE",
"380 -6 OFFCURVE",
"368 -6 CURVE SMOOTH",
"349 -6 OFFCURVE",
"340 13 OFFCURVE",
"340 51 CURVE SMOOTH",
"340 82 OFFCURVE",
"344 116 OFFCURVE",
"355 156 CURVE",
"399 356 LINE",
"443 353 OFFCURVE",
"480 366 OFFCURVE",
"510 394 CURVE SMOOTH",
"518 401 OFFCURVE",
"522 408 OFFCURVE",
"522 415 CURVE SMOOTH",
"522 419 OFFCURVE",
"520 421 OFFCURVE",
"517 421 CURVE",
"483 398 OFFCURVE",
"455 386 OFFCURVE",
"432 386 CURVE SMOOTH",
"410 386 OFFCURVE",
"377 393 OFFCURVE",
"334 406 CURVE SMOOTH",
"292 420 OFFCURVE",
"260 427 OFFCURVE",
"237 427 CURVE SMOOTH",
"194 427 OFFCURVE",
"153 408 OFFCURVE",
"112 369 CURVE SMOOTH",
"105 362 OFFCURVE",
"102 355 OFFCURVE",
"102 348 CURVE SMOOTH",
"102 345 OFFCURVE",
"104 344 OFFCURVE",
"107 344 CURVE SMOOTH",
"108 344 OFFCURVE",
"111 345 OFFCURVE",
"114 347 CURVE SMOOTH",
"145 374 OFFCURVE",
"182 388 OFFCURVE",
"225 388 CURVE SMOOTH",
"228 388 LINE",
"228 308 OFFCURVE",
"207 132 OFFCURVE",
"196 81 CURVE",
"185 49 LINE SMOOTH",
"178 32 OFFCURVE",
"175 20 OFFCURVE",
"175 15 CURVE SMOOTH",
"175 12 OFFCURVE",
"178 11 OFFCURVE",
"184 11 CURVE SMOOTH",
"187 11 OFFCURVE",
"190 12 OFFCURVE",
"192 15 CURVE SMOOTH",
"230 88 OFFCURVE",
"261 279 OFFCURVE",
"264 385 CURVE",
"285 380 OFFCURVE",
"304 375 OFFCURVE",
"320 372 CURVE SMOOTH",
"335 369 OFFCURVE",
"348 365 OFFCURVE",
"359 362 CURVE",
"338 301 OFFCURVE",
"311 126 OFFCURVE",
"311 48 CURVE SMOOTH",
"311 1 OFFCURVE",
"327 -23 OFFCURVE",
"360 -23 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1065 30 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 30 218 30 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01226 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01228 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01266 1064 55 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01214 1062 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 14 119 14 135 14 151 14 167 14 183 14 199 14 215 14 231 14 247 14 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 14 23 14 39 14 55 14 71 14 87 14 103 14 119 14 135 14 151 14 167 14 183 14 199 14 215 14 231 14 247 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 14 23 14 39 14 55 14 71 14 87 14 103 14 119 14 135 14 151 14 167 14 183 14 199 14 215 14 231 14 247 14 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 495;
}
);
note = product;
unicode = 220F;
},
{
glyphname = summation;
lastChange = "2022-03-22 11:03:52 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"451 0 LINE",
"425 31 LINE",
"158 25 LINE",
"361 226 LINE",
"211 411 LINE",
"433 402 LINE",
"451 433 LINE",
"133 433 LINE",
"312 214 LINE",
"101 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0125 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\0123 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 472;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = radical;
lastChange = "2022-03-22 11:03:58 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"322 152 LINE SMOOTH",
"342 187 OFFCURVE",
"364 224 OFFCURVE",
"388 265 CURVE SMOOTH",
"426 329 OFFCURVE",
"487 430 OFFCURVE",
"519 484 CURVE SMOOTH",
"561 556 LINE",
"558 559 OFFCURVE",
"552 561 OFFCURVE",
"548 561 CURVE SMOOTH",
"545 561 OFFCURVE",
"543 560 OFFCURVE",
"542 557 CURVE",
"498 494 OFFCURVE",
"441 407 OFFCURVE",
"387 321 CURVE SMOOTH",
"333 235 OFFCURVE",
"282 151 OFFCURVE",
"250 95 CURVE",
"237 115 OFFCURVE",
"216 235 OFFCURVE",
"200 254 CURVE",
"198 253 LINE",
"198 250 OFFCURVE",
"99 159 OFFCURVE",
"99 153 CURVE",
"98 150 OFFCURVE",
"102 145 OFFCURVE",
"104 145 CURVE SMOOTH",
"105 145 OFFCURVE",
"106 146 OFFCURVE",
"106 146 CURVE",
"118 154 OFFCURVE",
"131 165 OFFCURVE",
"146 180 CURVE SMOOTH",
"161 195 OFFCURVE",
"174 207 OFFCURVE",
"187 216 CURVE",
"188 218 LINE",
"239 12 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0125 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01224 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 487;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = micro;
lastChange = "2022-03-21 16:38:52 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-125 -362 OFFCURVE",
"-125 -360 OFFCURVE",
"-126 -357 CURVE SMOOTH",
"-127 -354 OFFCURVE",
"-128 -351 OFFCURVE",
"-129 -350 CURVE SMOOTH",
"-130 -349 OFFCURVE",
"-130 -348 OFFCURVE",
"-130 -347 CURVE SMOOTH",
"-131 -335 OFFCURVE",
"-132 -326 OFFCURVE",
"-132 -315 CURVE SMOOTH",
"-132 -219 OFFCURVE",
"-81 -120 OFFCURVE",
"3 15 CURVE",
"6 8 OFFCURVE",
"11 5 OFFCURVE",
"17 5 CURVE SMOOTH",
"19 5 LINE SMOOTH",
"37 6 OFFCURVE",
"69 20 OFFCURVE",
"114 47 CURVE SMOOTH",
"190 97 LINE SMOOTH",
"212 112 OFFCURVE",
"232 127 OFFCURVE",
"249 140 CURVE SMOOTH",
"266 153 OFFCURVE",
"282 164 OFFCURVE",
"295 173 CURVE",
"266 116 OFFCURVE",
"240 66 OFFCURVE",
"213 25 CURVE",
"211 17 LINE",
"211 4 OFFCURVE",
"218 -2 OFFCURVE",
"233 -2 CURVE SMOOTH",
"238 -2 OFFCURVE",
"248 3 OFFCURVE",
"261 12 CURVE SMOOTH",
"270 19 OFFCURVE",
"276 24 OFFCURVE",
"281 27 CURVE SMOOTH",
"286 30 OFFCURVE",
"289 31 OFFCURVE",
"290 32 CURVE",
"313 45 OFFCURVE",
"333 57 OFFCURVE",
"356 69 CURVE SMOOTH",
"381 82 OFFCURVE",
"407 92 OFFCURVE",
"433 99 CURVE SMOOTH",
"443 102 OFFCURVE",
"448 106 OFFCURVE",
"448 112 CURVE SMOOTH",
"448 116 OFFCURVE",
"445 118 OFFCURVE",
"440 118 CURVE SMOOTH",
"438 118 OFFCURVE",
"435 117 OFFCURVE",
"431 116 CURVE SMOOTH",
"362 89 OFFCURVE",
"312 69 OFFCURVE",
"277 54 CURVE",
"329 158 LINE SMOOTH",
"342 183 OFFCURVE",
"364 213 OFFCURVE",
"395 250 CURVE SMOOTH",
"398 253 OFFCURVE",
"399 256 OFFCURVE",
"399 259 CURVE SMOOTH",
"399 265 OFFCURVE",
"394 268 OFFCURVE",
"385 268 CURVE SMOOTH",
"378 268 OFFCURVE",
"372 265 OFFCURVE",
"365 260 CURVE",
"321 218 OFFCURVE",
"267 176 OFFCURVE",
"203 133 CURVE SMOOTH",
"176 114 OFFCURVE",
"148 96 OFFCURVE",
"120 77 CURVE SMOOTH",
"87 56 OFFCURVE",
"65 45 OFFCURVE",
"55 45 CURVE SMOOTH",
"50 45 OFFCURVE",
"47 48 OFFCURVE",
"47 53 CURVE SMOOTH",
"47 71 OFFCURVE",
"63 101 OFFCURVE",
"95 142 CURVE SMOOTH",
"131 189 OFFCURVE",
"167 232 OFFCURVE",
"203 275 CURVE",
"204 278 OFFCURVE",
"205 280 OFFCURVE",
"205 282 CURVE SMOOTH",
"205 289 OFFCURVE",
"201 292 OFFCURVE",
"194 292 CURVE SMOOTH",
"191 292 OFFCURVE",
"187 291 OFFCURVE",
"182 288 CURVE SMOOTH",
"171 282 OFFCURVE",
"155 276 OFFCURVE",
"136 270 CURVE SMOOTH",
"119 265 OFFCURVE",
"111 261 OFFCURVE",
"110 258 CURVE SMOOTH",
"107 249 OFFCURVE",
"105 242 OFFCURVE",
"104 236 CURVE SMOOTH",
"103 229 OFFCURVE",
"101 224 OFFCURVE",
"100 219 CURVE",
"91 203 OFFCURVE",
"82 189 OFFCURVE",
"74 177 CURVE SMOOTH",
"-17 54 OFFCURVE",
"-74 -48 OFFCURVE",
"-109 -129 CURVE SMOOTH",
"-144 -210 OFFCURVE",
"-156 -272 OFFCURVE",
"-156 -315 CURVE SMOOTH",
"-156 -346 OFFCURVE",
"-146 -362 OFFCURVE",
"-127 -362 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 1067 38 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01217 36 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01225 36 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01282 36 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 381;
}
);
note = mu;
unicode = 00B5;
},
{
glyphname = partialdiff;
lastChange = "2022-03-22 11:04:10 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"239 -19 OFFCURVE",
"405 252 OFFCURVE",
"425 394 CURVE SMOOTH",
"428 412 OFFCURVE",
"429 430 OFFCURVE",
"429 446 CURVE SMOOTH",
"429 555 OFFCURVE",
"372 615 OFFCURVE",
"281 615 CURVE SMOOTH",
"256 615 OFFCURVE",
"247 604 OFFCURVE",
"220 595 CURVE SMOOTH",
"172 580 OFFCURVE",
"163 560 OFFCURVE",
"160 544 CURVE SMOOTH",
"159 534 OFFCURVE",
"165 531 OFFCURVE",
"170 531 CURVE",
"180 544 OFFCURVE",
"193 560 OFFCURVE",
"214 573 CURVE SMOOTH",
"237 586 OFFCURVE",
"258 591 OFFCURVE",
"273 591 CURVE SMOOTH",
"348 591 OFFCURVE",
"378 530 OFFCURVE",
"378 447 CURVE SMOOTH",
"378 272 OFFCURVE",
"243 0 OFFCURVE",
"100 0 CURVE SMOOTH",
"85 0 OFFCURVE",
"77 8 OFFCURVE",
"77 25 CURVE SMOOTH",
"77 27 OFFCURVE",
"78 31 OFFCURVE",
"78 34 CURVE SMOOTH",
"89 113 OFFCURVE",
"195 211 OFFCURVE",
"248 239 CURVE SMOOTH",
"297 265 OFFCURVE",
"311 274 OFFCURVE",
"311 288 CURVE SMOOTH",
"311 294 OFFCURVE",
"309 299 OFFCURVE",
"302 299 CURVE SMOOTH",
"265 299 OFFCURVE",
"188 255 OFFCURVE",
"127 192 CURVE SMOOTH",
"81 144 OFFCURVE",
"40 77 OFFCURVE",
"40 32 CURVE SMOOTH",
"40 2 OFFCURVE",
"58 -19 OFFCURVE",
"104 -19 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1068 27 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 27 218 27 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01243 1061 31 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 369;
}
);
note = partialdiff;
unicode = 2202;
},
{
color = 3;
glyphname = percent;
lastChange = "2022-03-22 12:50:46 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"176 -26 OFFCURVE",
"187 -13 OFFCURVE",
"187 0 CURVE SMOOTH",
"187 80 OFFCURVE",
"245 186 OFFCURVE",
"361 317 CURVE SMOOTH",
"421 385 OFFCURVE",
"510 469 OFFCURVE",
"631 577 CURVE SMOOTH",
"633 579 OFFCURVE",
"634 581 OFFCURVE",
"634 584 CURVE SMOOTH",
"634 593 OFFCURVE",
"618 603 OFFCURVE",
"605 603 CURVE SMOOTH",
"600 603 OFFCURVE",
"596 602 OFFCURVE",
"593 599 CURVE SMOOTH",
"489 507 OFFCURVE",
"402 415 OFFCURVE",
"327 322 CURVE SMOOTH",
"218 185 OFFCURVE",
"163 72 OFFCURVE",
"163 -17 CURVE SMOOTH",
"163 -23 OFFCURVE",
"165 -26 OFFCURVE",
"169 -26 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"340 21 OFFCURVE",
"335 26 OFFCURVE",
"335 33 CURVE SMOOTH",
"335 36 LINE SMOOTH",
"338 55 OFFCURVE",
"353 80 OFFCURVE",
"378 111 CURVE SMOOTH",
"397 134 OFFCURVE",
"413 151 OFFCURVE",
"424 164 CURVE SMOOTH",
"435 176 OFFCURVE",
"443 183 OFFCURVE",
"446 186 CURVE",
"451 188 OFFCURVE",
"456 189 OFFCURVE",
"462 189 CURVE SMOOTH",
"472 189 OFFCURVE",
"504 178 OFFCURVE",
"510 178 CURVE",
"513 175 OFFCURVE",
"515 170 OFFCURVE",
"515 165 CURVE SMOOTH",
"515 154 OFFCURVE",
"507 139 OFFCURVE",
"492 120 CURVE SMOOTH",
"479 104 OFFCURVE",
"466 91 OFFCURVE",
"453 80 CURVE SMOOTH",
"417 53 OFFCURVE",
"383 34 OFFCURVE",
"352 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"339 0 OFFCURVE",
"347 1 OFFCURVE",
"356 4 CURVE SMOOTH",
"392 15 OFFCURVE",
"431 37 OFFCURVE",
"473 68 CURVE SMOOTH",
"491 82 OFFCURVE",
"508 99 OFFCURVE",
"525 120 CURVE SMOOTH",
"544 145 OFFCURVE",
"553 165 OFFCURVE",
"553 181 CURVE SMOOTH",
"553 184 OFFCURVE",
"552 187 OFFCURVE",
"551 191 CURVE",
"544 194 OFFCURVE",
"537 198 OFFCURVE",
"530 201 CURVE SMOOTH",
"508 210 LINE SMOOTH",
"485 220 OFFCURVE",
"468 225 OFFCURVE",
"457 225 CURVE SMOOTH",
"442 225 OFFCURVE",
"422 211 OFFCURVE",
"396 182 CURVE SMOOTH",
"346 121 LINE SMOOTH",
"320 90 OFFCURVE",
"304 59 OFFCURVE",
"304 28 CURVE SMOOTH",
"304 9 OFFCURVE",
"313 0 OFFCURVE",
"330 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"196 396 OFFCURVE",
"193 400 OFFCURVE",
"193 407 CURVE SMOOTH",
"193 417 OFFCURVE",
"199 433 OFFCURVE",
"211 455 CURVE SMOOTH",
"222 474 OFFCURVE",
"229 486 OFFCURVE",
"236 493 CURVE SMOOTH",
"263 525 OFFCURVE",
"283 545 OFFCURVE",
"294 553 CURVE",
"326 560 OFFCURVE",
"350 562 OFFCURVE",
"367 561 CURVE",
"370 558 OFFCURVE",
"372 553 OFFCURVE",
"372 547 CURVE SMOOTH",
"372 534 OFFCURVE",
"365 518 OFFCURVE",
"351 497 CURVE SMOOTH",
"338 479 OFFCURVE",
"325 465 OFFCURVE",
"312 455 CURVE SMOOTH",
"273 425 OFFCURVE",
"239 406 OFFCURVE",
"211 397 CURVE SMOOTH",
"209 396 OFFCURVE",
"206 396 OFFCURVE",
"203 396 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"193 376 OFFCURVE",
"202 378 OFFCURVE",
"214 381 CURVE SMOOTH",
"252 392 OFFCURVE",
"293 414 OFFCURVE",
"336 447 CURVE SMOOTH",
"396 493 OFFCURVE",
"426 530 OFFCURVE",
"426 559 CURVE SMOOTH",
"426 563 OFFCURVE",
"426 566 OFFCURVE",
"425 568 CURVE",
"547 575 LINE SMOOTH",
"555 576 OFFCURVE",
"559 579 OFFCURVE",
"559 586 CURVE SMOOTH",
"559 593 OFFCURVE",
"554 597 OFFCURVE",
"545 597 CURVE SMOOTH",
"366 592 LINE",
"363 593 OFFCURVE",
"360 595 OFFCURVE",
"356 597 CURVE SMOOTH",
"351 599 OFFCURVE",
"346 602 OFFCURVE",
"341 605 CURVE SMOOTH",
"334 609 OFFCURVE",
"327 612 OFFCURVE",
"320 612 CURVE SMOOTH",
"307 612 OFFCURVE",
"293 602 OFFCURVE",
"282 594 CURVE SMOOTH",
"273 589 OFFCURVE",
"259 587 OFFCURVE",
"240 587 CURVE SMOOTH",
"232 587 OFFCURVE",
"228 584 OFFCURVE",
"228 578 CURVE SMOOTH",
"228 573 OFFCURVE",
"231 569 OFFCURVE",
"238 567 CURVE",
"246 563 OFFCURVE",
"251 561 OFFCURVE",
"252 561 CURVE",
"231 537 OFFCURVE",
"215 517 OFFCURVE",
"204 502 CURVE SMOOTH",
"174 467 OFFCURVE",
"160 436 OFFCURVE",
"160 407 CURVE SMOOTH",
"160 386 OFFCURVE",
"169 376 OFFCURVE",
"187 376 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01242 1067 47 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01242 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01267 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01269 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01224 1063 1 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 576;
}
);
note = percent;
unicode = 0025;
},
{
color = 3;
glyphname = perthousand;
lastChange = "2022-03-22 12:50:46 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"69 -116 OFFCURVE",
"71 -113 OFFCURVE",
"71 -107 CURVE SMOOTH",
"72 -102 OFFCURVE",
"72 -98 OFFCURVE",
"72 -95 CURVE SMOOTH",
"72 -90 LINE",
"90 -27 OFFCURVE",
"134 50 OFFCURVE",
"205 141 CURVE SMOOTH",
"327 298 OFFCURVE",
"520 486 OFFCURVE",
"783 704 CURVE",
"788 710 LINE",
"787 713 OFFCURVE",
"782 715 OFFCURVE",
"775 715 CURVE SMOOTH",
"768 715 OFFCURVE",
"763 715 OFFCURVE",
"761 714 CURVE",
"750 741 OFFCURVE",
"704 755 OFFCURVE",
"623 755 CURVE SMOOTH",
"590 755 OFFCURVE",
"552 752 OFFCURVE",
"507 746 CURVE SMOOTH",
"468 739 OFFCURVE",
"430 734 OFFCURVE",
"391 729 CURVE",
"362 735 LINE",
"363 731 OFFCURVE",
"367 726 OFFCURVE",
"374 721 CURVE SMOOTH",
"381 716 OFFCURVE",
"384 711 OFFCURVE",
"385 707 CURVE",
"392 696 OFFCURVE",
"395 684 OFFCURVE",
"395 670 CURVE SMOOTH",
"395 627 OFFCURVE",
"383 582 OFFCURVE",
"360 533 CURVE SMOOTH",
"337 486 OFFCURVE",
"308 447 OFFCURVE",
"274 417 CURVE SMOOTH",
"256 401 OFFCURVE",
"241 393 OFFCURVE",
"229 393 CURVE SMOOTH",
"218 393 OFFCURVE",
"213 399 OFFCURVE",
"213 410 CURVE SMOOTH",
"213 425 OFFCURVE",
"223 452 OFFCURVE",
"242 493 CURVE SMOOTH",
"261 531 OFFCURVE",
"276 557 OFFCURVE",
"288 571 CURVE",
"315 597 LINE SMOOTH",
"328 610 OFFCURVE",
"334 619 OFFCURVE",
"334 626 CURVE SMOOTH",
"334 636 OFFCURVE",
"327 641 OFFCURVE",
"313 641 CURVE SMOOTH",
"293 641 OFFCURVE",
"267 610 OFFCURVE",
"234 548 CURVE SMOOTH",
"203 489 OFFCURVE",
"188 448 OFFCURVE",
"188 423 CURVE SMOOTH",
"188 393 OFFCURVE",
"201 378 OFFCURVE",
"228 378 CURVE SMOOTH",
"270 378 OFFCURVE",
"315 416 OFFCURVE",
"364 493 CURVE SMOOTH",
"409 564 OFFCURVE",
"432 623 OFFCURVE",
"432 668 CURVE SMOOTH",
"432 694 OFFCURVE",
"424 712 OFFCURVE",
"408 721 CURVE",
"523 737 OFFCURVE",
"594 745 OFFCURVE",
"623 745 CURVE SMOOTH",
"698 745 OFFCURVE",
"740 734 OFFCURVE",
"751 711 CURVE",
"740 708 OFFCURVE",
"731 703 OFFCURVE",
"722 696 CURVE SMOOTH",
"623 621 OFFCURVE",
"503 507 OFFCURVE",
"363 355 CURVE SMOOTH",
"212 191 OFFCURVE",
"113 62 OFFCURVE",
"68 -32 CURVE SMOOTH",
"52 -65 OFFCURVE",
"44 -87 OFFCURVE",
"44 -97 CURVE SMOOTH",
"44 -106 OFFCURVE",
"56 -116 OFFCURVE",
"65 -116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"434 -19 OFFCURVE",
"475 18 OFFCURVE",
"518 92 CURVE SMOOTH",
"557 161 OFFCURVE",
"577 216 OFFCURVE",
"577 258 CURVE SMOOTH",
"577 303 OFFCURVE",
"555 326 OFFCURVE",
"511 326 CURVE SMOOTH",
"480 326 OFFCURVE",
"449 311 OFFCURVE",
"418 282 CURVE SMOOTH",
"387 253 OFFCURVE",
"372 224 OFFCURVE",
"372 193 CURVE SMOOTH",
"372 188 OFFCURVE",
"374 180 OFFCURVE",
"377 170 CURVE",
"382 170 LINE",
"382 199 OFFCURVE",
"395 230 OFFCURVE",
"422 263 CURVE SMOOTH",
"449 296 OFFCURVE",
"477 312 OFFCURVE",
"506 312 CURVE SMOOTH",
"531 312 OFFCURVE",
"543 293 OFFCURVE",
"543 256 CURVE SMOOTH",
"543 215 OFFCURVE",
"533 172 OFFCURVE",
"512 128 CURVE SMOOTH",
"492 83 OFFCURVE",
"467 47 OFFCURVE",
"437 18 CURVE SMOOTH",
"421 2 OFFCURVE",
"408 -6 OFFCURVE",
"397 -6 CURVE SMOOTH",
"384 -6 OFFCURVE",
"377 2 OFFCURVE",
"377 17 CURVE SMOOTH",
"377 38 OFFCURVE",
"396 76 OFFCURVE",
"433 131 CURVE SMOOTH",
"471 186 OFFCURVE",
"490 215 OFFCURVE",
"490 218 CURVE SMOOTH",
"490 228 OFFCURVE",
"484 233 OFFCURVE",
"472 233 CURVE SMOOTH",
"453 233 OFFCURVE",
"430 203 OFFCURVE",
"401 142 CURVE SMOOTH",
"374 84 OFFCURVE",
"360 44 OFFCURVE",
"360 23 CURVE SMOOTH",
"360 -5 OFFCURVE",
"372 -19 OFFCURVE",
"396 -19 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"674 -19 OFFCURVE",
"715 18 OFFCURVE",
"758 92 CURVE SMOOTH",
"797 161 OFFCURVE",
"817 216 OFFCURVE",
"817 258 CURVE SMOOTH",
"817 303 OFFCURVE",
"795 326 OFFCURVE",
"751 326 CURVE SMOOTH",
"720 326 OFFCURVE",
"689 311 OFFCURVE",
"658 282 CURVE SMOOTH",
"627 253 OFFCURVE",
"612 224 OFFCURVE",
"612 193 CURVE SMOOTH",
"612 188 OFFCURVE",
"614 180 OFFCURVE",
"617 170 CURVE",
"622 170 LINE",
"622 199 OFFCURVE",
"635 230 OFFCURVE",
"662 263 CURVE SMOOTH",
"689 296 OFFCURVE",
"717 312 OFFCURVE",
"746 312 CURVE SMOOTH",
"771 312 OFFCURVE",
"783 293 OFFCURVE",
"783 256 CURVE SMOOTH",
"783 215 OFFCURVE",
"773 172 OFFCURVE",
"752 128 CURVE SMOOTH",
"732 83 OFFCURVE",
"707 47 OFFCURVE",
"677 18 CURVE SMOOTH",
"661 2 OFFCURVE",
"648 -6 OFFCURVE",
"637 -6 CURVE SMOOTH",
"624 -6 OFFCURVE",
"617 2 OFFCURVE",
"617 17 CURVE SMOOTH",
"617 38 OFFCURVE",
"636 76 OFFCURVE",
"673 131 CURVE SMOOTH",
"711 186 OFFCURVE",
"730 215 OFFCURVE",
"730 218 CURVE SMOOTH",
"730 228 OFFCURVE",
"724 233 OFFCURVE",
"712 233 CURVE SMOOTH",
"693 233 OFFCURVE",
"670 203 OFFCURVE",
"641 142 CURVE SMOOTH",
"614 84 OFFCURVE",
"600 44 OFFCURVE",
"600 23 CURVE SMOOTH",
"600 -5 OFFCURVE",
"612 -19 OFFCURVE",
"636 -19 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"176 -26 OFFCURVE",
"187 -13 OFFCURVE",
"187 0 CURVE SMOOTH",
"187 80 OFFCURVE",
"245 186 OFFCURVE",
"361 317 CURVE SMOOTH",
"421 385 OFFCURVE",
"510 469 OFFCURVE",
"631 577 CURVE SMOOTH",
"633 579 OFFCURVE",
"634 581 OFFCURVE",
"634 584 CURVE SMOOTH",
"634 593 OFFCURVE",
"618 603 OFFCURVE",
"605 603 CURVE SMOOTH",
"600 603 OFFCURVE",
"596 602 OFFCURVE",
"593 599 CURVE SMOOTH",
"489 507 OFFCURVE",
"402 415 OFFCURVE",
"327 322 CURVE SMOOTH",
"218 185 OFFCURVE",
"163 72 OFFCURVE",
"163 -17 CURVE SMOOTH",
"163 -23 OFFCURVE",
"165 -26 OFFCURVE",
"169 -26 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"340 21 OFFCURVE",
"335 26 OFFCURVE",
"335 33 CURVE SMOOTH",
"335 36 LINE SMOOTH",
"335 55 OFFCURVE",
"353 80 OFFCURVE",
"378 111 CURVE SMOOTH",
"397 134 OFFCURVE",
"413 151 OFFCURVE",
"424 164 CURVE SMOOTH",
"435 176 OFFCURVE",
"443 183 OFFCURVE",
"446 186 CURVE",
"451 188 OFFCURVE",
"456 189 OFFCURVE",
"462 189 CURVE SMOOTH",
"472 189 OFFCURVE",
"504 178 OFFCURVE",
"510 178 CURVE",
"513 175 OFFCURVE",
"515 170 OFFCURVE",
"515 165 CURVE SMOOTH",
"515 154 OFFCURVE",
"507 139 OFFCURVE",
"492 120 CURVE SMOOTH",
"479 104 OFFCURVE",
"466 91 OFFCURVE",
"453 80 CURVE SMOOTH",
"417 53 OFFCURVE",
"383 34 OFFCURVE",
"352 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"339 0 OFFCURVE",
"347 1 OFFCURVE",
"356 4 CURVE SMOOTH",
"392 15 OFFCURVE",
"431 37 OFFCURVE",
"473 68 CURVE SMOOTH",
"491 82 OFFCURVE",
"508 99 OFFCURVE",
"525 120 CURVE SMOOTH",
"544 145 OFFCURVE",
"553 165 OFFCURVE",
"553 181 CURVE SMOOTH",
"553 184 OFFCURVE",
"552 187 OFFCURVE",
"551 191 CURVE",
"544 194 OFFCURVE",
"537 198 OFFCURVE",
"530 201 CURVE SMOOTH",
"508 210 LINE SMOOTH",
"485 219 OFFCURVE",
"468 225 OFFCURVE",
"457 225 CURVE SMOOTH",
"442 225 OFFCURVE",
"421 212 OFFCURVE",
"396 182 CURVE SMOOTH",
"346 121 LINE SMOOTH",
"320 90 OFFCURVE",
"304 59 OFFCURVE",
"304 28 CURVE SMOOTH",
"304 9 OFFCURVE",
"313 0 OFFCURVE",
"330 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"196 396 OFFCURVE",
"193 400 OFFCURVE",
"193 407 CURVE SMOOTH",
"193 417 OFFCURVE",
"199 433 OFFCURVE",
"211 455 CURVE SMOOTH",
"222 474 OFFCURVE",
"229 486 OFFCURVE",
"236 493 CURVE SMOOTH",
"263 525 OFFCURVE",
"283 545 OFFCURVE",
"294 553 CURVE",
"326 560 OFFCURVE",
"350 562 OFFCURVE",
"367 561 CURVE",
"370 558 OFFCURVE",
"372 553 OFFCURVE",
"372 547 CURVE SMOOTH",
"372 534 OFFCURVE",
"365 518 OFFCURVE",
"351 497 CURVE SMOOTH",
"338 479 OFFCURVE",
"325 465 OFFCURVE",
"312 455 CURVE SMOOTH",
"273 425 OFFCURVE",
"239 406 OFFCURVE",
"211 397 CURVE SMOOTH",
"209 396 OFFCURVE",
"206 396 OFFCURVE",
"203 396 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"193 376 OFFCURVE",
"202 378 OFFCURVE",
"214 381 CURVE SMOOTH",
"252 392 OFFCURVE",
"293 414 OFFCURVE",
"336 447 CURVE SMOOTH",
"396 493 OFFCURVE",
"426 530 OFFCURVE",
"426 559 CURVE SMOOTH",
"426 563 OFFCURVE",
"426 566 OFFCURVE",
"425 568 CURVE",
"547 575 LINE SMOOTH",
"555 575 OFFCURVE",
"559 579 OFFCURVE",
"559 586 CURVE SMOOTH",
"559 593 OFFCURVE",
"554 597 OFFCURVE",
"545 597 CURVE SMOOTH",
"366 592 LINE",
"363 593 OFFCURVE",
"360 595 OFFCURVE",
"356 597 CURVE SMOOTH",
"351 599 OFFCURVE",
"346 602 OFFCURVE",
"341 605 CURVE SMOOTH",
"334 609 OFFCURVE",
"327 612 OFFCURVE",
"320 612 CURVE SMOOTH",
"307 612 OFFCURVE",
"293 602 OFFCURVE",
"282 594 CURVE SMOOTH",
"273 589 OFFCURVE",
"259 587 OFFCURVE",
"240 587 CURVE SMOOTH",
"232 587 OFFCURVE",
"228 584 OFFCURVE",
"228 578 CURVE SMOOTH",
"228 573 OFFCURVE",
"231 569 OFFCURVE",
"238 567 CURVE",
"246 563 OFFCURVE",
"251 561 OFFCURVE",
"252 561 CURVE",
"231 537 OFFCURVE",
"215 517 OFFCURVE",
"204 502 CURVE SMOOTH",
"174 467 OFFCURVE",
"160 436 OFFCURVE",
"160 407 CURVE SMOOTH",
"160 386 OFFCURVE",
"169 376 OFFCURVE",
"187 376 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"570 21 OFFCURVE",
"565 26 OFFCURVE",
"565 33 CURVE SMOOTH",
"565 36 LINE SMOOTH",
"568 55 OFFCURVE",
"583 80 OFFCURVE",
"608 111 CURVE SMOOTH",
"627 134 OFFCURVE",
"643 151 OFFCURVE",
"654 164 CURVE SMOOTH",
"665 176 OFFCURVE",
"673 183 OFFCURVE",
"676 186 CURVE",
"681 188 OFFCURVE",
"686 189 OFFCURVE",
"692 189 CURVE SMOOTH",
"702 189 OFFCURVE",
"734 178 OFFCURVE",
"740 178 CURVE",
"743 175 OFFCURVE",
"745 170 OFFCURVE",
"745 165 CURVE SMOOTH",
"745 154 OFFCURVE",
"737 139 OFFCURVE",
"722 120 CURVE SMOOTH",
"709 104 OFFCURVE",
"696 91 OFFCURVE",
"683 80 CURVE SMOOTH",
"647 53 OFFCURVE",
"613 34 OFFCURVE",
"582 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"569 0 OFFCURVE",
"577 1 OFFCURVE",
"586 4 CURVE SMOOTH",
"622 15 OFFCURVE",
"661 37 OFFCURVE",
"703 68 CURVE SMOOTH",
"721 82 OFFCURVE",
"738 99 OFFCURVE",
"755 120 CURVE SMOOTH",
"774 145 OFFCURVE",
"783 165 OFFCURVE",
"783 181 CURVE SMOOTH",
"783 184 OFFCURVE",
"782 187 OFFCURVE",
"781 191 CURVE",
"774 194 OFFCURVE",
"767 198 OFFCURVE",
"760 201 CURVE SMOOTH",
"738 210 LINE SMOOTH",
"715 220 OFFCURVE",
"698 225 OFFCURVE",
"687 225 CURVE SMOOTH",
"672 225 OFFCURVE",
"652 211 OFFCURVE",
"626 182 CURVE SMOOTH",
"576 121 LINE SMOOTH",
"550 90 OFFCURVE",
"534 59 OFFCURVE",
"534 28 CURVE SMOOTH",
"534 9 OFFCURVE",
"543 0 OFFCURVE",
"560 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012110 1068 134 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012140 1066 116 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01271 1068 95 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01217 1069 44 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012101 1066 77 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 17 213 17 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01215 44 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 101 118 101 134 101 150 101 166 101 182 101 198 101 214 101 230 101 246 101 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 101 22 101 38 101 54 101 70 101 86 101 102 101 118 101 134 101 150 101 166 101 182 101 198 101 214 101 230 101 246 101 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 101 22 101 38 101 54 101 70 101 86 101 102 101 118 101 134 101 150 101 166 101 182 101 198 101 214 101 230 101 246 101 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01249 77 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012202 134 218 134 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 134 121 134 137 134 153 134 169 134 185 134 201 134 217 134 233 134 249 134 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 134 25 134 41 134 57 134 73 134 89 134 105 134 121 134 137 134 153 134 169 134 185 134 201 134 217 134 233 134 249 134 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 134 25 134 41 134 57 134 73 134 89 134 105 134 121 134 137 134 153 134 169 134 185 134 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01261 134 110 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012101 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 95 218 95 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 95 121 95 137 95 153 95 169 95 185 95 201 95 217 95 233 95 249 95 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 95 25 95 41 95 57 95 73 95 89 95 105 95 121 95 137 95 153 95 169 95 185 95 201 95 217 95 233 95 249 95 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 95 25 95 41 95 57 95 73 95 89 95 105 95 121 95 137 95 153 95 169 95 185 95 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 116 121 116 137 116 153 116 169 116 185 116 201 116 217 116 233 116 249 116 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 116 25 116 41 116 57 116 73 116 89 116 105 116 121 116 137 116 153 116 169 116 185 116 201 116 217 116 233 116 249 116 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 116 25 116 41 116 57 116 73 116 89 116 105 116 121 116 137 116 153 116 169 116 185 116 201 116 217 116 233 116 249 116 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012140 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012150 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01297 1075 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012136 1075 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01275 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012114 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012114 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01289 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012128 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01215 0 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01249 0 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01261 0 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012102 0 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012141 0 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 805;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = lozenge;
lastChange = "2022-03-22 11:09:01 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"289 20 OFFCURVE",
"294 24 OFFCURVE",
"298 32 CURVE SMOOTH",
"379 185 LINE SMOOTH",
"421 266 OFFCURVE",
"443 315 OFFCURVE",
"444 334 CURVE SMOOTH",
"444 337 OFFCURVE",
"443 340 OFFCURVE",
"442 347 CURVE",
"377 468 LINE SMOOTH",
"352 518 OFFCURVE",
"333 564 OFFCURVE",
"320 605 CURVE SMOOTH",
"317 615 OFFCURVE",
"313 620 OFFCURVE",
"308 620 CURVE SMOOTH",
"303 620 OFFCURVE",
"298 615 OFFCURVE",
"293 606 CURVE SMOOTH",
"212 452 LINE SMOOTH",
"170 371 OFFCURVE",
"148 322 OFFCURVE",
"147 303 CURVE SMOOTH",
"147 300 OFFCURVE",
"148 297 OFFCURVE",
"149 290 CURVE",
"210 178 OFFCURVE",
"250 93 OFFCURVE",
"271 32 CURVE SMOOTH",
"274 24 OFFCURVE",
"278 20 OFFCURVE",
"283 20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 187 OFFCURVE",
"219 275 OFFCURVE",
"195 342 CURVE",
"223 399 OFFCURVE",
"246 446 OFFCURVE",
"265 483 CURVE SMOOTH",
"283 520 OFFCURVE",
"296 548 OFFCURVE",
"305 567 CURVE",
"342 452 OFFCURVE",
"372 364 OFFCURVE",
"396 296 CURVE",
"327 156 LINE SMOOTH",
"308 119 OFFCURVE",
"295 90 OFFCURVE",
"286 71 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0120 30 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0126 30 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 438;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = apple;
lastChange = "2022-03-22 11:09:07 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"205 0 OFFCURVE",
"220 5 OFFCURVE",
"231 14 CURVE SMOOTH",
"242 21 OFFCURVE",
"256 24 OFFCURVE",
"272 24 CURVE SMOOTH",
"289 24 OFFCURVE",
"303 21 OFFCURVE",
"314 14 CURVE SMOOTH",
"327 5 OFFCURVE",
"343 0 OFFCURVE",
"361 0 CURVE SMOOTH",
"380 0 OFFCURVE",
"404 17 OFFCURVE",
"432 51 CURVE SMOOTH",
"456 80 OFFCURVE",
"473 108 OFFCURVE",
"482 137 CURVE",
"435 156 OFFCURVE",
"410 192 OFFCURVE",
"410 245 CURVE SMOOTH",
"410 291 OFFCURVE",
"429 325 OFFCURVE",
"468 348 CURVE",
"445 383 OFFCURVE",
"413 401 OFFCURVE",
"372 401 CURVE SMOOTH",
"361 401 OFFCURVE",
"354 400 OFFCURVE",
"350 399 CURVE",
"337 392 OFFCURVE",
"320 387 OFFCURVE",
"295 382 CURVE SMOOTH",
"285 379 OFFCURVE",
"276 378 OFFCURVE",
"268 378 CURVE SMOOTH",
"262 378 OFFCURVE",
"256 379 OFFCURVE",
"251 380 CURVE SMOOTH",
"230 387 OFFCURVE",
"212 392 OFFCURVE",
"196 399 CURVE SMOOTH",
"193 400 OFFCURVE",
"187 400 OFFCURVE",
"179 400 CURVE SMOOTH",
"135 400 OFFCURVE",
"100 377 OFFCURVE",
"73 330 CURVE SMOOTH",
"58 303 OFFCURVE",
"50 271 OFFCURVE",
"50 234 CURVE SMOOTH",
"50 164 OFFCURVE",
"71 103 OFFCURVE",
"113 51 CURVE SMOOTH",
"141 17 OFFCURVE",
"165 0 OFFCURVE",
"185 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"303 392 OFFCURVE",
"326 404 OFFCURVE",
"347 429 CURVE SMOOTH",
"366 454 OFFCURVE",
"375 480 OFFCURVE",
"375 507 CURVE SMOOTH",
"375 515 OFFCURVE",
"374 520 OFFCURVE",
"373 522 CURVE",
"366 525 OFFCURVE",
"355 522 OFFCURVE",
"340 515 CURVE SMOOTH",
"329 509 OFFCURVE",
"319 502 OFFCURVE",
"312 494 CURVE SMOOTH",
"287 469 OFFCURVE",
"274 440 OFFCURVE",
"274 406 CURVE SMOOTH",
"274 402 OFFCURVE",
"275 398 OFFCURVE",
"277 393 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 2 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 2 74 2 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 2 25 2 41 2 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 532;
}
);
note = apple;
unicode = F8FF;
},
{
glyphname = at;
lastChange = "2022-03-22 11:09:14 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"384 -100 OFFCURVE",
"442 -79 OFFCURVE",
"487 -38 CURVE",
"497 -41 OFFCURVE",
"508 -42 OFFCURVE",
"519 -42 CURVE SMOOTH",
"567 -42 OFFCURVE",
"607 -17 OFFCURVE",
"638 33 CURVE SMOOTH",
"667 78 OFFCURVE",
"681 132 OFFCURVE",
"681 193 CURVE SMOOTH",
"681 230 OFFCURVE",
"675 263 OFFCURVE",
"663 293 CURVE SMOOTH",
"646 335 OFFCURVE",
"618 369 OFFCURVE",
"580 396 CURVE SMOOTH",
"537 425 OFFCURVE",
"487 440 OFFCURVE",
"430 440 CURVE SMOOTH",
"413 440 OFFCURVE",
"397 439 OFFCURVE",
"378 436 CURVE SMOOTH",
"286 421 OFFCURVE",
"214 376 OFFCURVE",
"162 303 CURVE SMOOTH",
"119 242 OFFCURVE",
"98 176 OFFCURVE",
"98 105 CURVE SMOOTH",
"98 42 OFFCURVE",
"118 -7 OFFCURVE",
"159 -44 CURVE SMOOTH",
"200 -81 OFFCURVE",
"252 -100 OFFCURVE",
"315 -100 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"242 62 OFFCURVE",
"238 65 OFFCURVE",
"238 76 CURVE SMOOTH",
"238 85 OFFCURVE",
"241 95 OFFCURVE",
"247 106 CURVE SMOOTH",
"264 137 OFFCURVE",
"301 175 OFFCURVE",
"360 220 CURVE SMOOTH",
"411 259 OFFCURVE",
"447 279 OFFCURVE",
"470 279 CURVE SMOOTH",
"482 279 OFFCURVE",
"490 273 OFFCURVE",
"494 262 CURVE",
"475 241 OFFCURVE",
"436 207 OFFCURVE",
"375 156 CURVE SMOOTH",
"343 131 OFFCURVE",
"317 110 OFFCURVE",
"296 95 CURVE SMOOTH",
"275 80 OFFCURVE",
"259 70 OFFCURVE",
"249 65 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259 -67 OFFCURVE",
"212 -52 OFFCURVE",
"177 -23 CURVE SMOOTH",
"139 8 OFFCURVE",
"120 51 OFFCURVE",
"120 108 CURVE SMOOTH",
"120 173 OFFCURVE",
"140 233 OFFCURVE",
"179 288 CURVE SMOOTH",
"226 355 OFFCURVE",
"292 395 OFFCURVE",
"377 408 CURVE SMOOTH",
"392 411 OFFCURVE",
"408 412 OFFCURVE",
"424 412 CURVE SMOOTH",
"514 412 OFFCURVE",
"581 369 OFFCURVE",
"624 284 CURVE SMOOTH",
"628 276 LINE",
"614 279 OFFCURVE",
"606 275 OFFCURVE",
"605 266 CURVE SMOOTH",
"602 231 OFFCURVE",
"594 194 OFFCURVE",
"579 151 CURVE SMOOTH",
"556 85 OFFCURVE",
"526 33 OFFCURVE",
"489 -6 CURVE",
"484 10 OFFCURVE",
"481 27 OFFCURVE",
"481 45 CURVE SMOOTH",
"481 90 OFFCURVE",
"494 143 OFFCURVE",
"521 204 CURVE SMOOTH",
"542 254 OFFCURVE",
"561 289 OFFCURVE",
"580 310 CURVE SMOOTH",
"581 311 OFFCURVE",
"582 313 OFFCURVE",
"582 314 CURVE SMOOTH",
"582 316 OFFCURVE",
"580 317 OFFCURVE",
"577 317 CURVE SMOOTH",
"560 317 OFFCURVE",
"544 311 OFFCURVE",
"529 300 CURVE",
"519 310 OFFCURVE",
"501 315 OFFCURVE",
"475 315 CURVE SMOOTH",
"434 315 OFFCURVE",
"380 287 OFFCURVE",
"313 231 CURVE SMOOTH",
"257 184 OFFCURVE",
"218 139 OFFCURVE",
"195 95 CURVE SMOOTH",
"186 76 OFFCURVE",
"181 60 OFFCURVE",
"181 46 CURVE SMOOTH",
"181 28 OFFCURVE",
"189 19 OFFCURVE",
"204 19 CURVE SMOOTH",
"211 19 OFFCURVE",
"220 22 OFFCURVE",
"232 27 CURVE SMOOTH",
"267 43 OFFCURVE",
"318 77 OFFCURVE",
"383 130 CURVE SMOOTH",
"405 147 OFFCURVE",
"423 162 OFFCURVE",
"437 174 CURVE SMOOTH",
"451 186 OFFCURVE",
"461 195 OFFCURVE",
"468 200 CURVE",
"452 167 OFFCURVE",
"444 124 OFFCURVE",
"444 71 CURVE SMOOTH",
"444 30 OFFCURVE",
"452 -2 OFFCURVE",
"467 -23 CURVE",
"430 -52 OFFCURVE",
"380 -67 OFFCURVE",
"318 -67 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"520 -17 OFFCURVE",
"515 -16 OFFCURVE",
"508 -15 CURVE",
"543 24 OFFCURVE",
"573 73 OFFCURVE",
"598 131 CURVE SMOOTH",
"611 162 OFFCURVE",
"623 199 OFFCURVE",
"636 244 CURVE",
"638 231 OFFCURVE",
"639 215 OFFCURVE",
"639 198 CURVE SMOOTH",
"639 145 OFFCURVE",
"631 99 OFFCURVE",
"616 59 CURVE SMOOTH",
"595 8 OFFCURVE",
"566 -17 OFFCURVE",
"527 -17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 1066 21 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01289 1069 58 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1070 37 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 37 218 37 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 37 121 37 137 37 153 37 169 37 185 37 201 37 217 37 233 37 249 37 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 153 37 169 37 185 37 201 37 217 37 233 37 249 37 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 153 37 169 37 185 37 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01241 21 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 50 118 50 134 50 150 50 166 50 182 50 198 50 214 50 230 50 246 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 50 22 50 38 50 54 50 70 50 86 50 102 50 118 50 134 50 150 50 166 50 182 50 198 50 214 50 230 50 246 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 50 22 50 38 50 54 50 70 50 86 50 102 50 118 50 134 50 150 50 166 50 182 50 198 50 214 50 230 50 246 50 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 58 218 58 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01260 58 89 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01285 21 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01291 21 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01217 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0123 1064 44 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01233 1063 13 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01277 1064 98 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01254 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 54 119 54 135 54 151 54 167 54 183 54 199 54 215 54 231 54 247 54 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 54 23 54 39 54 55 54 71 54 87 54 103 54 119 54 135 54 151 54 167 54 183 54 199 54 215 54 231 54 247 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 54 23 54 39 54 55 54 71 54 87 54 103 54 119 54 135 54 151 54 167 54 183 54 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 54 214 54 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01285 98 77 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 722;
}
);
note = at;
unicode = 0040;
},
{
glyphname = ampersand;
lastChange = "2022-03-22 11:09:34 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"705 -73 OFFCURVE",
"736 -60 OFFCURVE",
"766 -35 CURVE SMOOTH",
"801 -6 OFFCURVE",
"819 28 OFFCURVE",
"819 71 CURVE SMOOTH",
"819 103 OFFCURVE",
"804 132 OFFCURVE",
"775 159 CURVE SMOOTH",
"770 164 OFFCURVE",
"767 164 OFFCURVE",
"764 159 CURVE SMOOTH",
"762 154 OFFCURVE",
"763 150 OFFCURVE",
"767 145 CURVE SMOOTH",
"786 117 OFFCURVE",
"796 88 OFFCURVE",
"796 57 CURVE SMOOTH",
"796 -12 OFFCURVE",
"760 -47 OFFCURVE",
"687 -47 CURVE SMOOTH",
"585 -47 OFFCURVE",
"512 -5 OFFCURVE",
"461 86 CURVE",
"476 92 OFFCURVE",
"491 99 OFFCURVE",
"506 106 CURVE SMOOTH",
"626 161 OFFCURVE",
"691 225 OFFCURVE",
"702 300 CURVE SMOOTH",
"703 305 OFFCURVE",
"703 311 OFFCURVE",
"703 316 CURVE SMOOTH",
"703 327 OFFCURVE",
"702 337 OFFCURVE",
"699 348 CURVE",
"699 351 OFFCURVE",
"698 352 OFFCURVE",
"696 352 CURVE SMOOTH",
"690 352 OFFCURVE",
"679 334 OFFCURVE",
"679 323 CURVE SMOOTH",
"679 314 OFFCURVE",
"681 308 OFFCURVE",
"681 301 CURVE SMOOTH",
"681 297 OFFCURVE",
"680 293 OFFCURVE",
"680 289 CURVE",
"672 230 OFFCURVE",
"611 177 OFFCURVE",
"498 131 CURVE SMOOTH",
"481 124 OFFCURVE",
"465 118 OFFCURVE",
"448 112 CURVE",
"428 158 OFFCURVE",
"419 213 OFFCURVE",
"419 270 CURVE SMOOTH",
"419 311 OFFCURVE",
"424 354 OFFCURVE",
"433 395 CURVE",
"470 417 LINE SMOOTH",
"588 488 OFFCURVE",
"649 539 OFFCURVE",
"649 566 CURVE SMOOTH",
"649 583 OFFCURVE",
"629 591 OFFCURVE",
"588 592 CURVE SMOOTH",
"571 593 OFFCURVE",
"558 593 OFFCURVE",
"548 593 CURVE SMOOTH",
"538 592 OFFCURVE",
"532 592 OFFCURVE",
"528 591 CURVE SMOOTH",
"517 589 OFFCURVE",
"511 582 OFFCURVE",
"511 572 CURVE SMOOTH",
"511 567 OFFCURVE",
"514 565 OFFCURVE",
"518 565 CURVE SMOOTH",
"520 565 OFFCURVE",
"521 566 OFFCURVE",
"523 566 CURVE SMOOTH",
"531 567 OFFCURVE",
"538 568 OFFCURVE",
"544 568 CURVE SMOOTH",
"549 568 LINE SMOOTH",
"558 567 OFFCURVE",
"564 567 OFFCURVE",
"568 567 CURVE SMOOTH",
"572 566 OFFCURVE",
"574 566 OFFCURVE",
"575 566 CURVE SMOOTH",
"594 565 OFFCURVE",
"604 560 OFFCURVE",
"604 552 CURVE SMOOTH",
"604 539 OFFCURVE",
"578 516 OFFCURVE",
"526 482 CURVE SMOOTH",
"492 461 LINE",
"441 430 LINE",
"454 475 OFFCURVE",
"470 519 OFFCURVE",
"491 556 CURVE",
"496 563 OFFCURVE",
"491 567 OFFCURVE",
"476 567 CURVE SMOOTH",
"454 567 OFFCURVE",
"441 562 OFFCURVE",
"437 551 CURVE",
"412 498 OFFCURVE",
"391 444 OFFCURVE",
"377 391 CURVE",
"169 262 OFFCURVE",
"61 168 OFFCURVE",
"53 107 CURVE SMOOTH",
"46 58 OFFCURVE",
"75 19 OFFCURVE",
"174 19 CURVE SMOOTH",
"247 19 OFFCURVE",
"329 37 OFFCURVE",
"406 65 CURVE",
"409 60 LINE SMOOTH",
"461 -26 OFFCURVE",
"556 -73 OFFCURVE",
"674 -73 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"124 70 OFFCURVE",
"85 86 OFFCURVE",
"85 118 CURVE SMOOTH",
"85 156 OFFCURVE",
"142 214 OFFCURVE",
"257 289 CURVE SMOOTH",
"369 356 LINE",
"362 321 OFFCURVE",
"358 287 OFFCURVE",
"358 252 CURVE SMOOTH",
"358 199 OFFCURVE",
"368 146 OFFCURVE",
"391 95 CURVE",
"327 78 OFFCURVE",
"265 70 OFFCURVE",
"203 70 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 1070 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01232 1066 72 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 1066 24 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 18 213 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012105 72 121 72 137 72 153 72 169 72 185 72 201 72 217 72 233 72 249 72 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 72 25 72 41 72 57 72 73 72 89 72 105 72 121 72 137 72 153 72 169 72 185 72 201 72 217 72 233 72 249 72 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 72 25 72 41 72 57 72 73 72 89 72 105 72 121 72 137 72 153 72 169 72 185 72 201 72 217 72 233 72 249 72 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01222 1063 6 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01268 1064 36 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 832;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = paragraph;
lastChange = "2022-03-22 11:09:43 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"114 -177 OFFCURVE",
"168 -134 OFFCURVE",
"227 -47 CURVE SMOOTH",
"272 18 OFFCURVE",
"306 84 OFFCURVE",
"329 152 CURVE SMOOTH",
"432 445 OFFCURVE",
"519 592 OFFCURVE",
"588 592 CURVE SMOOTH",
"598 592 LINE",
"563 549 OFFCURVE",
"530 487 OFFCURVE",
"499 408 CURVE",
"499 406 OFFCURVE",
"477 339 OFFCURVE",
"432 208 CURVE SMOOTH",
"419 169 OFFCURVE",
"402 125 OFFCURVE",
"381 78 CURVE SMOOTH",
"353 16 OFFCURVE",
"330 -23 OFFCURVE",
"312 -39 CURVE",
"304 -44 OFFCURVE",
"299 -50 OFFCURVE",
"298 -55 CURVE SMOOTH",
"298 -58 OFFCURVE",
"300 -59 OFFCURVE",
"304 -59 CURVE SMOOTH",
"333 -59 OFFCURVE",
"373 0 OFFCURVE",
"425 118 CURVE SMOOTH",
"448 173 OFFCURVE",
"472 228 OFFCURVE",
"495 283 CURVE SMOOTH",
"564 448 LINE",
"620 567 OFFCURVE",
"667 628 OFFCURVE",
"706 630 CURVE SMOOTH",
"717 631 OFFCURVE",
"723 633 OFFCURVE",
"725 635 CURVE",
"724 644 OFFCURVE",
"714 648 OFFCURVE",
"693 648 CURVE SMOOTH",
"664 648 OFFCURVE",
"636 634 OFFCURVE",
"608 606 CURVE",
"600 609 OFFCURVE",
"587 610 OFFCURVE",
"569 610 CURVE SMOOTH",
"557 610 OFFCURVE",
"539 609 OFFCURVE",
"515 608 CURVE SMOOTH",
"491 607 OFFCURVE",
"473 606 OFFCURVE",
"461 606 CURVE SMOOTH",
"401 606 OFFCURVE",
"342 587 OFFCURVE",
"283 549 CURVE SMOOTH",
"218 506 OFFCURVE",
"186 456 OFFCURVE",
"186 398 CURVE SMOOTH",
"186 331 OFFCURVE",
"237 294 OFFCURVE",
"340 285 CURVE",
"292 152 OFFCURVE",
"257 64 OFFCURVE",
"236 20 CURVE SMOOTH",
"176 -101 OFFCURVE",
"117 -162 OFFCURVE",
"58 -162 CURVE SMOOTH",
"53 -162 OFFCURVE",
"50 -164 OFFCURVE",
"48 -168 CURVE",
"48 -174 OFFCURVE",
"53 -177 OFFCURVE",
"64 -177 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01221 28 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01237 28 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 558;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = section;
lastChange = "2022-03-22 11:09:49 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"240 -37 OFFCURVE",
"264 -34 OFFCURVE",
"287 -27 CURVE SMOOTH",
"321 -18 OFFCURVE",
"338 -5 OFFCURVE",
"338 13 CURVE SMOOTH",
"338 29 OFFCURVE",
"327 49 OFFCURVE",
"306 74 CURVE",
"378 83 OFFCURVE",
"414 102 OFFCURVE",
"414 133 CURVE SMOOTH",
"414 156 OFFCURVE",
"387 193 OFFCURVE",
"333 242 CURVE SMOOTH",
"280 291 OFFCURVE",
"253 328 OFFCURVE",
"253 352 CURVE SMOOTH",
"253 405 OFFCURVE",
"281 452 OFFCURVE",
"337 493 CURVE SMOOTH",
"388 530 OFFCURVE",
"441 549 OFFCURVE",
"496 549 CURVE SMOOTH",
"535 549 OFFCURVE",
"555 536 OFFCURVE",
"555 509 CURVE SMOOTH",
"555 488 OFFCURVE",
"541 461 OFFCURVE",
"514 428 CURVE SMOOTH",
"483 392 OFFCURVE",
"465 370 OFFCURVE",
"462 362 CURVE",
"466 360 LINE",
"487 361 OFFCURVE",
"512 380 OFFCURVE",
"541 415 CURVE SMOOTH",
"570 452 OFFCURVE",
"584 481 OFFCURVE",
"584 503 CURVE SMOOTH",
"584 527 OFFCURVE",
"571 545 OFFCURVE",
"546 557 CURVE SMOOTH",
"528 566 OFFCURVE",
"505 570 OFFCURVE",
"477 570 CURVE SMOOTH",
"420 570 OFFCURVE",
"367 555 OFFCURVE",
"318 525 CURVE SMOOTH",
"261 491 OFFCURVE",
"231 448 OFFCURVE",
"228 395 CURVE",
"177 359 OFFCURVE",
"152 315 OFFCURVE",
"152 264 CURVE SMOOTH",
"152 232 OFFCURVE",
"165 199 OFFCURVE",
"190 166 CURVE SMOOTH",
"204 148 OFFCURVE",
"228 124 OFFCURVE",
"261 93 CURVE SMOOTH",
"286 69 OFFCURVE",
"299 53 OFFCURVE",
"299 45 CURVE SMOOTH",
"299 26 OFFCURVE",
"283 11 OFFCURVE",
"251 1 CURVE SMOOTH",
"228 -6 OFFCURVE",
"204 -10 OFFCURVE",
"179 -10 CURVE SMOOTH",
"172 -10 OFFCURVE",
"163 -9 OFFCURVE",
"153 -6 CURVE SMOOTH",
"138 -3 OFFCURVE",
"129 -1 OFFCURVE",
"126 -1 CURVE",
"119 -6 LINE",
"120 -27 OFFCURVE",
"151 -37 OFFCURVE",
"213 -37 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"221 155 LINE",
"192 186 OFFCURVE",
"177 212 OFFCURVE",
"177 231 CURVE SMOOTH",
"177 261 OFFCURVE",
"180 284 OFFCURVE",
"187 300 CURVE SMOOTH",
"195 319 OFFCURVE",
"210 338 OFFCURVE",
"231 356 CURVE",
"239 323 OFFCURVE",
"267 281 OFFCURVE",
"316 228 CURVE SMOOTH",
"362 178 OFFCURVE",
"385 150 OFFCURVE",
"385 145 CURVE SMOOTH",
"385 116 OFFCURVE",
"353 98 OFFCURVE",
"289 91 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01262 1067 44 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 1067 46 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01223 1070 38 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1065 9 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0125 44 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012202 9 218 9 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 150 23 166 23 182 23 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 23 213 23 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01221 38 23 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01258 46 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01230 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01232 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01234 1063 27 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 1061 11 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 481;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = copyright;
lastChange = "2022-03-22 11:09:59 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"367 -11 OFFCURVE",
"447 25 OFFCURVE",
"528 98 CURVE SMOOTH",
"610 171 OFFCURVE",
"651 246 OFFCURVE",
"651 324 CURVE SMOOTH",
"651 371 OFFCURVE",
"634 409 OFFCURVE",
"601 438 CURVE SMOOTH",
"568 467 OFFCURVE",
"527 482 OFFCURVE",
"480 482 CURVE SMOOTH",
"401 482 OFFCURVE",
"320 446 OFFCURVE",
"238 374 CURVE SMOOTH",
"153 300 OFFCURVE",
"111 224 OFFCURVE",
"111 145 CURVE SMOOTH",
"111 98 OFFCURVE",
"129 60 OFFCURVE",
"165 31 CURVE SMOOTH",
"199 3 OFFCURVE",
"240 -11 OFFCURVE",
"287 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"312 75 OFFCURVE",
"351 85 OFFCURVE",
"401 104 CURVE SMOOTH",
"458 126 OFFCURVE",
"486 148 OFFCURVE",
"486 171 CURVE SMOOTH",
"486 173 OFFCURVE",
"485 174 OFFCURVE",
"483 174 CURVE SMOOTH",
"484 174 OFFCURVE",
"473 166 OFFCURVE",
"448 151 CURVE SMOOTH",
"419 134 OFFCURVE",
"393 121 OFFCURVE",
"369 110 CURVE SMOOTH",
"334 95 OFFCURVE",
"305 87 OFFCURVE",
"282 87 CURVE SMOOTH",
"251 87 OFFCURVE",
"235 103 OFFCURVE",
"235 135 CURVE SMOOTH",
"235 188 OFFCURVE",
"264 245 OFFCURVE",
"322 307 CURVE SMOOTH",
"380 370 OFFCURVE",
"435 401 OFFCURVE",
"487 401 CURVE SMOOTH",
"511 401 OFFCURVE",
"523 389 OFFCURVE",
"523 366 CURVE SMOOTH",
"523 363 OFFCURVE",
"522 359 OFFCURVE",
"521 354 CURVE SMOOTH",
"519 348 OFFCURVE",
"518 344 OFFCURVE",
"518 342 CURVE",
"523 338 LINE",
"535 338 OFFCURVE",
"541 349 OFFCURVE",
"541 370 CURVE SMOOTH",
"541 397 OFFCURVE",
"525 410 OFFCURVE",
"492 410 CURVE SMOOTH",
"429 410 OFFCURVE",
"366 381 OFFCURVE",
"301 322 CURVE SMOOTH",
"234 262 OFFCURVE",
"201 201 OFFCURVE",
"201 139 CURVE SMOOTH",
"201 117 OFFCURVE",
"210 101 OFFCURVE",
"228 90 CURVE SMOOTH",
"243 80 OFFCURVE",
"262 75 OFFCURVE",
"285 75 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259 10 OFFCURVE",
"224 22 OFFCURVE",
"195 46 CURVE SMOOTH",
"163 71 OFFCURVE",
"147 103 OFFCURVE",
"147 144 CURVE SMOOTH",
"147 218 OFFCURVE",
"182 290 OFFCURVE",
"252 359 CURVE SMOOTH",
"323 428 OFFCURVE",
"395 462 OFFCURVE",
"470 462 CURVE SMOOTH",
"554 462 OFFCURVE",
"613 401 OFFCURVE",
"613 316 CURVE SMOOTH",
"613 245 OFFCURVE",
"579 177 OFFCURVE",
"510 110 CURVE SMOOTH",
"441 43 OFFCURVE",
"372 10 OFFCURVE",
"301 10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 1069 8 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 1068 37 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 45 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 20 213 20 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01228 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 55 213 55 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01266 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01224 1061 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1062 16 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 628;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = registered;
lastChange = "2022-03-22 11:10:22 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"367 -11 OFFCURVE",
"447 25 OFFCURVE",
"528 98 CURVE SMOOTH",
"610 171 OFFCURVE",
"651 246 OFFCURVE",
"651 324 CURVE SMOOTH",
"651 371 OFFCURVE",
"634 409 OFFCURVE",
"601 438 CURVE SMOOTH",
"568 467 OFFCURVE",
"527 482 OFFCURVE",
"480 482 CURVE SMOOTH",
"401 482 OFFCURVE",
"320 446 OFFCURVE",
"238 374 CURVE SMOOTH",
"153 300 OFFCURVE",
"111 224 OFFCURVE",
"111 145 CURVE SMOOTH",
"111 98 OFFCURVE",
"129 60 OFFCURVE",
"165 31 CURVE SMOOTH",
"199 3 OFFCURVE",
"240 -11 OFFCURVE",
"287 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"223 36 OFFCURVE",
"224 40 OFFCURVE",
"224 47 CURVE SMOOTH",
"227 75 OFFCURVE",
"246 117 OFFCURVE",
"281 172 CURVE SMOOTH",
"304 208 OFFCURVE",
"336 252 OFFCURVE",
"377 304 CURVE SMOOTH",
"411 347 OFFCURVE",
"428 369 OFFCURVE",
"428 370 CURVE",
"427 372 OFFCURVE",
"419 376 OFFCURVE",
"406 381 CURVE",
"374 350 OFFCURVE",
"336 301 OFFCURVE",
"289 233 CURVE SMOOTH",
"236 154 OFFCURVE",
"209 101 OFFCURVE",
"209 72 CURVE SMOOTH",
"209 48 OFFCURVE",
"213 36 OFFCURVE",
"220 36 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259 10 OFFCURVE",
"224 22 OFFCURVE",
"195 46 CURVE SMOOTH",
"163 71 OFFCURVE",
"147 103 OFFCURVE",
"147 144 CURVE SMOOTH",
"147 206 OFFCURVE",
"173 269 OFFCURVE",
"226 332 CURVE",
"251 345 OFFCURVE",
"283 357 OFFCURVE",
"322 368 CURVE SMOOTH",
"364 381 OFFCURVE",
"397 387 OFFCURVE",
"421 387 CURVE SMOOTH",
"496 387 OFFCURVE",
"534 368 OFFCURVE",
"534 330 CURVE SMOOTH",
"534 282 OFFCURVE",
"476 250 OFFCURVE",
"359 233 CURVE",
"350 236 LINE",
"343 231 LINE",
"340 232 OFFCURVE",
"337 230 OFFCURVE",
"332 227 CURVE",
"332 225 OFFCURVE",
"336 224 OFFCURVE",
"344 224 CURVE",
"353 193 OFFCURVE",
"368 162 OFFCURVE",
"387 133 CURVE SMOOTH",
"411 96 OFFCURVE",
"435 74 OFFCURVE",
"459 68 CURVE",
"406 29 OFFCURVE",
"353 10 OFFCURVE",
"301 10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"453 84 OFFCURVE",
"431 102 OFFCURVE",
"410 136 CURVE SMOOTH",
"395 161 OFFCURVE",
"383 189 OFFCURVE",
"374 221 CURVE",
"412 221 OFFCURVE",
"450 229 OFFCURVE",
"488 244 CURVE SMOOTH",
"535 263 OFFCURVE",
"559 290 OFFCURVE",
"559 323 CURVE SMOOTH",
"559 350 OFFCURVE",
"542 371 OFFCURVE",
"509 384 CURVE SMOOTH",
"484 394 OFFCURVE",
"456 399 OFFCURVE",
"425 399 CURVE SMOOTH",
"373 399 OFFCURVE",
"317 387 OFFCURVE",
"256 364 CURVE",
"327 429 OFFCURVE",
"399 462 OFFCURVE",
"470 462 CURVE SMOOTH",
"554 462 OFFCURVE",
"613 401 OFFCURVE",
"613 316 CURVE SMOOTH",
"613 233 OFFCURVE",
"568 155 OFFCURVE",
"478 83 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01259 1069 8 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1070 32 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01222 1067 51 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01216 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01226 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012202 32 218 32 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 32 121 32 137 32 153 32 169 32 185 32 201 32 217 32 233 32 249 32 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 32 25 32 41 32 57 32 73 32 89 32 105 32 121 32 137 32 153 32 169 32 185 32 201 32 217 32 233 32 249 32 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 32 25 32 41 32 57 32 73 32 89 32 105 32 121 32 137 32 153 32 169 32 185 32 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01239 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01245 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 51 25 51 41 51 57 51 73 51 89 51 105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 51 25 51 41 51 57 51 73 51 89 51 105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 59 118 59 134 59 150 59 166 59 182 59 198 59 214 59 230 59 246 59 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 59 22 59 38 59 54 59 70 59 86 59 102 59 118 59 134 59 150 59 166 59 182 59 198 59 214 59 230 59 246 59 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 59 22 59 38 59 54 59 70 59 86 59 102 59 118 59 134 59 150 59 166 59 182 59 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 59 213 59 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01263 1061 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1062 37 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 628;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = trademark;
lastChange = "2022-03-22 11:10:34 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"497 328 OFFCURVE",
"506 333 OFFCURVE",
"512 344 CURVE SMOOTH",
"521 361 OFFCURVE",
"532 390 OFFCURVE",
"543 431 CURVE SMOOTH",
"555 476 OFFCURVE",
"565 506 OFFCURVE",
"572 522 CURVE",
"597 432 OFFCURVE",
"626 387 OFFCURVE",
"661 387 CURVE SMOOTH",
"693 387 OFFCURVE",
"744 432 OFFCURVE",
"814 522 CURVE",
"799 449 OFFCURVE",
"789 394 OFFCURVE",
"782 357 CURVE",
"781 356 OFFCURVE",
"781 354 OFFCURVE",
"781 349 CURVE SMOOTH",
"781 343 OFFCURVE",
"785 340 OFFCURVE",
"792 340 CURVE SMOOTH",
"803 340 OFFCURVE",
"823 349 OFFCURVE",
"827 357 CURVE",
"834 421 OFFCURVE",
"838 475 OFFCURVE",
"841 526 CURVE",
"853 586 LINE",
"854 587 OFFCURVE",
"854 591 OFFCURVE",
"854 597 CURVE SMOOTH",
"854 615 OFFCURVE",
"850 624 OFFCURVE",
"842 624 CURVE SMOOTH",
"841 624 OFFCURVE",
"817 588 OFFCURVE",
"770 516 CURVE SMOOTH",
"724 444 OFFCURVE",
"691 408 OFFCURVE",
"671 408 CURVE SMOOTH",
"651 408 OFFCURVE",
"636 427 OFFCURVE",
"625 466 CURVE SMOOTH",
"623 473 OFFCURVE",
"621 486 OFFCURVE",
"618 505 CURVE SMOOTH",
"606 575 LINE SMOOTH",
"600 614 OFFCURVE",
"593 633 OFFCURVE",
"586 633 CURVE SMOOTH",
"573 633 OFFCURVE",
"565 621 OFFCURVE",
"562 597 CURVE SMOOTH",
"561 581 OFFCURVE",
"560 565 OFFCURVE",
"557 549 CURVE",
"514 438 LINE SMOOTH",
"487 371 OFFCURVE",
"474 336 OFFCURVE",
"474 335 CURVE SMOOTH",
"474 330 OFFCURVE",
"478 328 OFFCURVE",
"485 328 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"300 322 OFFCURVE",
"307 324 OFFCURVE",
"310 328 CURVE SMOOTH",
"318 337 OFFCURVE",
"334 378 OFFCURVE",
"357 452 CURVE SMOOTH",
"370 493 OFFCURVE",
"381 526 OFFCURVE",
"390 549 CURVE SMOOTH",
"398 572 OFFCURVE",
"404 587 OFFCURVE",
"407 594 CURVE SMOOTH",
"411 603 OFFCURVE",
"438 610 OFFCURVE",
"487 615 CURVE SMOOTH",
"534 620 OFFCURVE",
"557 626 OFFCURVE",
"557 635 CURVE SMOOTH",
"557 640 OFFCURVE",
"550 643 OFFCURVE",
"535 643 CURVE SMOOTH",
"499 643 OFFCURVE",
"449 641 OFFCURVE",
"382 636 CURVE SMOOTH",
"296 629 OFFCURVE",
"251 621 OFFCURVE",
"247 613 CURVE",
"248 604 OFFCURVE",
"256 600 OFFCURVE",
"272 600 CURVE SMOOTH",
"281 600 OFFCURVE",
"335 605 OFFCURVE",
"344 605 CURVE SMOOTH",
"363 605 OFFCURVE",
"372 602 OFFCURVE",
"372 596 CURVE SMOOTH",
"372 587 OFFCURVE",
"355 544 OFFCURVE",
"322 466 CURVE SMOOTH",
"289 390 OFFCURVE",
"273 346 OFFCURVE",
"273 335 CURVE SMOOTH",
"273 326 OFFCURVE",
"279 322 OFFCURVE",
"291 322 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01235 1061 9 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0127 63 50 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01211 63 50 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01276 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 796;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = degree;
lastChange = "2022-03-22 14:53:25 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"335 368 OFFCURVE",
"365 397 OFFCURVE",
"365 432 CURVE SMOOTH",
"365 467 OFFCURVE",
"335 496 OFFCURVE",
"298 496 CURVE SMOOTH",
"262 496 OFFCURVE",
"232 467 OFFCURVE",
"232 432 CURVE SMOOTH",
"232 397 OFFCURVE",
"262 368 OFFCURVE",
"298 368 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"273 389 OFFCURVE",
"254 408 OFFCURVE",
"254 432 CURVE SMOOTH",
"254 455 OFFCURVE",
"273 474 OFFCURVE",
"297 474 CURVE SMOOTH",
"322 474 OFFCURVE",
"341 455 OFFCURVE",
"341 432 CURVE SMOOTH",
"341 408 OFFCURVE",
"322 389 OFFCURVE",
"297 389 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 1067 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01218 1066 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01221 1061 3 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1061 15 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 312;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = minute;
lastChange = "2022-03-22 11:11:12 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"284 518 OFFCURVE",
"340 604 OFFCURVE",
"356 628 CURVE SMOOTH",
"360 634 OFFCURVE",
"342 642 OFFCURVE",
"336 642 CURVE SMOOTH",
"329 642 OFFCURVE",
"324 634 OFFCURVE",
"320 625 CURVE SMOOTH",
"311 604 OFFCURVE",
"272 524 OFFCURVE",
"271 519 CURVE",
"270 517 LINE",
"270 516 OFFCURVE",
"276 515 OFFCURVE",
"277 515 CURVE"
);
}
);
width = 200;
}
);
unicode = 2032;
},
{
glyphname = second;
lastChange = "2022-03-22 11:11:20 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"284 518 OFFCURVE",
"340 604 OFFCURVE",
"356 628 CURVE SMOOTH",
"360 634 OFFCURVE",
"342 642 OFFCURVE",
"336 642 CURVE SMOOTH",
"329 642 OFFCURVE",
"324 634 OFFCURVE",
"320 625 CURVE SMOOTH",
"311 604 OFFCURVE",
"272 524 OFFCURVE",
"271 519 CURVE",
"270 517 LINE",
"270 516 OFFCURVE",
"276 515 OFFCURVE",
"277 515 CURVE"
);
},
{
closed = 1;
nodes = (
"358 518 OFFCURVE",
"413 604 OFFCURVE",
"429 628 CURVE SMOOTH",
"433 634 OFFCURVE",
"415 642 OFFCURVE",
"409 642 CURVE SMOOTH",
"402 642 OFFCURVE",
"397 634 OFFCURVE",
"394 625 CURVE",
"384 604 OFFCURVE",
"345 524 OFFCURVE",
"344 519 CURVE SMOOTH",
"344 517 LINE SMOOTH",
"344 516 OFFCURVE",
"351 515 OFFCURVE",
"352 515 CURVE"
);
}
);
width = 273;
}
);
unicode = 2033;
},
{
glyphname = bar;
lastChange = "2022-03-22 11:11:25 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"155 196 OFFCURVE",
"150 156 OFFCURVE",
"146 117 CURVE SMOOTH",
"140 55 OFFCURVE",
"135 -35 OFFCURVE",
"157 -57 CURVE SMOOTH",
"159 -59 OFFCURVE",
"164 -60 OFFCURVE",
"169 -60 CURVE SMOOTH",
"175 -60 OFFCURVE",
"180 -59 OFFCURVE",
"180 -55 CURVE SMOOTH",
"180 -52 OFFCURVE",
"177 -47 OFFCURVE",
"173 -35 CURVE SMOOTH",
"160 11 OFFCURVE",
"170 146 OFFCURVE",
"185 235 CURVE",
"162 235 LINE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"175 -60 OFFCURVE",
"180 -59 OFFCURVE",
"180 -55 CURVE SMOOTH",
"180 -52 OFFCURVE",
"176 -47 OFFCURVE",
"173 -35 CURVE SMOOTH",
"167 -15 OFFCURVE",
"165 10 OFFCURVE",
"165 40 CURVE SMOOTH",
"165 175 OFFCURVE",
"218 400 OFFCURVE",
"277 558 CURVE",
"277 561 OFFCURVE",
"277 563 OFFCURVE",
"271 563 CURVE SMOOTH",
"267 563 OFFCURVE",
"262 560 OFFCURVE",
"258 558 CURVE SMOOTH",
"245 550 OFFCURVE",
"220 491 OFFCURVE",
"196 393 CURVE SMOOTH",
"172 306 OFFCURVE",
"141 132 OFFCURVE",
"141 26 CURVE SMOOTH",
"141 -15 OFFCURVE",
"145 -45 OFFCURVE",
"157 -57 CURVE SMOOTH",
"159 -59 OFFCURVE",
"164 -60 OFFCURVE",
"169 -60 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01219 1070 8 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 8 218 8 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 250;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = brokenbar;
lastChange = "2022-03-22 11:11:28 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"198 299 LINE",
"214 373 OFFCURVE",
"240 458 OFFCURVE",
"277 560 CURVE",
"277 563 LINE",
"276 565 OFFCURVE",
"271 564 OFFCURVE",
"268 561 CURVE",
"245 547 OFFCURVE",
"220 491 OFFCURVE",
"196 393 CURVE SMOOTH",
"188 361 OFFCURVE",
"180 330 OFFCURVE",
"174 299 CURVE"
);
},
{
closed = 1;
nodes = (
"175 -60 OFFCURVE",
"180 -59 OFFCURVE",
"180 -55 CURVE SMOOTH",
"180 -52 OFFCURVE",
"177 -47 OFFCURVE",
"173 -35 CURVE SMOOTH",
"169 -20 OFFCURVE",
"167 4 OFFCURVE",
"167 33 CURVE SMOOTH",
"167 94 OFFCURVE",
"175 175 OFFCURVE",
"185 235 CURVE",
"162 235 LINE",
"155 196 OFFCURVE",
"150 156 OFFCURVE",
"146 117 CURVE SMOOTH",
"143 90 OFFCURVE",
"141 57 OFFCURVE",
"141 26 CURVE SMOOTH",
"141 -11 OFFCURVE",
"145 -45 OFFCURVE",
"157 -57 CURVE SMOOTH",
"159 -59 OFFCURVE",
"164 -60 OFFCURVE",
"169 -60 CURVE SMOOTH"
);
}
);
width = 250;
}
);
unicode = 00A6;
},
{
glyphname = dagger;
lastChange = "2022-03-22 13:37:48 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"148 -267 OFFCURVE",
"149 -265 OFFCURVE",
"147 -260 CURVE SMOOTH",
"144 -251 OFFCURVE",
"142 -247 OFFCURVE",
"142 -247 CURVE",
"140 -232 OFFCURVE",
"139 -218 OFFCURVE",
"139 -205 CURVE SMOOTH",
"139 -76 OFFCURVE",
"207 96 OFFCURVE",
"344 311 CURVE",
"397 318 OFFCURVE",
"433 324 OFFCURVE",
"454 331 CURVE SMOOTH",
"463 334 OFFCURVE",
"469 338 OFFCURVE",
"472 343 CURVE",
"472 347 OFFCURVE",
"466 349 OFFCURVE",
"454 349 CURVE SMOOTH",
"427 349 OFFCURVE",
"396 346 OFFCURVE",
"363 339 CURVE",
"404 398 OFFCURVE",
"437 445 OFFCURVE",
"464 482 CURVE SMOOTH",
"491 518 OFFCURVE",
"510 544 OFFCURVE",
"523 559 CURVE",
"523 562 OFFCURVE",
"518 564 OFFCURVE",
"509 564 CURVE SMOOTH",
"498 564 OFFCURVE",
"487 561 OFFCURVE",
"478 556 CURVE SMOOTH",
"465 549 OFFCURVE",
"449 532 OFFCURVE",
"430 505 CURVE",
"427 502 OFFCURVE",
"423 495 OFFCURVE",
"416 486 CURVE SMOOTH",
"409 476 OFFCURVE",
"400 462 OFFCURVE",
"389 445 CURVE SMOOTH",
"366 412 OFFCURVE",
"342 373 OFFCURVE",
"317 330 CURVE",
"249 318 LINE",
"204 313 OFFCURVE",
"181 304 OFFCURVE",
"181 293 CURVE SMOOTH",
"181 282 OFFCURVE",
"188 276 OFFCURVE",
"202 276 CURVE SMOOTH",
"209 276 OFFCURVE",
"218 278 OFFCURVE",
"229 282 CURVE SMOOTH",
"237 286 OFFCURVE",
"245 290 OFFCURVE",
"254 293 CURVE SMOOTH",
"268 298 OFFCURVE",
"284 302 OFFCURVE",
"302 305 CURVE",
"175 84 OFFCURVE",
"112 -86 OFFCURVE",
"112 -204 CURVE SMOOTH",
"112 -246 OFFCURVE",
"123 -267 OFFCURVE",
"145 -267 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01232 1065 40 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 32 118 32 134 32 150 32 166 32 182 32 198 32 214 32 230 32 246 32 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 32 22 32 38 32 54 32 70 32 86 32 102 32 118 32 134 32 150 32 166 32 182 32 198 32 214 32 230 32 246 32 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 32 22 32 38 32 54 32 70 32 86 32 102 32 118 32 134 32 150 32 166 32 182 32 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 32 213 32 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01220 38 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01242 38 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 446;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = daggerdbl;
lastChange = "2022-03-22 11:11:40 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"145 -268 OFFCURVE",
"145 -268 OFFCURVE",
"145 -267 CURVE SMOOTH",
"145 -258 OFFCURVE",
"139 -216 OFFCURVE",
"139 -205 CURVE SMOOTH",
"139 -94 OFFCURVE",
"186 43 OFFCURVE",
"281 208 CURVE",
"362 222 LINE SMOOTH",
"405 231 OFFCURVE",
"428 239 OFFCURVE",
"433 246 CURVE",
"433 250 OFFCURVE",
"427 252 OFFCURVE",
"415 252 CURVE SMOOTH",
"390 252 OFFCURVE",
"351 247 OFFCURVE",
"297 237 CURVE",
"314 267 OFFCURVE",
"329 291 OFFCURVE",
"342 309 CURVE",
"411 321 LINE SMOOTH",
"446 328 OFFCURVE",
"467 336 OFFCURVE",
"472 343 CURVE",
"472 347 OFFCURVE",
"466 349 OFFCURVE",
"454 349 CURVE SMOOTH",
"435 349 OFFCURVE",
"405 345 OFFCURVE",
"361 338 CURVE",
"402 399 OFFCURVE",
"437 449 OFFCURVE",
"468 488 CURVE SMOOTH",
"479 503 OFFCURVE",
"490 515 OFFCURVE",
"499 526 CURVE SMOOTH",
"521 553 LINE",
"523 557 OFFCURVE",
"524 559 OFFCURVE",
"524 558 CURVE SMOOTH",
"524 562 OFFCURVE",
"519 564 OFFCURVE",
"509 564 CURVE SMOOTH",
"490 564 OFFCURVE",
"475 558 OFFCURVE",
"464 545 CURVE SMOOTH",
"438 517 OFFCURVE",
"412 483 OFFCURVE",
"385 442 CURVE SMOOTH",
"370 419 OFFCURVE",
"348 382 OFFCURVE",
"317 331 CURVE",
"241 319 LINE SMOOTH",
"201 311 OFFCURVE",
"181 302 OFFCURVE",
"181 293 CURVE SMOOTH",
"181 282 OFFCURVE",
"188 276 OFFCURVE",
"202 276 CURVE SMOOTH",
"206 276 OFFCURVE",
"221 280 OFFCURVE",
"247 288 CURVE SMOOTH",
"262 292 OFFCURVE",
"274 295 OFFCURVE",
"283 298 CURVE SMOOTH",
"292 300 OFFCURVE",
"298 301 OFFCURVE",
"301 302 CURVE",
"286 277 OFFCURVE",
"272 253 OFFCURVE",
"261 231 CURVE",
"250 230 OFFCURVE",
"239 228 OFFCURVE",
"228 226 CURVE SMOOTH",
"194 220 LINE SMOOTH",
"159 213 OFFCURVE",
"142 205 OFFCURVE",
"142 196 CURVE SMOOTH",
"142 185 OFFCURVE",
"149 179 OFFCURVE",
"163 179 CURVE SMOOTH",
"172 179 OFFCURVE",
"186 182 OFFCURVE",
"204 189 CURVE SMOOTH",
"215 192 OFFCURVE",
"224 195 OFFCURVE",
"231 198 CURVE",
"247 202 LINE",
"157 30 OFFCURVE",
"112 -105 OFFCURVE",
"112 -204 CURVE SMOOTH",
"112 -247 OFFCURVE",
"123 -268 OFFCURVE",
"144 -268 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 1065 64 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 55 213 55 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01236 62 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01241 62 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01246 62 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01250 62 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 446;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = numero;
lastChange = "2022-03-22 11:11:45 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"597 454 OFFCURVE",
"586 452 OFFCURVE",
"577 436 CURVE SMOOTH",
"527 343 OFFCURVE",
"469 123 OFFCURVE",
"443 16 CURVE",
"372 54 OFFCURVE",
"310 305 OFFCURVE",
"290 398 CURVE",
"287 402 OFFCURVE",
"271 421 OFFCURVE",
"265 421 CURVE SMOOTH",
"257 421 OFFCURVE",
"238 414 OFFCURVE",
"237 405 CURVE SMOOTH",
"236 401 OFFCURVE",
"237 397 OFFCURVE",
"237 392 CURVE SMOOTH",
"237 391 OFFCURVE",
"237 390 OFFCURVE",
"236 388 CURVE SMOOTH",
"185 258 OFFCURVE",
"120 76 OFFCURVE",
"100 11 CURVE SMOOTH",
"96 -3 OFFCURVE",
"84 -35 OFFCURVE",
"84 -38 CURVE SMOOTH",
"84 -43 OFFCURVE",
"89 -47 OFFCURVE",
"95 -47 CURVE SMOOTH",
"108 -47 OFFCURVE",
"116 -34 OFFCURVE",
"120 -23 CURVE SMOOTH",
"153 86 OFFCURVE",
"250 374 OFFCURVE",
"252 380 CURVE",
"306 164 OFFCURVE",
"364 21 OFFCURVE",
"412 -14 CURVE",
"413 -28 OFFCURVE",
"417 -50 OFFCURVE",
"436 -50 CURVE SMOOTH",
"450 -50 OFFCURVE",
"466 -17 OFFCURVE",
"467 -7 CURVE SMOOTH",
"468 -1 OFFCURVE",
"467 -2 OFFCURVE",
"464 0 CURVE",
"461 5 OFFCURVE",
"466 34 OFFCURVE",
"468 39 CURVE SMOOTH",
"504 152 OFFCURVE",
"557 312 OFFCURVE",
"595 393 CURVE SMOOTH",
"604 412 OFFCURVE",
"612 434 OFFCURVE",
"612 444 CURVE SMOOTH",
"612 448 OFFCURVE",
"609 454 OFFCURVE",
"603 454 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"159 172 OFFCURVE",
"287 174 OFFCURVE",
"334 174 CURVE SMOOTH",
"379 174 OFFCURVE",
"526 175 OFFCURVE",
"571 180 CURVE",
"571 191 OFFCURVE",
"557 195 OFFCURVE",
"531 196 CURVE SMOOTH",
"482 197 OFFCURVE",
"337 197 OFFCURVE",
"274 197 CURVE SMOOTH",
"184 197 OFFCURVE",
"140 195 OFFCURVE",
"131 193 CURVE SMOOTH",
"120 191 OFFCURVE",
"115 187 OFFCURVE",
"115 184 CURVE SMOOTH",
"115 176 OFFCURVE",
"121 172 OFFCURVE",
"146 172 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"190 276 OFFCURVE",
"318 278 OFFCURVE",
"364 278 CURVE SMOOTH",
"410 278 OFFCURVE",
"557 279 OFFCURVE",
"602 284 CURVE",
"602 295 OFFCURVE",
"588 299 OFFCURVE",
"562 300 CURVE SMOOTH",
"513 301 OFFCURVE",
"368 301 OFFCURVE",
"305 301 CURVE SMOOTH",
"215 301 OFFCURVE",
"171 299 OFFCURVE",
"162 297 CURVE SMOOTH",
"151 295 OFFCURVE",
"146 291 OFFCURVE",
"146 288 CURVE SMOOTH",
"146 280 OFFCURVE",
"152 276 OFFCURVE",
"177 276 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"87 -35 OFFCURVE",
"92 -23 OFFCURVE",
"96 -4 CURVE SMOOTH",
"120 103 OFFCURVE",
"139 183 OFFCURVE",
"171 280 CURVE SMOOTH",
"195 352 LINE",
"202 371 LINE",
"205 362 OFFCURVE",
"215 333 OFFCURVE",
"221 311 CURVE SMOOTH",
"254 190 OFFCURVE",
"323 -19 OFFCURVE",
"368 -19 CURVE SMOOTH",
"379 -19 OFFCURVE",
"390 2 OFFCURVE",
"391 11 CURVE SMOOTH",
"392 17 OFFCURVE",
"392 25 OFFCURVE",
"390 27 CURVE",
"387 32 OFFCURVE",
"392 58 OFFCURVE",
"393 62 CURVE SMOOTH",
"409 157 OFFCURVE",
"452 330 OFFCURVE",
"497 417 CURVE SMOOTH",
"500 422 OFFCURVE",
"502 426 OFFCURVE",
"502 429 CURVE SMOOTH",
"502 433 OFFCURVE",
"495 435 OFFCURVE",
"491 435 CURVE SMOOTH",
"481 435 OFFCURVE",
"474 428 OFFCURVE",
"469 418 CURVE SMOOTH",
"423 330 OFFCURVE",
"383 131 OFFCURVE",
"368 48 CURVE",
"335 57 OFFCURVE",
"262 307 OFFCURVE",
"242 393 CURVE SMOOTH",
"237 414 OFFCURVE",
"223 417 OFFCURVE",
"208 418 CURVE SMOOTH",
"194 418 OFFCURVE",
"187 408 OFFCURVE",
"186 401 CURVE SMOOTH",
"185 396 OFFCURVE",
"186 390 OFFCURVE",
"186 386 CURVE SMOOTH",
"186 385 OFFCURVE",
"186 380 OFFCURVE",
"185 376 CURVE SMOOTH",
"155 294 OFFCURVE",
"79 54 OFFCURVE",
"71 -26 CURVE SMOOTH",
"71 -29 OFFCURVE",
"70 -35 OFFCURVE",
"75 -35 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"500 244 OFFCURVE",
"498 245 OFFCURVE",
"498 250 CURVE SMOOTH",
"498 253 LINE SMOOTH",
"499 260 OFFCURVE",
"503 270 OFFCURVE",
"513 285 CURVE SMOOTH",
"521 298 OFFCURVE",
"529 309 OFFCURVE",
"536 318 CURVE SMOOTH",
"558 344 OFFCURVE",
"575 362 OFFCURVE",
"587 370 CURVE SMOOTH",
"595 374 OFFCURVE",
"607 377 OFFCURVE",
"624 377 CURVE SMOOTH",
"650 377 LINE",
"653 374 OFFCURVE",
"654 371 OFFCURVE",
"654 368 CURVE SMOOTH",
"654 359 OFFCURVE",
"647 345 OFFCURVE",
"634 328 CURVE SMOOTH",
"623 314 OFFCURVE",
"612 302 OFFCURVE",
"600 294 CURVE SMOOTH",
"568 270 OFFCURVE",
"538 253 OFFCURVE",
"511 245 CURVE SMOOTH",
"509 244 OFFCURVE",
"507 244 OFFCURVE",
"505 244 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"504 225 OFFCURVE",
"513 227 OFFCURVE",
"520 229 CURVE SMOOTH",
"549 237 OFFCURVE",
"581 255 OFFCURVE",
"615 281 CURVE SMOOTH",
"630 292 OFFCURVE",
"646 307 OFFCURVE",
"658 324 CURVE SMOOTH",
"673 345 OFFCURVE",
"681 362 OFFCURVE",
"681 374 CURVE SMOOTH",
"681 378 LINE",
"680 378 OFFCURVE",
"680 379 OFFCURVE",
"680 380 CURVE",
"686 380 OFFCURVE",
"693 381 OFFCURVE",
"701 382 CURVE SMOOTH",
"708 383 OFFCURVE",
"713 386 OFFCURVE",
"713 390 CURVE SMOOTH",
"713 394 OFFCURVE",
"709 397 OFFCURVE",
"701 397 CURVE SMOOTH",
"637 396 LINE",
"637 396 OFFCURVE",
"635 397 OFFCURVE",
"634 398 CURVE",
"618 406 LINE SMOOTH",
"614 408 OFFCURVE",
"609 411 OFFCURVE",
"603 412 CURVE SMOOTH",
"598 412 OFFCURVE",
"592 411 OFFCURVE",
"587 408 CURVE SMOOTH",
"571 398 LINE",
"557 394 OFFCURVE",
"547 393 OFFCURVE",
"540 393 CURVE SMOOTH",
"532 393 OFFCURVE",
"528 389 OFFCURVE",
"528 383 CURVE SMOOTH",
"528 378 OFFCURVE",
"531 375 OFFCURVE",
"537 373 CURVE SMOOTH",
"541 372 OFFCURVE",
"544 371 OFFCURVE",
"546 370 CURVE SMOOTH",
"548 369 OFFCURVE",
"550 373 OFFCURVE",
"549 373 CURVE",
"547 372 LINE",
"531 353 OFFCURVE",
"519 338 OFFCURVE",
"510 326 CURVE SMOOTH",
"487 300 OFFCURVE",
"475 275 OFFCURVE",
"475 250 CURVE SMOOTH",
"475 234 OFFCURVE",
"484 225 OFFCURVE",
"499 225 CURVE SMOOTH"
);
}
);
width = 623;
}
);
unicode = 2116;
},
{
glyphname = apostrophemod;
lastChange = "2022-03-22 11:11:52 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"183 515 LINE",
"188 518 OFFCURVE",
"198 529 OFFCURVE",
"201 533 CURVE SMOOTH",
"229 562 OFFCURVE",
"269 610 OFFCURVE",
"282 648 CURVE",
"284 651 LINE",
"284 663 OFFCURVE",
"260 674 OFFCURVE",
"250 674 CURVE SMOOTH",
"246 674 OFFCURVE",
"241 672 OFFCURVE",
"239 669 CURVE",
"240 666 OFFCURVE",
"240 663 OFFCURVE",
"240 660 CURVE SMOOTH",
"240 609 OFFCURVE",
"180 532 OFFCURVE",
"180 517 CURVE SMOOTH",
"180 515 OFFCURVE",
"180 515 OFFCURVE",
"182 515 CURVE SMOOTH"
);
}
);
width = 104;
}
);
unicode = 02BC;
},
{
glyphname = doubleprimemod;
lastChange = "2022-03-22 11:11:56 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"183 515 LINE",
"187 518 OFFCURVE",
"195 527 OFFCURVE",
"199 530 CURVE",
"223 555 OFFCURVE",
"259 597 OFFCURVE",
"270 630 CURVE",
"273 632 LINE",
"273 643 OFFCURVE",
"251 652 OFFCURVE",
"243 652 CURVE SMOOTH",
"239 652 OFFCURVE",
"234 651 OFFCURVE",
"233 648 CURVE",
"240 604 OFFCURVE",
"180 530 OFFCURVE",
"180 516 CURVE SMOOTH",
"180 515 OFFCURVE",
"180 515 OFFCURVE",
"182 515 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"278 518 OFFCURVE",
"287 527 OFFCURVE",
"291 530 CURVE",
"315 555 OFFCURVE",
"351 597 OFFCURVE",
"362 630 CURVE",
"364 632 LINE",
"364 643 OFFCURVE",
"342 652 OFFCURVE",
"334 652 CURVE SMOOTH",
"330 652 OFFCURVE",
"326 651 OFFCURVE",
"324 648 CURVE",
"331 604 OFFCURVE",
"272 530 OFFCURVE",
"272 516 CURVE SMOOTH",
"272 515 OFFCURVE",
"272 515 OFFCURVE",
"274 515 CURVE"
);
}
);
width = 184;
}
);
unicode = 02BA;
},
{
glyphname = primemod;
lastChange = "2022-03-22 11:12:01 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"183 521 LINE",
"186 523 OFFCURVE",
"195 532 OFFCURVE",
"198 536 CURVE",
"222 559 OFFCURVE",
"257 600 OFFCURVE",
"267 631 CURVE",
"268 631 OFFCURVE",
"268 632 OFFCURVE",
"268 633 CURVE SMOOTH",
"268 643 OFFCURVE",
"248 652 OFFCURVE",
"240 652 CURVE SMOOTH",
"236 652 OFFCURVE",
"233 651 OFFCURVE",
"230 648 CURVE",
"237 606 OFFCURVE",
"180 536 OFFCURVE",
"180 522 CURVE SMOOTH",
"180 521 OFFCURVE",
"180 521 OFFCURVE",
"182 521 CURVE SMOOTH"
);
}
);
width = 88;
}
);
unicode = 02B9;
},
{
color = 3;
glyphname = dieresiscomb;
lastChange = "2022-03-25 01:03:20 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{279, 414}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"311 388 OFFCURVE",
"311 408 OFFCURVE",
"318 416 CURVE",
"324 426 OFFCURVE",
"328 433 OFFCURVE",
"328 440 CURVE SMOOTH",
"328 442 OFFCURVE",
"326 443 OFFCURVE",
"322 443 CURVE SMOOTH",
"309 443 OFFCURVE",
"275 425 OFFCURVE",
"275 410 CURVE SMOOTH",
"275 403 OFFCURVE",
"283 388 OFFCURVE",
"290 388 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"220 388 OFFCURVE",
"220 408 OFFCURVE",
"227 416 CURVE",
"233 426 OFFCURVE",
"237 433 OFFCURVE",
"237 440 CURVE SMOOTH",
"237 442 OFFCURVE",
"235 443 OFFCURVE",
"231 443 CURVE SMOOTH",
"218 443 OFFCURVE",
"184 425 OFFCURVE",
"184 410 CURVE SMOOTH",
"184 403 OFFCURVE",
"192 388 OFFCURVE",
"199 388 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 0308;
},
{
color = 3;
glyphname = dotaccentcomb;
lastChange = "2022-03-25 01:02:23 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{260, 415}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"259 388 OFFCURVE",
"259 408 OFFCURVE",
"266 416 CURVE",
"272 426 OFFCURVE",
"276 433 OFFCURVE",
"276 440 CURVE SMOOTH",
"276 442 OFFCURVE",
"274 443 OFFCURVE",
"270 443 CURVE SMOOTH",
"257 443 OFFCURVE",
"223 425 OFFCURVE",
"223 410 CURVE SMOOTH",
"223 403 OFFCURVE",
"231 388 OFFCURVE",
"238 388 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 0307;
},
{
color = 3;
glyphname = gravecomb;
lastChange = "2022-03-24 22:42:39 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = _topviet;
position = "{250, 284}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"264 365 OFFCURVE",
"265 366 OFFCURVE",
"265 367 CURVE SMOOTH",
"265 372 OFFCURVE",
"258 379 OFFCURVE",
"254 381 CURVE",
"240 397 OFFCURVE",
"205 437 OFFCURVE",
"191 454 CURVE SMOOTH",
"185 462 OFFCURVE",
"179 468 OFFCURVE",
"169 468 CURVE SMOOTH",
"160 468 OFFCURVE",
"143 458 OFFCURVE",
"143 448 CURVE SMOOTH",
"143 440 OFFCURVE",
"169 424 OFFCURVE",
"179 416 CURVE SMOOTH",
"203 400 OFFCURVE",
"252 365 OFFCURVE",
"263 365 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"264 365 OFFCURVE",
"265 366 OFFCURVE",
"265 368 CURVE SMOOTH",
"265 372 OFFCURVE",
"259 379 OFFCURVE",
"251 385 CURVE SMOOTH",
"238 396 OFFCURVE",
"205 437 OFFCURVE",
"191 454 CURVE SMOOTH",
"185 462 OFFCURVE",
"179 468 OFFCURVE",
"169 468 CURVE SMOOTH",
"160 468 OFFCURVE",
"143 458 OFFCURVE",
"143 448 CURVE SMOOTH",
"143 440 OFFCURVE",
"169 424 OFFCURVE",
"179 416 CURVE SMOOTH",
"203 400 OFFCURVE",
"252 365 OFFCURVE",
"262 365 CURVE SMOOTH"
);
}
);
width = 500;
}
);
note = gravecomb;
unicode = 0300;
},
{
color = 3;
glyphname = acutecomb;
lastChange = "2022-03-24 22:47:34 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = _topviet;
position = "{241, 279}";
},
{
name = top;
position = "{250, 437}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"249 365 OFFCURVE",
"297 400 OFFCURVE",
"322 416 CURVE SMOOTH",
"332 424 OFFCURVE",
"357 440 OFFCURVE",
"357 448 CURVE SMOOTH",
"357 458 OFFCURVE",
"340 468 OFFCURVE",
"332 468 CURVE SMOOTH",
"322 468 OFFCURVE",
"316 462 OFFCURVE",
"310 454 CURVE SMOOTH",
"295 437 OFFCURVE",
"261 397 OFFCURVE",
"246 381 CURVE",
"243 379 OFFCURVE",
"235 372 OFFCURVE",
"235 367 CURVE SMOOTH",
"235 366 OFFCURVE",
"237 365 OFFCURVE",
"238 365 CURVE SMOOTH"
);
}
);
width = 500;
}
);
note = acutecomb;
unicode = 0301;
},
{
color = 3;
glyphname = hungarumlautcomb;
lastChange = "2022-03-21 16:58:08 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"296 368 OFFCURVE",
"317 409 OFFCURVE",
"330 429 CURVE",
"333 437 OFFCURVE",
"344 454 OFFCURVE",
"344 464 CURVE SMOOTH",
"344 474 OFFCURVE",
"330 482 OFFCURVE",
"323 482 CURVE SMOOTH",
"316 482 OFFCURVE",
"314 474 OFFCURVE",
"311 465 CURVE SMOOTH",
"306 444 OFFCURVE",
"294 401 OFFCURVE",
"289 382 CURVE",
"289 380 OFFCURVE",
"286 374 OFFCURVE",
"286 369 CURVE SMOOTH",
"286 367 LINE SMOOTH",
"286 366 OFFCURVE",
"287 365 OFFCURVE",
"289 365 CURVE"
);
},
{
closed = 1;
nodes = (
"218 368 OFFCURVE",
"240 409 OFFCURVE",
"252 429 CURVE SMOOTH",
"256 437 OFFCURVE",
"267 454 OFFCURVE",
"267 464 CURVE SMOOTH",
"267 474 OFFCURVE",
"252 482 OFFCURVE",
"246 482 CURVE SMOOTH",
"239 482 OFFCURVE",
"236 474 OFFCURVE",
"234 465 CURVE SMOOTH",
"229 444 OFFCURVE",
"217 401 OFFCURVE",
"212 382 CURVE",
"211 380 OFFCURVE",
"209 374 OFFCURVE",
"209 369 CURVE SMOOTH",
"209 367 LINE SMOOTH",
"209 366 OFFCURVE",
"210 365 OFFCURVE",
"211 365 CURVE"
);
}
);
width = 500;
}
);
unicode = 030B;
},
{
color = 3;
glyphname = caroncomb.alt;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{250, 554}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"253 433 LINE",
"256 436 OFFCURVE",
"265 445 OFFCURVE",
"267 448 CURVE",
"289 472 OFFCURVE",
"320 513 OFFCURVE",
"329 544 CURVE",
"330 545 OFFCURVE",
"330 546 OFFCURVE",
"330 547 CURVE SMOOTH",
"330 556 OFFCURVE",
"310 564 OFFCURVE",
"303 564 CURVE",
"298 563 OFFCURVE",
"295 562 OFFCURVE",
"293 560 CURVE",
"293 549 LINE SMOOTH",
"293 508 OFFCURVE",
"250 446 OFFCURVE",
"250 435 CURVE",
"251 433 OFFCURVE",
"251 433 OFFCURVE",
"252 433 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = circumflexcomb;
lastChange = "2022-03-25 01:06:57 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
},
{
name = topviet;
position = "{359, 380}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"156 366 OFFCURVE",
"158 366 CURVE SMOOTH",
"160 366 OFFCURVE",
"164 367 OFFCURVE",
"168 369 CURVE SMOOTH",
"193 380 OFFCURVE",
"236 406 OFFCURVE",
"271 425 CURVE",
"282 403 OFFCURVE",
"303 380 OFFCURVE",
"314 371 CURVE SMOOTH",
"319 367 OFFCURVE",
"323 365 OFFCURVE",
"325 365 CURVE SMOOTH",
"327 365 OFFCURVE",
"328 366 OFFCURVE",
"328 369 CURVE SMOOTH",
"328 373 OFFCURVE",
"326 379 OFFCURVE",
"323 388 CURVE SMOOTH",
"316 405 OFFCURVE",
"310 430 OFFCURVE",
"305 454 CURVE SMOOTH",
"302 468 OFFCURVE",
"298 474 OFFCURVE",
"292 474 CURVE SMOOTH",
"285 474 OFFCURVE",
"276 467 OFFCURVE",
"261 454 CURVE SMOOTH",
"233 430 OFFCURVE",
"155 370 OFFCURVE",
"155 368 CURVE SMOOTH",
"155 367 OFFCURVE"
);
}
);
width = 500;
}
);
unicode = 0302;
},
{
color = 3;
glyphname = caroncomb;
lastChange = "2022-03-25 01:07:20 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
},
{
name = top_viet;
position = "{286, 407}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"258 345 OFFCURVE",
"267 349 OFFCURVE",
"277 357 CURVE SMOOTH",
"298 376 OFFCURVE",
"347 414 OFFCURVE",
"367 430 CURVE SMOOTH",
"371 434 OFFCURVE",
"381 440 OFFCURVE",
"382 445 CURVE",
"383 446 OFFCURVE",
"381 447 OFFCURVE",
"381 447 CURVE",
"369 447 OFFCURVE",
"309 413 OFFCURVE",
"264 388 CURVE",
"249 403 OFFCURVE",
"199 447 OFFCURVE",
"188 447 CURVE",
"185 445 LINE",
"183 440 OFFCURVE",
"189 434 OFFCURVE",
"191 430 CURVE SMOOTH",
"200 414 OFFCURVE",
"222 376 OFFCURVE",
"230 357 CURVE SMOOTH",
"234 349 OFFCURVE",
"241 345 OFFCURVE",
"249 345 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"385 471 OFFCURVE",
"383 471 CURVE SMOOTH",
"381 471 OFFCURVE",
"377 470 OFFCURVE",
"373 468 CURVE SMOOTH",
"348 457 OFFCURVE",
"305 431 OFFCURVE",
"270 412 CURVE",
"259 434 OFFCURVE",
"238 457 OFFCURVE",
"227 466 CURVE SMOOTH",
"222 470 OFFCURVE",
"218 472 OFFCURVE",
"216 472 CURVE SMOOTH",
"214 472 OFFCURVE",
"213 471 OFFCURVE",
"213 468 CURVE SMOOTH",
"213 464 OFFCURVE",
"215 458 OFFCURVE",
"218 449 CURVE SMOOTH",
"225 432 OFFCURVE",
"231 407 OFFCURVE",
"236 383 CURVE SMOOTH",
"239 369 OFFCURVE",
"243 363 OFFCURVE",
"249 363 CURVE SMOOTH",
"256 363 OFFCURVE",
"265 370 OFFCURVE",
"280 383 CURVE SMOOTH",
"308 407 OFFCURVE",
"386 467 OFFCURVE",
"386 469 CURVE SMOOTH",
"386 470 OFFCURVE"
);
}
);
width = 500;
}
);
unicode = 030C;
},
{
color = 3;
glyphname = brevecomb;
lastChange = "2022-03-24 23:17:50 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{274, 400}";
},
{
name = topviet;
position = "{274, 370}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"302 365 OFFCURVE",
"341 402 OFFCURVE",
"344 437 CURVE SMOOTH",
"345 443 OFFCURVE",
"340 447 OFFCURVE",
"332 436 CURVE SMOOTH",
"312 408 OFFCURVE",
"286 397 OFFCURVE",
"258 397 CURVE SMOOTH",
"217 397 OFFCURVE",
"199 416 OFFCURVE",
"195 436 CURVE SMOOTH",
"194 443 OFFCURVE",
"192 446 OFFCURVE",
"189 446 CURVE SMOOTH",
"185 446 OFFCURVE",
"181 437 OFFCURVE",
"181 424 CURVE SMOOTH",
"181 392 OFFCURVE",
"205 365 OFFCURVE",
"251 365 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 0306;
},
{
color = 3;
glyphname = ringcomb;
lastChange = "2022-03-21 16:58:41 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"291 366 OFFCURVE",
"327 399 OFFCURVE",
"327 433 CURVE SMOOTH",
"327 442 LINE",
"324 459 OFFCURVE",
"308 476 OFFCURVE",
"285 476 CURVE SMOOTH",
"246 476 OFFCURVE",
"211 439 OFFCURVE",
"211 401 CURVE SMOOTH",
"211 378 OFFCURVE",
"229 366 OFFCURVE",
"251 366 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"242 386 OFFCURVE",
"237 394 OFFCURVE",
"237 409 CURVE SMOOTH",
"237 435 OFFCURVE",
"257 458 OFFCURVE",
"277 458 CURVE SMOOTH",
"293 458 OFFCURVE",
"303 442 OFFCURVE",
"303 430 CURVE SMOOTH",
"303 409 OFFCURVE",
"285 386 OFFCURVE",
"256 386 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 030A;
},
{
color = 3;
glyphname = ringcomb_acutecomb;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
components = (
{
name = ringcomb;
},
{
alignment = -1;
name = acutecomb;
transform = "{1, 0, 0, 1, 70, 77}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
},
{
color = 3;
glyphname = tildecomb;
lastChange = "2022-03-21 16:58:46 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"315 383 OFFCURVE",
"329 405 OFFCURVE",
"336 424 CURVE",
"336 430 OFFCURVE",
"336 435 OFFCURVE",
"332 435 CURVE",
"328 433 OFFCURVE",
"316 415 OFFCURVE",
"298 415 CURVE SMOOTH",
"258 415 OFFCURVE",
"244 439 OFFCURVE",
"215 439 CURVE SMOOTH",
"185 439 OFFCURVE",
"164 401 OFFCURVE",
"164 390 CURVE SMOOTH",
"164 388 OFFCURVE",
"166 386 OFFCURVE",
"167 386 CURVE SMOOTH",
"173 386 OFFCURVE",
"190 410 OFFCURVE",
"212 410 CURVE SMOOTH",
"241 410 OFFCURVE",
"260 383 OFFCURVE",
"292 383 CURVE SMOOTH"
);
}
);
width = 500;
}
);
note = tildecomb;
unicode = 0303;
},
{
color = 3;
glyphname = tildecomb_dotaccentcomb;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
components = (
{
name = tildecomb;
},
{
alignment = -1;
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 10, 87}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = tildecomb;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 0, 137}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 195;
}
);
},
{
color = 3;
glyphname = tildecomb_macroncomb;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
components = (
{
name = tildecomb;
},
{
alignment = -1;
name = macroncomb;
transform = "{1, 0, 0, 1, 10, 87}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = tildecomb;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 0, 137}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 218;
}
);
},
{
color = 3;
glyphname = macroncomb;
lastChange = "2022-03-25 01:02:05 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"216 391 OFFCURVE",
"272 394 OFFCURVE",
"332 393 CURVE",
"340 392 OFFCURVE",
"346 392 OFFCURVE",
"350 392 CURVE SMOOTH",
"359 392 LINE SMOOTH",
"365 392 OFFCURVE",
"368 394 OFFCURVE",
"368 399 CURVE SMOOTH",
"368 402 OFFCURVE",
"365 405 OFFCURVE",
"360 406 CURVE SMOOTH",
"337 410 LINE SMOOTH",
"308 415 OFFCURVE",
"276 418 OFFCURVE",
"239 418 CURVE SMOOTH",
"218 418 OFFCURVE",
"195 417 OFFCURVE",
"171 415 CURVE",
"158 405 OFFCURVE",
"152 395 OFFCURVE",
"152 386 CURVE SMOOTH",
"152 382 OFFCURVE",
"154 380 OFFCURVE",
"159 380 CURVE"
);
}
);
width = 500;
}
);
unicode = 0304;
},
{
color = 3;
glyphname = hookabovecomb;
lastChange = "2022-03-25 00:45:35 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = _topviet;
position = "{256, 287}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"251 366 OFFCURVE",
"254 368 OFFCURVE",
"254 372 CURVE",
"278 398 OFFCURVE",
"283 403 OFFCURVE",
"302 419 CURVE SMOOTH",
"327 438 OFFCURVE",
"338 458 OFFCURVE",
"338 478 CURVE SMOOTH",
"338 504 OFFCURVE",
"313 516 OFFCURVE",
"289 516 CURVE SMOOTH",
"234 516 OFFCURVE",
"213 490 OFFCURVE",
"213 467 CURVE SMOOTH",
"213 449 OFFCURVE",
"231 485 OFFCURVE",
"269 485 CURVE SMOOTH",
"286 485 OFFCURVE",
"295 480 OFFCURVE",
"295 467 CURVE SMOOTH",
"295 456 OFFCURVE",
"288 442 OFFCURVE",
"273 423 CURVE SMOOTH",
"262 411 OFFCURVE",
"250 400 OFFCURVE",
"244 383 CURVE SMOOTH",
"243 381 OFFCURVE",
"242 378 OFFCURVE",
"242 375 CURVE SMOOTH",
"242 369 OFFCURVE",
"246 366 OFFCURVE",
"250 366 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"251 366 OFFCURVE",
"254 368 OFFCURVE",
"262 378 CURVE",
"278 398 OFFCURVE",
"283 403 OFFCURVE",
"302 419 CURVE SMOOTH",
"327 438 OFFCURVE",
"338 458 OFFCURVE",
"338 475 CURVE SMOOTH",
"338 504 OFFCURVE",
"314 516 OFFCURVE",
"290 516 CURVE SMOOTH",
"247 516 OFFCURVE",
"213 484 OFFCURVE",
"213 467 CURVE SMOOTH",
"213 463 OFFCURVE",
"214 462 OFFCURVE",
"215 462 CURVE SMOOTH",
"221 462 OFFCURVE",
"239 485 OFFCURVE",
"272 485 CURVE SMOOTH",
"289 485 OFFCURVE",
"295 476 OFFCURVE",
"295 462 CURVE SMOOTH",
"295 454 OFFCURVE",
"290 442 OFFCURVE",
"273 423 CURVE SMOOTH",
"249 396 OFFCURVE",
"242 381 OFFCURVE",
"242 372 CURVE SMOOTH",
"242 369 OFFCURVE",
"244 366 OFFCURVE",
"248 366 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"252 366 OFFCURVE",
"255 368 OFFCURVE",
"263 377 CURVE",
"278 396 OFFCURVE",
"283 401 OFFCURVE",
"300 416 CURVE SMOOTH",
"324 434 OFFCURVE",
"334 453 OFFCURVE",
"334 469 CURVE SMOOTH",
"334 496 OFFCURVE",
"312 507 OFFCURVE",
"289 507 CURVE SMOOTH",
"249 507 OFFCURVE",
"217 477 OFFCURVE",
"217 461 CURVE SMOOTH",
"217 457 OFFCURVE",
"218 456 OFFCURVE",
"218 456 CURVE SMOOTH",
"224 456 OFFCURVE",
"241 478 OFFCURVE",
"272 478 CURVE SMOOTH",
"288 478 OFFCURVE",
"294 470 OFFCURVE",
"294 456 CURVE SMOOTH",
"294 449 OFFCURVE",
"289 438 OFFCURVE",
"273 420 CURVE SMOOTH",
"251 394 OFFCURVE",
"244 380 OFFCURVE",
"244 372 CURVE SMOOTH",
"244 369 OFFCURVE",
"246 366 OFFCURVE",
"250 366 CURVE SMOOTH"
);
}
);
width = 500;
}
);
note = hookabovecomb;
unicode = 0309;
},
{
color = 3;
glyphname = dblgravecomb;
lastChange = "2022-03-21 16:59:41 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"214 365 OFFCURVE",
"215 366 OFFCURVE",
"215 367 CURVE SMOOTH",
"215 372 OFFCURVE",
"208 379 OFFCURVE",
"204 381 CURVE",
"190 397 OFFCURVE",
"155 437 OFFCURVE",
"141 454 CURVE SMOOTH",
"135 462 OFFCURVE",
"129 468 OFFCURVE",
"119 468 CURVE SMOOTH",
"110 468 OFFCURVE",
"93 458 OFFCURVE",
"93 448 CURVE SMOOTH",
"93 440 OFFCURVE",
"119 424 OFFCURVE",
"129 416 CURVE SMOOTH",
"153 400 OFFCURVE",
"202 365 OFFCURVE",
"213 365 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"301 365 OFFCURVE",
"302 366 OFFCURVE",
"302 367 CURVE SMOOTH",
"302 372 OFFCURVE",
"295 379 OFFCURVE",
"291 381 CURVE",
"277 397 OFFCURVE",
"242 437 OFFCURVE",
"228 454 CURVE SMOOTH",
"222 462 OFFCURVE",
"216 468 OFFCURVE",
"206 468 CURVE SMOOTH",
"197 468 OFFCURVE",
"180 458 OFFCURVE",
"180 448 CURVE SMOOTH",
"180 440 OFFCURVE",
"206 424 OFFCURVE",
"216 416 CURVE SMOOTH",
"240 400 OFFCURVE",
"289 365 OFFCURVE",
"300 365 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 030F;
},
{
color = 3;
glyphname = breveinvertedcomb;
lastChange = "2022-03-21 16:59:44 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"224 425 OFFCURVE",
"181 401 OFFCURVE",
"166 356 CURVE",
"166 352 OFFCURVE",
"169 349 OFFCURVE",
"172 349 CURVE SMOOTH",
"175 349 OFFCURVE",
"178 350 OFFCURVE",
"182 354 CURVE SMOOTH",
"202 374 OFFCURVE",
"234 393 OFFCURVE",
"262 393 CURVE SMOOTH",
"293 393 OFFCURVE",
"306 374 OFFCURVE",
"313 354 CURVE",
"316 349 OFFCURVE",
"320 345 OFFCURVE",
"324 345 CURVE SMOOTH",
"328 345 OFFCURVE",
"333 348 OFFCURVE",
"333 359 CURVE SMOOTH",
"333 363 OFFCURVE",
"332 368 OFFCURVE",
"331 374 CURVE SMOOTH",
"323 409 OFFCURVE",
"294 425 OFFCURVE",
"263 425 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"209 446 OFFCURVE",
"170 409 OFFCURVE",
"167 374 CURVE SMOOTH",
"166 368 OFFCURVE",
"171 364 OFFCURVE",
"179 375 CURVE SMOOTH",
"199 403 OFFCURVE",
"225 414 OFFCURVE",
"253 414 CURVE SMOOTH",
"294 414 OFFCURVE",
"312 395 OFFCURVE",
"316 375 CURVE SMOOTH",
"317 368 OFFCURVE",
"319 365 OFFCURVE",
"322 365 CURVE SMOOTH",
"326 365 OFFCURVE",
"330 374 OFFCURVE",
"330 387 CURVE SMOOTH",
"330 419 OFFCURVE",
"306 446 OFFCURVE",
"260 446 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 0311;
},
{
color = 3;
glyphname = commaturnedabovecomb;
lastChange = "2022-03-21 16:59:47 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"266 366 OFFCURVE",
"275 378 OFFCURVE",
"275 386 CURVE SMOOTH",
"275 395 OFFCURVE",
"268 402 OFFCURVE",
"268 411 CURVE SMOOTH",
"268 428 OFFCURVE",
"283 456 OFFCURVE",
"300 476 CURVE SMOOTH",
"310 489 OFFCURVE",
"316 497 OFFCURVE",
"326 508 CURVE",
"326 512 OFFCURVE",
"326 519 OFFCURVE",
"319 519 CURVE",
"308 510 OFFCURVE",
"295 496 OFFCURVE",
"291 492 CURVE SMOOTH",
"265 466 OFFCURVE",
"224 423 OFFCURVE",
"224 389 CURVE SMOOTH",
"224 375 OFFCURVE",
"229 366 OFFCURVE",
"250 366 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 0312;
},
{
color = 3;
glyphname = horncomb;
lastChange = "2022-03-21 16:38:21 +0000";
layers = (
{
anchors = (
{
name = _horn;
position = "{250, 300}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"331 275 OFFCURVE",
"362 303 OFFCURVE",
"374 346 CURVE SMOOTH",
"378 360 OFFCURVE",
"383 377 OFFCURVE",
"383 390 CURVE SMOOTH",
"383 403 OFFCURVE",
"378 412 OFFCURVE",
"367 412 CURVE SMOOTH",
"356 412 OFFCURVE",
"349 405 OFFCURVE",
"346 393 CURVE SMOOTH",
"338 347 OFFCURVE",
"323 302 OFFCURVE",
"290 298 CURVE SMOOTH",
"285 297 OFFCURVE",
"280 297 OFFCURVE",
"275 297 CURVE SMOOTH",
"264 297 OFFCURVE",
"255 298 OFFCURVE",
"250 300 CURVE SMOOTH",
"246 301 OFFCURVE",
"244 299 OFFCURVE",
"244 297 CURVE SMOOTH",
"244 282 OFFCURVE",
"266 275 OFFCURVE",
"292 275 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 031B;
},
{
color = 3;
glyphname = dotbelowcomb;
lastChange = "2022-03-21 16:38:21 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"262 -138 OFFCURVE",
"262 -112 OFFCURVE",
"270 -102 CURVE SMOOTH",
"278 -89 OFFCURVE",
"282 -81 OFFCURVE",
"282 -73 CURVE SMOOTH",
"282 -69 OFFCURVE",
"280 -68 OFFCURVE",
"276 -68 CURVE SMOOTH",
"260 -68 OFFCURVE",
"217 -90 OFFCURVE",
"217 -111 CURVE SMOOTH",
"217 -119 OFFCURVE",
"226 -138 OFFCURVE",
"237 -138 CURVE SMOOTH"
);
}
);
width = 500;
}
);
note = dotbelowcomb;
unicode = 0323;
},
{
color = 3;
glyphname = dieresisbelowcomb;
lastChange = "2022-03-21 16:38:21 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"306 -126 OFFCURVE",
"306 -106 OFFCURVE",
"313 -98 CURVE",
"319 -88 OFFCURVE",
"323 -81 OFFCURVE",
"323 -74 CURVE SMOOTH",
"323 -72 OFFCURVE",
"321 -71 OFFCURVE",
"317 -71 CURVE SMOOTH",
"304 -71 OFFCURVE",
"270 -89 OFFCURVE",
"270 -104 CURVE SMOOTH",
"270 -111 OFFCURVE",
"278 -126 OFFCURVE",
"285 -126 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"215 -126 OFFCURVE",
"215 -106 OFFCURVE",
"222 -98 CURVE",
"228 -88 OFFCURVE",
"232 -81 OFFCURVE",
"232 -74 CURVE SMOOTH",
"232 -72 OFFCURVE",
"230 -71 OFFCURVE",
"226 -71 CURVE SMOOTH",
"213 -71 OFFCURVE",
"179 -89 OFFCURVE",
"179 -104 CURVE SMOOTH",
"179 -111 OFFCURVE",
"187 -126 OFFCURVE",
"194 -126 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 0324;
},
{
color = 3;
glyphname = commaaccentcomb;
lastChange = "2022-03-21 16:38:21 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"186 -213 LINE",
"196 -204 OFFCURVE",
"208 -189 OFFCURVE",
"212 -185 CURVE SMOOTH",
"237 -158 OFFCURVE",
"274 -114 OFFCURVE",
"274 -81 CURVE SMOOTH",
"274 -66 OFFCURVE",
"270 -57 OFFCURVE",
"250 -57 CURVE SMOOTH",
"233 -57 OFFCURVE",
"223 -70 OFFCURVE",
"223 -78 CURVE SMOOTH",
"224 -87 OFFCURVE",
"231 -94 OFFCURVE",
"232 -103 CURVE SMOOTH",
"232 -120 OFFCURVE",
"219 -148 OFFCURVE",
"203 -169 CURVE SMOOTH",
"193 -183 OFFCURVE",
"187 -190 OFFCURVE",
"178 -203 CURVE",
"178 -207 OFFCURVE",
"179 -213 OFFCURVE",
"185 -213 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 0326;
},
{
color = 3;
glyphname = cedillacomb;
lastChange = "2022-03-21 16:38:21 +0000";
layers = (
{
anchors = (
{
name = _cedilla;
position = "{250, 0}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"159 -171 OFFCURVE",
"224 -151 OFFCURVE",
"233 -106 CURVE SMOOTH",
"239 -79 OFFCURVE",
"213 -58 OFFCURVE",
"217 -41 CURVE SMOOTH",
"221 -23 OFFCURVE",
"239 -4 OFFCURVE",
"257 -1 CURVE",
"258 3 OFFCURVE",
"254 3 OFFCURVE",
"251 3 CURVE SMOOTH",
"210 3 OFFCURVE",
"180 -33 OFFCURVE",
"180 -60 CURVE SMOOTH",
"180 -80 OFFCURVE",
"197 -98 OFFCURVE",
"193 -117 CURVE SMOOTH",
"186 -149 OFFCURVE",
"156 -155 OFFCURVE",
"125 -159 CURVE SMOOTH",
"123 -159 OFFCURVE",
"119 -161 OFFCURVE",
"118 -165 CURVE SMOOTH",
"118 -167 OFFCURVE",
"119 -171 OFFCURVE",
"123 -171 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"159 -171 OFFCURVE",
"234 -149 OFFCURVE",
"234 -98 CURVE SMOOTH",
"234 -74 OFFCURVE",
"217 -63 OFFCURVE",
"217 -44 CURVE SMOOTH",
"217 -30 OFFCURVE",
"236 -5 OFFCURVE",
"257 -1 CURVE",
"258 3 OFFCURVE",
"254 3 OFFCURVE",
"251 3 CURVE SMOOTH",
"210 3 OFFCURVE",
"180 -33 OFFCURVE",
"180 -60 CURVE SMOOTH",
"180 -78 OFFCURVE",
"193 -94 OFFCURVE",
"193 -109 CURVE SMOOTH",
"193 -145 OFFCURVE",
"159 -155 OFFCURVE",
"125 -159 CURVE SMOOTH",
"123 -159 OFFCURVE",
"119 -161 OFFCURVE",
"118 -165 CURVE SMOOTH",
"118 -167 OFFCURVE",
"119 -171 OFFCURVE",
"123 -171 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 0327;
},
{
color = 3;
glyphname = ogonekcomb;
lastChange = "2022-03-21 16:38:21 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
position = "{250, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"285 -129 OFFCURVE",
"315 -95 OFFCURVE",
"315 -88 CURVE SMOOTH",
"315 -86 OFFCURVE",
"314 -85 OFFCURVE",
"313 -85 CURVE SMOOTH",
"305 -85 OFFCURVE",
"288 -103 OFFCURVE",
"254 -103 CURVE SMOOTH",
"229 -103 OFFCURVE",
"217 -87 OFFCURVE",
"217 -68 CURVE SMOOTH",
"217 -48 OFFCURVE",
"227 -23 OFFCURVE",
"250 0 CURVE",
"246 4 LINE",
"208 -13 OFFCURVE",
"180 -45 OFFCURVE",
"180 -77 CURVE SMOOTH",
"180 -107 OFFCURVE",
"204 -129 OFFCURVE",
"241 -129 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 0328;
},
{
color = 3;
glyphname = brevebelowcomb;
lastChange = "2022-03-21 16:38:21 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"303 -137 OFFCURVE",
"342 -100 OFFCURVE",
"345 -65 CURVE SMOOTH",
"346 -59 OFFCURVE",
"341 -55 OFFCURVE",
"333 -66 CURVE SMOOTH",
"313 -94 OFFCURVE",
"287 -105 OFFCURVE",
"259 -105 CURVE SMOOTH",
"218 -105 OFFCURVE",
"200 -86 OFFCURVE",
"196 -66 CURVE SMOOTH",
"195 -59 OFFCURVE",
"193 -56 OFFCURVE",
"190 -56 CURVE SMOOTH",
"186 -56 OFFCURVE",
"182 -65 OFFCURVE",
"182 -78 CURVE SMOOTH",
"182 -110 OFFCURVE",
"206 -137 OFFCURVE",
"252 -137 CURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 032E;
},
{
color = 3;
glyphname = macronbelowcomb;
lastChange = "2022-03-21 16:38:21 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"206 -96 OFFCURVE",
"262 -93 OFFCURVE",
"322 -94 CURVE",
"330 -95 OFFCURVE",
"336 -95 OFFCURVE",
"340 -95 CURVE SMOOTH",
"349 -95 LINE SMOOTH",
"355 -95 OFFCURVE",
"358 -93 OFFCURVE",
"358 -88 CURVE SMOOTH",
"358 -85 OFFCURVE",
"355 -82 OFFCURVE",
"350 -81 CURVE SMOOTH",
"327 -77 LINE SMOOTH",
"298 -72 OFFCURVE",
"266 -69 OFFCURVE",
"229 -69 CURVE SMOOTH",
"208 -69 OFFCURVE",
"185 -70 OFFCURVE",
"161 -72 CURVE",
"148 -82 OFFCURVE",
"142 -92 OFFCURVE",
"142 -101 CURVE SMOOTH",
"142 -105 OFFCURVE",
"144 -107 OFFCURVE",
"149 -107 CURVE"
);
}
);
width = 500;
}
);
unicode = 0331;
},
{
color = 3;
glyphname = strokeshortcomb;
lastChange = "2022-03-21 16:38:21 +0000";
layers = (
{
anchors = (
{
name = _center;
position = "{250, 183}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"205 173 OFFCURVE",
"267 173 OFFCURVE",
"327 172 CURVE",
"335 171 OFFCURVE",
"341 171 OFFCURVE",
"345 171 CURVE SMOOTH",
"354 171 LINE SMOOTH",
"360 171 OFFCURVE",
"363 173 OFFCURVE",
"363 178 CURVE SMOOTH",
"363 181 OFFCURVE",
"360 184 OFFCURVE",
"355 185 CURVE SMOOTH",
"332 189 LINE SMOOTH",
"303 194 OFFCURVE",
"271 197 OFFCURVE",
"224 197 CURVE SMOOTH",
"213 197 OFFCURVE",
"180 196 OFFCURVE",
"156 194 CURVE",
"144 191 OFFCURVE",
"137 184 OFFCURVE",
"137 175 CURVE SMOOTH",
"137 171 OFFCURVE",
"139 169 OFFCURVE",
"144 169 CURVE"
);
}
);
width = 500;
}
);
unicode = 0335;
},
{
color = 3;
glyphname = dieresis;
lastChange = "2022-03-22 12:53:11 +0000";
layers = (
{
components = (
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 00A8;
},
{
color = 3;
glyphname = dotaccent;
lastChange = "2022-03-22 12:53:11 +0000";
layers = (
{
components = (
{
name = dotaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 02D9;
},
{
color = 3;
glyphname = grave;
lastChange = "2022-03-22 12:53:11 +0000";
layers = (
{
components = (
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 0060;
},
{
color = 3;
glyphname = acute;
lastChange = "2022-03-22 12:53:11 +0000";
layers = (
{
components = (
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 00B4;
},
{
color = 3;
glyphname = hungarumlaut;
lastChange = "2022-03-22 12:53:11 +0000";
layers = (
{
components = (
{
name = hungarumlautcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 02DD;
},
{
color = 3;
glyphname = circumflex;
lastChange = "2022-03-22 12:53:11 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 02C6;
},
{
color = 3;
glyphname = caron;
lastChange = "2022-03-22 12:53:11 +0000";
layers = (
{
components = (
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 02C7;
},
{
color = 3;
glyphname = breve;
lastChange = "2022-03-24 23:16:28 +0000";
layers = (
{
components = (
{
name = brevecomb;
transform = "{1, 0, 0, 1, 0, -10}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 02D8;
},
{
color = 3;
glyphname = ring;
lastChange = "2022-03-22 12:53:11 +0000";
layers = (
{
components = (
{
name = ringcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 02DA;
},
{
color = 3;
glyphname = tilde;
lastChange = "2022-03-22 12:53:11 +0000";
layers = (
{
components = (
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 02DC;
},
{
color = 3;
glyphname = macron;
lastChange = "2022-03-22 12:53:11 +0000";
layers = (
{
components = (
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 00AF;
},
{
color = 3;
glyphname = cedilla;
lastChange = "2022-03-22 12:53:11 +0000";
layers = (
{
components = (
{
name = cedillacomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 00B8;
},
{
color = 3;
glyphname = ogonek;
lastChange = "2022-03-22 12:53:11 +0000";
layers = (
{
components = (
{
name = ogonekcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
unicode = 02DB;
},
{
color = 3;
glyphname = dieresiscomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"326 385 OFFCURVE",
"326 407 OFFCURVE",
"334 416 CURVE",
"340 427 OFFCURVE",
"345 435 OFFCURVE",
"345 442 CURVE SMOOTH",
"345 445 OFFCURVE",
"342 446 OFFCURVE",
"338 446 CURVE SMOOTH",
"324 446 OFFCURVE",
"286 426 OFFCURVE",
"286 409 CURVE SMOOTH",
"286 402 OFFCURVE",
"295 385 OFFCURVE",
"303 385 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"195 385 OFFCURVE",
"195 407 OFFCURVE",
"203 416 CURVE",
"209 427 OFFCURVE",
"214 435 OFFCURVE",
"214 442 CURVE SMOOTH",
"214 445 OFFCURVE",
"211 446 OFFCURVE",
"207 446 CURVE SMOOTH",
"193 446 OFFCURVE",
"155 426 OFFCURVE",
"155 409 CURVE SMOOTH",
"155 402 OFFCURVE",
"164 385 OFFCURVE",
"172 385 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = dotaccentcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
paths = (
{
closed = 1;
nodes = (
"260 385 OFFCURVE",
"260 407 OFFCURVE",
"268 416 CURVE",
"274 427 OFFCURVE",
"279 435 OFFCURVE",
"279 442 CURVE SMOOTH",
"279 445 OFFCURVE",
"276 446 OFFCURVE",
"272 446 CURVE SMOOTH",
"258 446 OFFCURVE",
"220 426 OFFCURVE",
"220 409 CURVE SMOOTH",
"220 402 OFFCURVE",
"229 385 OFFCURVE",
"237 385 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"260 385 OFFCURVE",
"260 407 OFFCURVE",
"268 416 CURVE",
"274 427 OFFCURVE",
"279 435 OFFCURVE",
"279 442 CURVE SMOOTH",
"279 445 OFFCURVE",
"276 446 OFFCURVE",
"272 446 CURVE SMOOTH",
"258 446 OFFCURVE",
"220 426 OFFCURVE",
"220 409 CURVE SMOOTH",
"220 402 OFFCURVE",
"229 385 OFFCURVE",
"237 385 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = gravecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = _topviet;
position = "{251, 290}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
paths = (
{
closed = 1;
nodes = (
"264 365 OFFCURVE",
"265 366 OFFCURVE",
"265 367 CURVE SMOOTH",
"265 372 OFFCURVE",
"258 379 OFFCURVE",
"254 381 CURVE",
"240 397 OFFCURVE",
"205 437 OFFCURVE",
"191 454 CURVE SMOOTH",
"185 462 OFFCURVE",
"179 468 OFFCURVE",
"169 468 CURVE SMOOTH",
"160 468 OFFCURVE",
"143 458 OFFCURVE",
"143 448 CURVE SMOOTH",
"143 440 OFFCURVE",
"169 424 OFFCURVE",
"179 416 CURVE SMOOTH",
"203 400 OFFCURVE",
"252 365 OFFCURVE",
"263 365 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"264 365 OFFCURVE",
"265 366 OFFCURVE",
"265 367 CURVE SMOOTH",
"265 371 OFFCURVE",
"257 378 OFFCURVE",
"252 382 CURVE",
"235 394 OFFCURVE",
"192 431 OFFCURVE",
"175 446 CURVE SMOOTH",
"168 454 OFFCURVE",
"161 459 OFFCURVE",
"149 459 CURVE SMOOTH",
"138 459 OFFCURVE",
"117 450 OFFCURVE",
"117 441 CURVE SMOOTH",
"117 433 OFFCURVE",
"149 419 OFFCURVE",
"161 412 CURVE SMOOTH",
"190 397 OFFCURVE",
"249 365 OFFCURVE",
"263 365 CURVE SMOOTH"
);
}
);
width = 500;
}
);
note = gravecomb;
},
{
color = 3;
glyphname = acutecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = _topviet;
position = "{254, 290}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"249 365 OFFCURVE",
"297 400 OFFCURVE",
"322 416 CURVE",
"332 424 OFFCURVE",
"357 440 OFFCURVE",
"357 448 CURVE SMOOTH",
"357 458 OFFCURVE",
"340 468 OFFCURVE",
"332 468 CURVE SMOOTH",
"322 468 OFFCURVE",
"316 462 OFFCURVE",
"310 454 CURVE SMOOTH",
"295 437 OFFCURVE",
"261 397 OFFCURVE",
"246 381 CURVE",
"243 379 OFFCURVE",
"235 372 OFFCURVE",
"235 367 CURVE SMOOTH",
"235 366 OFFCURVE",
"237 365 OFFCURVE",
"238 365 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"251 365 OFFCURVE",
"310 397 OFFCURVE",
"339 412 CURVE SMOOTH",
"351 419 OFFCURVE",
"383 433 OFFCURVE",
"383 441 CURVE SMOOTH",
"383 450 OFFCURVE",
"362 459 OFFCURVE",
"351 459 CURVE SMOOTH",
"339 459 OFFCURVE",
"332 454 OFFCURVE",
"325 446 CURVE SMOOTH",
"308 431 OFFCURVE",
"265 394 OFFCURVE",
"248 382 CURVE",
"243 378 OFFCURVE",
"235 371 OFFCURVE",
"235 367 CURVE SMOOTH",
"235 366 OFFCURVE",
"236 365 OFFCURVE",
"237 365 CURVE SMOOTH"
);
}
);
width = 500;
}
);
note = acutecomb;
},
{
color = 3;
glyphname = hungarumlautcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
paths = (
{
closed = 1;
nodes = (
"296 368 OFFCURVE",
"317 409 OFFCURVE",
"330 429 CURVE",
"333 437 OFFCURVE",
"344 454 OFFCURVE",
"344 464 CURVE SMOOTH",
"344 474 OFFCURVE",
"330 482 OFFCURVE",
"323 482 CURVE SMOOTH",
"316 482 OFFCURVE",
"314 474 OFFCURVE",
"311 465 CURVE SMOOTH",
"306 444 OFFCURVE",
"294 401 OFFCURVE",
"289 382 CURVE",
"289 380 OFFCURVE",
"286 374 OFFCURVE",
"286 369 CURVE SMOOTH",
"286 367 LINE SMOOTH",
"286 366 OFFCURVE",
"287 365 OFFCURVE",
"289 365 CURVE"
);
},
{
closed = 1;
nodes = (
"218 368 OFFCURVE",
"240 409 OFFCURVE",
"252 429 CURVE SMOOTH",
"256 437 OFFCURVE",
"267 454 OFFCURVE",
"267 464 CURVE SMOOTH",
"267 474 OFFCURVE",
"252 482 OFFCURVE",
"246 482 CURVE SMOOTH",
"239 482 OFFCURVE",
"236 474 OFFCURVE",
"234 465 CURVE SMOOTH",
"229 444 OFFCURVE",
"217 401 OFFCURVE",
"212 382 CURVE",
"211 380 OFFCURVE",
"209 374 OFFCURVE",
"209 369 CURVE SMOOTH",
"209 367 LINE SMOOTH",
"209 366 OFFCURVE",
"210 365 OFFCURVE",
"211 365 CURVE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"300 368 OFFCURVE",
"322 408 OFFCURVE",
"336 427 CURVE",
"340 435 OFFCURVE",
"352 451 OFFCURVE",
"352 461 CURVE SMOOTH",
"352 470 OFFCURVE",
"336 478 OFFCURVE",
"329 478 CURVE SMOOTH",
"321 478 OFFCURVE",
"319 470 OFFCURVE",
"316 462 CURVE SMOOTH",
"311 441 OFFCURVE",
"298 400 OFFCURVE",
"292 381 CURVE",
"292 379 OFFCURVE",
"289 374 OFFCURVE",
"289 369 CURVE SMOOTH",
"289 367 LINE SMOOTH",
"289 366 OFFCURVE",
"290 365 OFFCURVE",
"292 365 CURVE"
);
},
{
closed = 1;
nodes = (
"216 368 OFFCURVE",
"239 408 OFFCURVE",
"252 427 CURVE SMOOTH",
"257 435 OFFCURVE",
"269 451 OFFCURVE",
"269 461 CURVE SMOOTH",
"269 470 OFFCURVE",
"252 478 OFFCURVE",
"246 478 CURVE SMOOTH",
"238 478 OFFCURVE",
"235 470 OFFCURVE",
"233 462 CURVE SMOOTH",
"228 441 OFFCURVE",
"215 400 OFFCURVE",
"209 381 CURVE",
"208 379 OFFCURVE",
"206 374 OFFCURVE",
"206 369 CURVE SMOOTH",
"206 367 LINE SMOOTH",
"206 366 OFFCURVE",
"207 365 OFFCURVE",
"208 365 CURVE"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = caroncomb.alt.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{250, 554}";
}
);
background = {
anchors = (
{
name = _topright;
position = "{250, 554}";
}
);
paths = (
{
closed = 1;
nodes = (
"253 433 LINE",
"256 436 OFFCURVE",
"265 445 OFFCURVE",
"267 448 CURVE",
"289 472 OFFCURVE",
"320 513 OFFCURVE",
"329 544 CURVE",
"330 545 OFFCURVE",
"330 546 OFFCURVE",
"330 547 CURVE SMOOTH",
"330 556 OFFCURVE",
"310 564 OFFCURVE",
"303 564 CURVE",
"298 563 OFFCURVE",
"295 562 OFFCURVE",
"293 560 CURVE",
"293 549 LINE SMOOTH",
"293 508 OFFCURVE",
"250 446 OFFCURVE",
"250 435 CURVE",
"251 433 OFFCURVE",
"251 433 OFFCURVE",
"252 433 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"253 413 LINE",
"256 416 OFFCURVE",
"265 425 OFFCURVE",
"267 428 CURVE",
"292 455 OFFCURVE",
"332 510 OFFCURVE",
"332 547 CURVE SMOOTH",
"332 556 OFFCURVE",
"317 564 OFFCURVE",
"303 564 CURVE SMOOTH",
"298 564 OFFCURVE",
"293 563 OFFCURVE",
"293 560 CURVE",
"293 549 LINE SMOOTH",
"293 488 OFFCURVE",
"250 426 OFFCURVE",
"250 415 CURVE",
"251 413 OFFCURVE",
"251 413 OFFCURVE",
"252 413 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = circumflexcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{304, 407}";
},
{
name = topviet;
position = "{383, 378}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
},
{
name = top_viet;
position = "{346, 387}";
}
);
paths = (
{
closed = 1;
nodes = (
"156 366 OFFCURVE",
"158 366 CURVE SMOOTH",
"160 366 OFFCURVE",
"164 367 OFFCURVE",
"168 369 CURVE SMOOTH",
"193 380 OFFCURVE",
"236 406 OFFCURVE",
"271 425 CURVE",
"282 403 OFFCURVE",
"303 380 OFFCURVE",
"314 371 CURVE SMOOTH",
"319 367 OFFCURVE",
"323 365 OFFCURVE",
"325 365 CURVE SMOOTH",
"327 365 OFFCURVE",
"328 366 OFFCURVE",
"328 369 CURVE SMOOTH",
"328 373 OFFCURVE",
"326 379 OFFCURVE",
"323 388 CURVE SMOOTH",
"316 405 OFFCURVE",
"310 430 OFFCURVE",
"305 454 CURVE SMOOTH",
"302 468 OFFCURVE",
"298 474 OFFCURVE",
"292 474 CURVE SMOOTH",
"285 474 OFFCURVE",
"276 467 OFFCURVE",
"261 454 CURVE SMOOTH",
"233 430 OFFCURVE",
"155 370 OFFCURVE",
"155 368 CURVE SMOOTH",
"155 367 OFFCURVE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"137 366 OFFCURVE",
"139 366 CURVE SMOOTH",
"142 366 OFFCURVE",
"147 367 OFFCURVE",
"152 369 CURVE SMOOTH",
"182 379 OFFCURVE",
"235 398 OFFCURVE",
"278 415 CURVE",
"291 395 OFFCURVE",
"317 379 OFFCURVE",
"330 371 CURVE SMOOTH",
"336 367 OFFCURVE",
"341 365 OFFCURVE",
"344 365 CURVE SMOOTH",
"346 365 OFFCURVE",
"347 366 OFFCURVE",
"347 369 CURVE SMOOTH",
"347 372 OFFCURVE",
"345 378 OFFCURVE",
"341 386 CURVE SMOOTH",
"333 402 OFFCURVE",
"325 425 OFFCURVE",
"319 447 CURVE SMOOTH",
"315 460 OFFCURVE",
"311 466 OFFCURVE",
"303 466 CURVE SMOOTH",
"295 466 OFFCURVE",
"284 459 OFFCURVE",
"265 447 CURVE SMOOTH",
"231 425 OFFCURVE",
"136 374 OFFCURVE",
"136 368 CURVE SMOOTH",
"136 367 OFFCURVE"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = caroncomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
},
{
name = top_viet;
position = "{286, 407}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"385 473 OFFCURVE",
"383 473 CURVE SMOOTH",
"381 473 OFFCURVE",
"377 472 OFFCURVE",
"373 470 CURVE SMOOTH",
"348 459 OFFCURVE",
"305 433 OFFCURVE",
"270 414 CURVE",
"259 436 OFFCURVE",
"238 459 OFFCURVE",
"227 468 CURVE SMOOTH",
"222 472 OFFCURVE",
"218 474 OFFCURVE",
"216 474 CURVE SMOOTH",
"214 474 OFFCURVE",
"213 473 OFFCURVE",
"213 470 CURVE SMOOTH",
"213 466 OFFCURVE",
"215 460 OFFCURVE",
"218 451 CURVE SMOOTH",
"225 434 OFFCURVE",
"231 409 OFFCURVE",
"236 385 CURVE SMOOTH",
"239 371 OFFCURVE",
"243 365 OFFCURVE",
"249 365 CURVE SMOOTH",
"256 365 OFFCURVE",
"265 372 OFFCURVE",
"280 385 CURVE SMOOTH",
"308 409 OFFCURVE",
"386 469 OFFCURVE",
"386 471 CURVE SMOOTH",
"386 472 OFFCURVE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"415 465 OFFCURVE",
"413 465 CURVE SMOOTH",
"410 465 OFFCURVE",
"405 464 OFFCURVE",
"400 462 CURVE SMOOTH",
"370 452 OFFCURVE",
"317 433 OFFCURVE",
"274 416 CURVE",
"261 436 OFFCURVE",
"235 452 OFFCURVE",
"222 460 CURVE SMOOTH",
"216 464 OFFCURVE",
"211 466 OFFCURVE",
"208 466 CURVE SMOOTH",
"206 466 OFFCURVE",
"205 465 OFFCURVE",
"205 462 CURVE SMOOTH",
"205 459 OFFCURVE",
"207 453 OFFCURVE",
"211 445 CURVE SMOOTH",
"219 429 OFFCURVE",
"227 406 OFFCURVE",
"233 384 CURVE SMOOTH",
"237 371 OFFCURVE",
"241 365 OFFCURVE",
"249 365 CURVE SMOOTH",
"257 365 OFFCURVE",
"268 372 OFFCURVE",
"287 384 CURVE SMOOTH",
"321 406 OFFCURVE",
"416 457 OFFCURVE",
"416 463 CURVE SMOOTH",
"416 464 OFFCURVE"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = brevecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{274, 395}";
},
{
name = topviet;
position = "{276, 387}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
},
{
name = top_viet;
position = "{276, 387}";
}
);
paths = (
{
closed = 1;
nodes = (
"302 365 OFFCURVE",
"341 402 OFFCURVE",
"344 437 CURVE SMOOTH",
"345 443 OFFCURVE",
"340 447 OFFCURVE",
"332 436 CURVE SMOOTH",
"312 408 OFFCURVE",
"286 397 OFFCURVE",
"258 397 CURVE SMOOTH",
"217 397 OFFCURVE",
"199 416 OFFCURVE",
"195 436 CURVE SMOOTH",
"194 443 OFFCURVE",
"192 446 OFFCURVE",
"189 446 CURVE SMOOTH",
"185 446 OFFCURVE",
"181 437 OFFCURVE",
"181 424 CURVE SMOOTH",
"181 392 OFFCURVE",
"205 365 OFFCURVE",
"251 365 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"316 365 OFFCURVE",
"355 402 OFFCURVE",
"358 437 CURVE SMOOTH",
"359 443 OFFCURVE",
"354 447 OFFCURVE",
"346 436 CURVE SMOOTH",
"326 408 OFFCURVE",
"300 397 OFFCURVE",
"258 397 CURVE SMOOTH",
"202 397 OFFCURVE",
"184 416 OFFCURVE",
"180 436 CURVE SMOOTH",
"179 443 OFFCURVE",
"177 446 OFFCURVE",
"174 446 CURVE SMOOTH",
"170 446 OFFCURVE",
"166 437 OFFCURVE",
"166 424 CURVE SMOOTH",
"166 392 OFFCURVE",
"190 365 OFFCURVE",
"251 365 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = ringcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
paths = (
{
closed = 1;
nodes = (
"291 366 OFFCURVE",
"327 399 OFFCURVE",
"327 433 CURVE SMOOTH",
"327 442 LINE",
"324 459 OFFCURVE",
"308 476 OFFCURVE",
"285 476 CURVE SMOOTH",
"246 476 OFFCURVE",
"211 439 OFFCURVE",
"211 401 CURVE SMOOTH",
"211 378 OFFCURVE",
"229 366 OFFCURVE",
"251 366 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"242 386 OFFCURVE",
"237 394 OFFCURVE",
"237 409 CURVE SMOOTH",
"237 435 OFFCURVE",
"257 458 OFFCURVE",
"277 458 CURVE SMOOTH",
"293 458 OFFCURVE",
"303 442 OFFCURVE",
"303 430 CURVE SMOOTH",
"303 409 OFFCURVE",
"285 386 OFFCURVE",
"256 386 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"293 366 OFFCURVE",
"333 402 OFFCURVE",
"333 440 CURVE SMOOTH",
"333 467 OFFCURVE",
"318 487 OFFCURVE",
"287 487 CURVE SMOOTH",
"244 487 OFFCURVE",
"205 447 OFFCURVE",
"205 405 CURVE SMOOTH",
"205 379 OFFCURVE",
"225 366 OFFCURVE",
"249 366 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"239 386 OFFCURVE",
"234 397 OFFCURVE",
"234 413 CURVE SMOOTH",
"234 442 OFFCURVE",
"256 470 OFFCURVE",
"278 470 CURVE SMOOTH",
"295 470 OFFCURVE",
"307 450 OFFCURVE",
"307 437 CURVE SMOOTH",
"307 413 OFFCURVE",
"287 386 OFFCURVE",
"255 386 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = ringcomb_acutecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
components = (
{
name = ringcomb;
},
{
alignment = -1;
name = acutecomb;
transform = "{1, 0, 0, 1, 70, 77}";
}
);
};
components = (
{
name = ringcomb.case;
},
{
alignment = -1;
name = acutecomb.case;
transform = "{1, 0, 0, 1, 74, 77}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
}
);
},
{
color = 3;
glyphname = tildecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
paths = (
{
closed = 1;
nodes = (
"315 383 OFFCURVE",
"329 405 OFFCURVE",
"336 424 CURVE",
"336 430 OFFCURVE",
"336 435 OFFCURVE",
"332 435 CURVE",
"328 433 OFFCURVE",
"316 415 OFFCURVE",
"298 415 CURVE SMOOTH",
"258 415 OFFCURVE",
"244 439 OFFCURVE",
"215 439 CURVE SMOOTH",
"185 439 OFFCURVE",
"164 401 OFFCURVE",
"164 390 CURVE SMOOTH",
"164 388 OFFCURVE",
"166 386 OFFCURVE",
"167 386 CURVE SMOOTH",
"173 386 OFFCURVE",
"190 410 OFFCURVE",
"212 410 CURVE SMOOTH",
"241 410 OFFCURVE",
"260 383 OFFCURVE",
"292 383 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"335 380 OFFCURVE",
"349 405 OFFCURVE",
"356 424 CURVE",
"356 430 OFFCURVE",
"356 435 OFFCURVE",
"352 435 CURVE",
"348 433 OFFCURVE",
"336 415 OFFCURVE",
"318 415 CURVE SMOOTH",
"278 415 OFFCURVE",
"224 442 OFFCURVE",
"195 442 CURVE SMOOTH",
"165 442 OFFCURVE",
"144 401 OFFCURVE",
"144 390 CURVE SMOOTH",
"144 388 OFFCURVE",
"146 386 OFFCURVE",
"147 386 CURVE SMOOTH",
"153 386 OFFCURVE",
"170 410 OFFCURVE",
"192 410 CURVE SMOOTH",
"221 410 OFFCURVE",
"280 380 OFFCURVE",
"312 380 CURVE SMOOTH"
);
}
);
width = 500;
}
);
note = tildecomb;
},
{
color = 3;
glyphname = tildecomb_dotaccentcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
background = {
components = (
{
name = tildecomb.case;
},
{
alignment = -1;
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 10, 87}";
}
);
};
components = (
{
name = tildecomb.case;
},
{
alignment = -1;
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 10, 87}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = tildecomb;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 0, 137}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 195;
}
);
},
{
color = 3;
glyphname = tildecomb_macroncomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
background = {
components = (
{
name = tildecomb.case;
},
{
alignment = -1;
name = macroncomb.case;
transform = "{1, 0, 0, 1, 10, 87}";
}
);
};
components = (
{
name = tildecomb.case;
},
{
alignment = -1;
name = macroncomb.case;
transform = "{1, 0, 0, 1, 10, 87}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = tildecomb;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 0, 137}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 218;
}
);
},
{
color = 3;
glyphname = macroncomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
paths = (
{
closed = 1;
nodes = (
"206 391 OFFCURVE",
"262 394 OFFCURVE",
"322 393 CURVE",
"330 392 OFFCURVE",
"336 392 OFFCURVE",
"340 392 CURVE SMOOTH",
"349 392 LINE SMOOTH",
"355 392 OFFCURVE",
"358 394 OFFCURVE",
"358 399 CURVE SMOOTH",
"358 402 OFFCURVE",
"355 405 OFFCURVE",
"350 406 CURVE SMOOTH",
"327 410 LINE SMOOTH",
"298 415 OFFCURVE",
"266 418 OFFCURVE",
"229 418 CURVE SMOOTH",
"208 418 OFFCURVE",
"185 417 OFFCURVE",
"161 415 CURVE",
"148 405 OFFCURVE",
"142 395 OFFCURVE",
"142 386 CURVE SMOOTH",
"142 382 OFFCURVE",
"144 380 OFFCURVE",
"149 380 CURVE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"191 391 OFFCURVE",
"278 394 OFFCURVE",
"338 393 CURVE",
"346 392 OFFCURVE",
"352 392 OFFCURVE",
"356 392 CURVE SMOOTH",
"365 392 LINE SMOOTH",
"371 392 OFFCURVE",
"374 394 OFFCURVE",
"374 399 CURVE SMOOTH",
"374 402 OFFCURVE",
"371 405 OFFCURVE",
"366 406 CURVE SMOOTH",
"343 410 LINE SMOOTH",
"314 415 OFFCURVE",
"251 418 OFFCURVE",
"214 418 CURVE SMOOTH",
"193 418 OFFCURVE",
"170 417 OFFCURVE",
"146 415 CURVE",
"133 405 OFFCURVE",
"127 395 OFFCURVE",
"127 386 CURVE SMOOTH",
"127 382 OFFCURVE",
"129 380 OFFCURVE",
"134 380 CURVE"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = hookabovecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = _topviet;
position = "{251, 290}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
paths = (
{
closed = 1;
nodes = (
"251 366 OFFCURVE",
"254 368 OFFCURVE",
"262 378 CURVE",
"278 398 OFFCURVE",
"283 403 OFFCURVE",
"302 419 CURVE SMOOTH",
"327 438 OFFCURVE",
"338 458 OFFCURVE",
"338 475 CURVE SMOOTH",
"338 504 OFFCURVE",
"314 516 OFFCURVE",
"290 516 CURVE SMOOTH",
"247 516 OFFCURVE",
"213 484 OFFCURVE",
"213 467 CURVE SMOOTH",
"213 463 OFFCURVE",
"214 462 OFFCURVE",
"215 462 CURVE SMOOTH",
"221 462 OFFCURVE",
"239 485 OFFCURVE",
"272 485 CURVE SMOOTH",
"289 485 OFFCURVE",
"295 476 OFFCURVE",
"295 462 CURVE SMOOTH",
"295 454 OFFCURVE",
"290 442 OFFCURVE",
"273 423 CURVE SMOOTH",
"249 396 OFFCURVE",
"242 381 OFFCURVE",
"242 372 CURVE SMOOTH",
"242 369 OFFCURVE",
"244 366 OFFCURVE",
"248 366 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"251 366 OFFCURVE",
"254 368 OFFCURVE",
"263 377 CURVE",
"281 396 OFFCURVE",
"287 400 OFFCURVE",
"309 415 CURVE SMOOTH",
"337 432 OFFCURVE",
"349 451 OFFCURVE",
"349 467 CURVE SMOOTH",
"349 493 OFFCURVE",
"322 505 OFFCURVE",
"295 505 CURVE SMOOTH",
"246 505 OFFCURVE",
"208 475 OFFCURVE",
"208 459 CURVE SMOOTH",
"208 456 OFFCURVE",
"209 455 OFFCURVE",
"210 455 CURVE SMOOTH",
"217 455 OFFCURVE",
"237 474 OFFCURVE",
"275 474 CURVE SMOOTH",
"294 474 OFFCURVE",
"301 468 OFFCURVE",
"301 455 CURVE SMOOTH",
"301 447 OFFCURVE",
"295 436 OFFCURVE",
"276 419 CURVE SMOOTH",
"248 394 OFFCURVE",
"241 380 OFFCURVE",
"241 372 CURVE SMOOTH",
"241 369 OFFCURVE",
"243 366 OFFCURVE",
"247 366 CURVE SMOOTH"
);
}
);
width = 500;
}
);
note = hookabovecomb;
},
{
color = 3;
glyphname = dblgravecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
paths = (
{
closed = 1;
nodes = (
"214 365 OFFCURVE",
"215 366 OFFCURVE",
"215 367 CURVE SMOOTH",
"215 372 OFFCURVE",
"208 379 OFFCURVE",
"204 381 CURVE",
"190 397 OFFCURVE",
"155 437 OFFCURVE",
"141 454 CURVE SMOOTH",
"135 462 OFFCURVE",
"129 468 OFFCURVE",
"119 468 CURVE SMOOTH",
"110 468 OFFCURVE",
"93 458 OFFCURVE",
"93 448 CURVE SMOOTH",
"93 440 OFFCURVE",
"119 424 OFFCURVE",
"129 416 CURVE SMOOTH",
"153 400 OFFCURVE",
"202 365 OFFCURVE",
"213 365 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"301 365 OFFCURVE",
"302 366 OFFCURVE",
"302 367 CURVE SMOOTH",
"302 372 OFFCURVE",
"295 379 OFFCURVE",
"291 381 CURVE",
"277 397 OFFCURVE",
"242 437 OFFCURVE",
"228 454 CURVE SMOOTH",
"222 462 OFFCURVE",
"216 468 OFFCURVE",
"206 468 CURVE SMOOTH",
"197 468 OFFCURVE",
"180 458 OFFCURVE",
"180 448 CURVE SMOOTH",
"180 440 OFFCURVE",
"206 424 OFFCURVE",
"216 416 CURVE SMOOTH",
"240 400 OFFCURVE",
"289 365 OFFCURVE",
"300 365 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"209 365 OFFCURVE",
"211 366 OFFCURVE",
"211 367 CURVE SMOOTH",
"211 371 OFFCURVE",
"203 378 OFFCURVE",
"199 380 CURVE",
"183 395 OFFCURVE",
"145 432 OFFCURVE",
"129 447 CURVE SMOOTH",
"123 455 OFFCURVE",
"116 460 OFFCURVE",
"105 460 CURVE SMOOTH",
"95 460 OFFCURVE",
"77 451 OFFCURVE",
"77 442 CURVE SMOOTH",
"77 434 OFFCURVE",
"105 420 OFFCURVE",
"116 412 CURVE SMOOTH",
"143 397 OFFCURVE",
"196 365 OFFCURVE",
"208 365 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"305 365 OFFCURVE",
"306 366 OFFCURVE",
"306 367 CURVE SMOOTH",
"306 371 OFFCURVE",
"298 378 OFFCURVE",
"294 380 CURVE",
"279 395 OFFCURVE",
"240 432 OFFCURVE",
"225 447 CURVE SMOOTH",
"218 455 OFFCURVE",
"212 460 OFFCURVE",
"201 460 CURVE SMOOTH",
"191 460 OFFCURVE",
"172 451 OFFCURVE",
"172 442 CURVE SMOOTH",
"172 434 OFFCURVE",
"201 420 OFFCURVE",
"212 412 CURVE SMOOTH",
"238 397 OFFCURVE",
"292 365 OFFCURVE",
"304 365 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = breveinvertedcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"209 446 OFFCURVE",
"170 409 OFFCURVE",
"167 374 CURVE SMOOTH",
"166 368 OFFCURVE",
"171 364 OFFCURVE",
"179 375 CURVE SMOOTH",
"199 403 OFFCURVE",
"225 414 OFFCURVE",
"253 414 CURVE SMOOTH",
"294 414 OFFCURVE",
"312 395 OFFCURVE",
"316 375 CURVE SMOOTH",
"317 368 OFFCURVE",
"319 365 OFFCURVE",
"322 365 CURVE SMOOTH",
"326 365 OFFCURVE",
"330 374 OFFCURVE",
"330 387 CURVE SMOOTH",
"330 419 OFFCURVE",
"306 446 OFFCURVE",
"260 446 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"193 446 OFFCURVE",
"154 409 OFFCURVE",
"151 374 CURVE SMOOTH",
"150 368 OFFCURVE",
"155 364 OFFCURVE",
"163 375 CURVE SMOOTH",
"183 403 OFFCURVE",
"209 414 OFFCURVE",
"251 414 CURVE SMOOTH",
"307 414 OFFCURVE",
"325 395 OFFCURVE",
"329 375 CURVE SMOOTH",
"330 368 OFFCURVE",
"332 365 OFFCURVE",
"335 365 CURVE SMOOTH",
"339 365 OFFCURVE",
"343 374 OFFCURVE",
"343 387 CURVE SMOOTH",
"343 419 OFFCURVE",
"319 446 OFFCURVE",
"258 446 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = commaturnedabovecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
},
{
name = top;
position = "{250, 437}";
}
);
paths = (
{
closed = 1;
nodes = (
"266 366 OFFCURVE",
"275 378 OFFCURVE",
"275 386 CURVE SMOOTH",
"275 395 OFFCURVE",
"268 402 OFFCURVE",
"268 411 CURVE SMOOTH",
"268 428 OFFCURVE",
"283 456 OFFCURVE",
"300 476 CURVE SMOOTH",
"310 489 OFFCURVE",
"316 497 OFFCURVE",
"326 508 CURVE",
"326 512 OFFCURVE",
"326 519 OFFCURVE",
"319 519 CURVE",
"308 510 OFFCURVE",
"295 496 OFFCURVE",
"291 492 CURVE SMOOTH",
"265 466 OFFCURVE",
"224 423 OFFCURVE",
"224 389 CURVE SMOOTH",
"224 375 OFFCURVE",
"229 366 OFFCURVE",
"250 366 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"266 366 OFFCURVE",
"278 378 OFFCURVE",
"278 386 CURVE SMOOTH",
"278 395 OFFCURVE",
"271 402 OFFCURVE",
"271 411 CURVE SMOOTH",
"271 428 OFFCURVE",
"283 456 OFFCURVE",
"300 476 CURVE SMOOTH",
"310 489 OFFCURVE",
"316 497 OFFCURVE",
"326 508 CURVE",
"326 512 OFFCURVE",
"326 519 OFFCURVE",
"319 519 CURVE",
"308 510 OFFCURVE",
"291 496 OFFCURVE",
"287 492 CURVE SMOOTH",
"261 466 OFFCURVE",
"220 423 OFFCURVE",
"220 389 CURVE SMOOTH",
"220 375 OFFCURVE",
"229 366 OFFCURVE",
"250 366 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = horncomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _horn;
position = "{250, 300}";
}
);
background = {
anchors = (
{
name = _horn;
position = "{250, 300}";
}
);
paths = (
{
closed = 1;
nodes = (
"331 275 OFFCURVE",
"362 303 OFFCURVE",
"374 346 CURVE SMOOTH",
"378 360 OFFCURVE",
"383 377 OFFCURVE",
"383 390 CURVE SMOOTH",
"383 403 OFFCURVE",
"378 412 OFFCURVE",
"367 412 CURVE SMOOTH",
"356 412 OFFCURVE",
"349 405 OFFCURVE",
"346 393 CURVE SMOOTH",
"338 347 OFFCURVE",
"323 302 OFFCURVE",
"290 298 CURVE SMOOTH",
"285 297 OFFCURVE",
"280 297 OFFCURVE",
"275 297 CURVE SMOOTH",
"264 297 OFFCURVE",
"255 298 OFFCURVE",
"250 300 CURVE SMOOTH",
"246 301 OFFCURVE",
"244 299 OFFCURVE",
"244 297 CURVE SMOOTH",
"244 282 OFFCURVE",
"266 275 OFFCURVE",
"292 275 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"345 275 OFFCURVE",
"382 323 OFFCURVE",
"394 366 CURVE SMOOTH",
"398 380 OFFCURVE",
"403 397 OFFCURVE",
"403 410 CURVE SMOOTH",
"403 423 OFFCURVE",
"398 432 OFFCURVE",
"387 432 CURVE SMOOTH",
"376 432 OFFCURVE",
"369 425 OFFCURVE",
"366 413 CURVE SMOOTH",
"357 359 OFFCURVE",
"337 297 OFFCURVE",
"275 297 CURVE SMOOTH",
"264 297 OFFCURVE",
"255 298 OFFCURVE",
"250 300 CURVE SMOOTH",
"246 301 OFFCURVE",
"244 299 OFFCURVE",
"244 297 CURVE SMOOTH",
"244 282 OFFCURVE",
"266 275 OFFCURVE",
"292 275 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = dotbelowcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
background = {
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
paths = (
{
closed = 1;
nodes = (
"262 -138 OFFCURVE",
"262 -112 OFFCURVE",
"270 -102 CURVE SMOOTH",
"278 -89 OFFCURVE",
"282 -81 OFFCURVE",
"282 -73 CURVE SMOOTH",
"282 -69 OFFCURVE",
"280 -68 OFFCURVE",
"276 -68 CURVE SMOOTH",
"260 -68 OFFCURVE",
"217 -90 OFFCURVE",
"217 -111 CURVE SMOOTH",
"217 -119 OFFCURVE",
"226 -138 OFFCURVE",
"237 -138 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"263 -145 OFFCURVE",
"263 -114 OFFCURVE",
"272 -102 CURVE SMOOTH",
"281 -86 OFFCURVE",
"285 -77 OFFCURVE",
"285 -67 CURVE SMOOTH",
"285 -62 OFFCURVE",
"283 -61 OFFCURVE",
"279 -61 CURVE SMOOTH",
"261 -61 OFFCURVE",
"214 -87 OFFCURVE",
"214 -113 CURVE SMOOTH",
"214 -122 OFFCURVE",
"224 -145 OFFCURVE",
"236 -145 CURVE SMOOTH"
);
}
);
width = 500;
}
);
note = dotbelowcomb;
},
{
color = 3;
glyphname = dieresisbelowcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
background = {
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
paths = (
{
closed = 1;
nodes = (
"306 -126 OFFCURVE",
"306 -106 OFFCURVE",
"313 -98 CURVE",
"319 -88 OFFCURVE",
"323 -81 OFFCURVE",
"323 -74 CURVE SMOOTH",
"323 -72 OFFCURVE",
"321 -71 OFFCURVE",
"317 -71 CURVE SMOOTH",
"304 -71 OFFCURVE",
"270 -89 OFFCURVE",
"270 -104 CURVE SMOOTH",
"270 -111 OFFCURVE",
"278 -126 OFFCURVE",
"285 -126 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"215 -126 OFFCURVE",
"215 -106 OFFCURVE",
"222 -98 CURVE",
"228 -88 OFFCURVE",
"232 -81 OFFCURVE",
"232 -74 CURVE SMOOTH",
"232 -72 OFFCURVE",
"230 -71 OFFCURVE",
"226 -71 CURVE SMOOTH",
"213 -71 OFFCURVE",
"179 -89 OFFCURVE",
"179 -104 CURVE SMOOTH",
"179 -111 OFFCURVE",
"187 -126 OFFCURVE",
"194 -126 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"331 -131 OFFCURVE",
"331 -107 OFFCURVE",
"339 -98 CURVE",
"346 -86 OFFCURVE",
"350 -78 OFFCURVE",
"350 -69 CURVE SMOOTH",
"350 -67 OFFCURVE",
"348 -66 OFFCURVE",
"344 -66 CURVE SMOOTH",
"329 -66 OFFCURVE",
"292 -87 OFFCURVE",
"292 -105 CURVE SMOOTH",
"292 -113 OFFCURVE",
"301 -131 OFFCURVE",
"308 -131 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"191 -131 OFFCURVE",
"191 -107 OFFCURVE",
"199 -98 CURVE",
"206 -86 OFFCURVE",
"210 -78 OFFCURVE",
"210 -69 CURVE SMOOTH",
"210 -67 OFFCURVE",
"208 -66 OFFCURVE",
"204 -66 CURVE SMOOTH",
"189 -66 OFFCURVE",
"152 -87 OFFCURVE",
"152 -105 CURVE SMOOTH",
"152 -113 OFFCURVE",
"161 -131 OFFCURVE",
"168 -131 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = commaaccentcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
background = {
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
paths = (
{
closed = 1;
nodes = (
"186 -213 LINE",
"196 -204 OFFCURVE",
"208 -189 OFFCURVE",
"212 -185 CURVE SMOOTH",
"237 -158 OFFCURVE",
"274 -114 OFFCURVE",
"274 -81 CURVE SMOOTH",
"274 -66 OFFCURVE",
"270 -57 OFFCURVE",
"250 -57 CURVE SMOOTH",
"233 -57 OFFCURVE",
"223 -70 OFFCURVE",
"223 -78 CURVE SMOOTH",
"224 -87 OFFCURVE",
"231 -94 OFFCURVE",
"232 -103 CURVE SMOOTH",
"232 -120 OFFCURVE",
"219 -148 OFFCURVE",
"203 -169 CURVE SMOOTH",
"193 -183 OFFCURVE",
"187 -190 OFFCURVE",
"178 -203 CURVE",
"178 -207 OFFCURVE",
"179 -213 OFFCURVE",
"185 -213 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"186 -213 LINE",
"196 -204 OFFCURVE",
"208 -189 OFFCURVE",
"212 -185 CURVE SMOOTH",
"237 -158 OFFCURVE",
"278 -114 OFFCURVE",
"278 -81 CURVE SMOOTH",
"278 -66 OFFCURVE",
"274 -57 OFFCURVE",
"250 -57 CURVE SMOOTH",
"229 -57 OFFCURVE",
"219 -70 OFFCURVE",
"219 -78 CURVE SMOOTH",
"220 -87 OFFCURVE",
"227 -94 OFFCURVE",
"228 -103 CURVE SMOOTH",
"228 -120 OFFCURVE",
"219 -148 OFFCURVE",
"203 -169 CURVE SMOOTH",
"193 -183 OFFCURVE",
"187 -190 OFFCURVE",
"178 -203 CURVE",
"178 -207 OFFCURVE",
"179 -213 OFFCURVE",
"185 -213 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = cedillacomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _cedilla;
position = "{250, 0}";
}
);
background = {
anchors = (
{
name = _cedilla;
position = "{250, 0}";
}
);
paths = (
{
closed = 1;
nodes = (
"159 -171 OFFCURVE",
"234 -149 OFFCURVE",
"234 -98 CURVE SMOOTH",
"234 -74 OFFCURVE",
"217 -63 OFFCURVE",
"217 -44 CURVE SMOOTH",
"217 -30 OFFCURVE",
"236 -5 OFFCURVE",
"257 -1 CURVE",
"258 3 OFFCURVE",
"254 3 OFFCURVE",
"251 3 CURVE SMOOTH",
"210 3 OFFCURVE",
"180 -33 OFFCURVE",
"180 -60 CURVE SMOOTH",
"180 -78 OFFCURVE",
"193 -94 OFFCURVE",
"193 -109 CURVE SMOOTH",
"193 -145 OFFCURVE",
"159 -155 OFFCURVE",
"125 -159 CURVE SMOOTH",
"123 -159 OFFCURVE",
"119 -161 OFFCURVE",
"118 -165 CURVE SMOOTH",
"118 -167 OFFCURVE",
"119 -171 OFFCURVE",
"123 -171 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"148 -199 OFFCURVE",
"231 -173 OFFCURVE",
"231 -114 CURVE SMOOTH",
"231 -86 OFFCURVE",
"212 -73 OFFCURVE",
"212 -51 CURVE SMOOTH",
"212 -35 OFFCURVE",
"224 -8 OFFCURVE",
"257 -2 CURVE",
"258 3 OFFCURVE",
"254 3 OFFCURVE",
"250 3 CURVE SMOOTH",
"205 3 OFFCURVE",
"174 -39 OFFCURVE",
"174 -70 CURVE SMOOTH",
"174 -91 OFFCURVE",
"189 -109 OFFCURVE",
"189 -127 CURVE SMOOTH",
"189 -168 OFFCURVE",
"148 -182 OFFCURVE",
"110 -187 CURVE SMOOTH",
"108 -187 OFFCURVE",
"104 -187 OFFCURVE",
"103 -192 CURVE SMOOTH",
"103 -194 OFFCURVE",
"104 -199 OFFCURVE",
"108 -199 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = ogonekcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
position = "{250, 0}";
}
);
background = {
anchors = (
{
name = _ogonek;
position = "{250, 0}";
}
);
paths = (
{
closed = 1;
nodes = (
"285 -129 OFFCURVE",
"315 -95 OFFCURVE",
"315 -88 CURVE SMOOTH",
"315 -86 OFFCURVE",
"314 -85 OFFCURVE",
"313 -85 CURVE SMOOTH",
"305 -85 OFFCURVE",
"288 -103 OFFCURVE",
"254 -103 CURVE SMOOTH",
"229 -103 OFFCURVE",
"217 -87 OFFCURVE",
"217 -68 CURVE SMOOTH",
"217 -48 OFFCURVE",
"227 -23 OFFCURVE",
"250 0 CURVE",
"246 4 LINE",
"208 -13 OFFCURVE",
"180 -45 OFFCURVE",
"180 -77 CURVE SMOOTH",
"180 -107 OFFCURVE",
"204 -129 OFFCURVE",
"241 -129 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"291 -149 OFFCURVE",
"326 -109 OFFCURVE",
"326 -101 CURVE SMOOTH",
"326 -99 OFFCURVE",
"325 -98 OFFCURVE",
"324 -98 CURVE SMOOTH",
"314 -98 OFFCURVE",
"295 -121 OFFCURVE",
"255 -121 CURVE SMOOTH",
"226 -121 OFFCURVE",
"211 -101 OFFCURVE",
"211 -78 CURVE SMOOTH",
"211 -55 OFFCURVE",
"223 -25 OFFCURVE",
"250 1 CURVE",
"246 6 LINE",
"201 -14 OFFCURVE",
"169 -51 OFFCURVE",
"169 -88 CURVE SMOOTH",
"169 -123 OFFCURVE",
"197 -149 OFFCURVE",
"240 -149 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = brevebelowcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
background = {
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
paths = (
{
closed = 1;
nodes = (
"303 -137 OFFCURVE",
"342 -100 OFFCURVE",
"345 -65 CURVE SMOOTH",
"346 -59 OFFCURVE",
"341 -55 OFFCURVE",
"333 -66 CURVE SMOOTH",
"313 -94 OFFCURVE",
"287 -105 OFFCURVE",
"259 -105 CURVE SMOOTH",
"218 -105 OFFCURVE",
"200 -86 OFFCURVE",
"196 -66 CURVE SMOOTH",
"195 -59 OFFCURVE",
"193 -56 OFFCURVE",
"190 -56 CURVE SMOOTH",
"186 -56 OFFCURVE",
"182 -65 OFFCURVE",
"182 -78 CURVE SMOOTH",
"182 -110 OFFCURVE",
"206 -137 OFFCURVE",
"252 -137 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"318 -137 OFFCURVE",
"357 -100 OFFCURVE",
"360 -65 CURVE SMOOTH",
"361 -59 OFFCURVE",
"356 -55 OFFCURVE",
"348 -66 CURVE SMOOTH",
"328 -94 OFFCURVE",
"302 -105 OFFCURVE",
"260 -105 CURVE SMOOTH",
"204 -105 OFFCURVE",
"186 -86 OFFCURVE",
"182 -66 CURVE SMOOTH",
"181 -59 OFFCURVE",
"179 -56 OFFCURVE",
"176 -56 CURVE SMOOTH",
"172 -56 OFFCURVE",
"168 -65 OFFCURVE",
"168 -78 CURVE SMOOTH",
"168 -110 OFFCURVE",
"192 -137 OFFCURVE",
"253 -137 CURVE SMOOTH"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = macronbelowcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
background = {
anchors = (
{
name = _bottom;
position = "{250, 0}";
},
{
name = bottom;
position = "{250, -117}";
}
);
paths = (
{
closed = 1;
nodes = (
"206 -96 OFFCURVE",
"262 -93 OFFCURVE",
"322 -94 CURVE",
"330 -95 OFFCURVE",
"336 -95 OFFCURVE",
"340 -95 CURVE SMOOTH",
"349 -95 LINE SMOOTH",
"355 -95 OFFCURVE",
"358 -93 OFFCURVE",
"358 -88 CURVE SMOOTH",
"358 -85 OFFCURVE",
"355 -82 OFFCURVE",
"350 -81 CURVE SMOOTH",
"327 -77 LINE SMOOTH",
"298 -72 OFFCURVE",
"266 -69 OFFCURVE",
"229 -69 CURVE SMOOTH",
"208 -69 OFFCURVE",
"185 -70 OFFCURVE",
"161 -72 CURVE",
"148 -82 OFFCURVE",
"142 -92 OFFCURVE",
"142 -101 CURVE SMOOTH",
"142 -105 OFFCURVE",
"144 -107 OFFCURVE",
"149 -107 CURVE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"191 -96 OFFCURVE",
"278 -93 OFFCURVE",
"338 -94 CURVE",
"346 -95 OFFCURVE",
"352 -95 OFFCURVE",
"356 -95 CURVE SMOOTH",
"365 -95 LINE SMOOTH",
"371 -95 OFFCURVE",
"374 -93 OFFCURVE",
"374 -88 CURVE SMOOTH",
"374 -85 OFFCURVE",
"371 -82 OFFCURVE",
"366 -81 CURVE SMOOTH",
"343 -77 LINE SMOOTH",
"314 -72 OFFCURVE",
"266 -69 OFFCURVE",
"229 -69 CURVE SMOOTH",
"208 -69 OFFCURVE",
"170 -70 OFFCURVE",
"146 -72 CURVE",
"133 -82 OFFCURVE",
"127 -92 OFFCURVE",
"127 -101 CURVE SMOOTH",
"127 -105 OFFCURVE",
"129 -107 OFFCURVE",
"134 -107 CURVE"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = strokeshortcomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _center;
position = "{250, 183}";
}
);
background = {
anchors = (
{
name = _center;
position = "{250, 183}";
}
);
paths = (
{
closed = 1;
nodes = (
"205 173 OFFCURVE",
"267 173 OFFCURVE",
"327 172 CURVE",
"335 171 OFFCURVE",
"341 171 OFFCURVE",
"345 171 CURVE SMOOTH",
"354 171 LINE SMOOTH",
"360 171 OFFCURVE",
"363 173 OFFCURVE",
"363 178 CURVE SMOOTH",
"363 181 OFFCURVE",
"360 184 OFFCURVE",
"355 185 CURVE SMOOTH",
"332 189 LINE SMOOTH",
"303 194 OFFCURVE",
"271 197 OFFCURVE",
"224 197 CURVE SMOOTH",
"213 197 OFFCURVE",
"180 196 OFFCURVE",
"156 194 CURVE",
"144 191 OFFCURVE",
"137 184 OFFCURVE",
"137 175 CURVE SMOOTH",
"137 171 OFFCURVE",
"139 169 OFFCURVE",
"144 169 CURVE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"199 173 OFFCURVE",
"269 173 OFFCURVE",
"337 172 CURVE",
"346 171 OFFCURVE",
"353 171 OFFCURVE",
"358 171 CURVE SMOOTH",
"368 171 LINE SMOOTH",
"375 171 OFFCURVE",
"378 173 OFFCURVE",
"378 178 CURVE SMOOTH",
"378 181 OFFCURVE",
"375 184 OFFCURVE",
"369 185 CURVE SMOOTH",
"343 189 LINE SMOOTH",
"310 194 OFFCURVE",
"274 197 OFFCURVE",
"221 197 CURVE SMOOTH",
"208 197 OFFCURVE",
"171 196 OFFCURVE",
"144 194 CURVE",
"130 191 OFFCURVE",
"122 184 OFFCURVE",
"122 175 CURVE SMOOTH",
"122 171 OFFCURVE",
"124 169 OFFCURVE",
"130 169 CURVE"
);
}
);
width = 500;
}
);
},
{
color = 3;
glyphname = brevecomb_acutecomb;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 33, 91}";
}
);
};
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 33, 91}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 33, 91}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 181;
}
);
},
{
color = 3;
glyphname = brevecomb_gravecomb;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 24, 86}";
}
);
};
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 24, 86}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 24, 86}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 181;
}
);
},
{
color = 3;
glyphname = brevecomb_hookabovecomb;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"302 365 OFFCURVE",
"341 402 OFFCURVE",
"344 437 CURVE SMOOTH",
"345 443 OFFCURVE",
"340 447 OFFCURVE",
"332 436 CURVE SMOOTH",
"312 408 OFFCURVE",
"286 397 OFFCURVE",
"258 397 CURVE SMOOTH",
"217 397 OFFCURVE",
"199 416 OFFCURVE",
"195 436 CURVE SMOOTH",
"194 443 OFFCURVE",
"192 446 OFFCURVE",
"189 446 CURVE SMOOTH",
"185 446 OFFCURVE",
"181 437 OFFCURVE",
"181 424 CURVE SMOOTH",
"181 392 OFFCURVE",
"205 365 OFFCURVE",
"251 365 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"270 449 OFFCURVE",
"273 451 OFFCURVE",
"281 460 CURVE",
"296 479 OFFCURVE",
"301 484 OFFCURVE",
"318 499 CURVE SMOOTH",
"342 517 OFFCURVE",
"352 536 OFFCURVE",
"352 552 CURVE SMOOTH",
"352 579 OFFCURVE",
"330 590 OFFCURVE",
"307 590 CURVE SMOOTH",
"267 590 OFFCURVE",
"235 560 OFFCURVE",
"235 544 CURVE SMOOTH",
"235 540 OFFCURVE",
"236 539 OFFCURVE",
"236 539 CURVE SMOOTH",
"242 539 OFFCURVE",
"259 561 OFFCURVE",
"290 561 CURVE SMOOTH",
"306 561 OFFCURVE",
"312 553 OFFCURVE",
"312 539 CURVE SMOOTH",
"312 532 OFFCURVE",
"307 521 OFFCURVE",
"291 503 CURVE SMOOTH",
"269 477 OFFCURVE",
"262 463 OFFCURVE",
"262 455 CURVE SMOOTH",
"262 452 OFFCURVE",
"264 449 OFFCURVE",
"268 449 CURVE SMOOTH"
);
}
);
};
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 18, 83}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 18, 83}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 181;
}
);
},
{
color = 3;
glyphname = brevecomb_tildecomb;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"302 365 OFFCURVE",
"341 402 OFFCURVE",
"344 437 CURVE SMOOTH",
"345 443 OFFCURVE",
"340 447 OFFCURVE",
"332 436 CURVE SMOOTH",
"312 408 OFFCURVE",
"286 397 OFFCURVE",
"258 397 CURVE SMOOTH",
"217 397 OFFCURVE",
"199 416 OFFCURVE",
"195 436 CURVE SMOOTH",
"194 443 OFFCURVE",
"192 446 OFFCURVE",
"189 446 CURVE SMOOTH",
"185 446 OFFCURVE",
"181 437 OFFCURVE",
"181 424 CURVE SMOOTH",
"181 392 OFFCURVE",
"205 365 OFFCURVE",
"251 365 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"339 483 OFFCURVE",
"353 505 OFFCURVE",
"360 524 CURVE",
"360 530 OFFCURVE",
"360 535 OFFCURVE",
"356 535 CURVE",
"352 533 OFFCURVE",
"340 515 OFFCURVE",
"322 515 CURVE SMOOTH",
"282 515 OFFCURVE",
"268 539 OFFCURVE",
"239 539 CURVE SMOOTH",
"209 539 OFFCURVE",
"188 501 OFFCURVE",
"188 490 CURVE SMOOTH",
"188 488 OFFCURVE",
"190 486 OFFCURVE",
"191 486 CURVE SMOOTH",
"197 486 OFFCURVE",
"214 510 OFFCURVE",
"236 510 CURVE SMOOTH",
"265 510 OFFCURVE",
"284 483 OFFCURVE",
"316 483 CURVE SMOOTH"
);
}
);
};
components = (
{
name = brevecomb;
},
{
anchor = top_viet;
name = tildecomb;
transform = "{1, 0, 0, 1, 24, 100}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 24, 100}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 181;
}
);
},
{
color = 3;
glyphname = circumflexcomb_acutecomb;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"156 366 OFFCURVE",
"158 366 CURVE SMOOTH",
"160 366 OFFCURVE",
"164 367 OFFCURVE",
"168 369 CURVE SMOOTH",
"193 380 OFFCURVE",
"236 406 OFFCURVE",
"271 425 CURVE",
"282 403 OFFCURVE",
"303 380 OFFCURVE",
"314 371 CURVE SMOOTH",
"319 367 OFFCURVE",
"323 365 OFFCURVE",
"325 365 CURVE SMOOTH",
"327 365 OFFCURVE",
"328 366 OFFCURVE",
"328 369 CURVE SMOOTH",
"328 373 OFFCURVE",
"326 379 OFFCURVE",
"323 388 CURVE SMOOTH",
"316 405 OFFCURVE",
"310 430 OFFCURVE",
"305 454 CURVE SMOOTH",
"302 468 OFFCURVE",
"298 474 OFFCURVE",
"292 474 CURVE SMOOTH",
"285 474 OFFCURVE",
"276 467 OFFCURVE",
"261 454 CURVE SMOOTH",
"233 430 OFFCURVE",
"155 370 OFFCURVE",
"155 368 CURVE SMOOTH",
"155 367 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"367 466 OFFCURVE",
"415 501 OFFCURVE",
"440 517 CURVE SMOOTH",
"450 525 OFFCURVE",
"475 541 OFFCURVE",
"475 549 CURVE SMOOTH",
"475 559 OFFCURVE",
"458 569 OFFCURVE",
"450 569 CURVE SMOOTH",
"440 569 OFFCURVE",
"434 563 OFFCURVE",
"428 555 CURVE SMOOTH",
"413 538 OFFCURVE",
"379 498 OFFCURVE",
"364 482 CURVE",
"361 480 OFFCURVE",
"353 473 OFFCURVE",
"353 468 CURVE SMOOTH",
"353 467 OFFCURVE",
"355 466 OFFCURVE",
"356 466 CURVE SMOOTH"
);
}
);
};
components = (
{
name = circumflexcomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 118, 101}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = circumflexcomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 118, 101}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 220;
}
);
},
{
color = 3;
glyphname = circumflexcomb_gravecomb;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"156 366 OFFCURVE",
"158 366 CURVE SMOOTH",
"160 366 OFFCURVE",
"164 367 OFFCURVE",
"168 369 CURVE SMOOTH",
"193 380 OFFCURVE",
"236 406 OFFCURVE",
"271 425 CURVE",
"282 403 OFFCURVE",
"303 380 OFFCURVE",
"314 371 CURVE SMOOTH",
"319 367 OFFCURVE",
"323 365 OFFCURVE",
"325 365 CURVE SMOOTH",
"327 365 OFFCURVE",
"328 366 OFFCURVE",
"328 369 CURVE SMOOTH",
"328 373 OFFCURVE",
"326 379 OFFCURVE",
"323 388 CURVE SMOOTH",
"316 405 OFFCURVE",
"310 430 OFFCURVE",
"305 454 CURVE SMOOTH",
"302 468 OFFCURVE",
"298 474 OFFCURVE",
"292 474 CURVE SMOOTH",
"285 474 OFFCURVE",
"276 467 OFFCURVE",
"261 454 CURVE SMOOTH",
"233 430 OFFCURVE",
"155 370 OFFCURVE",
"155 368 CURVE SMOOTH",
"155 367 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"373 461 OFFCURVE",
"374 462 OFFCURVE",
"374 464 CURVE SMOOTH",
"374 468 OFFCURVE",
"368 475 OFFCURVE",
"360 481 CURVE SMOOTH",
"347 492 OFFCURVE",
"314 533 OFFCURVE",
"300 550 CURVE SMOOTH",
"294 558 OFFCURVE",
"288 564 OFFCURVE",
"278 564 CURVE SMOOTH",
"269 564 OFFCURVE",
"252 554 OFFCURVE",
"252 544 CURVE SMOOTH",
"252 536 OFFCURVE",
"278 520 OFFCURVE",
"288 512 CURVE SMOOTH",
"312 496 OFFCURVE",
"361 461 OFFCURVE",
"371 461 CURVE SMOOTH"
);
}
);
};
components = (
{
name = circumflexcomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 109, 96}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = circumflexcomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 109, 96}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 220;
}
);
},
{
color = 3;
glyphname = circumflexcomb_hookabovecomb;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"156 366 OFFCURVE",
"158 366 CURVE SMOOTH",
"160 366 OFFCURVE",
"164 367 OFFCURVE",
"168 369 CURVE SMOOTH",
"193 380 OFFCURVE",
"236 406 OFFCURVE",
"271 425 CURVE",
"282 403 OFFCURVE",
"303 380 OFFCURVE",
"314 371 CURVE SMOOTH",
"319 367 OFFCURVE",
"323 365 OFFCURVE",
"325 365 CURVE SMOOTH",
"327 365 OFFCURVE",
"328 366 OFFCURVE",
"328 369 CURVE SMOOTH",
"328 373 OFFCURVE",
"326 379 OFFCURVE",
"323 388 CURVE SMOOTH",
"316 405 OFFCURVE",
"310 430 OFFCURVE",
"305 454 CURVE SMOOTH",
"302 468 OFFCURVE",
"298 474 OFFCURVE",
"292 474 CURVE SMOOTH",
"285 474 OFFCURVE",
"276 467 OFFCURVE",
"261 454 CURVE SMOOTH",
"233 430 OFFCURVE",
"155 370 OFFCURVE",
"155 368 CURVE SMOOTH",
"155 367 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"355 459 OFFCURVE",
"358 461 OFFCURVE",
"366 470 CURVE",
"381 489 OFFCURVE",
"386 494 OFFCURVE",
"403 509 CURVE SMOOTH",
"427 527 OFFCURVE",
"437 546 OFFCURVE",
"437 562 CURVE SMOOTH",
"437 589 OFFCURVE",
"415 600 OFFCURVE",
"392 600 CURVE SMOOTH",
"352 600 OFFCURVE",
"320 570 OFFCURVE",
"320 554 CURVE SMOOTH",
"320 550 OFFCURVE",
"321 549 OFFCURVE",
"321 549 CURVE SMOOTH",
"327 549 OFFCURVE",
"344 571 OFFCURVE",
"375 571 CURVE SMOOTH",
"391 571 OFFCURVE",
"397 563 OFFCURVE",
"397 549 CURVE SMOOTH",
"397 542 OFFCURVE",
"392 531 OFFCURVE",
"376 513 CURVE SMOOTH",
"354 487 OFFCURVE",
"347 473 OFFCURVE",
"347 465 CURVE SMOOTH",
"347 462 OFFCURVE",
"349 459 OFFCURVE",
"353 459 CURVE SMOOTH"
);
}
);
};
components = (
{
name = circumflexcomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 103, 93}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = circumflexcomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 103, 93}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 220;
}
);
},
{
color = 3;
glyphname = circumflexcomb_tildecomb;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"156 366 OFFCURVE",
"158 366 CURVE SMOOTH",
"160 366 OFFCURVE",
"164 367 OFFCURVE",
"168 369 CURVE SMOOTH",
"193 380 OFFCURVE",
"236 406 OFFCURVE",
"271 425 CURVE",
"282 403 OFFCURVE",
"303 380 OFFCURVE",
"314 371 CURVE SMOOTH",
"319 367 OFFCURVE",
"323 365 OFFCURVE",
"325 365 CURVE SMOOTH",
"327 365 OFFCURVE",
"328 366 OFFCURVE",
"328 369 CURVE SMOOTH",
"328 373 OFFCURVE",
"326 379 OFFCURVE",
"323 388 CURVE SMOOTH",
"316 405 OFFCURVE",
"310 430 OFFCURVE",
"305 454 CURVE SMOOTH",
"302 468 OFFCURVE",
"298 474 OFFCURVE",
"292 474 CURVE SMOOTH",
"285 474 OFFCURVE",
"276 467 OFFCURVE",
"261 454 CURVE SMOOTH",
"233 430 OFFCURVE",
"155 370 OFFCURVE",
"155 368 CURVE SMOOTH",
"155 367 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"365 485 OFFCURVE",
"379 507 OFFCURVE",
"386 526 CURVE",
"386 532 OFFCURVE",
"386 537 OFFCURVE",
"382 537 CURVE",
"378 535 OFFCURVE",
"366 517 OFFCURVE",
"348 517 CURVE SMOOTH",
"308 517 OFFCURVE",
"294 541 OFFCURVE",
"265 541 CURVE SMOOTH",
"235 541 OFFCURVE",
"214 503 OFFCURVE",
"214 492 CURVE SMOOTH",
"214 490 OFFCURVE",
"216 488 OFFCURVE",
"217 488 CURVE SMOOTH",
"223 488 OFFCURVE",
"240 512 OFFCURVE",
"262 512 CURVE SMOOTH",
"291 512 OFFCURVE",
"310 485 OFFCURVE",
"342 485 CURVE SMOOTH"
);
}
);
};
components = (
{
name = circumflexcomb;
},
{
alignment = -1;
name = tildecomb;
transform = "{1, 0, 0, 1, 50, 102}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, 137}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 220;
}
);
},
{
color = 3;
glyphname = brevecomb_acutecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"316 365 OFFCURVE",
"355 402 OFFCURVE",
"358 437 CURVE SMOOTH",
"359 443 OFFCURVE",
"354 447 OFFCURVE",
"346 436 CURVE SMOOTH",
"326 408 OFFCURVE",
"300 397 OFFCURVE",
"258 397 CURVE SMOOTH",
"202 397 OFFCURVE",
"184 416 OFFCURVE",
"180 436 CURVE SMOOTH",
"179 443 OFFCURVE",
"177 446 OFFCURVE",
"174 446 CURVE SMOOTH",
"170 446 OFFCURVE",
"166 437 OFFCURVE",
"166 424 CURVE SMOOTH",
"166 392 OFFCURVE",
"190 365 OFFCURVE",
"251 365 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"277 452 OFFCURVE",
"336 484 OFFCURVE",
"365 499 CURVE SMOOTH",
"377 506 OFFCURVE",
"409 520 OFFCURVE",
"409 528 CURVE SMOOTH",
"409 537 OFFCURVE",
"388 546 OFFCURVE",
"377 546 CURVE SMOOTH",
"365 546 OFFCURVE",
"358 541 OFFCURVE",
"351 533 CURVE SMOOTH",
"334 518 OFFCURVE",
"291 481 OFFCURVE",
"274 469 CURVE",
"269 465 OFFCURVE",
"261 458 OFFCURVE",
"261 454 CURVE SMOOTH",
"261 453 OFFCURVE",
"262 452 OFFCURVE",
"263 452 CURVE SMOOTH"
);
}
);
};
components = (
{
name = brevecomb.case;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 22, 97}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 33, 91}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 181;
}
);
},
{
color = 3;
glyphname = brevecomb_gravecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"316 365 OFFCURVE",
"355 402 OFFCURVE",
"358 437 CURVE SMOOTH",
"359 443 OFFCURVE",
"354 447 OFFCURVE",
"346 436 CURVE SMOOTH",
"326 408 OFFCURVE",
"300 397 OFFCURVE",
"258 397 CURVE SMOOTH",
"202 397 OFFCURVE",
"184 416 OFFCURVE",
"180 436 CURVE SMOOTH",
"179 443 OFFCURVE",
"177 446 OFFCURVE",
"174 446 CURVE SMOOTH",
"170 446 OFFCURVE",
"166 437 OFFCURVE",
"166 424 CURVE SMOOTH",
"166 392 OFFCURVE",
"190 365 OFFCURVE",
"251 365 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"290 452 OFFCURVE",
"291 453 OFFCURVE",
"291 454 CURVE SMOOTH",
"291 458 OFFCURVE",
"283 465 OFFCURVE",
"278 469 CURVE",
"261 481 OFFCURVE",
"218 518 OFFCURVE",
"201 533 CURVE SMOOTH",
"194 541 OFFCURVE",
"187 546 OFFCURVE",
"175 546 CURVE SMOOTH",
"164 546 OFFCURVE",
"143 537 OFFCURVE",
"143 528 CURVE SMOOTH",
"143 520 OFFCURVE",
"175 506 OFFCURVE",
"187 499 CURVE SMOOTH",
"216 484 OFFCURVE",
"275 452 OFFCURVE",
"289 452 CURVE SMOOTH"
);
}
);
};
components = (
{
name = brevecomb.case;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 25, 97}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 24, 86}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 181;
}
);
},
{
color = 3;
glyphname = brevecomb_hookabovecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"316 365 OFFCURVE",
"355 402 OFFCURVE",
"358 437 CURVE SMOOTH",
"359 443 OFFCURVE",
"354 447 OFFCURVE",
"346 436 CURVE SMOOTH",
"326 408 OFFCURVE",
"300 397 OFFCURVE",
"258 397 CURVE SMOOTH",
"202 397 OFFCURVE",
"184 416 OFFCURVE",
"180 436 CURVE SMOOTH",
"179 443 OFFCURVE",
"177 446 OFFCURVE",
"174 446 CURVE SMOOTH",
"170 446 OFFCURVE",
"166 437 OFFCURVE",
"166 424 CURVE SMOOTH",
"166 392 OFFCURVE",
"190 365 OFFCURVE",
"251 365 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"277 453 OFFCURVE",
"280 455 OFFCURVE",
"289 464 CURVE",
"307 483 OFFCURVE",
"313 487 OFFCURVE",
"335 502 CURVE SMOOTH",
"363 519 OFFCURVE",
"375 538 OFFCURVE",
"375 554 CURVE SMOOTH",
"375 580 OFFCURVE",
"348 592 OFFCURVE",
"321 592 CURVE SMOOTH",
"272 592 OFFCURVE",
"234 562 OFFCURVE",
"234 546 CURVE SMOOTH",
"234 543 OFFCURVE",
"235 542 OFFCURVE",
"236 542 CURVE SMOOTH",
"243 542 OFFCURVE",
"263 561 OFFCURVE",
"301 561 CURVE SMOOTH",
"320 561 OFFCURVE",
"327 555 OFFCURVE",
"327 542 CURVE SMOOTH",
"327 534 OFFCURVE",
"321 523 OFFCURVE",
"302 506 CURVE SMOOTH",
"274 481 OFFCURVE",
"267 467 OFFCURVE",
"267 459 CURVE SMOOTH",
"267 456 OFFCURVE",
"269 453 OFFCURVE",
"273 453 CURVE SMOOTH"
);
}
);
};
components = (
{
name = brevecomb.case;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 25, 97}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 18, 83}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 181;
}
);
},
{
color = 3;
glyphname = brevecomb_tildecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
components = (
{
name = brevecomb.case;
},
{
anchor = top_viet;
name = tildecomb.case;
transform = "{1, 0, 0, 1, 26, 87}";
}
);
};
components = (
{
name = brevecomb.case;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 24, 95}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 24, 100}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 181;
}
);
},
{
color = 3;
glyphname = circumflexcomb_acutecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"137 366 OFFCURVE",
"139 366 CURVE SMOOTH",
"142 366 OFFCURVE",
"147 367 OFFCURVE",
"152 369 CURVE SMOOTH",
"182 379 OFFCURVE",
"235 398 OFFCURVE",
"278 415 CURVE",
"291 395 OFFCURVE",
"317 379 OFFCURVE",
"330 371 CURVE SMOOTH",
"336 367 OFFCURVE",
"341 365 OFFCURVE",
"344 365 CURVE SMOOTH",
"346 365 OFFCURVE",
"347 366 OFFCURVE",
"347 369 CURVE SMOOTH",
"347 372 OFFCURVE",
"345 378 OFFCURVE",
"341 386 CURVE SMOOTH",
"333 402 OFFCURVE",
"325 425 OFFCURVE",
"319 447 CURVE SMOOTH",
"315 460 OFFCURVE",
"311 466 OFFCURVE",
"303 466 CURVE SMOOTH",
"295 466 OFFCURVE",
"284 459 OFFCURVE",
"265 447 CURVE SMOOTH",
"231 425 OFFCURVE",
"136 374 OFFCURVE",
"136 368 CURVE SMOOTH",
"136 367 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"357 452 OFFCURVE",
"416 484 OFFCURVE",
"445 499 CURVE SMOOTH",
"457 506 OFFCURVE",
"489 520 OFFCURVE",
"489 528 CURVE SMOOTH",
"489 537 OFFCURVE",
"468 546 OFFCURVE",
"457 546 CURVE SMOOTH",
"445 546 OFFCURVE",
"438 541 OFFCURVE",
"431 533 CURVE SMOOTH",
"414 518 OFFCURVE",
"371 481 OFFCURVE",
"354 469 CURVE",
"349 465 OFFCURVE",
"341 458 OFFCURVE",
"341 454 CURVE SMOOTH",
"341 453 OFFCURVE",
"342 452 OFFCURVE",
"343 452 CURVE SMOOTH"
);
}
);
};
components = (
{
name = circumflexcomb.case;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 129, 88}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = circumflexcomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 118, 101}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 220;
}
);
},
{
color = 3;
glyphname = circumflexcomb_gravecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"137 366 OFFCURVE",
"139 366 CURVE SMOOTH",
"142 366 OFFCURVE",
"147 367 OFFCURVE",
"152 369 CURVE SMOOTH",
"182 379 OFFCURVE",
"235 398 OFFCURVE",
"278 415 CURVE",
"291 395 OFFCURVE",
"317 379 OFFCURVE",
"330 371 CURVE SMOOTH",
"336 367 OFFCURVE",
"341 365 OFFCURVE",
"344 365 CURVE SMOOTH",
"346 365 OFFCURVE",
"347 366 OFFCURVE",
"347 369 CURVE SMOOTH",
"347 372 OFFCURVE",
"345 378 OFFCURVE",
"341 386 CURVE SMOOTH",
"333 402 OFFCURVE",
"325 425 OFFCURVE",
"319 447 CURVE SMOOTH",
"315 460 OFFCURVE",
"311 466 OFFCURVE",
"303 466 CURVE SMOOTH",
"295 466 OFFCURVE",
"284 459 OFFCURVE",
"265 447 CURVE SMOOTH",
"231 425 OFFCURVE",
"136 374 OFFCURVE",
"136 368 CURVE SMOOTH",
"136 367 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"370 452 OFFCURVE",
"371 453 OFFCURVE",
"371 454 CURVE SMOOTH",
"371 458 OFFCURVE",
"363 465 OFFCURVE",
"358 469 CURVE",
"341 481 OFFCURVE",
"298 518 OFFCURVE",
"281 533 CURVE SMOOTH",
"274 541 OFFCURVE",
"267 546 OFFCURVE",
"255 546 CURVE SMOOTH",
"244 546 OFFCURVE",
"223 537 OFFCURVE",
"223 528 CURVE SMOOTH",
"223 520 OFFCURVE",
"255 506 OFFCURVE",
"267 499 CURVE SMOOTH",
"296 484 OFFCURVE",
"355 452 OFFCURVE",
"369 452 CURVE SMOOTH"
);
}
);
};
components = (
{
name = circumflexcomb.case;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 132, 88}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = circumflexcomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 109, 96}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 220;
}
);
},
{
color = 3;
glyphname = circumflexcomb_hookabovecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"137 366 OFFCURVE",
"139 366 CURVE SMOOTH",
"142 366 OFFCURVE",
"147 367 OFFCURVE",
"152 369 CURVE SMOOTH",
"182 379 OFFCURVE",
"235 398 OFFCURVE",
"278 415 CURVE",
"291 395 OFFCURVE",
"317 379 OFFCURVE",
"330 371 CURVE SMOOTH",
"336 367 OFFCURVE",
"341 365 OFFCURVE",
"344 365 CURVE SMOOTH",
"346 365 OFFCURVE",
"347 366 OFFCURVE",
"347 369 CURVE SMOOTH",
"347 372 OFFCURVE",
"345 378 OFFCURVE",
"341 386 CURVE SMOOTH",
"333 402 OFFCURVE",
"325 425 OFFCURVE",
"319 447 CURVE SMOOTH",
"315 460 OFFCURVE",
"311 466 OFFCURVE",
"303 466 CURVE SMOOTH",
"295 466 OFFCURVE",
"284 459 OFFCURVE",
"265 447 CURVE SMOOTH",
"231 425 OFFCURVE",
"136 374 OFFCURVE",
"136 368 CURVE SMOOTH",
"136 367 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"357 453 OFFCURVE",
"360 455 OFFCURVE",
"369 464 CURVE",
"387 483 OFFCURVE",
"393 487 OFFCURVE",
"415 502 CURVE SMOOTH",
"443 519 OFFCURVE",
"455 538 OFFCURVE",
"455 554 CURVE SMOOTH",
"455 580 OFFCURVE",
"428 592 OFFCURVE",
"401 592 CURVE SMOOTH",
"352 592 OFFCURVE",
"314 562 OFFCURVE",
"314 546 CURVE SMOOTH",
"314 543 OFFCURVE",
"315 542 OFFCURVE",
"316 542 CURVE SMOOTH",
"323 542 OFFCURVE",
"343 561 OFFCURVE",
"381 561 CURVE SMOOTH",
"400 561 OFFCURVE",
"407 555 OFFCURVE",
"407 542 CURVE SMOOTH",
"407 534 OFFCURVE",
"401 523 OFFCURVE",
"382 506 CURVE SMOOTH",
"354 481 OFFCURVE",
"347 467 OFFCURVE",
"347 459 CURVE SMOOTH",
"347 456 OFFCURVE",
"349 453 OFFCURVE",
"353 453 CURVE SMOOTH"
);
}
);
};
components = (
{
name = circumflexcomb.case;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 132, 88}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = circumflexcomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 103, 93}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 220;
}
);
},
{
color = 3;
glyphname = circumflexcomb_tildecomb.case;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{250, 300}";
}
);
background = {
paths = (
{
closed = 1;
nodes = (
"137 366 OFFCURVE",
"139 366 CURVE SMOOTH",
"142 366 OFFCURVE",
"147 367 OFFCURVE",
"152 369 CURVE SMOOTH",
"182 379 OFFCURVE",
"235 398 OFFCURVE",
"278 415 CURVE",
"291 395 OFFCURVE",
"317 379 OFFCURVE",
"330 371 CURVE SMOOTH",
"336 367 OFFCURVE",
"341 365 OFFCURVE",
"344 365 CURVE SMOOTH",
"346 365 OFFCURVE",
"347 366 OFFCURVE",
"347 369 CURVE SMOOTH",
"347 372 OFFCURVE",
"345 378 OFFCURVE",
"341 386 CURVE SMOOTH",
"333 402 OFFCURVE",
"325 425 OFFCURVE",
"319 447 CURVE SMOOTH",
"315 460 OFFCURVE",
"311 466 OFFCURVE",
"303 466 CURVE SMOOTH",
"295 466 OFFCURVE",
"284 459 OFFCURVE",
"265 447 CURVE SMOOTH",
"231 425 OFFCURVE",
"136 374 OFFCURVE",
"136 368 CURVE SMOOTH",
"136 367 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"395 482 OFFCURVE",
"409 507 OFFCURVE",
"416 526 CURVE",
"416 532 OFFCURVE",
"416 537 OFFCURVE",
"412 537 CURVE",
"408 535 OFFCURVE",
"396 517 OFFCURVE",
"378 517 CURVE SMOOTH",
"338 517 OFFCURVE",
"284 544 OFFCURVE",
"255 544 CURVE SMOOTH",
"225 544 OFFCURVE",
"204 503 OFFCURVE",
"204 492 CURVE SMOOTH",
"204 490 OFFCURVE",
"206 488 OFFCURVE",
"207 488 CURVE SMOOTH",
"213 488 OFFCURVE",
"230 512 OFFCURVE",
"252 512 CURVE SMOOTH",
"281 512 OFFCURVE",
"340 482 OFFCURVE",
"372 482 CURVE SMOOTH"
);
}
);
};
components = (
{
name = circumflexcomb.case;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 54, 107}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 500;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, 137}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 220;
}
);
},
{
glyphname = robbie;
lastChange = "2022-03-25 01:08:17 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"221 1 LINE",
"221 7 LINE",
"223 7 LINE",
"223 9 LINE",
"227 9 LINE",
"227 10 LINE",
"230 10 LINE SMOOTH",
"231 10 OFFCURVE",
"233 11 OFFCURVE",
"234 13 CURVE",
"233 13 OFFCURVE",
"233 15 OFFCURVE",
"233 16 CURVE",
"234 18 OFFCURVE",
"235 18 OFFCURVE",
"235 18 CURVE",
"236 18 OFFCURVE",
"237 19 OFFCURVE",
"238 19 CURVE",
"238 20 OFFCURVE",
"241 20 OFFCURVE",
"241 20 CURVE",
"242 21 LINE",
"241 21 OFFCURVE",
"241 21 OFFCURVE",
"241 22 CURVE",
"245 22 OFFCURVE",
"247 23 OFFCURVE",
"249 24 CURVE",
"253 28 LINE",
"254 30 OFFCURVE",
"255 30 OFFCURVE",
"255 32 CURVE",
"256 33 OFFCURVE",
"258 35 OFFCURVE",
"258 36 CURVE SMOOTH",
"258 38 OFFCURVE",
"258 39 OFFCURVE",
"259 39 CURVE",
"260 40 OFFCURVE",
"260 41 OFFCURVE",
"260 41 CURVE",
"261 44 OFFCURVE",
"262 44 OFFCURVE",
"262 43 CURVE",
"263 42 OFFCURVE",
"263 41 OFFCURVE",
"263 41 CURVE",
"263 46 LINE",
"266 46 LINE",
"266 47 LINE",
"267 47 LINE",
"267 48 LINE",
"268 49 OFFCURVE",
"268 49 OFFCURVE",
"268 50 CURVE SMOOTH",
"268 52 LINE",
"271 52 LINE",
"272 53 OFFCURVE",
"272 54 OFFCURVE",
"272 54 CURVE",
"274 55 OFFCURVE",
"274 56 OFFCURVE",
"274 56 CURVE",
"277 56 LINE SMOOTH",
"278 56 OFFCURVE",
"278 57 OFFCURVE",
"278 58 CURVE SMOOTH",
"278 59 OFFCURVE",
"278 59 OFFCURVE",
"277 60 CURVE",
"278 60 OFFCURVE",
"278 60 OFFCURVE",
"280 61 CURVE",
"284 61 LINE",
"284 64 LINE",
"286 64 LINE",
"286 67 OFFCURVE",
"287 68 OFFCURVE",
"289 69 CURVE SMOOTH",
"292 70 OFFCURVE",
"292 70 OFFCURVE",
"295 70 CURVE",
"295 72 OFFCURVE",
"295 73 OFFCURVE",
"293 73 CURVE",
"295 75 LINE",
"295 79 LINE SMOOTH",
"295 80 OFFCURVE",
"293 81 OFFCURVE",
"292 83 CURVE",
"289 83 OFFCURVE",
"287 82 OFFCURVE",
"289 81 CURVE",
"289 80 OFFCURVE",
"288 79 OFFCURVE",
"286 79 CURVE SMOOTH",
"271 79 LINE SMOOTH",
"269 79 OFFCURVE",
"269 80 OFFCURVE",
"268 81 CURVE SMOOTH",
"267 82 OFFCURVE",
"266 84 OFFCURVE",
"263 84 CURVE",
"261 86 LINE",
"261 87 LINE",
"260 87 OFFCURVE",
"260 87 OFFCURVE",
"260 88 CURVE",
"235 88 LINE",
"234 91 LINE",
"231 91 LINE",
"231 92 LINE",
"231 92 OFFCURVE",
"230 92 OFFCURVE",
"230 93 CURVE",
"227 93 LINE",
"227 94 LINE",
"226 95 OFFCURVE",
"224 95 OFFCURVE",
"222 94 CURVE SMOOTH",
"220 93 OFFCURVE",
"219 93 OFFCURVE",
"218 93 CURVE SMOOTH",
"216 93 OFFCURVE",
"213 94 OFFCURVE",
"212 94 CURVE SMOOTH",
"207 94 LINE",
"207 96 LINE",
"205 97 OFFCURVE",
"203 97 OFFCURVE",
"202 96 CURVE SMOOTH",
"200 95 OFFCURVE",
"200 95 OFFCURVE",
"200 96 CURVE",
"190 105 LINE",
"190 106 LINE",
"189 105 OFFCURVE",
"188 105 OFFCURVE",
"187 107 CURVE SMOOTH",
"186 110 OFFCURVE",
"186 110 OFFCURVE",
"185 110 CURVE",
"185 118 LINE SMOOTH",
"185 121 OFFCURVE",
"186 122 OFFCURVE",
"186 124 CURVE SMOOTH",
"186 127 LINE",
"185 129 OFFCURVE",
"184 130 OFFCURVE",
"183 130 CURVE SMOOTH",
"169 130 LINE",
"169 132 OFFCURVE",
"169 133 OFFCURVE",
"168 134 CURVE SMOOTH",
"167 135 OFFCURVE",
"166 136 OFFCURVE",
"166 138 CURVE",
"169 138 LINE",
"169 168 LINE",
"166 170 LINE",
"169 173 OFFCURVE",
"169 173 OFFCURVE",
"169 174 CURVE",
"171 175 OFFCURVE",
"171 176 OFFCURVE",
"171 176 CURVE",
"171 178 LINE",
"175 178 LINE",
"175 180 LINE",
"177 180 OFFCURVE",
"180 179 OFFCURVE",
"180 178 CURVE",
"183 179 OFFCURVE",
"183 180 OFFCURVE",
"183 181 CURVE",
"183 181 OFFCURVE",
"184 182 OFFCURVE",
"185 185 CURVE",
"185 188 LINE",
"187 188 LINE SMOOTH",
"186 188 OFFCURVE",
"187 189 OFFCURVE",
"189 189 CURVE",
"189 191 LINE",
"194 191 OFFCURVE",
"199 190 OFFCURVE",
"201 187 CURVE SMOOTH",
"203 185 OFFCURVE",
"206 182 OFFCURVE",
"208 178 CURVE",
"209 177 OFFCURVE",
"211 177 OFFCURVE",
"213 177 CURVE",
"216 176 OFFCURVE",
"219 176 OFFCURVE",
"222 176 CURVE SMOOTH",
"229 176 LINE",
"231 177 OFFCURVE",
"233 177 OFFCURVE",
"234 178 CURVE",
"234 180 LINE",
"231 181 LINE",
"216 181 LINE",
"216 183 OFFCURVE",
"216 185 OFFCURVE",
"214 187 CURVE",
"213 187 OFFCURVE",
"212 189 OFFCURVE",
"212 189 CURVE",
"212 199 LINE SMOOTH",
"212 200 OFFCURVE",
"212 201 OFFCURVE",
"213 202 CURVE",
"216 202 LINE",
"216 203 LINE",
"227 203 LINE",
"227 202 LINE",
"231 202 LINE",
"233 200 OFFCURVE",
"234 198 OFFCURVE",
"234 198 CURVE",
"235 197 OFFCURVE",
"236 196 OFFCURVE",
"236 194 CURVE",
"258 194 LINE",
"258 195 LINE",
"260 195 LINE",
"260 196 OFFCURVE",
"261 196 OFFCURVE",
"263 196 CURVE",
"263 195 OFFCURVE",
"266 195 OFFCURVE",
"266 195 CURVE",
"267 195 OFFCURVE",
"268 196 OFFCURVE",
"268 197 CURVE",
"269 198 OFFCURVE",
"269 198 OFFCURVE",
"271 198 CURVE SMOOTH",
"266 198 LINE",
"266 198 OFFCURVE",
"263 199 OFFCURVE",
"262 201 CURVE",
"260 203 LINE",
"260 208 LINE",
"263 208 OFFCURVE",
"266 208 OFFCURVE",
"268 210 CURVE",
"269 210 OFFCURVE",
"272 210 OFFCURVE",
"277 209 CURVE",
"278 210 LINE",
"277 210 OFFCURVE",
"277 210 OFFCURVE",
"277 211 CURVE",
"281 211 LINE",
"281 214 OFFCURVE",
"284 216 OFFCURVE",
"284 217 CURVE SMOOTH",
"284 218 OFFCURVE",
"286 219 OFFCURVE",
"292 219 CURVE",
"293 220 OFFCURVE",
"294 219 OFFCURVE",
"295 219 CURVE",
"295 221 LINE SMOOTH",
"295 222 OFFCURVE",
"295 222 OFFCURVE",
"297 223 CURVE",
"297 231 LINE",
"295 231 LINE",
"295 235 LINE",
"292 235 OFFCURVE",
"289 234 OFFCURVE",
"286 233 CURVE",
"286 233 OFFCURVE",
"284 232 OFFCURVE",
"281 232 CURVE SMOOTH",
"263 232 LINE",
"260 235 LINE",
"258 235 LINE",
"258 236 LINE",
"253 236 LINE",
"253 239 LINE",
"250 239 LINE",
"250 240 LINE",
"244 240 LINE",
"244 242 LINE",
"239 242 LINE",
"236 240 LINE",
"223 240 LINE",
"221 242 LINE",
"220 242 LINE",
"220 253 LINE SMOOTH",
"220 258 OFFCURVE",
"219 262 OFFCURVE",
"218 264 CURVE",
"217 264 OFFCURVE",
"216 264 OFFCURVE",
"214 263 CURVE SMOOTH",
"213 262 OFFCURVE",
"213 263 OFFCURVE",
"213 264 CURVE",
"212 263 LINE",
"212 262 LINE",
"208 261 OFFCURVE",
"205 259 OFFCURVE",
"204 256 CURVE",
"203 255 OFFCURVE",
"202 253 OFFCURVE",
"200 251 CURVE",
"197 251 LINE",
"197 250 LINE",
"193 250 LINE",
"190 248 LINE",
"186 249 OFFCURVE",
"183 248 OFFCURVE",
"177 246 CURVE SMOOTH",
"171 245 OFFCURVE",
"166 245 OFFCURVE",
"161 246 CURVE SMOOTH",
"160 246 OFFCURVE",
"160 247 OFFCURVE",
"158 248 CURVE",
"157 248 OFFCURVE",
"157 249 OFFCURVE",
"155 250 CURVE",
"153 250 LINE",
"152 249 OFFCURVE",
"152 249 OFFCURVE",
"151 249 CURVE",
"149 248 OFFCURVE",
"149 248 OFFCURVE",
"148 248 CURVE SMOOTH",
"146 248 OFFCURVE",
"146 248 OFFCURVE",
"144 249 CURVE SMOOTH",
"143 250 OFFCURVE",
"143 250 OFFCURVE",
"142 250 CURVE SMOOTH",
"140 250 LINE SMOOTH",
"138 250 OFFCURVE",
"138 252 OFFCURVE",
"137 253 CURVE SMOOTH",
"134 256 LINE",
"132 263 LINE",
"132 266 OFFCURVE",
"130 270 OFFCURVE",
"129 273 CURVE",
"129 282 LINE",
"128 284 OFFCURVE",
"129 286 OFFCURVE",
"129 287 CURVE SMOOTH",
"129 288 LINE",
"132 288 LINE SMOOTH",
"137 288 OFFCURVE",
"140 289 OFFCURVE",
"142 291 CURVE",
"143 294 OFFCURVE",
"143 296 OFFCURVE",
"142 298 CURVE",
"141 298 OFFCURVE",
"140 299 OFFCURVE",
"140 299 CURVE",
"136 299 LINE",
"135 300 OFFCURVE",
"134 301 OFFCURVE",
"132 302 CURVE",
"129 302 LINE",
"129 304 OFFCURVE",
"128 305 OFFCURVE",
"127 305 CURVE",
"126 306 OFFCURVE",
"126 307 OFFCURVE",
"126 309 CURVE SMOOTH",
"126 312 OFFCURVE",
"126 315 OFFCURVE",
"128 316 CURVE",
"129 316 OFFCURVE",
"132 319 OFFCURVE",
"134 322 CURVE",
"138 322 LINE",
"140 321 OFFCURVE",
"141 322 OFFCURVE",
"143 324 CURVE",
"152 324 LINE",
"152 323 OFFCURVE",
"154 322 OFFCURVE",
"155 319 CURVE",
"157 316 OFFCURVE",
"157 315 OFFCURVE",
"157 314 CURVE",
"169 314 LINE",
"170 313 OFFCURVE",
"171 312 OFFCURVE",
"170 312 CURVE",
"169 311 OFFCURVE",
"170 310 OFFCURVE",
"171 309 CURVE",
"174 309 LINE",
"174 307 LINE",
"175 305 LINE",
"177 305 LINE",
"177 304 LINE",
"178 304 OFFCURVE",
"179 303 OFFCURVE",
"179 302 CURVE",
"189 302 LINE",
"189 302 OFFCURVE",
"190 302 OFFCURVE",
"190 301 CURVE",
"193 301 LINE",
"193 300 OFFCURVE",
"193 300 OFFCURVE",
"194 299 CURVE",
"194 296 LINE",
"211 296 LINE",
"212 298 OFFCURVE",
"213 299 OFFCURVE",
"214 299 CURVE",
"216 300 OFFCURVE",
"217 302 OFFCURVE",
"218 302 CURVE SMOOTH",
"244 302 LINE SMOOTH",
"247 302 OFFCURVE",
"249 303 OFFCURVE",
"252 304 CURVE",
"252 304 OFFCURVE",
"254 305 OFFCURVE",
"254 307 CURVE",
"255 309 OFFCURVE",
"255 311 OFFCURVE",
"255 313 CURVE SMOOTH",
"255 315 OFFCURVE",
"256 316 OFFCURVE",
"258 319 CURVE",
"258 317 OFFCURVE",
"260 318 OFFCURVE",
"261 320 CURVE SMOOTH",
"263 323 OFFCURVE",
"263 325 OFFCURVE",
"263 325 CURVE",
"263 330 OFFCURVE",
"261 334 OFFCURVE",
"258 338 CURVE SMOOTH",
"254 342 OFFCURVE",
"251 345 OFFCURVE",
"249 348 CURVE",
"244 348 LINE",
"241 351 LINE",
"234 353 OFFCURVE",
"226 353 OFFCURVE",
"217 353 CURVE SMOOTH",
"207 353 OFFCURVE",
"196 353 OFFCURVE",
"183 351 CURVE",
"183 351 OFFCURVE",
"176 351 OFFCURVE",
"175 349 CURVE",
"175 348 LINE",
"163 348 LINE",
"163 351 OFFCURVE",
"163 352 OFFCURVE",
"162 352 CURVE",
"161 351 OFFCURVE",
"161 352 OFFCURVE",
"161 353 CURVE SMOOTH",
"161 371 LINE",
"163 371 LINE",
"163 372 LINE",
"166 372 LINE",
"166 374 OFFCURVE",
"167 374 OFFCURVE",
"169 374 CURVE",
"171 376 LINE",
"172 378 OFFCURVE",
"172 379 OFFCURVE",
"172 383 CURVE SMOOTH",
"172 384 OFFCURVE",
"173 385 OFFCURVE",
"174 386 CURVE",
"174 388 OFFCURVE",
"173 390 OFFCURVE",
"172 393 CURVE",
"170 396 OFFCURVE",
"169 399 OFFCURVE",
"169 399 CURVE",
"166 399 LINE",
"166 417 LINE",
"163 417 LINE",
"163 421 LINE",
"157 421 LINE",
"158 420 OFFCURVE",
"157 418 OFFCURVE",
"155 416 CURVE SMOOTH",
"153 413 LINE",
"153 409 LINE SMOOTH",
"153 408 OFFCURVE",
"153 408 OFFCURVE",
"152 408 CURVE",
"152 406 LINE",
"150 406 OFFCURVE",
"149 405 OFFCURVE",
"148 404 CURVE",
"143 404 OFFCURVE",
"140 404 OFFCURVE",
"140 405 CURVE",
"134 409 LINE",
"134 413 LINE SMOOTH",
"134 414 OFFCURVE",
"133 414 OFFCURVE",
"132 416 CURVE",
"132 429 LINE",
"134 429 LINE",
"135 430 OFFCURVE",
"135 431 OFFCURVE",
"135 432 CURVE",
"133 434 OFFCURVE",
"132 435 OFFCURVE",
"132 437 CURVE",
"130 437 OFFCURVE",
"129 436 OFFCURVE",
"129 435 CURVE",
"124 440 LINE",
"124 442 OFFCURVE",
"123 442 OFFCURVE",
"124 443 CURVE",
"124 446 LINE",
"125 446 OFFCURVE",
"126 446 OFFCURVE",
"127 448 CURVE",
"128 448 OFFCURVE",
"129 449 OFFCURVE",
"129 449 CURVE",
"132 449 OFFCURVE",
"132 448 OFFCURVE",
"132 447 CURVE SMOOTH",
"132 446 OFFCURVE",
"133 446 OFFCURVE",
"134 446 CURVE SMOOTH",
"135 446 OFFCURVE",
"137 446 OFFCURVE",
"140 447 CURVE",
"141 448 OFFCURVE",
"143 448 OFFCURVE",
"143 449 CURVE SMOOTH",
"143 447 LINE",
"144 446 OFFCURVE",
"146 446 OFFCURVE",
"146 446 CURVE",
"148 449 LINE",
"151 449 LINE",
"152 448 OFFCURVE",
"152 448 OFFCURVE",
"152 446 CURVE",
"154 448 OFFCURVE",
"155 448 OFFCURVE",
"155 448 CURVE",
"155 449 OFFCURVE",
"157 449 OFFCURVE",
"157 450 CURVE",
"161 451 OFFCURVE",
"160 456 OFFCURVE",
"160 455 CURVE",
"160 456 OFFCURVE",
"160 458 OFFCURVE",
"161 460 CURVE",
"161 461 OFFCURVE",
"161 463 OFFCURVE",
"163 463 CURVE",
"163 463 OFFCURVE",
"163 465 OFFCURVE",
"166 466 CURVE",
"185 466 LINE",
"185 468 LINE",
"189 468 LINE",
"192 471 OFFCURVE",
"194 472 OFFCURVE",
"195 474 CURVE",
"197 475 OFFCURVE",
"200 476 OFFCURVE",
"202 476 CURVE",
"202 480 LINE",
"203 479 OFFCURVE",
"205 477 OFFCURVE",
"207 477 CURVE",
"207 480 LINE",
"209 481 OFFCURVE",
"211 483 OFFCURVE",
"211 484 CURVE",
"212 485 OFFCURVE",
"213 487 OFFCURVE",
"216 488 CURVE",
"221 488 LINE",
"221 484 LINE",
"222 485 OFFCURVE",
"222 483 OFFCURVE",
"223 482 CURVE",
"235 482 LINE",
"235 485 LINE",
"236 483 OFFCURVE",
"237 483 OFFCURVE",
"238 484 CURVE",
"239 488 LINE",
"243 488 LINE SMOOTH",
"241 488 OFFCURVE",
"241 488 OFFCURVE",
"242 489 CURVE SMOOTH",
"243 491 OFFCURVE",
"244 491 OFFCURVE",
"244 491 CURVE",
"247 493 OFFCURVE",
"251 494 OFFCURVE",
"255 495 CURVE SMOOTH",
"258 496 OFFCURVE",
"262 496 OFFCURVE",
"268 496 CURVE",
"268 492 LINE",
"269 493 OFFCURVE",
"269 492 OFFCURVE",
"271 491 CURVE",
"272 491 LINE",
"272 488 OFFCURVE",
"274 485 OFFCURVE",
"277 483 CURVE",
"277 483 OFFCURVE",
"276 481 OFFCURVE",
"275 481 CURVE",
"275 480 OFFCURVE",
"274 480 OFFCURVE",
"274 477 CURVE",
"277 477 LINE",
"277 474 LINE",
"278 474 LINE",
"278 472 LINE",
"286 472 LINE",
"286 468 LINE",
"287 468 LINE SMOOTH",
"289 468 OFFCURVE",
"289 467 OFFCURVE",
"289 466 CURVE",
"292 466 LINE",
"292 464 LINE",
"295 464 OFFCURVE",
"298 464 OFFCURVE",
"304 463 CURVE SMOOTH",
"309 463 OFFCURVE",
"312 463 OFFCURVE",
"313 464 CURVE",
"314 464 OFFCURVE",
"314 465 OFFCURVE",
"314 465 CURVE",
"314 466 LINE",
"319 466 LINE",
"319 468 LINE",
"325 468 LINE",
"328 471 OFFCURVE",
"329 471 OFFCURVE",
"331 470 CURVE",
"332 468 OFFCURVE",
"333 468 OFFCURVE",
"333 468 CURVE",
"335 467 OFFCURVE",
"336 467 OFFCURVE",
"335 468 CURVE",
"336 468 LINE",
"337 467 OFFCURVE",
"338 465 OFFCURVE",
"339 463 CURVE",
"341 461 OFFCURVE",
"342 459 OFFCURVE",
"344 458 CURVE",
"346 458 LINE",
"346 457 LINE",
"355 457 LINE",
"356 454 LINE",
"357 454 LINE",
"357 454 OFFCURVE",
"357 453 OFFCURVE",
"356 454 CURVE",
"357 453 LINE SMOOTH",
"358 451 OFFCURVE",
"360 450 OFFCURVE",
"360 450 CURVE",
"361 449 OFFCURVE",
"361 448 OFFCURVE",
"361 446 CURVE",
"367 446 LINE SMOOTH",
"369 446 OFFCURVE",
"370 447 OFFCURVE",
"371 449 CURVE",
"371 447 OFFCURVE",
"372 446 OFFCURVE",
"372 445 CURVE",
"373 445 LINE",
"373 440 LINE",
"375 440 LINE",
"375 434 LINE",
"378 434 LINE",
"378 429 LINE",
"379 429 LINE",
"379 427 LINE",
"381 427 LINE",
"381 425 LINE",
"384 425 LINE SMOOTH",
"385 425 OFFCURVE",
"386 425 OFFCURVE",
"387 424 CURVE",
"387 422 LINE",
"389 422 LINE",
"389 420 LINE",
"392 420 LINE",
"392 385 LINE",
"390 384 OFFCURVE",
"390 383 OFFCURVE",
"389 382 CURVE",
"389 379 LINE",
"387 379 LINE",
"386 377 OFFCURVE",
"384 373 OFFCURVE",
"384 367 CURVE SMOOTH",
"384 288 LINE",
"381 288 OFFCURVE",
"381 288 OFFCURVE",
"381 287 CURVE",
"384 287 OFFCURVE",
"384 285 OFFCURVE",
"384 282 CURVE",
"379 282 LINE",
"379 280 LINE SMOOTH",
"379 279 OFFCURVE",
"378 278 OFFCURVE",
"378 278 CURVE",
"376 276 OFFCURVE",
"376 275 OFFCURVE",
"377 275 CURVE",
"378 274 OFFCURVE",
"378 273 OFFCURVE",
"378 273 CURVE",
"376 273 OFFCURVE",
"375 272 OFFCURVE",
"375 272 CURVE",
"373 271 OFFCURVE",
"373 271 OFFCURVE",
"373 270 CURVE",
"375 268 OFFCURVE",
"376 268 OFFCURVE",
"378 268 CURVE",
"375 264 LINE",
"378 264 LINE",
"378 262 LINE SMOOTH",
"378 261 OFFCURVE",
"379 261 OFFCURVE",
"379 261 CURVE",
"379 262 OFFCURVE",
"380 262 OFFCURVE",
"381 259 CURVE",
"381 261 OFFCURVE",
"382 262 OFFCURVE",
"381 262 CURVE",
"382 262 OFFCURVE",
"383 263 OFFCURVE",
"384 264 CURVE",
"387 264 LINE",
"387 264 OFFCURVE",
"388 265 OFFCURVE",
"389 265 CURVE",
"389 270 LINE SMOOTH",
"389 271 OFFCURVE",
"390 271 OFFCURVE",
"390 271 CURVE",
"392 272 LINE",
"392 282 LINE",
"395 282 LINE",
"395 292 LINE SMOOTH",
"395 296 OFFCURVE",
"396 298 OFFCURVE",
"398 301 CURVE",
"401 301 LINE",
"401 303 OFFCURVE",
"403 306 OFFCURVE",
"405 309 CURVE",
"405 311 LINE",
"403 311 LINE",
"403 316 LINE",
"401 316 LINE",
"401 356 LINE SMOOTH",
"401 358 OFFCURVE",
"401 359 OFFCURVE",
"402 358 CURVE SMOOTH",
"403 357 OFFCURVE",
"403 358 OFFCURVE",
"403 359 CURVE",
"404 360 OFFCURVE",
"404 362 OFFCURVE",
"403 364 CURVE SMOOTH",
"402 365 OFFCURVE",
"402 368 OFFCURVE",
"401 370 CURVE",
"401 375 LINE SMOOTH",
"401 377 OFFCURVE",
"401 379 OFFCURVE",
"403 379 CURVE",
"403 382 LINE",
"406 382 LINE",
"406 382 OFFCURVE",
"406 383 OFFCURVE",
"405 384 CURVE",
"406 384 OFFCURVE",
"406 384 OFFCURVE",
"406 385 CURVE SMOOTH",
"406 394 LINE",
"411 394 LINE",
"411 407 LINE SMOOTH",
"411 415 OFFCURVE",
"411 422 OFFCURVE",
"410 429 CURVE SMOOTH",
"410 435 OFFCURVE",
"409 440 OFFCURVE",
"405 445 CURVE",
"405 446 LINE",
"398 453 LINE",
"398 466 LINE SMOOTH",
"398 467 OFFCURVE",
"398 468 OFFCURVE",
"400 468 CURVE SMOOTH",
"401 468 LINE",
"401 480 LINE",
"403 480 LINE",
"404 481 OFFCURVE",
"404 483 OFFCURVE",
"404 487 CURVE",
"401 494 LINE",
"401 494 OFFCURVE",
"401 496 OFFCURVE",
"398 497 CURVE",
"398 499 OFFCURVE",
"397 500 OFFCURVE",
"397 500 CURVE",
"395 502 OFFCURVE",
"395 504 OFFCURVE",
"395 505 CURVE",
"394 506 OFFCURVE",
"393 508 OFFCURVE",
"392 508 CURVE",
"392 512 OFFCURVE",
"392 514 OFFCURVE",
"389 517 CURVE",
"388 519 OFFCURVE",
"387 520 OFFCURVE",
"387 522 CURVE SMOOTH",
"387 524 OFFCURVE",
"387 525 OFFCURVE",
"384 527 CURVE",
"384 529 OFFCURVE",
"381 530 OFFCURVE",
"380 531 CURVE",
"378 531 OFFCURVE",
"375 532 OFFCURVE",
"373 534 CURVE",
"372 534 OFFCURVE",
"372 534 OFFCURVE",
"372 537 CURVE",
"371 538 OFFCURVE",
"371 539 OFFCURVE",
"371 540 CURVE",
"364 543 LINE",
"362 543 OFFCURVE",
"361 546 OFFCURVE",
"360 547 CURVE",
"360 555 LINE",
"359 555 OFFCURVE",
"359 555 OFFCURVE",
"359 556 CURVE",
"358 557 OFFCURVE",
"358 557 OFFCURVE",
"357 557 CURVE",
"347 560 LINE",
"343 560 OFFCURVE",
"339 562 OFFCURVE",
"336 563 CURVE",
"336 566 LINE",
"335 566 OFFCURVE",
"332 567 OFFCURVE",
"329 569 CURVE SMOOTH",
"320 574 LINE",
"301 574 LINE",
"298 576 LINE SMOOTH",
"297 577 OFFCURVE",
"296 577 OFFCURVE",
"295 579 CURVE",
"295 580 OFFCURVE",
"293 581 OFFCURVE",
"289 583 CURVE",
"287 586 OFFCURVE",
"285 587 OFFCURVE",
"284 587 CURVE SMOOTH",
"281 588 OFFCURVE",
"278 588 OFFCURVE",
"272 588 CURVE",
"269 586 OFFCURVE",
"266 586 OFFCURVE",
"263 584 CURVE",
"263 584 OFFCURVE",
"262 584 OFFCURVE",
"261 583 CURVE",
"258 583 LINE",
"256 582 OFFCURVE",
"255 582 OFFCURVE",
"253 582 CURVE",
"252 583 OFFCURVE",
"251 583 OFFCURVE",
"249 583 CURVE",
"247 582 OFFCURVE",
"246 581 OFFCURVE",
"243 581 CURVE",
"241 580 OFFCURVE",
"238 580 OFFCURVE",
"236 580 CURVE SMOOTH",
"235 580 OFFCURVE",
"235 581 OFFCURVE",
"234 582 CURVE SMOOTH",
"231 584 LINE SMOOTH",
"229 586 OFFCURVE",
"227 586 OFFCURVE",
"225 587 CURVE SMOOTH",
"223 588 OFFCURVE",
"222 589 OFFCURVE",
"221 589 CURVE SMOOTH",
"217 590 OFFCURVE",
"211 589 OFFCURVE",
"205 586 CURVE SMOOTH",
"194 579 LINE",
"192 577 OFFCURVE",
"191 577 OFFCURVE",
"189 576 CURVE",
"189 575 OFFCURVE",
"187 574 OFFCURVE",
"186 574 CURVE SMOOTH",
"157 574 LINE",
"157 571 LINE",
"157 571 OFFCURVE",
"155 571 OFFCURVE",
"155 569 CURVE",
"152 569 LINE",
"150 568 OFFCURVE",
"149 566 OFFCURVE",
"149 566 CURVE",
"148 564 OFFCURVE",
"146 563 OFFCURVE",
"146 563 CURVE",
"144 563 OFFCURVE",
"143 562 OFFCURVE",
"141 562 CURVE",
"140 560 LINE",
"138 560 OFFCURVE",
"138 559 OFFCURVE",
"138 557 CURVE SMOOTH",
"138 554 LINE",
"137 554 OFFCURVE",
"136 554 OFFCURVE",
"135 552 CURVE SMOOTH",
"134 551 LINE",
"134 551 OFFCURVE",
"134 549 OFFCURVE",
"133 548 CURVE",
"132 548 OFFCURVE",
"132 547 OFFCURVE",
"132 546 CURVE SMOOTH",
"132 544 OFFCURVE",
"132 543 OFFCURVE",
"130 543 CURVE",
"129 542 OFFCURVE",
"129 541 OFFCURVE",
"129 540 CURVE SMOOTH",
"129 538 LINE",
"127 537 OFFCURVE",
"126 537 OFFCURVE",
"126 537 CURVE",
"124 538 OFFCURVE",
"124 537 OFFCURVE",
"124 537 CURVE",
"116 530 LINE SMOOTH",
"113 528 OFFCURVE",
"111 526 OFFCURVE",
"109 524 CURVE",
"109 523 OFFCURVE",
"109 522 OFFCURVE",
"108 522 CURVE",
"107 521 OFFCURVE",
"106 519 OFFCURVE",
"105 519 CURVE SMOOTH",
"102 519 LINE SMOOTH",
"101 519 OFFCURVE",
"101 518 OFFCURVE",
"101 517 CURVE",
"98 513 LINE SMOOTH",
"96 511 OFFCURVE",
"94 511 OFFCURVE",
"93 511 CURVE",
"92 510 OFFCURVE",
"92 509 OFFCURVE",
"92 509 CURVE",
"91 509 OFFCURVE",
"91 510 OFFCURVE",
"88 511 CURVE",
"86 511 LINE",
"86 508 LINE",
"84 507 OFFCURVE",
"82 505 OFFCURVE",
"80 502 CURVE",
"77 500 OFFCURVE",
"75 499 OFFCURVE",
"74 497 CURVE",
"74 496 LINE",
"73 495 OFFCURVE",
"71 494 OFFCURVE",
"70 492 CURVE SMOOTH",
"69 491 OFFCURVE",
"68 491 OFFCURVE",
"68 490 CURVE SMOOTH",
"68 488 LINE",
"66 487 OFFCURVE",
"66 485 OFFCURVE",
"66 484 CURVE",
"64 483 OFFCURVE",
"63 483 OFFCURVE",
"63 482 CURVE SMOOTH",
"63 463 LINE",
"58 454 LINE",
"57 451 OFFCURVE",
"56 449 OFFCURVE",
"56 446 CURVE SMOOTH",
"56 431 LINE SMOOTH",
"56 423 OFFCURVE",
"57 416 OFFCURVE",
"58 409 CURVE",
"64 390 LINE SMOOTH",
"65 387 OFFCURVE",
"65 385 OFFCURVE",
"64 383 CURVE SMOOTH",
"63 382 OFFCURVE",
"63 381 OFFCURVE",
"63 379 CURVE SMOOTH",
"63 361 LINE",
"68 361 LINE SMOOTH",
"69 361 OFFCURVE",
"71 360 OFFCURVE",
"72 359 CURVE",
"72 356 LINE",
"75 356 LINE",
"76 355 OFFCURVE",
"77 354 OFFCURVE",
"77 353 CURVE",
"79 353 LINE",
"79 345 LINE",
"82 345 LINE",
"82 342 LINE",
"84 342 OFFCURVE",
"86 342 OFFCURVE",
"86 341 CURVE",
"87 340 OFFCURVE",
"88 339 OFFCURVE",
"88 337 CURVE SMOOTH",
"88 336 LINE",
"92 336 LINE",
"92 320 LINE",
"88 320 LINE",
"88 316 LINE",
"86 316 LINE",
"86 314 LINE",
"81 314 LINE SMOOTH",
"82 314 OFFCURVE",
"81 313 OFFCURVE",
"79 312 CURVE SMOOTH",
"78 311 OFFCURVE",
"77 311 OFFCURVE",
"77 311 CURVE",
"77 306 LINE",
"86 306 LINE",
"86 309 LINE",
"96 309 LINE",
"96 307 OFFCURVE",
"97 307 OFFCURVE",
"99 307 CURVE",
"99 306 OFFCURVE",
"100 305 OFFCURVE",
"100 305 CURVE",
"100 300 LINE",
"99 298 OFFCURVE",
"99 296 OFFCURVE",
"99 295 CURVE",
"98 293 OFFCURVE",
"98 291 OFFCURVE",
"97 289 CURVE SMOOTH",
"96 287 OFFCURVE",
"96 287 OFFCURVE",
"96 286 CURVE",
"95 286 LINE",
"95 278 LINE",
"96 278 LINE",
"99 274 OFFCURVE",
"99 273 OFFCURVE",
"99 273 CURVE",
"100 274 OFFCURVE",
"100 273 OFFCURVE",
"101 273 CURVE",
"100 273 OFFCURVE",
"100 271 OFFCURVE",
"100 268 CURVE SMOOTH",
"100 265 OFFCURVE",
"100 265 OFFCURVE",
"101 262 CURVE",
"100 261 OFFCURVE",
"99 259 OFFCURVE",
"96 259 CURVE",
"96 256 LINE",
"95 256 LINE",
"95 253 LINE",
"96 253 OFFCURVE",
"94 253 OFFCURVE",
"93 251 CURVE",
"93 246 LINE",
"92 246 OFFCURVE",
"91 246 OFFCURVE",
"90 248 CURVE",
"89 248 OFFCURVE",
"88 248 OFFCURVE",
"87 246 CURVE",
"86 246 LINE",
"86 250 LINE",
"84 250 LINE",
"83 249 OFFCURVE",
"83 250 OFFCURVE",
"82 251 CURVE",
"79 251 LINE",
"79 250 OFFCURVE",
"79 248 OFFCURVE",
"78 248 CURVE SMOOTH",
"77 248 OFFCURVE",
"77 246 OFFCURVE",
"77 245 CURVE",
"74 245 LINE",
"74 235 LINE",
"77 235 LINE",
"77 236 LINE SMOOTH",
"77 237 OFFCURVE",
"78 238 OFFCURVE",
"80 237 CURVE SMOOTH",
"82 236 LINE",
"83 236 OFFCURVE",
"84 236 OFFCURVE",
"86 235 CURVE",
"86 228 LINE",
"87 228 LINE",
"87 223 LINE",
"86 223 LINE",
"86 204 LINE",
"87 203 OFFCURVE",
"88 202 OFFCURVE",
"88 199 CURVE SMOOTH",
"88 189 LINE",
"91 184 OFFCURVE",
"92 178 OFFCURVE",
"93 172 CURVE SMOOTH",
"94 166 OFFCURVE",
"95 159 OFFCURVE",
"95 151 CURVE SMOOTH",
"95 138 LINE",
"94 136 OFFCURVE",
"93 133 OFFCURVE",
"91 130 CURVE SMOOTH",
"89 128 OFFCURVE",
"88 126 OFFCURVE",
"87 124 CURVE SMOOTH",
"86 122 OFFCURVE",
"86 119 OFFCURVE",
"86 117 CURVE",
"85 115 OFFCURVE",
"85 113 OFFCURVE",
"83 111 CURVE",
"83 87 LINE",
"85 86 OFFCURVE",
"86 84 OFFCURVE",
"90 82 CURVE",
"92 80 OFFCURVE",
"94 79 OFFCURVE",
"95 79 CURVE",
"95 75 LINE SMOOTH",
"95 73 OFFCURVE",
"96 72 OFFCURVE",
"96 70 CURVE",
"99 69 OFFCURVE",
"100 68 OFFCURVE",
"100 66 CURVE",
"101 64 OFFCURVE",
"102 63 OFFCURVE",
"102 61 CURVE",
"118 61 LINE",
"118 60 LINE",
"124 55 LINE SMOOTH",
"125 54 OFFCURVE",
"127 53 OFFCURVE",
"129 52 CURVE",
"129 47 LINE",
"132 46 OFFCURVE",
"134 44 OFFCURVE",
"135 43 CURVE SMOOTH",
"137 41 OFFCURVE",
"138 39 OFFCURVE",
"140 38 CURVE",
"140 27 LINE",
"142 27 LINE",
"142 24 LINE",
"145 24 OFFCURVE",
"149 24 OFFCURVE",
"155 25 CURVE SMOOTH",
"160 25 OFFCURVE",
"163 24 OFFCURVE",
"166 22 CURVE",
"166 1 LINE"
);
},
{
closed = 1;
nodes = (
"68 250 LINE",
"69 252 OFFCURVE",
"69 253 OFFCURVE",
"69 255 CURVE SMOOTH",
"69 256 OFFCURVE",
"69 256 OFFCURVE",
"68 256 CURVE",
"66 257 OFFCURVE",
"66 260 OFFCURVE",
"65 262 CURVE SMOOTH",
"64 264 OFFCURVE",
"64 266 OFFCURVE",
"64 270 CURVE",
"63 270 LINE",
"63 274 LINE",
"60 274 LINE",
"60 276 OFFCURVE",
"60 279 OFFCURVE",
"59 279 CURVE",
"56 282 LINE",
"50 282 LINE",
"50 279 OFFCURVE",
"50 276 OFFCURVE",
"51 273 CURVE",
"51 265 LINE",
"56 265 LINE SMOOTH",
"54 265 OFFCURVE",
"54 262 OFFCURVE",
"54 259 CURVE",
"56 259 LINE",
"57 256 OFFCURVE",
"59 255 OFFCURVE",
"60 254 CURVE SMOOTH",
"62 253 OFFCURVE",
"63 252 OFFCURVE",
"63 250 CURVE"
);
},
{
closed = 1;
nodes = (
"77 266 OFFCURVE",
"79 267 OFFCURVE",
"79 267 CURVE",
"80 268 OFFCURVE",
"82 268 OFFCURVE",
"83 268 CURVE",
"83 270 LINE",
"79 270 LINE",
"78 271 OFFCURVE",
"77 272 OFFCURVE",
"77 273 CURVE",
"77 273 OFFCURVE",
"75 274 OFFCURVE",
"74 274 CURVE",
"74 271 LINE SMOOTH",
"74 269 OFFCURVE",
"74 267 OFFCURVE",
"77 265 CURVE"
);
},
{
closed = 1;
nodes = (
"227 132 OFFCURVE",
"229 133 OFFCURVE",
"230 133 CURVE",
"231 135 OFFCURVE",
"233 134 OFFCURVE",
"235 133 CURVE",
"235 138 LINE",
"237 138 OFFCURVE",
"238 138 OFFCURVE",
"238 139 CURVE",
"239 139 LINE SMOOTH",
"241 139 OFFCURVE",
"241 139 OFFCURVE",
"241 138 CURVE",
"243 139 OFFCURVE",
"243 139 OFFCURVE",
"243 142 CURVE",
"253 142 LINE",
"253 143 LINE",
"259 143 LINE",
"259 144 LINE",
"260 144 LINE",
"260 147 OFFCURVE",
"258 150 OFFCURVE",
"255 153 CURVE",
"255 154 LINE",
"253 154 LINE",
"254 155 OFFCURVE",
"253 156 OFFCURVE",
"252 156 CURVE",
"252 157 OFFCURVE",
"251 157 OFFCURVE",
"250 158 CURVE",
"249 158 LINE",
"247 157 LINE",
"246 156 LINE",
"241 156 LINE",
"239 154 LINE",
"230 154 LINE",
"230 156 LINE",
"227 156 LINE",
"224 157 OFFCURVE",
"222 157 OFFCURVE",
"222 156 CURVE SMOOTH",
"222 155 OFFCURVE",
"222 154 OFFCURVE",
"221 154 CURVE SMOOTH",
"217 154 LINE SMOOTH",
"216 154 OFFCURVE",
"216 153 OFFCURVE",
"216 153 CURVE",
"210 153 LINE SMOOTH",
"208 153 OFFCURVE",
"207 153 OFFCURVE",
"207 154 CURVE",
"202 154 OFFCURVE",
"200 153 OFFCURVE",
"198 153 CURVE",
"198 147 LINE",
"197 145 OFFCURVE",
"198 144 OFFCURVE",
"200 144 CURVE",
"200 143 LINE",
"202 142 OFFCURVE",
"203 142 OFFCURVE",
"203 142 CURVE",
"211 142 LINE",
"211 139 OFFCURVE",
"211 139 OFFCURVE",
"212 138 CURVE",
"212 139 OFFCURVE",
"213 139 OFFCURVE",
"216 139 CURVE",
"216 139 OFFCURVE",
"217 138 OFFCURVE",
"218 138 CURVE",
"219 136 OFFCURVE",
"220 136 OFFCURVE",
"222 135 CURVE SMOOTH",
"223 134 OFFCURVE",
"224 133 OFFCURVE",
"226 130 CURVE"
);
},
{
closed = 1;
nodes = (
"64 293 LINE",
"64 296 LINE",
"67 296 OFFCURVE",
"68 297 OFFCURVE",
"67 297 CURVE",
"67 298 OFFCURVE",
"68 298 OFFCURVE",
"69 296 CURVE",
"69 305 LINE",
"68 307 OFFCURVE",
"68 310 OFFCURVE",
"68 314 CURVE",
"66 314 LINE",
"67 315 OFFCURVE",
"66 315 OFFCURVE",
"64 316 CURVE",
"64 320 LINE",
"63 320 LINE",
"63 324 LINE",
"60 324 LINE",
"60 332 LINE",
"54 332 LINE",
"54 322 LINE",
"56 322 LINE",
"56 319 LINE",
"60 319 LINE",
"60 315 LINE",
"59 314 OFFCURVE",
"59 312 OFFCURVE",
"59 311 CURVE",
"63 311 LINE",
"63 305 OFFCURVE",
"60 302 OFFCURVE",
"56 301 CURVE",
"56 299 OFFCURVE",
"57 297 OFFCURVE",
"57 297 CURVE",
"58 296 OFFCURVE",
"60 295 OFFCURVE",
"60 293 CURVE"
);
},
{
closed = 1;
nodes = (
"79 325 LINE",
"80 326 OFFCURVE",
"80 327 OFFCURVE",
"82 328 CURVE",
"82 329 OFFCURVE",
"82 329 OFFCURVE",
"80 329 CURVE",
"80 330 OFFCURVE",
"78 331 OFFCURVE",
"77 332 CURVE",
"77 325 LINE"
);
},
{
closed = 1;
nodes = (
"255 165 LINE SMOOTH",
"258 165 OFFCURVE",
"259 165 OFFCURVE",
"260 166 CURVE",
"263 166 OFFCURVE",
"266 166 OFFCURVE",
"269 167 CURVE",
"272 167 OFFCURVE",
"275 169 OFFCURVE",
"277 170 CURVE",
"278 170 OFFCURVE",
"277 172 OFFCURVE",
"274 174 CURVE",
"253 174 LINE",
"253 170 LINE",
"252 171 OFFCURVE",
"251 172 OFFCURVE",
"251 171 CURVE",
"250 170 OFFCURVE",
"249 171 OFFCURVE",
"249 172 CURVE",
"246 172 LINE",
"246 167 LINE",
"247 167 OFFCURVE",
"249 165 OFFCURVE",
"250 165 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"309 94 OFFCURVE",
"310 94 OFFCURVE",
"311 96 CURVE",
"313 98 LINE",
"319 98 LINE",
"319 101 LINE",
"323 101 LINE",
"323 103 OFFCURVE",
"323 104 OFFCURVE",
"324 106 CURVE SMOOTH",
"325 107 OFFCURVE",
"324 109 OFFCURVE",
"323 110 CURVE",
"323 112 OFFCURVE",
"323 114 OFFCURVE",
"322 117 CURVE",
"322 119 OFFCURVE",
"322 122 OFFCURVE",
"327 122 CURVE SMOOTH",
"328 122 LINE",
"328 122 OFFCURVE",
"329 122 OFFCURVE",
"331 124 CURVE",
"331 127 LINE",
"332 128 OFFCURVE",
"333 130 OFFCURVE",
"333 131 CURVE SMOOTH",
"333 133 OFFCURVE",
"333 134 OFFCURVE",
"334 135 CURVE",
"335 135 OFFCURVE",
"336 136 OFFCURVE",
"336 136 CURVE",
"337 136 OFFCURVE",
"337 137 OFFCURVE",
"338 138 CURVE SMOOTH",
"339 139 OFFCURVE",
"342 140 OFFCURVE",
"344 142 CURVE SMOOTH",
"346 144 OFFCURVE",
"348 146 OFFCURVE",
"350 147 CURVE",
"351 147 OFFCURVE",
"352 148 OFFCURVE",
"354 148 CURVE",
"357 151 LINE",
"357 154 LINE",
"360 154 LINE",
"361 156 LINE",
"360 156 OFFCURVE",
"361 157 OFFCURVE",
"361 158 CURVE SMOOTH",
"361 162 LINE SMOOTH",
"361 163 OFFCURVE",
"361 164 OFFCURVE",
"360 165 CURVE",
"356 167 OFFCURVE",
"355 167 OFFCURVE",
"355 165 CURVE",
"352 164 OFFCURVE",
"350 163 OFFCURVE",
"349 162 CURVE",
"348 162 OFFCURVE",
"347 161 OFFCURVE",
"347 159 CURVE SMOOTH",
"347 156 LINE",
"346 156 OFFCURVE",
"345 155 OFFCURVE",
"344 154 CURVE",
"338 154 LINE",
"338 153 LINE",
"334 153 LINE",
"334 152 LINE SMOOTH",
"334 151 OFFCURVE",
"333 151 OFFCURVE",
"333 151 CURVE",
"332 151 OFFCURVE",
"331 150 OFFCURVE",
"331 148 CURVE",
"328 148 LINE",
"328 144 LINE",
"327 144 LINE",
"327 142 LINE SMOOTH",
"327 139 OFFCURVE",
"326 139 OFFCURVE",
"326 139 CURVE",
"325 139 LINE",
"325 139 OFFCURVE",
"325 137 OFFCURVE",
"326 136 CURVE",
"326 136 OFFCURVE",
"326 135 OFFCURVE",
"325 135 CURVE",
"325 134 OFFCURVE",
"324 133 OFFCURVE",
"323 133 CURVE",
"323 125 LINE",
"321 125 LINE",
"320 124 LINE",
"323 122 LINE",
"321 121 OFFCURVE",
"320 119 OFFCURVE",
"318 117 CURVE SMOOTH",
"316 115 OFFCURVE",
"314 113 OFFCURVE",
"313 111 CURVE SMOOTH",
"312 110 LINE",
"311 110 LINE",
"311 107 LINE",
"309 107 LINE",
"309 106 LINE",
"305 106 LINE",
"306 104 OFFCURVE",
"306 103 OFFCURVE",
"306 102 CURVE SMOOTH",
"306 101 OFFCURVE",
"304 99 OFFCURVE",
"304 98 CURVE SMOOTH",
"304 97 OFFCURVE",
"304 96 OFFCURVE",
"305 96 CURVE SMOOTH",
"306 96 OFFCURVE",
"306 95 OFFCURVE",
"308 95 CURVE"
);
},
{
closed = 1;
nodes = (
"324 178 OFFCURVE",
"325 178 OFFCURVE",
"326 179 CURVE",
"328 179 OFFCURVE",
"329 179 OFFCURVE",
"331 178 CURVE",
"332 179 OFFCURVE",
"333 179 OFFCURVE",
"332 179 CURVE",
"331 178 OFFCURVE",
"332 179 OFFCURVE",
"333 181 CURVE",
"335 181 OFFCURVE",
"336 181 OFFCURVE",
"335 182 CURVE",
"335 182 OFFCURVE",
"335 184 OFFCURVE",
"336 186 CURVE",
"338 185 LINE",
"338 189 LINE",
"341 189 LINE",
"341 190 OFFCURVE",
"341 190 OFFCURVE",
"340 191 CURVE",
"339 191 OFFCURVE",
"339 193 OFFCURVE",
"339 193 CURVE",
"338 194 OFFCURVE",
"338 195 OFFCURVE",
"338 195 CURVE",
"339 196 OFFCURVE",
"341 197 OFFCURVE",
"341 198 CURVE",
"342 198 OFFCURVE",
"342 199 OFFCURVE",
"342 199 CURVE",
"344 199 LINE SMOOTH",
"345 199 OFFCURVE",
"346 200 OFFCURVE",
"346 202 CURVE",
"355 202 LINE",
"355 199 LINE",
"357 199 LINE",
"358 198 LINE SMOOTH",
"359 197 OFFCURVE",
"360 196 OFFCURVE",
"360 195 CURVE",
"367 195 LINE",
"372 196 OFFCURVE",
"375 196 OFFCURVE",
"375 198 CURVE",
"376 199 LINE SMOOTH",
"378 200 OFFCURVE",
"378 202 OFFCURVE",
"378 202 CURVE",
"378 203 OFFCURVE",
"379 205 OFFCURVE",
"378 206 CURVE",
"378 211 LINE",
"356 211 LINE",
"356 214 OFFCURVE",
"355 216 OFFCURVE",
"353 216 CURVE SMOOTH",
"352 216 OFFCURVE",
"352 218 OFFCURVE",
"352 221 CURVE",
"348 221 OFFCURVE",
"347 222 OFFCURVE",
"347 223 CURVE",
"345 225 OFFCURVE",
"345 226 OFFCURVE",
"344 227 CURVE",
"343 227 OFFCURVE",
"342 228 OFFCURVE",
"342 228 CURVE",
"338 231 LINE",
"337 232 LINE",
"336 232 LINE",
"336 235 LINE",
"335 236 OFFCURVE",
"334 236 OFFCURVE",
"334 236 CURVE",
"333 235 OFFCURVE",
"333 236 OFFCURVE",
"333 236 CURVE",
"332 236 OFFCURVE",
"331 236 OFFCURVE",
"331 239 CURVE",
"331 239 OFFCURVE",
"330 241 OFFCURVE",
"330 242 CURVE",
"328 243 OFFCURVE",
"328 244 OFFCURVE",
"328 244 CURVE",
"327 245 OFFCURVE",
"326 245 OFFCURVE",
"325 245 CURVE",
"325 246 LINE SMOOTH",
"325 248 OFFCURVE",
"323 248 OFFCURVE",
"320 250 CURVE",
"320 253 OFFCURVE",
"317 256 OFFCURVE",
"313 258 CURVE",
"313 259 OFFCURVE",
"312 259 OFFCURVE",
"311 257 CURVE SMOOTH",
"310 256 OFFCURVE",
"309 256 OFFCURVE",
"309 256 CURVE",
"309 246 LINE",
"311 245 LINE",
"311 242 LINE",
"312 240 OFFCURVE",
"314 239 OFFCURVE",
"314 235 CURVE",
"318 235 LINE",
"318 203 LINE",
"316 203 OFFCURVE",
"314 202 OFFCURVE",
"314 199 CURVE",
"300 199 LINE",
"300 198 LINE",
"293 198 LINE",
"291 199 OFFCURVE",
"288 198 OFFCURVE",
"286 198 CURVE SMOOTH",
"281 198 LINE",
"281 199 LINE",
"278 201 OFFCURVE",
"278 201 OFFCURVE",
"277 199 CURVE SMOOTH",
"276 198 OFFCURVE",
"275 198 OFFCURVE",
"274 198 CURVE SMOOTH",
"271 198 LINE",
"272 195 LINE",
"278 195 LINE",
"278 194 LINE",
"286 194 LINE",
"286 191 LINE",
"292 191 LINE",
"292 189 LINE",
"295 189 LINE",
"295 188 LINE",
"304 188 LINE",
"304 185 LINE",
"304 185 OFFCURVE",
"304 186 OFFCURVE",
"306 186 CURVE SMOOTH",
"309 186 LINE",
"309 185 OFFCURVE",
"309 185 OFFCURVE",
"310 185 CURVE SMOOTH",
"311 185 LINE",
"312 182 OFFCURVE",
"314 182 OFFCURVE",
"317 182 CURVE",
"318 184 OFFCURVE",
"320 183 OFFCURVE",
"320 181 CURVE",
"322 181 OFFCURVE",
"323 179 OFFCURVE",
"323 178 CURVE"
);
},
{
closed = 1;
nodes = (
"327 286 LINE SMOOTH",
"328 286 OFFCURVE",
"328 286 OFFCURVE",
"328 287 CURVE",
"331 287 LINE",
"331 288 OFFCURVE",
"333 290 OFFCURVE",
"336 293 CURVE",
"336 296 LINE",
"341 296 LINE",
"341 299 LINE",
"342 299 OFFCURVE",
"342 300 OFFCURVE",
"343 300 CURVE",
"344 301 OFFCURVE",
"344 302 OFFCURVE",
"344 302 CURVE",
"350 302 OFFCURVE",
"354 302 OFFCURVE",
"357 304 CURVE",
"360 304 OFFCURVE",
"362 306 OFFCURVE",
"364 309 CURVE",
"364 311 LINE",
"362 311 OFFCURVE",
"362 312 OFFCURVE",
"364 314 CURVE",
"364 314 OFFCURVE",
"365 315 OFFCURVE",
"365 316 CURVE",
"367 317 OFFCURVE",
"367 318 OFFCURVE",
"367 318 CURVE",
"367 319 OFFCURVE",
"367 319 OFFCURVE",
"368 320 CURVE",
"368 323 LINE",
"367 325 OFFCURVE",
"367 325 OFFCURVE",
"365 325 CURVE SMOOTH",
"364 325 LINE",
"364 328 LINE",
"360 328 LINE",
"360 331 LINE",
"359 331 OFFCURVE",
"358 331 OFFCURVE",
"356 332 CURVE SMOOTH",
"355 333 OFFCURVE",
"355 334 OFFCURVE",
"355 336 CURVE",
"353 336 OFFCURVE",
"351 336 OFFCURVE",
"348 334 CURVE SMOOTH",
"347 333 OFFCURVE",
"344 333 OFFCURVE",
"342 334 CURVE",
"341 336 LINE",
"336 336 LINE",
"336 337 OFFCURVE",
"336 337 OFFCURVE",
"335 338 CURVE",
"335 339 OFFCURVE",
"335 339 OFFCURVE",
"334 340 CURVE",
"333 340 OFFCURVE",
"333 341 OFFCURVE",
"333 342 CURVE",
"323 342 LINE",
"323 343 LINE",
"322 344 OFFCURVE",
"322 345 OFFCURVE",
"320 345 CURVE",
"313 343 LINE",
"313 342 LINE",
"305 342 LINE",
"304 340 LINE",
"305 339 OFFCURVE",
"304 339 OFFCURVE",
"304 339 CURVE",
"304 336 LINE",
"302 336 OFFCURVE",
"300 336 OFFCURVE",
"298 335 CURVE SMOOTH",
"296 334 OFFCURVE",
"295 334 OFFCURVE",
"295 334 CURVE",
"295 332 LINE",
"294 331 OFFCURVE",
"293 331 OFFCURVE",
"292 329 CURVE",
"289 329 LINE",
"289 329 OFFCURVE",
"289 328 OFFCURVE",
"291 328 CURVE SMOOTH",
"292 328 OFFCURVE",
"291 327 OFFCURVE",
"289 325 CURVE",
"289 324 OFFCURVE",
"288 324 OFFCURVE",
"287 324 CURVE",
"287 322 LINE SMOOTH",
"287 320 OFFCURVE",
"286 320 OFFCURVE",
"286 320 CURVE",
"286 312 LINE SMOOTH",
"286 311 OFFCURVE",
"289 309 OFFCURVE",
"292 307 CURVE",
"293 305 OFFCURVE",
"293 302 OFFCURVE",
"289 299 CURVE",
"291 298 OFFCURVE",
"292 297 OFFCURVE",
"291 297 CURVE",
"289 296 OFFCURVE",
"291 296 OFFCURVE",
"292 296 CURVE SMOOTH",
"309 296 LINE",
"309 294 LINE",
"310 293 OFFCURVE",
"311 293 OFFCURVE",
"313 293 CURVE",
"313 291 OFFCURVE",
"314 289 OFFCURVE",
"316 289 CURVE",
"319 286 LINE"
);
}
);
width = 461;
}
);
}
);
instances = (
{
interpolationWeight = 400;
instanceInterpolations = {
"16A236A6-57F5-4152-84D1-48D854BBAFA9" = 1;
};
name = Regular;
weightClass = Normal;
}
);
kerning = {
"16A236A6-57F5-4152-84D1-48D854BBAFA9" = {
"@MMK_L_A" = {
asterisk = 20;
};
"@MMK_L_C" = {
asterisk = -40;
degree = -70;
quoteleft = -60;
};
"@MMK_L_E" = {
quoteleft = -20;
};
"@MMK_L_H" = {
asterisk = 100;
question = 50;
trademark = 110;
};
"@MMK_L_K" = {
asterisk = 120;
question = 30;
trademark = 150;
};
"@MMK_L_L" = {
asterisk = 210;
braceright = 140;
dagger = 80;
exclam = 50;
question = 230;
quoteleft = 230;
slash = 100;
trademark = 130;
};
"@MMK_L_O" = {
asterisk = -150;
degree = -100;
quoteleft = -100;
};
"@MMK_L_R" = {
question = 70;
quoteleft = 0;
slash = 70;
};
"@MMK_L_S" = {
quoteleft = -20;
};
"@MMK_L_T" = {
"@MMK_R_l" = 30;
"@MMK_R_ord" = 150;
asterisk = 90;
braceright = 50;
degree = 100;
exclam = 40;
question = 100;
quoteleft = 120;
trademark = 60;
};
"@MMK_L_W" = {
"@MMK_R_ord" = 50;
};
"@MMK_L_Y" = {
"@MMK_R_ord" = 50;
question = 30;
};
"@MMK_L_a" = {
asterisk = -50;
};
"@MMK_L_b" = {
"@MMK_R_period" = -40;
asterisk = -30;
};
"@MMK_L_colon" = {
"@MMK_R_E" = 40;
"@MMK_R_K" = 30;
"@MMK_R_Y" = 30;
"@MMK_R_seven" = -30;
V = 40;
asterisk = -30;
degree = -80;
quoteleft = -70;
};
"@MMK_L_d" = {
"@MMK_R_period" = -30;
};
"@MMK_L_e" = {
asterisk = -40;
quoteleft = -40;
};
"@MMK_L_eight" = {
"@MMK_R_nine" = -20;
"@MMK_R_period" = -50;
quoteleft = 20;
quotesingle = 60;
};
"@MMK_L_five" = {
"@MMK_R_nine" = -30;
asterisk = -30;
degree = -70;
quoteleft = -40;
};
"@MMK_L_four" = {
"@MMK_R_nine" = -40;
"@MMK_R_period" = -30;
"@MMK_R_seven" = -40;
asterisk = -50;
degree = -60;
slash = -20;
};
"@MMK_L_g" = {
asterisk = -90;
};
"@MMK_L_hyphen" = {
"@MMK_R_C" = 50;
"@MMK_R_E" = 80;
"@MMK_R_G" = 60;
"@MMK_R_I" = 70;
"@MMK_R_J" = 70;
"@MMK_R_K" = 70;
"@MMK_R_L" = 30;
"@MMK_R_O" = 50;
"@MMK_R_Y" = 50;
V = 70;
asterisk = -70;
degree = -50;
quoteleft = -80;
};
"@MMK_L_l" = {
asterisk = 70;
};
"@MMK_L_n" = {
asterisk = -40;
quotedblright = -68;
};
"@MMK_L_nine" = {
"@MMK_R_period" = -40;
degree = -30;
quoteleft = -40;
};
"@MMK_L_o" = {
"@MMK_R_period" = -40;
asterisk = -70;
quotedblright = -30;
};
"@MMK_L_one" = {
"@MMK_R_nine" = -50;
"@MMK_R_period" = -20;
"@MMK_R_seven" = -30;
asterisk = -50;
degree = -60;
};
"@MMK_L_ord" = {
"@MMK_R_t" = 40;
};
"@MMK_L_period" = {
"@MMK_R_hyphen" = -70;
"@MMK_R_j" = 30;
"@MMK_R_nine" = -70;
"@MMK_R_seven" = -30;
"@MMK_R_three" = -10;
asterisk = -110;
degree = -100;
question = -70;
questiondown = -40;
quoteleft = -100;
};
"@MMK_L_q" = {
asterisk = -60;
};
"@MMK_L_r" = {
"@MMK_R_a" = -10;
"@MMK_R_j" = -40;
"@MMK_R_ord" = 40;
"@MMK_R_period" = -40;
};
"@MMK_L_s" = {
"@MMK_R_ord" = 30;
"@MMK_R_period" = -50;
asterisk = -40;
};
"@MMK_L_seven" = {
"@MMK_R_colon" = -30;
"@MMK_R_eight" = -40;
"@MMK_R_four" = -40;
"@MMK_R_nine" = -20;
"@MMK_R_one" = -20;
"@MMK_R_period" = -50;
"@MMK_R_seven" = -20;
"@MMK_R_six" = -30;
"@MMK_R_two" = -30;
slash = -40;
};
"@MMK_L_six" = {
"@MMK_R_nine" = -20;
degree = -40;
quoteleft = -40;
};
"@MMK_L_t" = {
"@MMK_R_a" = -10;
"@MMK_R_g" = -10;
"@MMK_R_ord" = 40;
};
"@MMK_L_three" = {
"@MMK_R_nine" = -50;
"@MMK_R_period" = -30;
"@MMK_R_seven" = -40;
asterisk = -70;
degree = -100;
quoteleft = 0;
quotesingle = -60;
};
"@MMK_L_two" = {
asterisk = -50;
degree = -50;
};
"@MMK_L_u" = {
asterisk = -50;
};
"@MMK_L_w" = {
"@MMK_R_period" = -30;
asterisk = -50;
};
"@MMK_L_z" = {
quoteleft = -40;
};
"@MMK_L_zero" = {
"@MMK_R_period" = -30;
asterisk = -50;
degree = -60;
quoteleft = -30;
quotesingle = -30;
};
F = {
"@MMK_R_ord" = 110;
asterisk = 40;
question = 50;
quoteleft = 70;
};
P = {
"@MMK_R_ord" = 90;
asterisk = 20;
question = 50;
quoteleft = 20;
};
Q = {
"@MMK_R_ord" = 30;
asterisk = -40;
};
V = {
"@MMK_R_ord" = 60;
asterisk = 10;
question = 40;
};
X = {
asterisk = 110;
degree = 90;
question = 100;
quoteleft = 100;
trademark = 50;
};
asterisk = {
"@MMK_R_A" = -80;
"@MMK_R_D" = 60;
"@MMK_R_H" = -110;
"@MMK_R_J" = 40;
"@MMK_R_K" = 30;
"@MMK_R_N" = 140;
"@MMK_R_R" = 70;
"@MMK_R_S" = -50;
"@MMK_R_T" = 160;
"@MMK_R_U" = 40;
"@MMK_R_W" = 110;
"@MMK_R_Y" = 240;
"@MMK_R_five" = 40;
"@MMK_R_three" = 30;
"@MMK_R_zero" = 30;
B = 60;
F = 170;
M = 130;
P = 140;
V = 100;
};
braceleft = {
"@MMK_R_Y" = 80;
};
cedi = {
"@MMK_R_seven" = -30;
};
colonsign = {
"@MMK_R_seven" = -30;
};
dagger = {
"@MMK_R_T" = 80;
"@MMK_R_Y" = 150;
F = 80;
};
degree = {
"@MMK_R_N" = 60;
"@MMK_R_T" = 60;
"@MMK_R_W" = 70;
"@MMK_R_Y" = 180;
"@MMK_R_period" = 30;
F = 110;
M = 60;
V = 50;
};
euro = {
"@MMK_R_seven" = -30;
};
exclam = {
"@MMK_R_period" = -50;
asterisk = 80;
};
exclamdown = {
"@MMK_R_period" = -50;
asterisk = -100;
degree = -70;
quoteleft = -50;
};
f = {
"@MMK_R_a" = -20;
"@MMK_R_c" = -20;
"@MMK_R_e" = -20;
"@MMK_R_g" = -20;
"@MMK_R_n" = -30;
"@MMK_R_ord" = 60;
"@MMK_R_period" = -50;
asterisk = 110;
degree = 90;
quoteleft = 90;
trademark = 50;
};
franc = {
"@MMK_R_four" = -30;
};
guarani = {
"@MMK_R_seven" = -30;
};
guillemetleft = {
"@MMK_R_E" = 50;
quoteleft = -50;
};
guillemetright = {
asterisk = -80;
degree = -100;
quoteleft = -60;
};
kip = {
"@MMK_R_nine" = -30;
};
lira = {
"@MMK_R_nine" = -30;
"@MMK_R_seven" = -30;
};
liraTurkish = {
"@MMK_R_seven" = -30;
};
p = {
asterisk = -50;
quotedblright = -50;
quoteleft = -20;
};
parenleft = {
"@MMK_R_T" = 180;
"@MMK_R_Y" = 250;
F = 180;
};
question = {
"@MMK_R_period" = -70;
};
questiondown = {
"@MMK_R_period" = -70;
asterisk = -70;
degree = -150;
quoteleft = -120;
};
quoteleft = {
"@MMK_R_D" = 60;
"@MMK_R_E" = 80;
"@MMK_R_I" = 60;
"@MMK_R_J" = 50;
"@MMK_R_K" = 50;
"@MMK_R_N" = 140;
"@MMK_R_O" = 20;
"@MMK_R_R" = 60;
"@MMK_R_S" = -70;
"@MMK_R_T" = 150;
"@MMK_R_U" = 60;
"@MMK_R_W" = 130;
"@MMK_R_Y" = 240;
"@MMK_R_colon" = 30;
"@MMK_R_five" = 70;
"@MMK_R_t" = 30;
"@MMK_R_three" = 70;
"@MMK_R_zero" = 70;
B = 70;
F = 170;
M = 140;
P = 90;
V = 130;
asterisk = 30;
guillemetleft = 30;
guillemetright = 40;
};
ruble = {
"@MMK_R_seven" = -20;
};
slash = {
"@MMK_R_A" = -90;
"@MMK_R_H" = -70;
"@MMK_R_N" = 50;
"@MMK_R_S" = -30;
"@MMK_R_T" = 140;
"@MMK_R_W" = 50;
"@MMK_R_Y" = 220;
"@MMK_R_a" = -70;
"@MMK_R_c" = -70;
"@MMK_R_eight" = -20;
"@MMK_R_four" = -20;
"@MMK_R_g" = -60;
"@MMK_R_i" = -30;
"@MMK_R_n" = -50;
"@MMK_R_o" = -70;
"@MMK_R_one" = -20;
"@MMK_R_s" = -30;
"@MMK_R_six" = -40;
"@MMK_R_three" = -10;
"@MMK_R_two" = -30;
"@MMK_R_u" = -20;
"@MMK_R_w" = -50;
"@MMK_R_y" = -40;
"@MMK_R_z" = -50;
F = 170;
M = 30;
P = 50;
X = -40;
slash = -280;
v = -50;
x = -40;
};
sterling = {
"@MMK_R_nine" = -30;
"@MMK_R_seven" = -30;
};
v = {
"@MMK_R_period" = -40;
asterisk = -30;
};
x = {
asterisk = -20;
};
};
};
manufacturer = "Robert E. Leuschke";
manufacturerURL = www.typesetit.com;
unitsPerEm = 1000;
userData = {
GSDimensionPlugin.Dimensions = {
"16A236A6-57F5-4152-84D1-48D854BBAFA9" = {
HH = "34";
HV = "34";
nV = "27";
oH = "25";
oV = "36";
tH = "20";
};
};
};
versionMajor = 1;
versionMinor = 6;
}
