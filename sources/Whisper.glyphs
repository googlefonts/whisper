{
.appVersion = "1352";
DisplayStrings = (
"PRIZED/space WAXY/space JONQUILS/space CHOKED/space BIG/space FARM/space VATS./space QUICKLY/space JIGS/space FOR/space WALTZ/space BEX/space BAD/space NYMPH./space JADED/space ZOMBIES/space ACTED/space QUAINTLY/space BET/space KEPT/space DRIVING/space THEIR/space OXEN/space FORWARD./space BRAWNY/space GODS/space JUST/space FLOCKED/space UP/space TO/space QUIZ/space AND/space VEX/space HIM./space MAY/space JO/space EQUALS/space THE/space FINE/space RECORD/space BY/space SOLVING/space SIX/space PUZZLES/space A/space WEEK./space QUINCY/space JONES/space VOWED/space TO/space FIX/space THE/space BLEACK/space JAZZ/space PROGRAM./space PLAYING/space JAZZ/space VIBE/space CHORDS/space QUICKLY/space EXCITES/space MY/space WIFE./space MUSKY/space HAZE/space ENVELOPED/space A/space CITY/space AS/space JARRING/space QUAKES/space BROKE/space FORTY-SIX/space WINDOWS./space MIX/space ZAPF/space WITH/space VELJOVIC/space AND/space GET/space QUIRKY/space BEZIERS./space A/space MAD/space BOXER/space SHOT/space A/space QUICK,/space GLOVED/space JAB/space TO/space THE/space JAW/space OF/space HIS/space DIZZY/space OPPONENTS./space T/space V/space FOLK/space BUY/space EX-PREZ/space JOHN/space QUINCY/space ADAMS'/space WIG./space WHAM!/space VOLCANO/space ERUPTS/space FIERY/space LIQUID/space DEATH/space ONTO/space EX-JAZZBO/space KENNY/space G./space QUEEN/space ELIZABETH'S/space PROXY/space WAVED/space OFF/space MICK/space JAGGER./space JOHN/space QUINCY/space ADAMS/space GREW/space VEXED/space BY/space TALK/space OF/space PUZZLES./space THE/space JULY/space SUN/space CAUSED/space A/space FRAGMENT/space OF/space PINE/space WAZ/space TO/space OOZE/space ON/space THE/space BLACK/space VELVET/space QUILT./space ASTRONAUT/space QUINCY/space B./space ZACK/space DEFIES/space GRAVITY/space WITH/space SIX/space JET/space FUEL/space PUMPS./space HOW/space QUICKLY/space DAFT/space JUMPING/space ZEBRAS/space VEX./space A/space LARGE/space FAWN/space JUMPED/space QUICKLY/space OVER/space WHITE/space ZINC/space BOXES./space SCHWARZKOPF/space VEXED/space IRAQ/space BIG-TIME/space IN/space JULY./space MY/space GRANDFATHER/space PICKS/space UP/space QUARTZ/space AND/space VALUABLE/space ONYX/space JEWELS./space SPHINX/space OF/space BLACK/space QUARTZ/space JUDGE/space MY/space VOW./space THE/space JOB/space OF/space WAXING/space LINOLEUM/space FREQUENTLY/space PEEVES/space CHINTZY/space KIDS./space JIM/space JUST/space QUIT/space AND/space PACKED/space EXTRA/space BAGS/space FOR/space LIZ/space OWEN./space GRUMPY/space WIZARDS/space MAKE/space TOXIC/space BREW/space FOR/space THE/space EVIL/space QUEEN/space AND/space JACK./space SEX/space PROF/space GIVES/space BACK/space NO/space QUIZ/space WITH/space MILD/space JOY./space BELOVED/space GROUCHO/space JOKED/space A/space MIX/space OF/space ZANY/space QUIPS./space WHACKY/space PANGRAM/space QUIZ/space FLUMMOXED/space STEVE/space JOBS./space QUIP-CRAZY/space GORBACHEV/space WENT/space AND/space MIXED/space FLAPJACKS./space QUEEN/space ELIZABETH'S/space PROXY/space WAVED/space OFF/space MICK/space JAGGER./space JAIL/space ZESTY/space GIVEN/space GRABBED/space PAY/space FROM/space QUACK./space SIX/space BIG/space JUICY/space STEAKS/space SIZZED/space IN/space A/space PAN/space AS/space FIVE/space WORKMEN/space LEFT/space THE/space QUARRY./space MANY-WIVED/space JACK/space LAUGHS/space AT/space PROBES/space OF/space SEX/space QUIZ./space SIX/space QUITE/space CRAZY/space KINGS/space VOWED/space TO/space ABOLISH/space MY/space PITIFUL/space JOUSTS.\012\012Prized/space waxy/space jonquils/space choke/space big/space farm/space vats./space Quickly/space jigs/space for/space waltz/space vex/space bad/space nymph./space Jaded/space zombies/space acted/space quaintly/space but/space kept/space driving/space their/space oxen/space forward./space Brawny/space gods/space just/space flocked/space up/space to/space quiz/space and/space vex/space him./space May/space Jo/space equals/space the/space fine/space record/space by/space solving/space six/space puzzles/space a/space week./space Quincy/space Jones/space vowed/space to/space fix/space the/space bleak/space jazz/space program./space Playing/space jazz/space vibe/space chords/space quickly/space excites/space my/space wife./space Murky/space haze/space enveloped/space a/space city/space as/space jarring/space quakes/space broke/space forty-six/space windows./space Mix/space Zapf/space with/space Veljovic/space and/space get/space quirky/space beziers./space A/space mad/space boxer/space shot/space a/space quick,/space gloved/space jab/space to/space the/space jaw/space of/space his/space dizzy/space opponents./space T/space V/space folk/space buy/space ex-Prez/space John/space Quincy/space Adams'/space wig./space Wham!/space Volcano/space erupts/space fiery/space liquid/space death/space onto/space ex-jazzbo/space Kenny/space G./space Queen/space Elizabeth's/space proxy/space waved/space off/space Mick/space Jagger./space John/space Quincy/space Adams/space grew/space vexed/space by/space talk/space of/space puzzles./space The/space July/space sun/space caused/space a/space fragment/space of/space pine/space wax/space to/space ooze/space on/space the/space black/space velvet/space quilt./space Astronaut/space Quincy/space B./space Zack/space defies/space gravity/space with/space six/space jet/space fuel/space pumps./space How/space quickly/space daft/space jumping/space zebras/space vex./space A/space large/space fawn/space jumped/space quickly/space over/space white/space zinc/space boxes./space/space Schwarzkopf/space vexed/space Iraq/space big-time/space in/space July./space My/space grandfather/space picks/space up/space quartz/space and/space valuable/space onyx/space jewels./space Sphinx/space of/space black/space quartz/space judge/space my/space vow./space The/space job/space of/space waxing/space linoleum/space frequently/space peeves/space chintzy/space kids./space Jim/space just/space quit/space and/space packed/space extra/space heavy/space bags/space for/space Liz/space Owen./space Grumpy/space wizards/space make/space toxic/space brew/space for/space the/space evil/space Queen/space and/space Jack./space Sex/space prof/space gives/space back/space no/space quiz/space with/space mild/space joy./space Beloved/space Groucho/space joked/space a/space mix/space of/space zany/space quips./space Whacky/space pangram/space quiz/space flummoxed/space Steve/space Jobs./space Quip-crazy/space Gorbachev/space went/space and/space mixed/space flapjacks./space Queen/space Elizabeth's/space proxy/space waved/space off/space Mick/space Jagger./space Jail/space zesty/space vixen/space grabbed/space pay/space from/space quack./space Six/space big/space juicy/space steaks/space sizzled/space in/space a/space pan/space as/space five/space workmen/space left/space the/space quarry./space Many-wived/space Jack/space laughs/space at/space probes/space of/space sex/space quiz./space Six/space quite/space crazy/space kings/space vowed/space to/space abolish/space my/space pitiful/space jousts.",
ABCDEFGHIJKLMNOPQRSTUVWXYZ,
abcdefghijklmnopqrstuvwxyz
);
copyright = "Copyright 1993-2022 The Whisper Project Authors (https://github.com/googlefonts/whisper)";
customParameters = (
{
name = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
name = license;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
},
{
name = vendorID;
value = GOOG;
},
{
name = "Disable Subroutines";
value = 1;
},
{
name = glyphOrder;
value = (
.notdef,
CR,
.null,
space,
nbspace
);
},
{
name = fsType;
value = (
);
},
{
name = "Use Typo Metrics";
value = 1;
}
);
date = "2022-03-18 05:15:50 +0000";
designer = "Robert E. Leuschke";
designerURL = www.typesetit.com;
familyName = Whisper;
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012\012languagesystem latn dflt;\012languagesystem latn AZE;\012languagesystem latn CRT;\012languagesystem latn KAZ;\012languagesystem latn TAT;\012languagesystem latn TRK;\012languagesystem latn ROM;\012languagesystem latn MOL;\012languagesystem latn CAT;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;\012feature sups;\012feature frac;\012feature ordn;\012";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {\012	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];\012	@CombiningNonTopAccents = [brevebelowcomb cedillacomb dieresisbelowcomb dotbelowcomb macronbelowcomb ogonekcomb horncomb strokeshortcomb];\012	sub [i j]' @CombiningTopAccents by [idotless jdotless];\012	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];\012} ccmp_Other_1;\012\012lookup ccmp_Other_2 {\012	lookupflag 0;\012	sub tildecomb dotaccentcomb by tildecomb_dotaccentcomb;\012	sub tildecomb macroncomb by tildecomb_macroncomb;\012} ccmp_Other_2;\012\012lookup ccmp_latn_1 {\012	lookupflag 0;\012	sub brevecomb acutecomb by brevecomb_acutecomb;\012	sub brevecomb gravecomb by brevecomb_gravecomb;\012	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;\012	sub brevecomb tildecomb by brevecomb_tildecomb;\012	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;\012	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;\012	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;\012	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;\012} ccmp_latn_1;\012\012script latn;\012lookup ccmp_latn_1;\012";
name = ccmp;
},
{
automatic = 1;
code = "lookup locl_latn_0 {\012	script latn;\012	language AZE;\012	language CRT;\012	language KAZ;\012	language TAT;\012	language TRK;\012	sub i by idotaccent;\012} locl_latn_0;\012\012lookup locl_latn_1 {\012	script latn;\012	language ROM;\012	language MOL;\012	sub Scedilla by Scommaaccent;\012	sub scedilla by scommaaccent;\012	sub Tcedilla by Tcommaaccent;\012	sub tcedilla by tcommaaccent;\012} locl_latn_1;\012\012lookup locl_latn_2 {\012	script latn;\012	language CAT;\012	sub l periodcentered' l by periodcentered.loclCAT;\012	sub L periodcentered' L by periodcentered.loclCAT;\012} locl_latn_2;\012";
name = locl;
},
{
automatic = 1;
code = "sub one by onesuperior;\012sub two by twosuperior;\012sub three by threesuperior;\012sub four by foursuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;\012sub one slash two by onehalf;\012sub three slash four by threequarters;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012sub N o period by numero;\012";
name = ordn;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;\012sub f f i by f_f_i;\012sub f f l by f_f_l;\012sub f f by f_f;\012sub f i by fi;\012sub f l by fl;\012";
name = liga;
}
);
fontMaster = (
{
alignmentZones = (
"{620, 16}",
"{554, 16}",
"{300, 16}",
"{0, -15}",
"{-310, -16}"
);
ascender = 554;
capHeight = 620;
customParameters = (
{
name = typoAscender;
value = 880;
},
{
name = typoDescender;
value = -360;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaAscender;
value = 880;
},
{
name = hheaDescender;
value = -360;
},
{
name = hheaLineGap;
value = 0;
},
{
name = winAscent;
value = 880;
},
{
name = winDescent;
value = 360;
},
{
name = strikeoutPosition;
value = 259;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0125 1066 12 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0121065 190 164 132 102 49 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121066 250 206 165 102 69 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121067 230 206 132 102 69 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121068 167 126 99 70 49 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121069 153 126 99 70 49 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121070 142 126 99 70 49 0 18 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0121061 250 206 165 102 69 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121062 275 206 165 125 69 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121063 212 164 132 102 49 0 18 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0121064 197 164 132 102 49 0 18 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0121071 4 17 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012NPUSHB[ ]	/* 33 values pushed */\01219 19 18 18 17 17 16 16 15 15 14 14 13 13 12 12 11 11 10 10 9 9 8 8 7 7 2 2 1 1 0 0 1 \012SCANTYPE[ ]	/* ScanType */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0124 3 70 0 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0126 5 70 0 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0123 3 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\0125 5 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "NPUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012SROUND[ ]	/* SuperRound */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ROUND[00]	/* Round */\012RTG[ ]	/* RoundToGrid */\012SWAP[ ]	/* SwapTopStack */\012ROUND[00]	/* Round */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0123 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHW[ ]	/* 2 values pushed */\0123 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01211 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
126,
251,
24,
33,
17,
21,
15,
176,
202,
308,
261,
423,
29,
329,
266,
294,
143,
367,
489,
-28886,
-10132,
-21689,
919,
20199,
-24271,
-3317,
-8637,
6035,
24801,
-24011,
-29940,
-15521,
954,
3493,
-192,
-14934,
29899,
-2720,
-9925,
27814,
-7356,
-24858,
16675,
-12711,
-18521,
6032,
12668,
-19729,
23247,
-31159,
-22725,
17401,
-29772,
-24011,
19152,
-9917,
27114,
-382,
8575,
28432,
7047,
-30926,
32156,
10478,
6974,
26654,
-9167,
-32088,
12614,
-27165,
-1077,
18542,
9475,
-22901,
16942,
-19299,
-26115,
-19051,
24342,
-16450,
-20656,
23436,
-13633,
11601,
17113,
-17038,
-10987,
22448,
-4261,
32254,
-23967,
-13307,
12456,
20555,
-19771,
-9107,
751,
10191,
-13472,
31511,
7811,
-12949,
32260,
-4930,
-16098,
32055,
3763,
-31918,
465,
-19844,
24158,
-3604,
11875,
18146,
-7039,
28009,
6656,
-28486,
31050,
7384,
-19851,
16374,
-10601,
18247,
-3595,
-28012,
19745,
-6967,
-28034,
12972,
-5403,
-31594,
30584,
-22706,
-30744,
-22394,
21279,
-1862,
-8439,
32511,
-4211,
-9135,
20453,
24101,
-8883,
-32513,
11930,
-9116,
8804,
4949,
25248,
-19717,
-32037,
-10667,
30980,
7404,
-163,
-25041,
3055,
-29053,
24894,
-3149,
-11242,
23338,
1264,
-5296,
-15339,
31694,
6498,
-15935,
28328,
339,
-28694,
28713,
13918,
-10028,
7988,
6491,
-13353,
22904,
4065,
-21857,
3852,
3264,
-17836,
18612,
-31865,
-15447,
27463,
7878,
-29400,
26726,
7426,
-30583,
11895,
-28476,
-16454,
14664,
-12085,
19303,
-21578,
-28031,
-12079,
23408,
8786,
-27140,
32621,
7705,
-30322,
9328,
-3810,
25328,
17741,
-5855,
-11797,
31596,
4870,
-28474,
1379,
-9714,
28326,
-5598,
-9558,
8874,
25029,
5728,
-23301,
12179,
-15293,
5562,
27784,
-20814,
-12725,
12522,
24197,
-3532,
30943,
-4495,
-12092,
32437,
20761,
-5067,
-32027,
2188,
-13786,
24773,
-22149,
-13304,
27548,
517,
-28949,
20211,
6581,
-5362,
-15552,
3728,
24806,
-19664,
-25076,
-10404,
8366,
25598,
19655,
-31994,
-15539,
19948,
15499,
-31373,
-19438,
13503,
-26254,
-21271,
8861,
-8657,
234,
3974,
-2212,
-10265,
32389,
-3546,
-25960,
18334,
-6288,
-31818,
19335,
-8077,
-29950,
6356,
-26245,
19447,
-880,
28991,
1495,
-31915,
27565,
17916,
-18003,
-9949,
29875,
-3309,
-14240,
3784,
8614,
-11481,
18311,
-19831,
-11679,
17898,
-3882,
-9371,
29721,
-3157,
27948,
1478,
-2537,
-12434,
7088,
8657,
-8399,
24159,
2546,
-21640,
17135,
-1329,
19041,
12115,
-28694,
-23680,
7178,
13773,
-20891,
23973,
-3136,
-30865,
5401,
-17279,
4425,
27977,
14863,
-30280,
8694,
27846,
24336,
-21142,
-862,
-13838,
704,
16404,
-21139,
-7748,
8603,
28546,
7457,
-6263,
23208,
5953,
-2088,
-32121,
299,
-17215,
7936,
4152,
-13946,
13745,
24415,
-4880,
32046,
-23448,
-14054,
25048,
-21937,
-14051,
25745,
881,
-10174,
16106,
20864,
-15611,
30693,
-23893,
-15801,
30148,
-7376,
-13561,
25847,
901,
-25330,
13732,
-6539,
-8372,
11150,
4527,
-4337,
20001,
14800,
-9378,
29425,
-5331,
-17853,
24501,
-16504,
-21402,
3108,
9647,
-8613,
28035,
-15450,
-26803,
9723,
-20633,
359,
23911,
27734,
-16467,
-30212,
-12834,
2896,
12801,
-11805,
14943,
23341,
-5903,
23700,
2354,
-21304,
3849,
35,
-1543,
9641,
2332,
13557,
-11653,
15416,
21459,
-9142,
29429,
-21728,
-4795,
-24595,
23085,
-9150,
-28952,
639,
-3560,
28564,
18969,
-14344,
28063,
-19946,
-14647,
19296,
-4014,
-11300,
29844,
-7625,
-28275,
31154,
5444,
-28458,
2673,
-23543,
5312,
27675,
-17797,
-32742,
32252,
15506,
-10745,
18851,
-7388,
-25190,
10420,
-14234,
11831,
17115,
-17551,
-11758,
19624,
-400,
21013,
8624,
-19380,
24020,
-20460,
-13292,
-25774,
28269,
16545,
-29199,
-569,
-13295,
7533,
27325,
-23665,
-6433,
-12762,
105,
16556,
-12593,
-23958,
1620,
15349,
-20066,
5677,
9160,
-24450,
23820,
-16939,
-3737,
27325,
21638,
-918,
-29435,
8185,
-1345,
27217,
151,
-14170,
25948,
1765,
-26059,
6746,
-13104,
32383,
-3554,
-32120,
1594,
-6002,
-14625,
14174,
23041,
-8540,
16239,
19214,
-8263,
17177,
-23017,
-14381,
29048,
-7100,
-14597,
27019,
3865,
-31046,
12592,
-7799,
-10032,
12034,
3363,
-6013,
19373,
9564,
-11030,
32381,
-4447,
-22577,
23329,
-17540,
-10478,
1976,
8539,
-9769,
26935,
-8366,
-21255,
8567,
-24557,
1243,
22747,
3997,
-746,
-12952,
184,
27278,
-18216,
-28652,
-8860,
5814,
30086,
-19745,
-29394,
-12939,
17172,
14003,
-3301,
20026,
8919,
-7318,
-27119,
13493,
-24521,
2706,
1454,
-652,
8655,
18605,
-1954,
-28544,
18822,
-664,
30030,
21999,
-1906,
31029,
24060,
-5729,
32310,
7656,
-15194,
26690,
8137,
-31433,
25860,
2810,
-21112,
9995,
-8281,
118,
31041,
19857,
-4176,
-30446,
10300,
-15443,
30041,
7374,
-20176,
1118,
-2640,
-9843,
30305,
-22997,
-12372,
30790,
2950,
-18013,
19790,
-15386,
16738,
-22678,
-18582,
-31141,
-10068,
12007,
30247,
-21143,
-13288,
27608,
21582,
-9428,
-15364,
18089,
6674,
-11041,
-24065,
3248,
15657,
-1131,
-20582,
28784,
14397,
-26374,
-27317,
30474,
22499,
-11813,
-26284,
24906,
19660,
-7746,
-30204,
21053,
-5395,
25699,
3604,
-15432,
31067,
-2865,
-27011,
30884,
14025,
-19588,
22555,
-23357,
-26004,
27659,
-382,
-26564,
4764,
-3393,
10783,
7526,
25772,
-17684,
-3115,
-13040,
3355,
10740,
-12177,
13372,
19889,
-9648,
20457,
-20412,
-8651,
29131,
-444,
-29445,
1182,
-32434,
27054,
10434,
-14534,
17747,
3787,
-23176,
25900,
163,
-20943,
18128,
-15564,
20016,
28816,
7806,
-27631,
29828,
1654,
-30378,
15844,
-8340,
31233,
-6741,
-29333,
15885,
-8048,
-31363,
10212,
-30795,
-20150,
13769,
-9374,
973,
11694,
-8894,
20941,
-8080,
28695,
7415,
-19579,
27648,
6305,
-16074,
29914,
1139,
-28950,
12190,
-9925,
27363,
-4723,
-30095,
16144,
-14606,
23191,
-17627,
-8530,
18499,
-314,
-29331,
5485,
-10899,
-7076,
13993,
224,
21546,
-31900,
-21995,
18911,
-19891,
-8941,
17569,
-3227,
-16821,
24799,
1450,
-19145,
20956,
-14590,
8717,
24310,
-23336,
-29321,
3571,
9630,
-27097,
-17720,
12655,
-27168,
-19490,
31601,
-6227,
-15637,
25501,
2139,
-12077,
32655,
-5066,
-25683,
3423,
-22065,
23950,
-2242,
10139,
27020,
571,
-30242,
29696,
-13553,
-25642,
18849,
10617,
-7847,
19658,
7593,
-4507,
-21595,
32736,
11192,
-27281,
20699,
31407,
12139,
-7841,
-8786,
9449,
25129,
-29655,
-17128,
-29331,
-9308,
6886,
31144,
-7335,
-31077,
26761,
1615,
-16899,
18977,
-2289,
-10493,
29422,
3699,
-26600,
15870,
-26447,
-28374,
28564,
-9285,
-15305,
27858,
19803,
-7924,
-29781,
19492,
-5478,
-19019,
24169,
-17617,
-21311,
18215,
-30954,
-18456,
21613,
-31698,
-21539,
17512,
-12041,
27351,
-15502,
-16630,
23174,
-13307,
28649,
15756,
-23237,
17826,
-7164,
11530,
17126,
-2971,
25427,
19210,
-21379,
-27324,
-10853,
11474,
28501,
7973,
-19552,
27753,
768,
-21585,
14378,
-19820,
31674,
8044,
-39,
8232,
6514,
26786,
-14645,
-18076,
12547,
-13930,
2585,
3513,
14489,
3040,
21794,
-30597,
-7333,
22498,
10353,
-6102,
-30816,
11596,
-23357,
22888,
-31289,
-21580,
6714,
25146,
-13557,
12882,
30596,
9643,
-22442,
24300,
-16567,
-28303,
-24300,
19621,
-13279,
31188,
24123,
-19613,
-24821,
30392,
-22184,
-14646,
27954,
-7103,
-10549,
30823,
-22828,
-12613,
32094,
-2367,
-29852,
19207,
-6749,
-9658,
31713,
23679,
-3317,
11153,
18805,
-3558,
-31603,
41,
-6511,
-31298,
1572,
-1404,
26285,
5209,
-22328,
12159,
-9446,
18372,
-6282,
-10491,
32648,
-3537,
-26993,
8614,
-17840,
11733,
-14795,
22096,
-6921,
24692,
275,
-30067,
30007,
2008,
-31482,
4655,
-1846,
28282,
23714,
-10804,
-31426,
26910,
22639,
-20817,
-32064,
30073,
-22044,
-14462,
14365,
20943,
-14746,
26655,
21645,
-1456,
24766,
18669,
-705,
-8849,
30971,
-6543,
-25767,
31724,
13518,
-707,
12918,
600,
19149,
-9812,
-387,
-25613,
2706,
-24204,
30465,
-5493,
-28615,
31389,
19600,
-6119,
15471,
1724,
-13935,
-7077,
23639,
27352,
-23627,
-15303,
-29608,
31978,
1066,
-32168,
3061,
-24458,
6156,
14284,
-20125,
13397,
13,
1040,
20,
22,
20,
26,
28,
29,
22,
24,
33,
36,
39,
0,
21,
-282,
30,
312,
0,
658,
0
);
}
);
descender = -310;
guideLines = (
{
name = "lc top";
position = "{-149, -122}";
},
{
name = "lc bottom";
position = "{-155, -224}";
},
{
position = "{-99, 609}";
},
{
position = "{-94, 759}";
},
{
name = "Numerals-height";
position = "{708, 404}";
},
{
name = "ordinal bottom";
position = "{-13, 270}";
}
);
id = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
userData = {
GSOffsetHorizontal = 2;
GSOffsetVertical = 2;
};
weightValue = 400;
widthValue = 5;
xHeight = 300;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"50 0 LINE",
"320 0 LINE",
"320 534 LINE",
"50 534 LINE"
);
},
{
closed = 1;
nodes = (
"103 53 LINE",
"183 236 LINE",
"263 53 LINE"
);
},
{
closed = 1;
nodes = (
"94 439 LINE",
"167 271 LINE",
"94 106 LINE"
);
},
{
closed = 1;
nodes = (
"272 104 LINE",
"198 271 LINE",
"272 441 LINE"
);
},
{
closed = 1;
nodes = (
"106 480 LINE",
"259 480 LINE",
"183 307 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */\0121 8 8 64 9 2 7 4 4 1 0 6 5 4 3 2 5 4 6 0 7 6 6 1 2 1 3 0 0 1 0 70 \012SROUND[ ]	/* SuperRound */\012MDAP[1]	/* MoveDirectAbsPt */\012SHZ[1]	/* ShiftZoneByLastPoint */\012RTG[ ]	/* RoundToGrid */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MIAP[1]	/* MoveIndirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MDAP[1]	/* MoveDirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SRP0[ ]	/* SetRefPoint0 */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SRP0[ ]	/* SetRefPoint0 */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MDAP[1]	/* MoveDirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MDAP[1]	/* MoveDirectAbsPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012IUP[1]	/* InterpolateUntPts */\012IUP[0]	/* InterpolateUntPts */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MD[0]	/* MeasureDistance */\012ROUND[00]	/* Round */\012PUSHW[ ]	/* 2 values pushed */\0120 8 \012MD[0]	/* MeasureDistance */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SRP1[ ]	/* SetRefPoint1 */\012SHZ[1]	/* ShiftZoneByLastPoint */\012PUSHW[ ]	/* 2 values pushed */\0128 -64 \012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */";
};
width = 370;
}
);
note = .notdef;
},
{
glyphname = CR;
lastChange = "2022-03-18 05:58:50 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 171;
}
);
note = CR;
unicode = 000D;
},
{
glyphname = .null;
lastChange = "2022-03-18 05:59:22 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 0;
}
);
note = NULL;
unicode = 0000;
},
{
glyphname = space;
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 171;
}
);
note = space;
unicode = 0020;
},
{
glyphname = nbspace;
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 171;
}
);
widthMetricsKey = space;
unicode = 00A0;
},
{
glyphname = A;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"164 -132 OFFCURVE",
"254 -100 OFFCURVE",
"359 -37 CURVE SMOOTH",
"437 10 OFFCURVE",
"514 67 OFFCURVE",
"590 135 CURVE SMOOTH",
"681 217 LINE",
"722 228 OFFCURVE",
"761 235 OFFCURVE",
"798 237 CURVE",
"751 142 OFFCURVE",
"727 66 OFFCURVE",
"727 8 CURVE SMOOTH",
"727 2 OFFCURVE",
"728 -3 OFFCURVE",
"728 -9 CURVE SMOOTH",
"729 -25 OFFCURVE",
"751 -41 OFFCURVE",
"768 -41 CURVE SMOOTH",
"775 -41 OFFCURVE",
"780 -39 OFFCURVE",
"783 -35 CURVE SMOOTH",
"800 -13 OFFCURVE",
"826 10 OFFCURVE",
"861 35 CURVE SMOOTH",
"892 56 OFFCURVE",
"917 70 OFFCURVE",
"936 77 CURVE SMOOTH",
"942 79 OFFCURVE",
"944 81 OFFCURVE",
"944 83 CURVE SMOOTH",
"944 85 LINE SMOOTH",
"944 88 OFFCURVE",
"942 89 OFFCURVE",
"938 88 CURVE",
"910 76 OFFCURVE",
"888 64 OFFCURVE",
"869 53 CURVE",
"866 52 OFFCURVE",
"854 44 OFFCURVE",
"833 29 CURVE SMOOTH",
"816 18 OFFCURVE",
"805 12 OFFCURVE",
"798 12 CURVE SMOOTH",
"794 12 OFFCURVE",
"791 13 OFFCURVE",
"789 16 CURVE SMOOTH",
"786 22 OFFCURVE",
"785 32 OFFCURVE",
"785 46 CURVE SMOOTH",
"785 93 OFFCURVE",
"802 154 OFFCURVE",
"835 229 CURVE",
"856 239 OFFCURVE",
"873 244 OFFCURVE",
"887 244 CURVE SMOOTH",
"890 244 OFFCURVE",
"893 243 OFFCURVE",
"896 243 CURVE SMOOTH",
"908 244 OFFCURVE",
"914 246 OFFCURVE",
"914 251 CURVE SMOOTH",
"914 256 OFFCURVE",
"907 258 OFFCURVE",
"892 258 CURVE SMOOTH",
"872 258 LINE SMOOTH",
"865 258 OFFCURVE",
"856 258 OFFCURVE",
"847 257 CURVE",
"859 284 OFFCURVE",
"876 313 OFFCURVE",
"897 346 CURVE SMOOTH",
"972 462 OFFCURVE",
"1034 539 OFFCURVE",
"1085 582 CURVE SMOOTH",
"1090 586 OFFCURVE",
"1092 589 OFFCURVE",
"1092 592 CURVE SMOOTH",
"1092 594 OFFCURVE",
"1090 595 OFFCURVE",
"1087 595 CURVE SMOOTH",
"1081 595 OFFCURVE",
"1074 592 OFFCURVE",
"1067 585 CURVE SMOOTH",
"1032 556 OFFCURVE",
"999 522 OFFCURVE",
"967 483 CURVE SMOOTH",
"875 362 LINE SMOOTH",
"849 328 OFFCURVE",
"827 293 OFFCURVE",
"808 256 CURVE",
"767 256 LINE",
"758 255 OFFCURVE",
"751 255 OFFCURVE",
"744 255 CURVE SMOOTH",
"726 255 LINE",
"782 312 OFFCURVE",
"830 362 OFFCURVE",
"871 403 CURVE SMOOTH",
"912 444 OFFCURVE",
"945 478 OFFCURVE",
"970 504 CURVE SMOOTH",
"974 508 OFFCURVE",
"976 512 OFFCURVE",
"976 516 CURVE SMOOTH",
"976 519 OFFCURVE",
"975 520 OFFCURVE",
"973 520 CURVE SMOOTH",
"970 520 OFFCURVE",
"966 517 OFFCURVE",
"961 512 CURVE SMOOTH",
"936 485 OFFCURVE",
"894 446 OFFCURVE",
"834 393 CURVE SMOOTH",
"674 253 LINE",
"668 253 OFFCURVE",
"664 253 OFFCURVE",
"662 252 CURVE",
"589 251 OFFCURVE",
"524 250 OFFCURVE",
"467 250 CURVE SMOOTH",
"465 250 OFFCURVE",
"468 253 OFFCURVE",
"477 258 CURVE SMOOTH",
"484 262 OFFCURVE",
"488 265 OFFCURVE",
"488 266 CURVE",
"487 266 LINE SMOOTH",
"465 266 OFFCURVE",
"435 261 OFFCURVE",
"397 250 CURVE",
"380 250 OFFCURVE",
"372 240 OFFCURVE",
"372 220 CURVE SMOOTH",
"372 208 OFFCURVE",
"377 202 OFFCURVE",
"388 202 CURVE",
"503 216 OFFCURVE",
"589 225 OFFCURVE",
"647 229 CURVE",
"568 160 LINE SMOOTH",
"375 -12 OFFCURVE",
"225 -104 OFFCURVE",
"116 -116 CURVE SMOOTH",
"51 -123 OFFCURVE",
"19 -92 OFFCURVE",
"19 -25 CURVE SMOOTH",
"19 40 OFFCURVE",
"45 102 OFFCURVE",
"97 161 CURVE SMOOTH",
"194 271 OFFCURVE",
"276 326 OFFCURVE",
"345 326 CURVE SMOOTH",
"363 326 OFFCURVE",
"378 318 OFFCURVE",
"389 303 CURVE SMOOTH",
"396 293 LINE SMOOTH",
"398 290 OFFCURVE",
"400 288 OFFCURVE",
"401 286 CURVE SMOOTH",
"405 280 LINE",
"412 280 OFFCURVE",
"415 288 OFFCURVE",
"415 304 CURVE SMOOTH",
"415 329 OFFCURVE",
"396 342 OFFCURVE",
"359 342 CURVE SMOOTH",
"347 342 OFFCURVE",
"334 340 OFFCURVE",
"319 337 CURVE SMOOTH",
"229 315 OFFCURVE",
"148 260 OFFCURVE",
"77 173 CURVE SMOOTH",
"10 90 OFFCURVE",
"-24 20 OFFCURVE",
"-24 -36 CURVE SMOOTH",
"-24 -100 OFFCURVE",
"14 -132 OFFCURVE",
"91 -132 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01274 1070 52 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 74 118 74 134 74 150 74 166 74 182 74 198 74 214 74 230 74 246 74 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 74 22 74 38 74 54 74 70 74 86 74 102 74 118 74 134 74 150 74 166 74 182 74 198 74 214 74 230 74 246 74 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 74 22 74 38 74 54 74 70 74 86 74 102 74 118 74 134 74 150 74 166 74 182 74 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 74 213 74 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0126 50 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01243 50 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01279 50 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01291 50 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012109 50 120 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 905;
}
);
note = A;
unicode = 0041;
},
{
color = 11;
glyphname = Aacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 00C1;
},
{
color = 11;
glyphname = Abreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 0102;
},
{
color = 11;
glyphname = Abreveacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 1EAE;
},
{
color = 11;
glyphname = Abrevedotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 1EB6;
},
{
color = 11;
glyphname = Abrevegrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 1EB0;
},
{
color = 11;
glyphname = Abrevehookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 1EB2;
},
{
color = 11;
glyphname = Abrevetilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 1EB4;
},
{
color = 11;
glyphname = Acaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 01CD;
},
{
color = 11;
glyphname = Acircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 00C2;
},
{
color = 11;
glyphname = Acircumflexacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 1EA4;
},
{
color = 11;
glyphname = Acircumflexdotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 1EAC;
},
{
color = 11;
glyphname = Acircumflexgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 1EA6;
},
{
color = 11;
glyphname = Acircumflexhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 1EA8;
},
{
color = 11;
glyphname = Acircumflextilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 1EAA;
},
{
color = 11;
glyphname = Adblgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dblgravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 0200;
},
{
color = 11;
glyphname = Adieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 00C4;
},
{
color = 11;
glyphname = Adotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 1EA0;
},
{
color = 11;
glyphname = Agrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 00C0;
},
{
color = 11;
glyphname = Ahookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 1EA2;
},
{
color = 11;
glyphname = Ainvertedbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = breveinvertedcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 0202;
},
{
color = 11;
glyphname = Amacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 0100;
},
{
color = 11;
glyphname = Aogonek;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ogonekcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 0104;
},
{
color = 11;
glyphname = Aring;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 00C5;
},
{
color = 11;
glyphname = Aringacute;
lastChange = "2021-12-23 19:26:50 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ringacute;
transform = "{1, 0, 0, 1, 905, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1021;
}
);
unicode = 01FA;
},
{
color = 11;
glyphname = Atilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 905;
}
);
unicode = 00C3;
},
{
glyphname = AE;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"164 -132 OFFCURVE",
"254 -100 OFFCURVE",
"359 -37 CURVE SMOOTH",
"437 10 OFFCURVE",
"514 67 OFFCURVE",
"590 135 CURVE SMOOTH",
"681 217 LINE",
"694 220 OFFCURVE",
"726 225 OFFCURVE",
"777 232 CURVE",
"736 179 OFFCURVE",
"715 127 OFFCURVE",
"715 78 CURVE SMOOTH",
"715 28 OFFCURVE",
"735 -13 OFFCURVE",
"775 -45 CURVE SMOOTH",
"815 -77 OFFCURVE",
"866 -93 OFFCURVE",
"928 -93 CURVE SMOOTH",
"986 -93 OFFCURVE",
"1042 -86 OFFCURVE",
"1095 -73 CURVE SMOOTH",
"1127 -65 OFFCURVE",
"1174 -49 OFFCURVE",
"1237 -25 CURVE SMOOTH",
"1286 -6 OFFCURVE",
"1342 20 OFFCURVE",
"1407 55 CURVE SMOOTH",
"1438 71 OFFCURVE",
"1482 96 OFFCURVE",
"1542 131 CURVE SMOOTH",
"1552 137 OFFCURVE",
"1557 143 OFFCURVE",
"1557 149 CURVE SMOOTH",
"1557 153 OFFCURVE",
"1555 155 OFFCURVE",
"1550 155 CURVE SMOOTH",
"1546 155 OFFCURVE",
"1542 154 OFFCURVE",
"1537 151 CURVE SMOOTH",
"1397 78 LINE SMOOTH",
"1341 49 OFFCURVE",
"1290 27 OFFCURVE",
"1244 12 CURVE SMOOTH",
"1092 -39 LINE SMOOTH",
"1030 -57 OFFCURVE",
"972 -66 OFFCURVE",
"917 -66 CURVE SMOOTH",
"814 -66 OFFCURVE",
"762 -31 OFFCURVE",
"762 40 CURVE SMOOTH",
"762 91 OFFCURVE",
"791 158 OFFCURVE",
"849 239 CURVE",
"880 242 LINE SMOOTH",
"887 243 OFFCURVE",
"893 243 OFFCURVE",
"896 243 CURVE SMOOTH",
"909 244 OFFCURVE",
"915 246 OFFCURVE",
"915 250 CURVE SMOOTH",
"915 251 OFFCURVE",
"915 252 OFFCURVE",
"913 254 CURVE",
"1017 271 OFFCURVE",
"1094 279 OFFCURVE",
"1146 279 CURVE SMOOTH",
"1199 279 OFFCURVE",
"1248 272 OFFCURVE",
"1291 259 CURVE SMOOTH",
"1314 252 OFFCURVE",
"1325 242 OFFCURVE",
"1325 229 CURVE SMOOTH",
"1325 223 OFFCURVE",
"1321 218 OFFCURVE",
"1313 214 CURVE SMOOTH",
"1303 209 OFFCURVE",
"1298 202 OFFCURVE",
"1298 193 CURVE SMOOTH",
"1299 186 OFFCURVE",
"1302 183 OFFCURVE",
"1307 183 CURVE SMOOTH",
"1312 183 OFFCURVE",
"1318 186 OFFCURVE",
"1325 192 CURVE SMOOTH",
"1343 206 OFFCURVE",
"1352 222 OFFCURVE",
"1352 239 CURVE SMOOTH",
"1352 261 OFFCURVE",
"1336 278 OFFCURVE",
"1304 289 CURVE SMOOTH",
"1266 301 OFFCURVE",
"1224 307 OFFCURVE",
"1178 307 CURVE SMOOTH",
"1145 307 OFFCURVE",
"1101 303 OFFCURVE",
"1044 296 CURVE SMOOTH",
"937 283 OFFCURVE",
"882 276 OFFCURVE",
"879 275 CURVE",
"934 332 OFFCURVE",
"1002 384 OFFCURVE",
"1084 431 CURVE SMOOTH",
"1189 492 OFFCURVE",
"1287 526 OFFCURVE",
"1377 532 CURVE SMOOTH",
"1437 536 OFFCURVE",
"1477 513 OFFCURVE",
"1477 469 CURVE SMOOTH",
"1477 465 OFFCURVE",
"1477 460 OFFCURVE",
"1476 453 CURVE SMOOTH",
"1475 446 OFFCURVE",
"1474 441 OFFCURVE",
"1474 438 CURVE SMOOTH",
"1474 418 OFFCURVE",
"1481 408 OFFCURVE",
"1494 408 CURVE SMOOTH",
"1512 408 OFFCURVE",
"1520 427 OFFCURVE",
"1520 466 CURVE SMOOTH",
"1520 497 OFFCURVE",
"1511 519 OFFCURVE",
"1493 532 CURVE SMOOTH",
"1476 545 OFFCURVE",
"1449 551 OFFCURVE",
"1410 551 CURVE SMOOTH",
"1394 551 LINE SMOOTH",
"1388 551 OFFCURVE",
"1382 551 OFFCURVE",
"1375 550 CURVE SMOOTH",
"1296 545 OFFCURVE",
"1215 525 OFFCURVE",
"1132 490 CURVE SMOOTH",
"1048 455 OFFCURVE",
"973 412 OFFCURVE",
"904 356 CURVE",
"976 467 OFFCURVE",
"1036 541 OFFCURVE",
"1085 582 CURVE SMOOTH",
"1090 586 OFFCURVE",
"1092 589 OFFCURVE",
"1092 592 CURVE SMOOTH",
"1092 594 OFFCURVE",
"1090 595 OFFCURVE",
"1087 595 CURVE SMOOTH",
"1081 595 OFFCURVE",
"1074 592 OFFCURVE",
"1067 585 CURVE",
"995 525 OFFCURVE",
"936 442 OFFCURVE",
"875 362 CURVE SMOOTH",
"858 339 OFFCURVE",
"840 313 OFFCURVE",
"823 284 CURVE",
"797 256 LINE",
"762 256 LINE",
"755 255 OFFCURVE",
"748 255 OFFCURVE",
"742 255 CURVE SMOOTH",
"726 255 LINE",
"782 312 OFFCURVE",
"830 362 OFFCURVE",
"871 403 CURVE SMOOTH",
"912 444 OFFCURVE",
"945 478 OFFCURVE",
"970 504 CURVE SMOOTH",
"974 508 OFFCURVE",
"976 512 OFFCURVE",
"976 516 CURVE SMOOTH",
"976 519 OFFCURVE",
"975 520 OFFCURVE",
"973 520 CURVE SMOOTH",
"970 520 OFFCURVE",
"966 517 OFFCURVE",
"961 512 CURVE SMOOTH",
"936 485 OFFCURVE",
"894 446 OFFCURVE",
"834 393 CURVE SMOOTH",
"674 253 LINE",
"668 253 OFFCURVE",
"664 253 OFFCURVE",
"662 252 CURVE",
"589 251 OFFCURVE",
"524 250 OFFCURVE",
"467 250 CURVE SMOOTH",
"465 250 OFFCURVE",
"468 253 OFFCURVE",
"477 258 CURVE SMOOTH",
"484 262 OFFCURVE",
"488 265 OFFCURVE",
"488 266 CURVE",
"487 266 LINE SMOOTH",
"465 266 OFFCURVE",
"435 261 OFFCURVE",
"397 250 CURVE",
"380 250 OFFCURVE",
"372 240 OFFCURVE",
"372 220 CURVE SMOOTH",
"372 208 OFFCURVE",
"377 202 OFFCURVE",
"388 202 CURVE",
"503 216 OFFCURVE",
"589 225 OFFCURVE",
"647 229 CURVE",
"568 160 LINE SMOOTH",
"375 -12 OFFCURVE",
"225 -104 OFFCURVE",
"116 -116 CURVE SMOOTH",
"51 -123 OFFCURVE",
"19 -92 OFFCURVE",
"19 -25 CURVE SMOOTH",
"19 40 OFFCURVE",
"45 102 OFFCURVE",
"97 161 CURVE SMOOTH",
"194 271 OFFCURVE",
"276 326 OFFCURVE",
"345 326 CURVE SMOOTH",
"363 326 OFFCURVE",
"378 318 OFFCURVE",
"389 303 CURVE SMOOTH",
"396 293 LINE SMOOTH",
"398 290 OFFCURVE",
"400 288 OFFCURVE",
"401 286 CURVE SMOOTH",
"405 280 LINE",
"412 280 OFFCURVE",
"415 288 OFFCURVE",
"415 304 CURVE SMOOTH",
"415 329 OFFCURVE",
"396 342 OFFCURVE",
"359 342 CURVE SMOOTH",
"347 342 OFFCURVE",
"334 340 OFFCURVE",
"319 337 CURVE SMOOTH",
"229 315 OFFCURVE",
"148 260 OFFCURVE",
"77 173 CURVE SMOOTH",
"10 90 OFFCURVE",
"-24 20 OFFCURVE",
"-24 -36 CURVE SMOOTH",
"-24 -100 OFFCURVE",
"14 -132 OFFCURVE",
"91 -132 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012113 1070 91 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01252 1070 80 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 1070 14 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 14 218 14 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 91 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 52 213 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01282 91 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 113 118 113 134 113 150 113 166 113 182 113 198 113 214 113 230 113 246 113 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 113 22 113 38 113 54 113 70 113 86 113 102 113 118 113 134 113 150 113 166 113 182 113 198 113 214 113 230 113 246 113 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 113 22 113 38 113 54 113 70 113 86 113 102 113 118 113 134 113 150 113 166 113 182 113 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 113 213 113 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012118 91 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012130 91 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012148 80 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012168 91 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012174 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012161 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 89 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01282 89 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012118 89 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012130 89 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012148 89 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012168 89 161 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1481;
}
);
note = AE;
unicode = 00C6;
},
{
color = 11;
glyphname = AEacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = AE;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1481;
}
);
unicode = 01FC;
},
{
glyphname = B;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"246 -73 OFFCURVE",
"360 -48 OFFCURVE",
"462 -1 CURVE SMOOTH",
"605 64 OFFCURVE",
"676 138 OFFCURVE",
"676 221 CURVE SMOOTH",
"676 267 OFFCURVE",
"650 299 OFFCURVE",
"596 317 CURVE",
"671 366 OFFCURVE",
"711 415 OFFCURVE",
"716 465 CURVE SMOOTH",
"720 505 OFFCURVE",
"703 537 OFFCURVE",
"664 561 CURVE SMOOTH",
"624 586 OFFCURVE",
"565 598 OFFCURVE",
"485 598 CURVE SMOOTH",
"399 598 OFFCURVE",
"323 585 OFFCURVE",
"258 559 CURVE SMOOTH",
"181 529 OFFCURVE",
"133 485 OFFCURVE",
"112 427 CURVE",
"109 421 OFFCURVE",
"108 413 OFFCURVE",
"108 404 CURVE SMOOTH",
"108 365 OFFCURVE",
"146 322 OFFCURVE",
"187 314 CURVE SMOOTH",
"197 312 OFFCURVE",
"202 314 OFFCURVE",
"202 319 CURVE SMOOTH",
"202 325 OFFCURVE",
"196 330 OFFCURVE",
"184 333 CURVE SMOOTH",
"172 336 OFFCURVE",
"162 344 OFFCURVE",
"153 356 CURVE SMOOTH",
"144 369 OFFCURVE",
"140 383 OFFCURVE",
"140 398 CURVE SMOOTH",
"140 406 OFFCURVE",
"141 413 OFFCURVE",
"144 419 CURVE SMOOTH",
"163 469 OFFCURVE",
"214 509 OFFCURVE",
"299 540 CURVE SMOOTH",
"364 564 OFFCURVE",
"423 576 OFFCURVE",
"477 576 CURVE SMOOTH",
"613 576 OFFCURVE",
"692 539 OFFCURVE",
"692 470 CURVE SMOOTH",
"692 421 OFFCURVE",
"652 372 OFFCURVE",
"572 322 CURVE",
"562 324 OFFCURVE",
"552 325 OFFCURVE",
"541 325 CURVE SMOOTH",
"493 325 OFFCURVE",
"451 318 OFFCURVE",
"415 304 CURVE SMOOTH",
"378 289 OFFCURVE",
"360 273 OFFCURVE",
"360 254 CURVE SMOOTH",
"360 241 OFFCURVE",
"372 235 OFFCURVE",
"396 235 CURVE SMOOTH",
"417 235 OFFCURVE",
"440 240 OFFCURVE",
"467 249 CURVE SMOOTH",
"495 259 OFFCURVE",
"529 276 OFFCURVE",
"570 300 CURVE",
"606 288 OFFCURVE",
"630 255 OFFCURVE",
"630 216 CURVE SMOOTH",
"630 147 OFFCURVE",
"561 82 OFFCURVE",
"427 21 CURVE SMOOTH",
"399 8 OFFCURVE",
"356 -6 OFFCURVE",
"297 -21 CURVE SMOOTH",
"225 -40 OFFCURVE",
"164 -49 OFFCURVE",
"113 -52 CURVE SMOOTH",
"62 -53 OFFCURVE",
"21 -35 OFFCURVE",
"21 -4 CURVE SMOOTH",
"21 29 OFFCURVE",
"62 65 OFFCURVE",
"145 104 CURVE",
"126 69 OFFCURVE",
"113 43 OFFCURVE",
"106 27 CURVE SMOOTH",
"103 18 OFFCURVE",
"101 12 OFFCURVE",
"101 7 CURVE SMOOTH",
"101 -4 OFFCURVE",
"107 -9 OFFCURVE",
"120 -9 CURVE SMOOTH",
"143 -9 OFFCURVE",
"178 6 OFFCURVE",
"225 37 CURVE SMOOTH",
"226 38 OFFCURVE",
"227 39 OFFCURVE",
"227 40 CURVE SMOOTH",
"227 43 OFFCURVE",
"224 43 OFFCURVE",
"219 42 CURVE SMOOTH",
"213 42 OFFCURVE",
"207 40 OFFCURVE",
"202 37 CURVE",
"189 26 OFFCURVE",
"174 20 OFFCURVE",
"158 20 CURVE SMOOTH",
"153 20 OFFCURVE",
"150 24 OFFCURVE",
"150 32 CURVE SMOOTH",
"150 46 OFFCURVE",
"161 68 OFFCURVE",
"182 97 CURVE SMOOTH",
"191 112 OFFCURVE",
"211 127 OFFCURVE",
"242 143 CURVE SMOOTH",
"275 161 OFFCURVE",
"310 174 OFFCURVE",
"348 182 CURVE SMOOTH",
"367 186 OFFCURVE",
"376 190 OFFCURVE",
"376 195 CURVE SMOOTH",
"376 198 OFFCURVE",
"372 199 OFFCURVE",
"365 199 CURVE SMOOTH",
"360 199 OFFCURVE",
"357 199 OFFCURVE",
"355 198 CURVE",
"310 187 OFFCURVE",
"266 176 OFFCURVE",
"225 161 CURVE",
"276 223 LINE SMOOTH",
"291 241 OFFCURVE",
"304 256 OFFCURVE",
"315 267 CURVE SMOOTH",
"400 356 OFFCURVE",
"460 416 OFFCURVE",
"495 445 CURVE SMOOTH",
"506 454 OFFCURVE",
"512 462 OFFCURVE",
"512 468 CURVE SMOOTH",
"512 469 OFFCURVE",
"511 470 OFFCURVE",
"511 471 CURVE",
"508 476 OFFCURVE",
"500 479 OFFCURVE",
"489 479 CURVE SMOOTH",
"470 479 OFFCURVE",
"456 475 OFFCURVE",
"448 467 CURVE",
"394 431 LINE SMOOTH",
"377 420 OFFCURVE",
"363 410 OFFCURVE",
"353 403 CURVE SMOOTH",
"342 396 OFFCURVE",
"335 390 OFFCURVE",
"332 387 CURVE",
"351 392 OFFCURVE",
"370 400 OFFCURVE",
"391 409 CURVE",
"354 369 OFFCURVE",
"313 321 OFFCURVE",
"268 264 CURVE SMOOTH",
"241 230 OFFCURVE",
"219 203 OFFCURVE",
"203 182 CURVE SMOOTH",
"186 161 OFFCURVE",
"175 147 OFFCURVE",
"170 140 CURVE",
"56 91 OFFCURVE",
"-1 42 OFFCURVE",
"-1 -5 CURVE SMOOTH",
"-1 -27 OFFCURVE",
"11 -45 OFFCURVE",
"36 -59 CURVE SMOOTH",
"61 -72 OFFCURVE",
"88 -79 OFFCURVE",
"119 -78 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"415 271 OFFCURVE",
"412 271 OFFCURVE",
"409 272 CURVE",
"408 273 OFFCURVE",
"407 275 OFFCURVE",
"407 277 CURVE SMOOTH",
"407 285 OFFCURVE",
"421 292 OFFCURVE",
"448 298 CURVE SMOOTH",
"473 304 OFFCURVE",
"499 307 OFFCURVE",
"528 307 CURVE SMOOTH",
"535 307 LINE",
"538 306 OFFCURVE",
"540 306 OFFCURVE",
"542 306 CURVE",
"518 294 OFFCURVE",
"494 285 OFFCURVE",
"470 279 CURVE SMOOTH",
"447 273 OFFCURVE",
"431 271 OFFCURVE",
"420 271 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012147 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012147 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 124 218 124 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 124 121 124 137 124 153 124 169 124 185 124 201 124 217 124 233 124 249 124 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 124 25 124 41 124 57 124 73 124 89 124 105 124 121 124 137 124 153 124 169 124 185 124 201 124 217 124 233 124 249 124 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 124 25 124 41 124 57 124 73 124 89 124 105 124 121 124 137 124 153 124 169 124 185 124 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012111 1068 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01275 1066 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 75 118 75 134 75 150 75 166 75 182 75 198 75 214 75 230 75 246 75 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 75 22 75 38 75 54 75 70 75 86 75 102 75 118 75 134 75 150 75 166 75 182 75 198 75 214 75 230 75 246 75 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 75 22 75 38 75 54 75 70 75 86 75 102 75 118 75 134 75 150 75 166 75 182 75 198 75 214 75 230 75 246 75 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012111 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01212 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01266 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01275 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01278 1063 8 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012130 1061 105 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 690;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"266 -93 OFFCURVE",
"322 -86 OFFCURVE",
"375 -73 CURVE SMOOTH",
"407 -65 OFFCURVE",
"454 -49 OFFCURVE",
"516 -25 CURVE SMOOTH",
"564 -6 OFFCURVE",
"621 20 OFFCURVE",
"686 55 CURVE SMOOTH",
"719 72 OFFCURVE",
"763 98 OFFCURVE",
"822 131 CURVE SMOOTH",
"832 136 OFFCURVE",
"837 142 OFFCURVE",
"837 149 CURVE SMOOTH",
"837 153 OFFCURVE",
"834 155 OFFCURVE",
"829 155 CURVE SMOOTH",
"826 155 OFFCURVE",
"822 154 OFFCURVE",
"817 151 CURVE SMOOTH",
"769 124 OFFCURVE",
"721 99 OFFCURVE",
"673 74 CURVE SMOOTH",
"613 43 OFFCURVE",
"561 19 OFFCURVE",
"516 4 CURVE SMOOTH",
"480 -7 OFFCURVE",
"450 -17 OFFCURVE",
"426 -25 CURVE SMOOTH",
"402 -32 OFFCURVE",
"383 -38 OFFCURVE",
"370 -41 CURVE SMOOTH",
"313 -55 OFFCURVE",
"256 -62 OFFCURVE",
"200 -62 CURVE SMOOTH",
"87 -62 OFFCURVE",
"30 -25 OFFCURVE",
"30 48 CURVE SMOOTH",
"30 101 OFFCURVE",
"63 169 OFFCURVE",
"128 252 CURVE SMOOTH",
"170 305 OFFCURVE",
"240 361 OFFCURVE",
"337 419 CURVE SMOOTH",
"454 488 OFFCURVE",
"560 526 OFFCURVE",
"656 532 CURVE SMOOTH",
"692 534 OFFCURVE",
"719 529 OFFCURVE",
"737 517 CURVE",
"663 442 OFFCURVE",
"621 377 OFFCURVE",
"611 322 CURVE SMOOTH",
"610 318 OFFCURVE",
"610 315 OFFCURVE",
"610 312 CURVE SMOOTH",
"610 297 OFFCURVE",
"618 290 OFFCURVE",
"634 290 CURVE SMOOTH",
"663 290 OFFCURVE",
"696 307 OFFCURVE",
"734 341 CURVE SMOOTH",
"779 381 OFFCURVE",
"800 422 OFFCURVE",
"800 466 CURVE SMOOTH",
"800 494 OFFCURVE",
"793 514 OFFCURVE",
"777 528 CURVE",
"811 558 LINE",
"818 563 OFFCURVE",
"821 568 OFFCURVE",
"821 574 CURVE SMOOTH",
"821 579 OFFCURVE",
"819 581 OFFCURVE",
"814 581 CURVE SMOOTH",
"806 581 OFFCURVE",
"788 567 OFFCURVE",
"760 539 CURVE",
"744 547 OFFCURVE",
"720 551 OFFCURVE",
"687 551 CURVE SMOOTH",
"677 551 OFFCURVE",
"666 551 OFFCURVE",
"654 550 CURVE SMOOTH",
"545 543 OFFCURVE",
"436 510 OFFCURVE",
"326 451 CURVE SMOOTH",
"223 395 OFFCURVE",
"137 327 OFFCURVE",
"68 246 CURVE SMOOTH",
"19 189 OFFCURVE",
"-5 133 OFFCURVE",
"-5 78 CURVE SMOOTH",
"-5 28 OFFCURVE",
"15 -13 OFFCURVE",
"55 -45 CURVE SMOOTH",
"95 -77 OFFCURVE",
"146 -93 OFFCURVE",
"208 -93 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"662 324 OFFCURVE",
"658 329 OFFCURVE",
"658 339 CURVE",
"657 341 OFFCURVE",
"658 344 OFFCURVE",
"658 346 CURVE",
"673 403 OFFCURVE",
"704 456 OFFCURVE",
"752 504 CURVE",
"762 491 OFFCURVE",
"767 475 OFFCURVE",
"767 456 CURVE SMOOTH",
"767 428 OFFCURVE",
"754 398 OFFCURVE",
"729 367 CURVE SMOOTH",
"706 338 OFFCURVE",
"687 324 OFFCURVE",
"670 324 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 65 218 65 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 65 121 65 137 65 153 65 169 65 185 65 201 65 217 65 233 65 249 65 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 65 25 65 41 65 57 65 73 65 89 65 105 65 121 65 137 65 153 65 169 65 185 65 201 65 217 65 233 65 249 65 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 65 25 65 41 65 57 65 73 65 89 65 105 65 121 65 137 65 153 65 169 65 185 65 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01230 1068 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01246 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 46 213 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01248 1064 9 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01271 1064 34 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 780;
}
);
note = C;
unicode = 0043;
},
{
color = 11;
glyphname = Cacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 780;
}
);
unicode = 0106;
},
{
color = 11;
glyphname = Ccaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 780;
}
);
unicode = 010C;
},
{
color = 11;
glyphname = Ccedilla;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = cedillacomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 780;
}
);
unicode = 00C7;
},
{
color = 11;
glyphname = Ccircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 780;
}
);
unicode = 0108;
},
{
color = 11;
glyphname = Cdotaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = dotaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 780;
}
);
unicode = 010A;
},
{
glyphname = D;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"245 -73 OFFCURVE",
"359 -47 OFFCURVE",
"462 -1 CURVE SMOOTH",
"569 47 OFFCURVE",
"659 110 OFFCURVE",
"732 189 CURVE SMOOTH",
"805 268 OFFCURVE",
"841 342 OFFCURVE",
"841 411 CURVE SMOOTH",
"841 469 OFFCURVE",
"812 515 OFFCURVE",
"755 548 CURVE SMOOTH",
"696 582 OFFCURVE",
"611 598 OFFCURVE",
"498 598 CURVE SMOOTH",
"467 598 LINE SMOOTH",
"388 596 OFFCURVE",
"318 583 OFFCURVE",
"258 559 CURVE SMOOTH",
"181 529 OFFCURVE",
"133 485 OFFCURVE",
"112 427 CURVE",
"109 421 OFFCURVE",
"108 413 OFFCURVE",
"108 404 CURVE SMOOTH",
"108 365 OFFCURVE",
"146 322 OFFCURVE",
"187 314 CURVE SMOOTH",
"197 312 OFFCURVE",
"202 314 OFFCURVE",
"202 319 CURVE SMOOTH",
"202 325 OFFCURVE",
"196 330 OFFCURVE",
"184 333 CURVE SMOOTH",
"172 336 OFFCURVE",
"162 344 OFFCURVE",
"153 356 CURVE SMOOTH",
"144 369 OFFCURVE",
"140 383 OFFCURVE",
"140 398 CURVE SMOOTH",
"140 406 OFFCURVE",
"141 413 OFFCURVE",
"144 419 CURVE SMOOTH",
"163 469 OFFCURVE",
"214 509 OFFCURVE",
"299 540 CURVE SMOOTH",
"362 563 OFFCURVE",
"421 575 OFFCURVE",
"477 576 CURVE SMOOTH",
"696 581 OFFCURVE",
"805 530 OFFCURVE",
"805 425 CURVE SMOOTH",
"805 360 OFFCURVE",
"766 287 OFFCURVE",
"687 206 CURVE SMOOTH",
"612 128 OFFCURVE",
"525 66 OFFCURVE",
"427 21 CURVE SMOOTH",
"398 8 OFFCURVE",
"354 -6 OFFCURVE",
"297 -21 CURVE SMOOTH",
"225 -40 OFFCURVE",
"164 -49 OFFCURVE",
"113 -52 CURVE SMOOTH",
"62 -53 OFFCURVE",
"21 -35 OFFCURVE",
"21 -4 CURVE SMOOTH",
"21 29 OFFCURVE",
"62 65 OFFCURVE",
"145 104 CURVE",
"126 69 OFFCURVE",
"113 43 OFFCURVE",
"106 27 CURVE SMOOTH",
"103 18 OFFCURVE",
"101 12 OFFCURVE",
"101 7 CURVE SMOOTH",
"101 -4 OFFCURVE",
"107 -9 OFFCURVE",
"120 -9 CURVE SMOOTH",
"143 -9 OFFCURVE",
"178 6 OFFCURVE",
"225 37 CURVE SMOOTH",
"226 38 OFFCURVE",
"227 39 OFFCURVE",
"227 40 CURVE SMOOTH",
"227 43 OFFCURVE",
"224 43 OFFCURVE",
"219 42 CURVE SMOOTH",
"213 42 OFFCURVE",
"207 40 OFFCURVE",
"202 37 CURVE",
"189 26 OFFCURVE",
"174 20 OFFCURVE",
"158 20 CURVE SMOOTH",
"153 20 OFFCURVE",
"150 24 OFFCURVE",
"150 32 CURVE SMOOTH",
"150 46 OFFCURVE",
"161 68 OFFCURVE",
"182 97 CURVE SMOOTH",
"191 112 OFFCURVE",
"211 127 OFFCURVE",
"242 143 CURVE SMOOTH",
"275 161 OFFCURVE",
"310 174 OFFCURVE",
"348 182 CURVE SMOOTH",
"367 186 OFFCURVE",
"376 190 OFFCURVE",
"376 195 CURVE SMOOTH",
"376 198 OFFCURVE",
"372 199 OFFCURVE",
"365 199 CURVE SMOOTH",
"360 199 OFFCURVE",
"357 199 OFFCURVE",
"355 198 CURVE",
"310 187 OFFCURVE",
"266 176 OFFCURVE",
"225 161 CURVE",
"276 223 LINE SMOOTH",
"291 241 OFFCURVE",
"304 256 OFFCURVE",
"315 267 CURVE SMOOTH",
"400 356 OFFCURVE",
"460 416 OFFCURVE",
"495 445 CURVE SMOOTH",
"506 454 OFFCURVE",
"512 462 OFFCURVE",
"512 468 CURVE SMOOTH",
"512 469 OFFCURVE",
"511 470 OFFCURVE",
"511 471 CURVE",
"508 476 OFFCURVE",
"500 479 OFFCURVE",
"489 479 CURVE SMOOTH",
"470 479 OFFCURVE",
"456 475 OFFCURVE",
"448 467 CURVE",
"394 431 LINE SMOOTH",
"377 420 OFFCURVE",
"363 410 OFFCURVE",
"353 403 CURVE SMOOTH",
"342 396 OFFCURVE",
"335 390 OFFCURVE",
"332 387 CURVE",
"351 392 OFFCURVE",
"370 400 OFFCURVE",
"391 409 CURVE",
"354 369 OFFCURVE",
"313 321 OFFCURVE",
"268 264 CURVE SMOOTH",
"241 230 OFFCURVE",
"219 203 OFFCURVE",
"203 182 CURVE SMOOTH",
"186 161 OFFCURVE",
"175 147 OFFCURVE",
"170 140 CURVE",
"56 91 OFFCURVE",
"-1 42 OFFCURVE",
"-1 -5 CURVE SMOOTH",
"-1 -27 OFFCURVE",
"11 -45 OFFCURVE",
"36 -59 CURVE SMOOTH",
"61 -72 OFFCURVE",
"88 -79 OFFCURVE",
"119 -78 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01242 1066 95 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01262 1068 75 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01285 1069 54 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0126 95 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01231 95 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01240 95 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 54 218 54 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 62 213 62 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012103 95 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012106 95 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01285 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01233 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01242 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01295 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01245 1063 91 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01281 1061 56 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 737;
}
);
note = D;
unicode = 0044;
},
{
color = 11;
glyphname = DZcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 737, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1044;
}
);
unicode = 01C4;
},
{
glyphname = Eth;
layers = (
{
components = (
{
name = D;
},
{
name = strokeshortcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 737;
}
);
unicode = 00D0;
},
{
color = 11;
glyphname = Dcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 737;
}
);
unicode = 010E;
},
{
color = 11;
glyphname = Dcroat;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = hyphen;
transform = "{0.99255, 0.12187, -0.12187, 0.99255, 112, -21}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 737;
}
);
unicode = 0110;
},
{
color = 11;
glyphname = Dzcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 737, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1044;
}
);
unicode = 01C5;
},
{
glyphname = E;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"303 -93 OFFCURVE",
"359 -86 OFFCURVE",
"412 -73 CURVE SMOOTH",
"444 -65 OFFCURVE",
"491 -49 OFFCURVE",
"554 -25 CURVE SMOOTH",
"603 -6 OFFCURVE",
"659 20 OFFCURVE",
"724 55 CURVE SMOOTH",
"755 71 OFFCURVE",
"799 96 OFFCURVE",
"859 131 CURVE SMOOTH",
"869 137 OFFCURVE",
"874 143 OFFCURVE",
"874 149 CURVE SMOOTH",
"874 153 OFFCURVE",
"872 155 OFFCURVE",
"867 155 CURVE SMOOTH",
"863 155 OFFCURVE",
"859 154 OFFCURVE",
"854 151 CURVE SMOOTH",
"714 78 LINE SMOOTH",
"658 49 OFFCURVE",
"607 27 OFFCURVE",
"561 12 CURVE SMOOTH",
"409 -39 LINE SMOOTH",
"347 -57 OFFCURVE",
"289 -66 OFFCURVE",
"234 -66 CURVE SMOOTH",
"131 -66 OFFCURVE",
"79 -31 OFFCURVE",
"79 40 CURVE SMOOTH",
"79 93 OFFCURVE",
"109 161 OFFCURVE",
"170 244 CURVE",
"245 255 OFFCURVE",
"307 264 OFFCURVE",
"356 270 CURVE SMOOTH",
"405 276 OFFCURVE",
"441 279 OFFCURVE",
"464 279 CURVE SMOOTH",
"518 279 OFFCURVE",
"566 272 OFFCURVE",
"608 259 CURVE SMOOTH",
"631 252 OFFCURVE",
"642 242 OFFCURVE",
"642 229 CURVE SMOOTH",
"642 223 OFFCURVE",
"638 218 OFFCURVE",
"630 214 CURVE SMOOTH",
"620 209 OFFCURVE",
"615 202 OFFCURVE",
"615 193 CURVE SMOOTH",
"616 186 OFFCURVE",
"619 183 OFFCURVE",
"624 183 CURVE SMOOTH",
"629 183 OFFCURVE",
"635 186 OFFCURVE",
"642 192 CURVE SMOOTH",
"660 206 OFFCURVE",
"669 222 OFFCURVE",
"669 239 CURVE SMOOTH",
"669 261 OFFCURVE",
"653 278 OFFCURVE",
"621 289 CURVE SMOOTH",
"583 301 OFFCURVE",
"541 307 OFFCURVE",
"495 307 CURVE SMOOTH",
"462 307 OFFCURVE",
"418 303 OFFCURVE",
"361 296 CURVE SMOOTH",
"254 283 OFFCURVE",
"199 276 OFFCURVE",
"196 275 CURVE",
"251 332 OFFCURVE",
"319 384 OFFCURVE",
"401 431 CURVE SMOOTH",
"506 492 OFFCURVE",
"604 526 OFFCURVE",
"694 532 CURVE SMOOTH",
"754 536 OFFCURVE",
"794 513 OFFCURVE",
"794 469 CURVE SMOOTH",
"794 465 OFFCURVE",
"794 460 OFFCURVE",
"793 453 CURVE SMOOTH",
"792 446 OFFCURVE",
"791 441 OFFCURVE",
"791 438 CURVE SMOOTH",
"791 418 OFFCURVE",
"798 408 OFFCURVE",
"811 408 CURVE SMOOTH",
"829 408 OFFCURVE",
"837 427 OFFCURVE",
"837 466 CURVE SMOOTH",
"837 497 OFFCURVE",
"828 519 OFFCURVE",
"810 532 CURVE SMOOTH",
"793 545 OFFCURVE",
"766 551 OFFCURVE",
"727 551 CURVE SMOOTH",
"711 551 LINE SMOOTH",
"705 551 OFFCURVE",
"699 551 OFFCURVE",
"692 550 CURVE SMOOTH",
"588 543 OFFCURVE",
"484 514 OFFCURVE",
"379 458 CURVE SMOOTH",
"280 407 OFFCURVE",
"196 344 OFFCURVE",
"126 268 CURVE",
"115 267 OFFCURVE",
"105 266 OFFCURVE",
"96 266 CURVE SMOOTH",
"83 266 OFFCURVE",
"72 267 OFFCURVE",
"63 269 CURVE SMOOTH",
"56 270 OFFCURVE",
"52 273 OFFCURVE",
"52 277 CURVE SMOOTH",
"52 285 OFFCURVE",
"78 298 OFFCURVE",
"95 299 CURVE SMOOTH",
"114 300 OFFCURVE",
"123 303 OFFCURVE",
"123 309 CURVE SMOOTH",
"123 311 OFFCURVE",
"120 312 OFFCURVE",
"115 312 CURVE SMOOTH",
"110 312 LINE SMOOTH",
"72 310 OFFCURVE",
"42 301 OFFCURVE",
"21 284 CURVE SMOOTH",
"12 277 OFFCURVE",
"8 269 OFFCURVE",
"8 259 CURVE SMOOTH",
"8 242 OFFCURVE",
"23 227 OFFCURVE",
"43 228 CURVE SMOOTH",
"95 233 LINE",
"54 180 OFFCURVE",
"33 128 OFFCURVE",
"33 78 CURVE SMOOTH",
"33 28 OFFCURVE",
"53 -13 OFFCURVE",
"92 -45 CURVE SMOOTH",
"132 -77 OFFCURVE",
"183 -93 OFFCURVE",
"245 -93 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 55 218 55 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 55 25 55 41 55 57 55 73 55 89 55 105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 55 25 55 41 55 57 55 73 55 89 55 105 55 121 55 137 55 153 55 169 55 185 55 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01248 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01216 14 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01288 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 150 88 166 88 182 88 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 88 213 88 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012103 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01290 1063 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01267 1064 83 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 791;
}
);
note = E;
unicode = 0045;
},
{
color = 11;
glyphname = Eacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 00C9;
},
{
color = 11;
glyphname = Ebreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 0114;
},
{
color = 11;
glyphname = Ecaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 011A;
},
{
color = 11;
glyphname = Ecircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 00CA;
},
{
color = 11;
glyphname = Ecircumflexacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 1EBE;
},
{
color = 11;
glyphname = Ecircumflexdotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 1EC6;
},
{
color = 11;
glyphname = Ecircumflexgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 1EC0;
},
{
color = 11;
glyphname = Ecircumflexhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 1EC2;
},
{
color = 11;
glyphname = Ecircumflextilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 1EC4;
},
{
color = 11;
glyphname = Edblgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dblgravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 0204;
},
{
color = 11;
glyphname = Edieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 00CB;
},
{
color = 11;
glyphname = Edotaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 0116;
},
{
color = 11;
glyphname = Edotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 1EB8;
},
{
color = 11;
glyphname = Egrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 00C8;
},
{
color = 11;
glyphname = Ehookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 1EBA;
},
{
color = 11;
glyphname = Einvertedbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = breveinvertedcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 0206;
},
{
color = 11;
glyphname = Emacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 0112;
},
{
color = 11;
glyphname = Eogonek;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = ogonekcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 0118;
},
{
color = 11;
glyphname = Etilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 791;
}
);
unicode = 1EBC;
},
{
glyphname = F;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"275 -71 OFFCURVE",
"346 -43 OFFCURVE",
"415 11 CURVE SMOOTH",
"468 52 OFFCURVE",
"514 102 OFFCURVE",
"553 161 CURVE SMOOTH",
"572 188 OFFCURVE",
"586 212 OFFCURVE",
"599 235 CURVE",
"636 235 LINE SMOOTH",
"693 235 OFFCURVE",
"740 236 OFFCURVE",
"777 239 CURVE SMOOTH",
"789 240 OFFCURVE",
"795 245 OFFCURVE",
"795 255 CURVE SMOOTH",
"795 259 OFFCURVE",
"793 261 OFFCURVE",
"789 261 CURVE SMOOTH",
"786 261 OFFCURVE",
"784 261 OFFCURVE",
"783 260 CURVE",
"767 255 OFFCURVE",
"715 252 OFFCURVE",
"627 252 CURVE SMOOTH",
"609 252 LINE",
"629 287 OFFCURVE",
"657 336 OFFCURVE",
"693 403 CURVE SMOOTH",
"702 418 OFFCURVE",
"707 427 OFFCURVE",
"708 430 CURVE",
"755 414 OFFCURVE",
"788 402 OFFCURVE",
"811 393 CURVE SMOOTH",
"831 386 OFFCURVE",
"849 384 OFFCURVE",
"866 384 CURVE SMOOTH",
"907 384 OFFCURVE",
"927 402 OFFCURVE",
"927 437 CURVE SMOOTH",
"927 457 OFFCURVE",
"913 478 OFFCURVE",
"884 501 CURVE SMOOTH",
"855 524 OFFCURVE",
"828 535 OFFCURVE",
"802 535 CURVE SMOOTH",
"765 535 OFFCURVE",
"729 515 OFFCURVE",
"695 474 CURVE",
"494 541 OFFCURVE",
"329 581 OFFCURVE",
"200 595 CURVE SMOOTH",
"189 596 OFFCURVE",
"180 597 OFFCURVE",
"169 597 CURVE SMOOTH",
"126 597 OFFCURVE",
"89 588 OFFCURVE",
"58 571 CURVE SMOOTH",
"24 551 OFFCURVE",
"7 524 OFFCURVE",
"7 490 CURVE SMOOTH",
"7 466 OFFCURVE",
"14 444 OFFCURVE",
"29 423 CURVE SMOOTH",
"42 406 OFFCURVE",
"55 390 OFFCURVE",
"70 373 CURVE SMOOTH",
"75 366 OFFCURVE",
"80 363 OFFCURVE",
"86 363 CURVE SMOOTH",
"89 363 OFFCURVE",
"91 365 OFFCURVE",
"91 368 CURVE SMOOTH",
"91 371 OFFCURVE",
"90 374 OFFCURVE",
"87 377 CURVE",
"51 426 LINE",
"38 447 OFFCURVE",
"32 468 OFFCURVE",
"32 490 CURVE SMOOTH",
"32 518 OFFCURVE",
"46 539 OFFCURVE",
"75 554 CURVE SMOOTH",
"100 568 OFFCURVE",
"131 575 OFFCURVE",
"168 575 CURVE SMOOTH",
"255 575 OFFCURVE",
"423 531 OFFCURVE",
"673 442 CURVE",
"660 421 LINE SMOOTH",
"633 374 OFFCURVE",
"601 319 OFFCURVE",
"562 254 CURVE",
"468 260 LINE SMOOTH",
"447 261 OFFCURVE",
"438 262 OFFCURVE",
"440 262 CURVE",
"438 262 OFFCURVE",
"435 265 OFFCURVE",
"432 271 CURVE",
"428 276 OFFCURVE",
"425 279 OFFCURVE",
"422 279 CURVE SMOOTH",
"409 279 OFFCURVE",
"384 262 OFFCURVE",
"372 262 CURVE SMOOTH",
"359 261 OFFCURVE",
"353 253 OFFCURVE",
"353 236 CURVE SMOOTH",
"353 229 OFFCURVE",
"355 226 OFFCURVE",
"359 226 CURVE SMOOTH",
"360 226 OFFCURVE",
"361 226 OFFCURVE",
"363 227 CURVE SMOOTH",
"384 234 OFFCURVE",
"446 237 OFFCURVE",
"551 236 CURVE",
"536 209 OFFCURVE",
"524 190 OFFCURVE",
"515 177 CURVE SMOOTH",
"428 34 OFFCURVE",
"330 -43 OFFCURVE",
"219 -52 CURVE SMOOTH",
"172 -55 OFFCURVE",
"132 -40 OFFCURVE",
"97 -6 CURVE SMOOTH",
"65 24 OFFCURVE",
"49 58 OFFCURVE",
"49 96 CURVE SMOOTH",
"49 129 OFFCURVE",
"60 158 OFFCURVE",
"75 183 CURVE SMOOTH",
"90 205 OFFCURVE",
"105 217 OFFCURVE",
"122 220 CURVE SMOOTH",
"133 222 OFFCURVE",
"139 225 OFFCURVE",
"139 230 CURVE SMOOTH",
"139 232 OFFCURVE",
"136 233 OFFCURVE",
"131 233 CURVE SMOOTH",
"127 233 LINE SMOOTH",
"102 230 OFFCURVE",
"79 218 OFFCURVE",
"57 197 CURVE SMOOTH",
"29 171 OFFCURVE",
"14 138 OFFCURVE",
"14 99 CURVE SMOOTH",
"14 55 OFFCURVE",
"33 15 OFFCURVE",
"71 -19 CURVE SMOOTH",
"109 -54 OFFCURVE",
"153 -71 OFFCURVE",
"203 -71 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"866 417 OFFCURVE",
"846 422 OFFCURVE",
"817 432 CURVE SMOOTH",
"730 462 LINE",
"757 498 OFFCURVE",
"785 517 OFFCURVE",
"815 517 CURVE SMOOTH",
"830 517 OFFCURVE",
"848 508 OFFCURVE",
"869 489 CURVE SMOOTH",
"892 469 OFFCURVE",
"904 452 OFFCURVE",
"904 437 CURVE SMOOTH",
"904 424 OFFCURVE",
"896 417 OFFCURVE",
"879 417 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 1067 98 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 84 22 84 38 84 54 84 70 84 86 84 102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012102 1061 80 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 706;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"328 -194 OFFCURVE",
"334 -194 OFFCURVE",
"341 -193 CURVE SMOOTH",
"422 -184 OFFCURVE",
"504 -128 OFFCURVE",
"587 -26 CURVE SMOOTH",
"627 23 OFFCURVE",
"677 101 OFFCURVE",
"737 206 CURVE",
"738 209 OFFCURVE",
"739 211 OFFCURVE",
"739 212 CURVE SMOOTH",
"739 219 OFFCURVE",
"731 223 OFFCURVE",
"716 223 CURVE SMOOTH",
"699 223 OFFCURVE",
"687 219 OFFCURVE",
"679 210 CURVE SMOOTH",
"562 83 OFFCURVE",
"399 12 OFFCURVE",
"190 -3 CURVE SMOOTH",
"179 -4 OFFCURVE",
"169 -4 OFFCURVE",
"160 -4 CURVE SMOOTH",
"77 -4 OFFCURVE",
"35 25 OFFCURVE",
"35 82 CURVE SMOOTH",
"35 115 OFFCURVE",
"51 153 OFFCURVE",
"84 196 CURVE SMOOTH",
"111 233 OFFCURVE",
"143 265 OFFCURVE",
"179 292 CURVE SMOOTH",
"340 412 OFFCURVE",
"489 472 OFFCURVE",
"627 472 CURVE SMOOTH",
"677 472 OFFCURVE",
"718 466 OFFCURVE",
"749 454 CURVE SMOOTH",
"777 443 OFFCURVE",
"793 428 OFFCURVE",
"797 411 CURVE SMOOTH",
"800 397 OFFCURVE",
"804 390 OFFCURVE",
"811 390 CURVE SMOOTH",
"815 390 OFFCURVE",
"817 393 OFFCURVE",
"817 399 CURVE SMOOTH",
"817 401 OFFCURVE",
"817 404 OFFCURVE",
"816 407 CURVE",
"804 480 OFFCURVE",
"742 517 OFFCURVE",
"630 517 CURVE SMOOTH",
"565 517 OFFCURVE",
"490 501 OFFCURVE",
"405 469 CURVE SMOOTH",
"311 433 OFFCURVE",
"228 386 OFFCURVE",
"156 329 CURVE SMOOTH",
"59 251 OFFCURVE",
"11 170 OFFCURVE",
"11 87 CURVE SMOOTH",
"11 47 OFFCURVE",
"31 15 OFFCURVE",
"72 -10 CURVE SMOOTH",
"103 -30 OFFCURVE",
"139 -40 OFFCURVE",
"178 -40 CURVE SMOOTH",
"183 -40 OFFCURVE",
"189 -39 OFFCURVE",
"195 -39 CURVE SMOOTH",
"342 -28 OFFCURVE",
"485 27 OFFCURVE",
"624 126 CURVE",
"571 34 OFFCURVE",
"531 -28 OFFCURVE",
"502 -63 CURVE SMOOTH",
"447 -128 OFFCURVE",
"389 -165 OFFCURVE",
"328 -172 CURVE SMOOTH",
"303 -175 OFFCURVE",
"277 -169 OFFCURVE",
"249 -156 CURVE SMOOTH",
"229 -145 OFFCURVE",
"212 -133 OFFCURVE",
"199 -119 CURVE SMOOTH",
"193 -112 OFFCURVE",
"186 -109 OFFCURVE",
"179 -109 CURVE SMOOTH",
"172 -109 OFFCURVE",
"169 -111 OFFCURVE",
"169 -116 CURVE SMOOTH",
"169 -119 OFFCURVE",
"171 -123 OFFCURVE",
"175 -127 CURVE SMOOTH",
"220 -172 OFFCURVE",
"269 -194 OFFCURVE",
"322 -194 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 1067 52 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01258 1064 8 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 1064 48 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 725;
}
);
note = G;
unicode = 0047;
},
{
color = 11;
glyphname = Gbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 725;
}
);
unicode = 011E;
},
{
color = 11;
glyphname = Gcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 725;
}
);
unicode = 01E6;
},
{
color = 11;
glyphname = Gcircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 725;
}
);
unicode = 011C;
},
{
color = 11;
glyphname = Gcommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 725;
}
);
unicode = 0122;
},
{
color = 11;
glyphname = Gdotaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = dotaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 725;
}
);
unicode = 0120;
},
{
glyphname = H;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"169 -144 OFFCURVE",
"242 -109 OFFCURVE",
"331 -40 CURVE SMOOTH",
"416 25 OFFCURVE",
"501 111 OFFCURVE",
"589 216 CURVE",
"672 223 OFFCURVE",
"758 226 OFFCURVE",
"846 226 CURVE SMOOTH",
"890 226 LINE",
"837 149 OFFCURVE",
"801 83 OFFCURVE",
"783 29 CURVE",
"780 23 OFFCURVE",
"779 16 OFFCURVE",
"779 9 CURVE SMOOTH",
"779 -4 OFFCURVE",
"786 -11 OFFCURVE",
"800 -11 CURVE SMOOTH",
"825 -11 OFFCURVE",
"861 7 OFFCURVE",
"908 42 CURVE SMOOTH",
"909 43 OFFCURVE",
"910 45 OFFCURVE",
"910 46 CURVE SMOOTH",
"910 49 OFFCURVE",
"907 51 OFFCURVE",
"900 51 CURVE SMOOTH",
"894 51 OFFCURVE",
"890 50 OFFCURVE",
"887 47 CURVE SMOOTH",
"866 31 OFFCURVE",
"850 23 OFFCURVE",
"841 23 CURVE SMOOTH",
"836 23 OFFCURVE",
"834 29 OFFCURVE",
"834 40 CURVE SMOOTH",
"834 60 OFFCURVE",
"844 85 OFFCURVE",
"863 117 CURVE SMOOTH",
"929 226 LINE",
"941 225 OFFCURVE",
"952 225 OFFCURVE",
"962 225 CURVE SMOOTH",
"988 225 LINE SMOOTH",
"1000 225 OFFCURVE",
"1006 227 OFFCURVE",
"1006 232 CURVE SMOOTH",
"1006 235 OFFCURVE",
"1001 238 OFFCURVE",
"991 239 CURVE SMOOTH",
"941 243 LINE",
"1023 364 OFFCURVE",
"1112 473 OFFCURVE",
"1208 570 CURVE SMOOTH",
"1239 601 OFFCURVE",
"1259 616 OFFCURVE",
"1270 616 CURVE SMOOTH",
"1281 616 OFFCURVE",
"1287 619 OFFCURVE",
"1287 625 CURVE SMOOTH",
"1287 632 OFFCURVE",
"1282 635 OFFCURVE",
"1272 635 CURVE SMOOTH",
"1269 635 OFFCURVE",
"1266 635 OFFCURVE",
"1264 634 CURVE",
"1249 631 OFFCURVE",
"1234 627 OFFCURVE",
"1219 623 CURVE SMOOTH",
"1200 618 OFFCURVE",
"1185 609 OFFCURVE",
"1175 597 CURVE SMOOTH",
"1071 476 OFFCURVE",
"983 358 OFFCURVE",
"903 245 CURVE",
"821 250 OFFCURVE",
"746 253 OFFCURVE",
"678 253 CURVE SMOOTH",
"656 253 OFFCURVE",
"635 253 OFFCURVE",
"614 252 CURVE",
"625 265 OFFCURVE",
"633 273 OFFCURVE",
"640 280 CURVE",
"654 282 LINE SMOOTH",
"664 283 OFFCURVE",
"669 285 OFFCURVE",
"670 286 CURVE SMOOTH",
"672 288 OFFCURVE",
"673 290 OFFCURVE",
"673 292 CURVE SMOOTH",
"673 295 OFFCURVE",
"670 297 OFFCURVE",
"664 300 CURVE SMOOTH",
"657 303 OFFCURVE",
"654 304 OFFCURVE",
"655 305 CURVE SMOOTH",
"708 376 OFFCURVE",
"742 426 OFFCURVE",
"759 457 CURVE",
"785 474 OFFCURVE",
"800 495 OFFCURVE",
"805 518 CURVE SMOOTH",
"806 525 OFFCURVE",
"807 531 OFFCURVE",
"807 538 CURVE SMOOTH",
"807 556 OFFCURVE",
"803 565 OFFCURVE",
"794 565 CURVE SMOOTH",
"789 565 OFFCURVE",
"783 561 OFFCURVE",
"776 553 CURVE SMOOTH",
"759 532 OFFCURVE",
"744 512 OFFCURVE",
"733 493 CURVE",
"694 471 LINE",
"654 449 LINE SMOOTH",
"586 411 OFFCURVE",
"552 374 OFFCURVE",
"552 335 CURVE SMOOTH",
"552 307 OFFCURVE",
"567 290 OFFCURVE",
"596 285 CURVE",
"570 250 LINE",
"565 250 LINE",
"554 249 LINE SMOOTH",
"479 242 OFFCURVE",
"402 233 OFFCURVE",
"324 219 CURVE",
"327 226 LINE",
"343 242 LINE SMOOTH",
"344 243 OFFCURVE",
"344 244 OFFCURVE",
"345 246 CURVE SMOOTH",
"347 249 LINE",
"302 232 OFFCURVE",
"264 216 OFFCURVE",
"233 201 CURVE",
"222 199 OFFCURVE",
"217 192 OFFCURVE",
"217 179 CURVE SMOOTH",
"217 169 OFFCURVE",
"221 165 OFFCURVE",
"228 165 CURVE SMOOTH",
"232 165 LINE",
"329 188 OFFCURVE",
"432 203 OFFCURVE",
"541 214 CURVE",
"458 111 OFFCURVE",
"381 30 OFFCURVE",
"309 -30 CURVE SMOOTH",
"234 -93 OFFCURVE",
"173 -124 OFFCURVE",
"127 -124 CURVE SMOOTH",
"73 -124 OFFCURVE",
"46 -80 OFFCURVE",
"46 9 CURVE SMOOTH",
"46 87 OFFCURVE",
"67 147 OFFCURVE",
"109 190 CURVE SMOOTH",
"115 196 OFFCURVE",
"118 201 OFFCURVE",
"118 206 CURVE SMOOTH",
"118 209 OFFCURVE",
"117 210 OFFCURVE",
"115 210 CURVE SMOOTH",
"112 210 OFFCURVE",
"108 208 OFFCURVE",
"103 203 CURVE SMOOTH",
"42 140 OFFCURVE",
"12 76 OFFCURVE",
"12 11 CURVE SMOOTH",
"12 -92 OFFCURVE",
"46 -144 OFFCURVE",
"113 -144 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"602 303 OFFCURVE",
"586 306 OFFCURVE",
"586 336 CURVE SMOOTH",
"586 368 OFFCURVE",
"612 404 OFFCURVE",
"659 433 CURVE",
"684 445 OFFCURVE",
"702 453 OFFCURVE",
"714 458 CURVE",
"706 443 OFFCURVE",
"691 421 OFFCURVE",
"670 390 CURVE SMOOTH",
"639 346 OFFCURVE",
"619 317 OFFCURVE",
"610 303 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012142 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 81 218 81 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 81 121 81 137 81 153 81 169 81 185 81 201 81 217 81 233 81 249 81 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 81 25 81 41 81 57 81 73 81 89 81 105 81 121 81 137 81 153 81 169 81 185 81 201 81 217 81 233 81 249 81 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 81 25 81 41 81 57 81 73 81 89 81 105 81 121 81 137 81 153 81 169 81 185 81 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\012136 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012142 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01253 1068 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 53 213 53 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01259 43 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01271 43 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01273 43 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01227 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01255 1062 41 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0122 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01233 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01259 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01271 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01273 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01279 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012112 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012131 27 125 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 958;
}
);
note = H;
unicode = 0048;
},
{
color = 11;
glyphname = Hbar;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = emdash;
transform = "{1.09446, 0, 0, 1, 513, 156}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 958;
}
);
unicode = 0126;
},
{
color = 11;
glyphname = Hcircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 958;
}
);
unicode = 0124;
},
{
glyphname = I;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"323 -86 OFFCURVE",
"393 -68 OFFCURVE",
"454 -31 CURVE SMOOTH",
"505 0 OFFCURVE",
"560 51 OFFCURVE",
"619 120 CURVE SMOOTH",
"676 189 OFFCURVE",
"735 293 OFFCURVE",
"796 430 CURVE SMOOTH",
"801 440 OFFCURVE",
"805 452 OFFCURVE",
"810 465 CURVE SMOOTH",
"814 478 OFFCURVE",
"817 486 OFFCURVE",
"819 491 CURVE",
"840 503 OFFCURVE",
"856 516 OFFCURVE",
"867 531 CURVE SMOOTH",
"876 542 OFFCURVE",
"881 556 OFFCURVE",
"881 571 CURVE SMOOTH",
"881 584 OFFCURVE",
"877 591 OFFCURVE",
"869 591 CURVE SMOOTH",
"863 591 OFFCURVE",
"856 587 OFFCURVE",
"847 578 CURVE SMOOTH",
"822 553 OFFCURVE",
"804 526 OFFCURVE",
"792 499 CURVE",
"767 484 OFFCURVE",
"744 472 OFFCURVE",
"725 462 CURVE SMOOTH",
"677 435 LINE SMOOTH",
"550 356 OFFCURVE",
"486 286 OFFCURVE",
"486 226 CURVE SMOOTH",
"486 217 OFFCURVE",
"487 210 OFFCURVE",
"489 203 CURVE SMOOTH",
"493 184 OFFCURVE",
"506 175 OFFCURVE",
"529 175 CURVE SMOOTH",
"549 175 OFFCURVE",
"559 177 OFFCURVE",
"559 182 CURVE SMOOTH",
"559 185 OFFCURVE",
"552 187 OFFCURVE",
"538 187 CURVE SMOOTH",
"531 187 OFFCURVE",
"524 191 OFFCURVE",
"517 199 CURVE SMOOTH",
"514 202 OFFCURVE",
"511 205 OFFCURVE",
"508 210 CURVE",
"506 250 OFFCURVE",
"524 288 OFFCURVE",
"561 324 CURVE SMOOTH",
"584 346 OFFCURVE",
"626 376 OFFCURVE",
"686 415 CURVE SMOOTH",
"705 427 OFFCURVE",
"733 443 OFFCURVE",
"772 464 CURVE",
"773 465 OFFCURVE",
"759 435 OFFCURVE",
"760 436 CURVE",
"720 352 OFFCURVE",
"692 295 OFFCURVE",
"677 266 CURVE SMOOTH",
"648 212 OFFCURVE",
"619 170 OFFCURVE",
"592 140 CURVE SMOOTH",
"529 71 OFFCURVE",
"473 22 OFFCURVE",
"422 -9 CURVE SMOOTH",
"359 -46 OFFCURVE",
"290 -65 OFFCURVE",
"217 -65 CURVE SMOOTH",
"162 -65 OFFCURVE",
"118 -43 OFFCURVE",
"85 0 CURVE SMOOTH",
"53 41 OFFCURVE",
"37 91 OFFCURVE",
"37 152 CURVE SMOOTH",
"37 187 OFFCURVE",
"43 222 OFFCURVE",
"55 257 CURVE SMOOTH",
"66 289 OFFCURVE",
"81 315 OFFCURVE",
"100 334 CURVE SMOOTH",
"106 341 OFFCURVE",
"109 346 OFFCURVE",
"109 351 CURVE SMOOTH",
"109 353 OFFCURVE",
"108 354 OFFCURVE",
"106 354 CURVE SMOOTH",
"103 354 OFFCURVE",
"100 352 OFFCURVE",
"95 347 CURVE SMOOTH",
"37 286 OFFCURVE",
"8 220 OFFCURVE",
"8 150 CURVE SMOOTH",
"8 83 OFFCURVE",
"30 27 OFFCURVE",
"75 -18 CURVE SMOOTH",
"120 -63 OFFCURVE",
"176 -86 OFFCURVE",
"242 -86 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01227 1065 15 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 27 213 27 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01231 1061 11 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 706;
}
);
note = I;
unicode = 0049;
},
{
color = 11;
glyphname = Iacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 00CD;
},
{
color = 11;
glyphname = Ibreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 012C;
},
{
color = 11;
glyphname = Icaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 01CF;
},
{
color = 11;
glyphname = Icircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 00CE;
},
{
color = 11;
glyphname = Idblgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dblgravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 0208;
},
{
color = 11;
glyphname = Idieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 00CF;
},
{
color = 11;
glyphname = Idotaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 0130;
},
{
color = 11;
glyphname = Idotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 1ECA;
},
{
color = 11;
glyphname = Igrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 00CC;
},
{
color = 11;
glyphname = Ihookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 1EC8;
},
{
color = 11;
glyphname = Iinvertedbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = breveinvertedcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 020A;
},
{
color = 11;
glyphname = Imacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 012A;
},
{
color = 11;
glyphname = Iogonek;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = ogonekcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 012E;
},
{
color = 11;
glyphname = Itilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 706;
}
);
unicode = 0128;
},
{
glyphname = J;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"121 -321 OFFCURVE",
"151 -305 OFFCURVE",
"184 -272 CURVE SMOOTH",
"291 -171 OFFCURVE",
"392 -51 OFFCURVE",
"487 90 CURVE",
"572 149 OFFCURVE",
"635 183 OFFCURVE",
"675 192 CURVE SMOOTH",
"692 195 OFFCURVE",
"700 199 OFFCURVE",
"700 205 CURVE SMOOTH",
"700 208 OFFCURVE",
"694 211 OFFCURVE",
"682 212 CURVE",
"639 206 OFFCURVE",
"584 181 OFFCURVE",
"517 137 CURVE",
"550 193 OFFCURVE",
"585 262 OFFCURVE",
"624 347 CURVE SMOOTH",
"673 453 OFFCURVE",
"697 527 OFFCURVE",
"697 568 CURVE SMOOTH",
"697 586 OFFCURVE",
"693 598 OFFCURVE",
"684 605 CURVE SMOOTH",
"667 619 OFFCURVE",
"641 626 OFFCURVE",
"607 626 CURVE SMOOTH",
"518 626 OFFCURVE",
"411 589 OFFCURVE",
"286 514 CURVE SMOOTH",
"225 477 OFFCURVE",
"170 431 OFFCURVE",
"121 376 CURVE SMOOTH",
"83 334 OFFCURVE",
"57 298 OFFCURVE",
"44 268 CURVE SMOOTH",
"36 251 OFFCURVE",
"32 232 OFFCURVE",
"32 211 CURVE SMOOTH",
"32 155 OFFCURVE",
"61 127 OFFCURVE",
"118 127 CURVE SMOOTH",
"127 127 OFFCURVE",
"136 128 OFFCURVE",
"147 129 CURVE SMOOTH",
"247 144 OFFCURVE",
"340 174 OFFCURVE",
"427 219 CURVE SMOOTH",
"434 223 OFFCURVE",
"438 227 OFFCURVE",
"438 231 CURVE SMOOTH",
"438 234 OFFCURVE",
"436 236 OFFCURVE",
"431 236 CURVE SMOOTH",
"426 236 OFFCURVE",
"418 233 OFFCURVE",
"409 228 CURVE SMOOTH",
"386 214 OFFCURVE",
"346 198 OFFCURVE",
"287 179 CURVE SMOOTH",
"232 162 OFFCURVE",
"190 152 OFFCURVE",
"155 147 CURVE SMOOTH",
"148 146 OFFCURVE",
"141 145 OFFCURVE",
"134 145 CURVE SMOOTH",
"97 145 OFFCURVE",
"78 163 OFFCURVE",
"78 200 CURVE SMOOTH",
"78 213 OFFCURVE",
"80 228 OFFCURVE",
"85 247 CURVE SMOOTH",
"92 278 OFFCURVE",
"112 313 OFFCURVE",
"147 352 CURVE SMOOTH",
"190 402 OFFCURVE",
"246 449 OFFCURVE",
"315 492 CURVE SMOOTH",
"354 517 OFFCURVE",
"403 541 OFFCURVE",
"460 564 CURVE SMOOTH",
"530 591 OFFCURVE",
"583 605 OFFCURVE",
"620 605 CURVE SMOOTH",
"654 605 OFFCURVE",
"671 594 OFFCURVE",
"671 572 CURVE SMOOTH",
"671 528 OFFCURVE",
"608 395 OFFCURVE",
"482 172 CURVE SMOOTH",
"469 151 OFFCURVE",
"458 131 OFFCURVE",
"448 114 CURVE SMOOTH",
"438 97 OFFCURVE",
"429 81 OFFCURVE",
"420 68 CURVE",
"340 9 LINE SMOOTH",
"304 -16 OFFCURVE",
"260 -55 OFFCURVE",
"209 -107 CURVE SMOOTH",
"152 -165 OFFCURVE",
"107 -219 OFFCURVE",
"74 -269 CURVE SMOOTH",
"67 -278 OFFCURVE",
"64 -287 OFFCURVE",
"64 -296 CURVE SMOOTH",
"64 -313 OFFCURVE",
"74 -321 OFFCURVE",
"94 -321 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117 -274 OFFCURVE",
"115 -271 OFFCURVE",
"115 -266 CURVE SMOOTH",
"115 -263 OFFCURVE",
"117 -258 OFFCURVE",
"120 -253 CURVE SMOOTH",
"150 -207 OFFCURVE",
"191 -158 OFFCURVE",
"242 -106 CURVE SMOOTH",
"286 -61 OFFCURVE",
"326 -27 OFFCURVE",
"361 -2 CURVE SMOOTH",
"380 11 LINE",
"303 -93 OFFCURVE",
"227 -180 OFFCURVE",
"150 -256 CURVE SMOOTH",
"138 -268 OFFCURVE",
"129 -274 OFFCURVE",
"122 -274 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01246 1070 69 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 1067 33 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0127 69 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 46 213 46 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01279 69 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0127 19 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01279 19 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 620;
}
);
note = J;
unicode = 004A;
},
{
color = 11;
glyphname = Jcircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = J;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 620;
}
);
unicode = 0134;
},
{
glyphname = K;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"982 -168 OFFCURVE",
"1017 -157 OFFCURVE",
"1050 -136 CURVE SMOOTH",
"1084 -115 OFFCURVE",
"1107 -88 OFFCURVE",
"1118 -56 CURVE SMOOTH",
"1120 -49 LINE",
"1120 -44 OFFCURVE",
"1117 -45 OFFCURVE",
"1111 -51 CURVE SMOOTH",
"1104 -56 OFFCURVE",
"1099 -63 OFFCURVE",
"1096 -71 CURVE SMOOTH",
"1081 -110 OFFCURVE",
"1047 -130 OFFCURVE",
"996 -130 CURVE SMOOTH",
"976 -130 OFFCURVE",
"956 -127 OFFCURVE",
"935 -121 CURVE SMOOTH",
"885 -107 OFFCURVE",
"805 -30 OFFCURVE",
"694 111 CURVE SMOOTH",
"614 214 LINE",
"612 216 LINE",
"646 231 OFFCURVE",
"688 254 OFFCURVE",
"737 285 CURVE SMOOTH",
"786 316 OFFCURVE",
"871 382 OFFCURVE",
"994 483 CURVE SMOOTH",
"1105 574 OFFCURVE",
"1170 623 OFFCURVE",
"1188 630 CURVE SMOOTH",
"1199 634 OFFCURVE",
"1205 639 OFFCURVE",
"1205 646 CURVE SMOOTH",
"1205 652 OFFCURVE",
"1200 657 OFFCURVE",
"1189 657 CURVE SMOOTH",
"1179 657 OFFCURVE",
"1167 653 OFFCURVE",
"1154 645 CURVE SMOOTH",
"1132 630 OFFCURVE",
"1070 577 OFFCURVE",
"967 488 CURVE SMOOTH",
"867 400 OFFCURVE",
"787 338 OFFCURVE",
"727 301 CURVE SMOOTH",
"685 275 OFFCURVE",
"642 252 OFFCURVE",
"599 233 CURVE",
"576 264 LINE",
"675 409 OFFCURVE",
"724 506 OFFCURVE",
"724 556 CURVE SMOOTH",
"724 605 OFFCURVE",
"690 630 OFFCURVE",
"623 630 CURVE SMOOTH",
"542 630 OFFCURVE",
"433 591 OFFCURVE",
"296 514 CURVE SMOOTH",
"231 477 OFFCURVE",
"173 432 OFFCURVE",
"117 376 CURVE SMOOTH",
"74 334 OFFCURVE",
"45 298 OFFCURVE",
"28 268 CURVE SMOOTH",
"15 247 OFFCURVE",
"9 224 OFFCURVE",
"9 198 CURVE SMOOTH",
"9 151 OFFCURVE",
"35 127 OFFCURVE",
"87 127 CURVE SMOOTH",
"96 127 OFFCURVE",
"105 128 OFFCURVE",
"116 129 CURVE SMOOTH",
"163 136 OFFCURVE",
"206 147 OFFCURVE",
"246 164 CURVE SMOOTH",
"310 194 LINE SMOOTH",
"318 198 OFFCURVE",
"322 202 OFFCURVE",
"322 207 CURVE SMOOTH",
"322 210 OFFCURVE",
"320 211 OFFCURVE",
"315 211 CURVE SMOOTH",
"309 211 OFFCURVE",
"301 208 OFFCURVE",
"292 203 CURVE SMOOTH",
"269 190 OFFCURVE",
"240 178 OFFCURVE",
"201 165 CURVE SMOOTH",
"159 152 OFFCURVE",
"127 145 OFFCURVE",
"105 145 CURVE SMOOTH",
"70 145 OFFCURVE",
"53 160 OFFCURVE",
"53 191 CURVE SMOOTH",
"53 206 OFFCURVE",
"57 225 OFFCURVE",
"66 247 CURVE SMOOTH",
"77 277 OFFCURVE",
"101 312 OFFCURVE",
"139 352 CURVE SMOOTH",
"188 403 OFFCURVE",
"249 449 OFFCURVE",
"322 492 CURVE SMOOTH",
"456 570 OFFCURVE",
"559 609 OFFCURVE",
"631 609 CURVE SMOOTH",
"671 609 OFFCURVE",
"691 596 OFFCURVE",
"691 570 CURVE SMOOTH",
"691 529 OFFCURVE",
"644 438 OFFCURVE",
"549 297 CURVE",
"520 333 OFFCURVE",
"495 351 OFFCURVE",
"474 351 CURVE SMOOTH",
"458 351 OFFCURVE",
"444 339 OFFCURVE",
"433 316 CURVE SMOOTH",
"424 298 OFFCURVE",
"420 279 OFFCURVE",
"420 260 CURVE SMOOTH",
"420 217 OFFCURVE",
"438 192 OFFCURVE",
"473 185 CURVE",
"378 43 OFFCURVE",
"295 -62 OFFCURVE",
"226 -129 CURVE",
"217 -136 OFFCURVE",
"210 -140 OFFCURVE",
"205 -140 CURVE SMOOTH",
"202 -140 OFFCURVE",
"198 -139 OFFCURVE",
"193 -136 CURVE SMOOTH",
"188 -133 OFFCURVE",
"185 -131 OFFCURVE",
"183 -131 CURVE SMOOTH",
"176 -131 OFFCURVE",
"172 -135 OFFCURVE",
"172 -142 CURVE SMOOTH",
"172 -153 OFFCURVE",
"190 -165 OFFCURVE",
"213 -165 CURVE SMOOTH",
"234 -165 OFFCURVE",
"252 -157 OFFCURVE",
"269 -140 CURVE SMOOTH",
"324 -86 OFFCURVE",
"408 22 OFFCURVE",
"522 185 CURVE",
"545 190 OFFCURVE",
"567 196 OFFCURVE",
"590 207 CURVE",
"649 119 LINE",
"778 -57 OFFCURVE",
"864 -151 OFFCURVE",
"907 -163 CURVE SMOOTH",
"920 -166 OFFCURVE",
"932 -168 OFFCURVE",
"947 -168 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"469 219 OFFCURVE",
"459 237 OFFCURVE",
"459 262 CURVE SMOOTH",
"459 287 OFFCURVE",
"471 308 OFFCURVE",
"488 308 CURVE SMOOTH",
"495 308 OFFCURVE",
"502 304 OFFCURVE",
"509 297 CURVE",
"517 293 OFFCURVE",
"526 286 OFFCURVE",
"535 277 CURVE",
"492 212 LINE SMOOTH",
"491 211 OFFCURVE",
"490 210 OFFCURVE",
"490 209 CURVE"
);
},
{
closed = 1;
nodes = (
"563 245 LINE",
"578 224 LINE",
"564 217 OFFCURVE",
"551 212 OFFCURVE",
"538 209 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01268 1070 90 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012128 1070 50 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012101 1068 58 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01248 90 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01256 90 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012202 58 218 58 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 68 118 68 134 68 150 68 166 68 182 68 198 68 214 68 230 68 246 68 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 68 22 68 38 68 54 68 70 68 86 68 102 68 118 68 134 68 150 68 166 68 182 68 198 68 214 68 230 68 246 68 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 68 22 68 38 68 54 68 70 68 86 68 102 68 118 68 134 68 150 68 166 68 182 68 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 68 213 68 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012118 90 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012119 90 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 128 118 128 134 128 150 128 166 128 182 128 198 128 214 128 230 128 246 128 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 128 22 128 38 128 54 128 70 128 86 128 102 128 118 128 134 128 150 128 166 128 182 128 198 128 214 128 230 128 246 128 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 128 22 128 38 128 54 128 70 128 86 128 102 128 118 128 134 128 150 128 166 128 182 128 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 128 213 128 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012101 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012134 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01212 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01248 23 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01256 23 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012118 23 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012119 23 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 825;
}
);
note = K;
unicode = 004B;
},
{
color = 11;
glyphname = Kcommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = K;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 825;
}
);
unicode = 0136;
},
{
glyphname = L;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"802 -163 OFFCURVE",
"838 -149 OFFCURVE",
"867 -120 CURVE SMOOTH",
"896 -91 OFFCURVE",
"911 -56 OFFCURVE",
"911 -16 CURVE SMOOTH",
"911 -10 OFFCURVE",
"910 -7 OFFCURVE",
"908 -7 CURVE SMOOTH",
"900 -7 OFFCURVE",
"896 -17 OFFCURVE",
"896 -36 CURVE SMOOTH",
"896 -65 OFFCURVE",
"882 -88 OFFCURVE",
"853 -104 CURVE SMOOTH",
"828 -117 OFFCURVE",
"796 -124 OFFCURVE",
"759 -124 CURVE SMOOTH",
"647 -124 OFFCURVE",
"536 -88 OFFCURVE",
"427 -17 CURVE SMOOTH",
"291 73 LINE",
"309 95 OFFCURVE",
"328 125 OFFCURVE",
"349 164 CURVE SMOOTH",
"396 251 OFFCURVE",
"447 329 OFFCURVE",
"504 398 CURVE SMOOTH",
"581 493 OFFCURVE",
"645 540 OFFCURVE",
"697 540 CURVE SMOOTH",
"727 540 OFFCURVE",
"754 529 OFFCURVE",
"779 508 CURVE SMOOTH",
"804 487 OFFCURVE",
"816 464 OFFCURVE",
"817 441 CURVE SMOOTH",
"818 428 OFFCURVE",
"822 421 OFFCURVE",
"827 421 CURVE SMOOTH",
"830 421 OFFCURVE",
"831 424 OFFCURVE",
"831 430 CURVE SMOOTH",
"831 434 LINE SMOOTH",
"829 467 OFFCURVE",
"817 498 OFFCURVE",
"796 529 CURVE SMOOTH",
"771 564 OFFCURVE",
"741 582 OFFCURVE",
"707 582 CURVE SMOOTH",
"648 582 OFFCURVE",
"585 543 OFFCURVE",
"518 464 CURVE SMOOTH",
"466 403 OFFCURVE",
"406 312 OFFCURVE",
"338 191 CURVE SMOOTH",
"313 146 OFFCURVE",
"290 111 OFFCURVE",
"269 87 CURVE",
"158 162 OFFCURVE",
"88 200 OFFCURVE",
"61 200 CURVE SMOOTH",
"33 200 OFFCURVE",
"19 183 OFFCURVE",
"19 148 CURVE SMOOTH",
"19 115 OFFCURVE",
"32 82 OFFCURVE",
"57 49 CURVE SMOOTH",
"84 12 OFFCURVE",
"116 -6 OFFCURVE",
"154 -6 CURVE SMOOTH",
"193 -6 OFFCURVE",
"230 11 OFFCURVE",
"265 44 CURVE",
"405 -48 LINE SMOOTH",
"522 -125 OFFCURVE",
"640 -163 OFFCURVE",
"759 -163 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"127 22 OFFCURVE",
"103 31 OFFCURVE",
"82 49 CURVE SMOOTH",
"59 70 OFFCURVE",
"48 91 OFFCURVE",
"48 112 CURVE SMOOTH",
"48 133 OFFCURVE",
"57 144 OFFCURVE",
"75 144 CURVE SMOOTH",
"98 144 OFFCURVE",
"154 116 OFFCURVE",
"241 59 CURVE",
"213 34 OFFCURVE",
"184 22 OFFCURVE",
"154 22 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01256 1065 13 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 56 213 56 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0129 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01250 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01244 1064 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01223 1064 35 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 1064 54 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01260 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 60 119 60 135 60 151 60 167 60 183 60 199 60 215 60 231 60 247 60 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 60 23 60 39 60 55 60 71 60 87 60 103 60 119 60 135 60 151 60 167 60 183 60 199 60 215 60 231 60 247 60 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 60 23 60 39 60 55 60 71 60 87 60 103 60 119 60 135 60 151 60 167 60 183 60 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 60 214 60 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 461;
}
);
note = L;
unicode = 004C;
},
{
glyphname = LJ;
layers = (
{
components = (
{
name = L;
},
{
name = J;
transform = "{1, 0, 0, 1, 461, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1081;
}
);
unicode = 01C7;
},
{
color = 11;
glyphname = Lacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 461;
}
);
unicode = 0139;
},
{
color = 11;
glyphname = Lcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = caroncomb.alt;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 461;
}
);
unicode = 013D;
},
{
color = 11;
glyphname = Lcommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 461;
}
);
unicode = 013B;
},
{
color = 11;
glyphname = Ldot;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = periodcentered;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 461;
}
);
unicode = 013F;
},
{
glyphname = Lj;
layers = (
{
components = (
{
name = L;
},
{
name = j;
transform = "{1, 0, 0, 1, 461, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 761;
}
);
unicode = 01C8;
},
{
color = 11;
glyphname = Lslash;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = hyphen;
transform = "{0.98769, 0.15643, -0.15643, 0.98769, 225, -61}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 461;
}
);
unicode = 0141;
},
{
glyphname = M;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"990 -79 OFFCURVE",
"1036 -46 OFFCURVE",
"1099 21 CURVE SMOOTH",
"1106 28 OFFCURVE",
"1109 35 OFFCURVE",
"1109 42 CURVE SMOOTH",
"1109 47 OFFCURVE",
"1107 49 OFFCURVE",
"1104 49 CURVE SMOOTH",
"1101 49 OFFCURVE",
"1098 47 OFFCURVE",
"1094 43 CURVE SMOOTH",
"1074 23 OFFCURVE",
"1051 4 OFFCURVE",
"1024 -14 CURVE SMOOTH",
"989 -38 OFFCURVE",
"963 -50 OFFCURVE",
"947 -50 CURVE SMOOTH",
"937 -50 OFFCURVE",
"931 -44 OFFCURVE",
"931 -33 CURVE SMOOTH",
"931 -31 OFFCURVE",
"932 -28 OFFCURVE",
"932 -25 CURVE",
"946 50 OFFCURVE",
"982 129 OFFCURVE",
"1039 214 CURVE",
"1186 415 LINE SMOOTH",
"1192 424 OFFCURVE",
"1195 434 OFFCURVE",
"1195 445 CURVE SMOOTH",
"1195 479 OFFCURVE",
"1166 515 OFFCURVE",
"1134 515 CURVE SMOOTH",
"1089 515 OFFCURVE",
"1033 492 OFFCURVE",
"968 445 CURVE SMOOTH",
"852 364 OFFCURVE",
"734 266 OFFCURVE",
"606 149 CURVE",
"653 238 OFFCURVE",
"682 301 OFFCURVE",
"697 340 CURVE SMOOTH",
"709 372 OFFCURVE",
"715 398 OFFCURVE",
"715 418 CURVE SMOOTH",
"715 451 OFFCURVE",
"700 467 OFFCURVE",
"670 467 CURVE SMOOTH",
"631 467 OFFCURVE",
"580 442 OFFCURVE",
"515 397 CURVE",
"522 411 LINE SMOOTH",
"545 460 OFFCURVE",
"557 504 OFFCURVE",
"557 544 CURVE SMOOTH",
"557 605 OFFCURVE",
"521 628 OFFCURVE",
"464 628 CURVE SMOOTH",
"392 628 OFFCURVE",
"303 594 OFFCURVE",
"196 525 CURVE SMOOTH",
"165 505 OFFCURVE",
"129 475 OFFCURVE",
"86 436 CURVE SMOOTH",
"41 393 OFFCURVE",
"15 362 OFFCURVE",
"8 344 CURVE SMOOTH",
"6 339 OFFCURVE",
"5 333 OFFCURVE",
"5 328 CURVE SMOOTH",
"5 296 OFFCURVE",
"43 273 OFFCURVE",
"95 273 CURVE SMOOTH",
"110 273 OFFCURVE",
"118 276 OFFCURVE",
"118 284 CURVE SMOOTH",
"118 288 OFFCURVE",
"115 290 OFFCURVE",
"109 290 CURVE SMOOTH",
"104 290 LINE SMOOTH",
"65 288 OFFCURVE",
"45 297 OFFCURVE",
"45 316 CURVE SMOOTH",
"45 333 OFFCURVE",
"71 366 OFFCURVE",
"122 416 CURVE SMOOTH",
"165 459 OFFCURVE",
"200 489 OFFCURVE",
"225 506 CURVE SMOOTH",
"260 529 OFFCURVE",
"299 551 OFFCURVE",
"343 571 CURVE SMOOTH",
"400 596 OFFCURVE",
"444 609 OFFCURVE",
"475 609 CURVE SMOOTH",
"510 609 OFFCURVE",
"527 595 OFFCURVE",
"527 568 CURVE SMOOTH",
"527 550 OFFCURVE",
"521 525 OFFCURVE",
"508 494 CURVE SMOOTH",
"480 430 LINE SMOOTH",
"467 397 OFFCURVE",
"452 366 OFFCURVE",
"433 335 CURVE",
"367 281 LINE SMOOTH",
"336 257 OFFCURVE",
"300 222 OFFCURVE",
"259 175 CURVE SMOOTH",
"212 121 OFFCURVE",
"177 72 OFFCURVE",
"152 28 CURVE SMOOTH",
"148 21 OFFCURVE",
"146 13 OFFCURVE",
"146 6 CURVE SMOOTH",
"146 -11 OFFCURVE",
"155 -19 OFFCURVE",
"174 -19 CURVE SMOOTH",
"197 -19 OFFCURVE",
"223 -4 OFFCURVE",
"252 26 CURVE SMOOTH",
"341 119 OFFCURVE",
"421 228 OFFCURVE",
"492 355 CURVE",
"558 405 OFFCURVE",
"613 434 OFFCURVE",
"658 441 CURVE SMOOTH",
"669 442 OFFCURVE",
"675 437 OFFCURVE",
"675 425 CURVE SMOOTH",
"675 410 OFFCURVE",
"668 387 OFFCURVE",
"653 357 CURVE SMOOTH",
"598 241 OFFCURVE",
"543 137 OFFCURVE",
"489 46 CURVE",
"488 43 OFFCURVE",
"487 41 OFFCURVE",
"487 40 CURVE SMOOTH",
"487 31 OFFCURVE",
"495 26 OFFCURVE",
"511 26 CURVE SMOOTH",
"521 26 OFFCURVE",
"529 29 OFFCURVE",
"534 35 CURVE SMOOTH",
"638 155 OFFCURVE",
"782 281 OFFCURVE",
"974 417 CURVE SMOOTH",
"1043 466 OFFCURVE",
"1097 492 OFFCURVE",
"1136 492 CURVE SMOOTH",
"1149 492 OFFCURVE",
"1156 484 OFFCURVE",
"1156 468 CURVE SMOOTH",
"1156 462 OFFCURVE",
"1155 457 OFFCURVE",
"1152 452 CURVE",
"1080 360 OFFCURVE",
"1021 277 OFFCURVE",
"974 197 CURVE SMOOTH",
"917 101 OFFCURVE",
"888 31 OFFCURVE",
"887 -14 CURVE SMOOTH",
"887 -25 OFFCURVE",
"895 -39 OFFCURVE",
"912 -55 CURVE SMOOTH",
"929 -71 OFFCURVE",
"945 -79 OFFCURVE",
"961 -79 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"190 24 OFFCURVE",
"188 27 OFFCURVE",
"188 32 CURVE SMOOTH",
"188 35 OFFCURVE",
"189 39 OFFCURVE",
"191 43 CURVE SMOOTH",
"214 84 OFFCURVE",
"243 124 OFFCURVE",
"278 165 CURVE",
"335 222 OFFCURVE",
"377 260 OFFCURVE",
"404 281 CURVE",
"350 192 OFFCURVE",
"289 111 OFFCURVE",
"220 40 CURVE SMOOTH",
"210 29 OFFCURVE",
"202 24 OFFCURVE",
"195 24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01280 1070 89 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012100 1065 68 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012107 1070 45 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 45 218 45 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 45 25 45 41 45 57 45 73 45 89 45 105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 45 25 45 41 45 57 45 73 45 89 45 105 45 121 45 137 45 153 45 169 45 185 45 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 80 213 80 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 100 118 100 134 100 150 100 166 100 182 100 198 100 214 100 230 100 246 100 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 100 22 100 38 100 54 100 70 100 86 100 102 100 118 100 134 100 150 100 166 100 182 100 198 100 214 100 230 100 246 100 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 100 22 100 38 100 54 100 70 100 86 100 102 100 118 100 134 100 150 100 166 100 182 100 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 100 213 100 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012103 89 107 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012112 89 107 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012124 89 107 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0123 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0127 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01221 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01253 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0125 1064 17 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012117 1061 30 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012103 3 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012112 3 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012124 3 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1096;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"718 -116 OFFCURVE",
"764 -83 OFFCURVE",
"826 -16 CURVE SMOOTH",
"832 -9 OFFCURVE",
"835 -3 OFFCURVE",
"835 4 CURVE SMOOTH",
"835 9 OFFCURVE",
"833 12 OFFCURVE",
"830 12 CURVE SMOOTH",
"827 12 OFFCURVE",
"824 10 OFFCURVE",
"821 7 CURVE SMOOTH",
"800 -13 OFFCURVE",
"777 -32 OFFCURVE",
"751 -50 CURVE SMOOTH",
"716 -75 OFFCURVE",
"690 -87 OFFCURVE",
"673 -87 CURVE SMOOTH",
"663 -87 OFFCURVE",
"658 -81 OFFCURVE",
"658 -70 CURVE SMOOTH",
"658 -68 OFFCURVE",
"659 -65 OFFCURVE",
"659 -62 CURVE",
"678 33 OFFCURVE",
"704 118 OFFCURVE",
"741 195 CURVE SMOOTH",
"766 250 OFFCURVE",
"801 309 OFFCURVE",
"846 370 CURVE SMOOTH",
"946 505 LINE SMOOTH",
"952 514 OFFCURVE",
"955 524 OFFCURVE",
"955 535 CURVE SMOOTH",
"955 569 OFFCURVE",
"926 605 OFFCURVE",
"894 605 CURVE SMOOTH",
"850 605 OFFCURVE",
"789 582 OFFCURVE",
"712 537 CURVE",
"635 485 OFFCURVE",
"570 441 OFFCURVE",
"518 404 CURVE",
"525 414 OFFCURVE",
"529 422 OFFCURVE",
"532 427 CURVE SMOOTH",
"549 463 OFFCURVE",
"557 501 OFFCURVE",
"557 540 CURVE SMOOTH",
"557 573 OFFCURVE",
"549 596 OFFCURVE",
"533 608 CURVE SMOOTH",
"514 622 OFFCURVE",
"489 629 OFFCURVE",
"459 629 CURVE SMOOTH",
"384 629 OFFCURVE",
"297 597 OFFCURVE",
"196 532 CURVE SMOOTH",
"165 513 OFFCURVE",
"129 482 OFFCURVE",
"86 439 CURVE SMOOTH",
"41 395 OFFCURVE",
"15 363 OFFCURVE",
"8 344 CURVE SMOOTH",
"6 339 OFFCURVE",
"5 333 OFFCURVE",
"5 328 CURVE SMOOTH",
"5 296 OFFCURVE",
"43 273 OFFCURVE",
"95 273 CURVE SMOOTH",
"110 273 OFFCURVE",
"118 276 OFFCURVE",
"118 284 CURVE SMOOTH",
"118 288 OFFCURVE",
"115 290 OFFCURVE",
"109 290 CURVE SMOOTH",
"104 290 LINE SMOOTH",
"65 288 OFFCURVE",
"46 297 OFFCURVE",
"46 317 CURVE SMOOTH",
"46 342 OFFCURVE",
"70 378 OFFCURVE",
"118 425 CURVE SMOOTH",
"186 493 OFFCURVE",
"257 538 OFFCURVE",
"341 574 CURVE SMOOTH",
"397 597 OFFCURVE",
"441 609 OFFCURVE",
"473 609 CURVE SMOOTH",
"509 609 OFFCURVE",
"527 595 OFFCURVE",
"527 568 CURVE SMOOTH",
"527 550 OFFCURVE",
"521 525 OFFCURVE",
"508 494 CURVE SMOOTH",
"480 430 LINE SMOOTH",
"467 397 OFFCURVE",
"452 366 OFFCURVE",
"433 335 CURVE",
"367 281 LINE SMOOTH",
"336 257 OFFCURVE",
"300 222 OFFCURVE",
"259 175 CURVE SMOOTH",
"212 121 OFFCURVE",
"177 72 OFFCURVE",
"152 28 CURVE SMOOTH",
"148 21 OFFCURVE",
"146 13 OFFCURVE",
"146 6 CURVE SMOOTH",
"146 -11 OFFCURVE",
"155 -19 OFFCURVE",
"174 -19 CURVE SMOOTH",
"209 -19 OFFCURVE",
"267 31 OFFCURVE",
"346 131 CURVE SMOOTH",
"405 206 OFFCURVE",
"449 271 OFFCURVE",
"482 328 CURVE",
"497 345 OFFCURVE",
"534 377 OFFCURVE",
"595 424 CURVE SMOOTH",
"651 465 OFFCURVE",
"691 494 OFFCURVE",
"718 510 CURVE SMOOTH",
"796 557 OFFCURVE",
"855 582 OFFCURVE",
"896 582 CURVE SMOOTH",
"909 582 OFFCURVE",
"916 574 OFFCURVE",
"916 558 CURVE SMOOTH",
"916 552 OFFCURVE",
"915 547 OFFCURVE",
"912 542 CURVE",
"716 291 OFFCURVE",
"617 94 OFFCURVE",
"614 -51 CURVE SMOOTH",
"614 -62 OFFCURVE",
"622 -76 OFFCURVE",
"639 -92 CURVE SMOOTH",
"656 -108 OFFCURVE",
"672 -116 OFFCURVE",
"688 -116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"190 24 OFFCURVE",
"188 27 OFFCURVE",
"188 32 CURVE SMOOTH",
"188 35 OFFCURVE",
"189 39 OFFCURVE",
"191 43 CURVE SMOOTH",
"210 78 OFFCURVE",
"237 115 OFFCURVE",
"270 155 CURVE SMOOTH",
"309 202 OFFCURVE",
"353 244 OFFCURVE",
"402 283 CURVE",
"338 183 OFFCURVE",
"280 103 OFFCURVE",
"220 40 CURVE SMOOTH",
"210 29 OFFCURVE",
"202 24 OFFCURVE",
"195 24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 57 218 57 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012119 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01268 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 68 118 68 134 68 150 68 166 68 182 68 198 68 214 68 230 68 246 68 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 68 22 68 38 68 54 68 70 68 86 68 102 68 118 68 134 68 150 68 166 68 182 68 198 68 214 68 230 68 246 68 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 68 22 68 38 68 54 68 70 68 86 68 102 68 118 68 134 68 150 68 166 68 182 68 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 68 213 68 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01289 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01293 77 89 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012105 77 89 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01218 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01242 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0128 1064 20 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 1061 30 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01298 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01293 42 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012105 42 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 817;
}
);
note = N;
unicode = 004E;
},
{
glyphname = NJ;
layers = (
{
components = (
{
name = N;
},
{
name = J;
transform = "{1, 0, 0, 1, 817, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1437;
}
);
unicode = 01CA;
},
{
color = 11;
glyphname = Nacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 817;
}
);
unicode = 0143;
},
{
color = 11;
glyphname = Ncaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 817;
}
);
unicode = 0147;
},
{
color = 11;
glyphname = Ncommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 817;
}
);
unicode = 0145;
},
{
glyphname = Eng;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"922 464 OFFCURVE",
"806 270 OFFCURVE",
"743 157 CURVE SMOOTH",
"647 -15 OFFCURVE",
"500 -242 OFFCURVE",
"399 -312 CURVE SMOOTH",
"389 -319 OFFCURVE",
"373 -320 OFFCURVE",
"350 -316 CURVE SMOOTH",
"329 -312 OFFCURVE",
"314 -303 OFFCURVE",
"306 -290 CURVE SMOOTH",
"292 -266 OFFCURVE",
"299 -210 OFFCURVE",
"330 -120 CURVE SMOOTH",
"333 -111 OFFCURVE",
"337 -105 OFFCURVE",
"343 -101 CURVE SMOOTH",
"348 -98 OFFCURVE",
"352 -98 OFFCURVE",
"352 -100 CURVE SMOOTH",
"354 -103 OFFCURVE",
"354 -106 OFFCURVE",
"353 -111 CURVE SMOOTH",
"345 -139 OFFCURVE",
"339 -169 OFFCURVE",
"335 -201 CURVE SMOOTH",
"329 -244 OFFCURVE",
"331 -272 OFFCURVE",
"339 -286 CURVE SMOOTH",
"345 -295 OFFCURVE",
"354 -295 OFFCURVE",
"368 -282 CURVE SMOOTH",
"444 -211 OFFCURVE",
"559 -69 OFFCURVE",
"669 111 CURVE SMOOTH",
"726 203 OFFCURVE",
"780 289 OFFCURVE",
"917 551 CURVE",
"955 536 LINE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"384 -318 OFFCURVE",
"393 -316 OFFCURVE",
"399 -312 CURVE SMOOTH",
"500 -248 OFFCURVE",
"647 -14 OFFCURVE",
"777 214 CURVE SMOOTH",
"819 287 OFFCURVE",
"860 361 OFFCURVE",
"902 434 CURVE SMOOTH",
"932 487 OFFCURVE",
"947 511 OFFCURVE",
"952 530 CURVE",
"955 536 LINE",
"954 537 LINE",
"955 541 OFFCURVE",
"955 546 OFFCURVE",
"955 551 CURVE SMOOTH",
"955 569 OFFCURVE",
"926 605 OFFCURVE",
"894 605 CURVE SMOOTH",
"850 605 OFFCURVE",
"789 582 OFFCURVE",
"712 537 CURVE",
"635 485 OFFCURVE",
"570 441 OFFCURVE",
"518 404 CURVE",
"525 414 OFFCURVE",
"529 422 OFFCURVE",
"532 427 CURVE SMOOTH",
"549 463 OFFCURVE",
"557 501 OFFCURVE",
"557 540 CURVE SMOOTH",
"557 573 OFFCURVE",
"549 596 OFFCURVE",
"533 608 CURVE SMOOTH",
"514 622 OFFCURVE",
"489 629 OFFCURVE",
"459 629 CURVE SMOOTH",
"384 629 OFFCURVE",
"297 597 OFFCURVE",
"196 532 CURVE SMOOTH",
"165 513 OFFCURVE",
"129 482 OFFCURVE",
"86 439 CURVE SMOOTH",
"41 395 OFFCURVE",
"15 363 OFFCURVE",
"8 344 CURVE SMOOTH",
"6 339 OFFCURVE",
"5 333 OFFCURVE",
"5 328 CURVE SMOOTH",
"5 296 OFFCURVE",
"44 273 OFFCURVE",
"96 273 CURVE SMOOTH",
"111 273 OFFCURVE",
"118 276 OFFCURVE",
"118 284 CURVE SMOOTH",
"118 288 OFFCURVE",
"115 290 OFFCURVE",
"108 290 CURVE SMOOTH",
"104 290 LINE SMOOTH",
"65 288 OFFCURVE",
"46 297 OFFCURVE",
"46 317 CURVE SMOOTH",
"46 342 OFFCURVE",
"70 378 OFFCURVE",
"118 425 CURVE SMOOTH",
"186 493 OFFCURVE",
"257 538 OFFCURVE",
"341 574 CURVE SMOOTH",
"397 597 OFFCURVE",
"441 609 OFFCURVE",
"473 609 CURVE SMOOTH",
"509 609 OFFCURVE",
"527 595 OFFCURVE",
"527 568 CURVE SMOOTH",
"527 550 OFFCURVE",
"521 525 OFFCURVE",
"508 494 CURVE SMOOTH",
"480 430 LINE SMOOTH",
"466 398 OFFCURVE",
"452 366 OFFCURVE",
"433 335 CURVE",
"367 281 LINE SMOOTH",
"337 256 OFFCURVE",
"300 222 OFFCURVE",
"259 175 CURVE SMOOTH",
"212 121 OFFCURVE",
"177 72 OFFCURVE",
"152 28 CURVE SMOOTH",
"148 21 OFFCURVE",
"146 13 OFFCURVE",
"146 6 CURVE SMOOTH",
"146 -11 OFFCURVE",
"155 -19 OFFCURVE",
"174 -19 CURVE SMOOTH",
"209 -19 OFFCURVE",
"267 31 OFFCURVE",
"346 131 CURVE SMOOTH",
"405 206 OFFCURVE",
"449 271 OFFCURVE",
"482 328 CURVE",
"497 345 OFFCURVE",
"534 377 OFFCURVE",
"595 424 CURVE SMOOTH",
"651 465 OFFCURVE",
"691 494 OFFCURVE",
"718 510 CURVE SMOOTH",
"796 557 OFFCURVE",
"854 582 OFFCURVE",
"896 582 CURVE SMOOTH",
"910 582 OFFCURVE",
"916 571 OFFCURVE",
"916 563 CURVE SMOOTH",
"916 551 OFFCURVE",
"915 547 OFFCURVE",
"884 493 CURVE SMOOTH",
"833 405 OFFCURVE",
"762 264 OFFCURVE",
"695 154 CURVE SMOOTH",
"559 -69 OFFCURVE",
"481 -186 OFFCURVE",
"421 -240 CURVE SMOOTH",
"380 -279 OFFCURVE",
"359 -290 OFFCURVE",
"348 -290 CURVE SMOOTH",
"343 -290 OFFCURVE",
"341 -289 OFFCURVE",
"339 -286 CURVE SMOOTH",
"334 -278 OFFCURVE",
"332 -264 OFFCURVE",
"332 -245 CURVE SMOOTH",
"332 -233 OFFCURVE",
"333 -218 OFFCURVE",
"335 -201 CURVE SMOOTH",
"339 -169 OFFCURVE",
"345 -139 OFFCURVE",
"353 -111 CURVE SMOOTH",
"354 -106 OFFCURVE",
"354 -103 OFFCURVE",
"352 -100 CURVE",
"352 -98 OFFCURVE",
"348 -98 OFFCURVE",
"343 -101 CURVE SMOOTH",
"337 -105 OFFCURVE",
"333 -111 OFFCURVE",
"330 -120 CURVE SMOOTH",
"309 -181 OFFCURVE",
"299 -226 OFFCURVE",
"299 -256 CURVE SMOOTH",
"299 -271 OFFCURVE",
"301 -282 OFFCURVE",
"306 -290 CURVE SMOOTH",
"314 -303 OFFCURVE",
"329 -312 OFFCURVE",
"350 -316 CURVE SMOOTH",
"358 -317 OFFCURVE",
"365 -318 OFFCURVE",
"372 -318 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"190 24 OFFCURVE",
"188 27 OFFCURVE",
"188 32 CURVE SMOOTH",
"188 35 OFFCURVE",
"189 39 OFFCURVE",
"191 43 CURVE SMOOTH",
"210 78 OFFCURVE",
"237 115 OFFCURVE",
"270 155 CURVE SMOOTH",
"309 202 OFFCURVE",
"353 244 OFFCURVE",
"402 283 CURVE",
"338 183 OFFCURVE",
"280 103 OFFCURVE",
"220 40 CURVE SMOOTH",
"210 29 OFFCURVE",
"202 24 OFFCURVE",
"195 24 CURVE SMOOTH"
);
}
);
width = 817;
}
);
unicode = 014A;
},
{
glyphname = Nj;
layers = (
{
components = (
{
name = N;
},
{
name = j;
transform = "{1, 0, 0, 1, 817, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1117;
}
);
unicode = 01CB;
},
{
color = 11;
glyphname = Ntilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 817;
}
);
unicode = 00D1;
},
{
glyphname = O;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"274 -48 OFFCURVE",
"283 -47 OFFCURVE",
"294 -46 CURVE SMOOTH",
"412 -34 OFFCURVE",
"523 3 OFFCURVE",
"627 66 CURVE SMOOTH",
"744 136 OFFCURVE",
"803 214 OFFCURVE",
"803 301 CURVE SMOOTH",
"803 307 OFFCURVE",
"803 313 OFFCURVE",
"802 320 CURVE SMOOTH",
"796 383 OFFCURVE",
"759 432 OFFCURVE",
"690 468 CURVE SMOOTH",
"629 499 OFFCURVE",
"556 515 OFFCURVE",
"472 515 CURVE SMOOTH",
"387 515 OFFCURVE",
"307 496 OFFCURVE",
"232 459 CURVE SMOOTH",
"145 414 OFFCURVE",
"102 357 OFFCURVE",
"102 286 CURVE SMOOTH",
"102 275 OFFCURVE",
"102 268 OFFCURVE",
"103 265 CURVE",
"67 219 OFFCURVE",
"43 171 OFFCURVE",
"32 122 CURVE SMOOTH",
"30 114 OFFCURVE",
"29 106 OFFCURVE",
"29 99 CURVE SMOOTH",
"29 55 OFFCURVE",
"55 19 OFFCURVE",
"106 -9 CURVE SMOOTH",
"152 -35 OFFCURVE",
"204 -48 OFFCURVE",
"263 -48 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"221 -26 OFFCURVE",
"180 -15 OFFCURVE",
"145 8 CURVE SMOOTH",
"106 32 OFFCURVE",
"87 62 OFFCURVE",
"87 99 CURVE SMOOTH",
"87 133 OFFCURVE",
"100 171 OFFCURVE",
"127 212 CURVE",
"155 171 OFFCURVE",
"200 143 OFFCURVE",
"262 127 CURVE SMOOTH",
"271 125 OFFCURVE",
"276 126 OFFCURVE",
"276 130 CURVE SMOOTH",
"276 133 OFFCURVE",
"271 137 OFFCURVE",
"262 140 CURVE SMOOTH",
"205 155 OFFCURVE",
"165 186 OFFCURVE",
"142 235 CURVE",
"181 290 OFFCURVE",
"238 339 OFFCURVE",
"313 382 CURVE SMOOTH",
"366 411 OFFCURVE",
"415 432 OFFCURVE",
"460 445 CURVE SMOOTH",
"465 446 OFFCURVE",
"467 449 OFFCURVE",
"467 455 CURVE SMOOTH",
"467 464 OFFCURVE",
"464 472 OFFCURVE",
"457 479 CURVE",
"472 479 LINE SMOOTH",
"548 479 OFFCURVE",
"612 466 OFFCURVE",
"663 440 CURVE SMOOTH",
"721 409 OFFCURVE",
"752 366 OFFCURVE",
"757 310 CURVE SMOOTH",
"763 247 OFFCURVE",
"735 188 OFFCURVE",
"674 132 CURVE SMOOTH",
"624 86 OFFCURVE",
"556 47 OFFCURVE",
"470 16 CURVE SMOOTH",
"393 -12 OFFCURVE",
"326 -26 OFFCURVE",
"269 -26 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 348 OFFCURVE",
"166 389 OFFCURVE",
"225 422 CURVE SMOOTH",
"272 448 OFFCURVE",
"331 466 OFFCURVE",
"403 475 CURVE",
"296 434 OFFCURVE",
"206 375 OFFCURVE",
"131 297 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 1070 11 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01229 1065 17 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 29 213 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01252 17 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 54 213 54 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01258 1061 7 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01221 1064 35 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 774;
}
);
note = O;
unicode = 004F;
},
{
color = 11;
glyphname = Oacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 00D3;
},
{
color = 11;
glyphname = Obreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 014E;
},
{
color = 11;
glyphname = Ocaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 01D1;
},
{
color = 11;
glyphname = Ocircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 00D4;
},
{
color = 11;
glyphname = Ocircumflexacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 1ED0;
},
{
color = 11;
glyphname = Ocircumflexdotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 1ED8;
},
{
color = 11;
glyphname = Ocircumflexgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 1ED2;
},
{
color = 11;
glyphname = Ocircumflexhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 1ED4;
},
{
color = 11;
glyphname = Ocircumflextilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 1ED6;
},
{
color = 11;
glyphname = Odblgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dblgravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 020C;
},
{
color = 11;
glyphname = Odieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 00D6;
},
{
color = 11;
glyphname = Odieresismacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 022A;
},
{
color = 11;
glyphname = Odotaccentmacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotaccentcomb;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 0230;
},
{
color = 11;
glyphname = Odotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 1ECC;
},
{
color = 11;
glyphname = Ograve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 00D2;
},
{
color = 11;
glyphname = Ohookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 1ECE;
},
{
color = 11;
glyphname = Ohorn;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 701, -97}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 01A0;
},
{
color = 11;
glyphname = Ohornacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 1EDA;
},
{
color = 11;
glyphname = Ohorndotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 1EE2;
},
{
color = 11;
glyphname = Ohorngrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 1EDC;
},
{
color = 11;
glyphname = Ohornhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 1EDE;
},
{
color = 11;
glyphname = Ohorntilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 1EE0;
},
{
color = 11;
glyphname = Ohungarumlaut;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlautcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 0150;
},
{
color = 11;
glyphname = Oinvertedbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = breveinvertedcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 020E;
},
{
color = 11;
glyphname = Omacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 014C;
},
{
color = 11;
glyphname = Oogonek;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = ogonekcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 01EA;
},
{
glyphname = Oslash;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-22 -247 OFFCURVE",
"-22 -247 OFFCURVE",
"-22 -246 CURVE SMOOTH",
"-22 -245 OFFCURVE",
"-22 -243 OFFCURVE",
"-21 -241 CURVE",
"-15 -219 LINE SMOOTH",
"-12 -208 OFFCURVE",
"-7 -193 OFFCURVE",
"2 -174 CURVE SMOOTH",
"19 -135 OFFCURVE",
"47 -88 OFFCURVE",
"86 -33 CURVE",
"101 -39 OFFCURVE",
"118 -42 OFFCURVE",
"139 -42 CURVE SMOOTH",
"199 -42 OFFCURVE",
"267 -23 OFFCURVE",
"342 15 CURVE SMOOTH",
"418 53 OFFCURVE",
"481 100 OFFCURVE",
"531 156 CURVE SMOOTH",
"587 219 OFFCURVE",
"615 281 OFFCURVE",
"615 342 CURVE SMOOTH",
"615 393 OFFCURVE",
"598 433 OFFCURVE",
"563 463 CURVE",
"608 502 OFFCURVE",
"643 531 OFFCURVE",
"666 550 CURVE SMOOTH",
"700 579 LINE",
"699 582 OFFCURVE",
"695 583 OFFCURVE",
"687 583 CURVE SMOOTH",
"667 583 OFFCURVE",
"640 570 OFFCURVE",
"607 543 CURVE SMOOTH",
"536 481 LINE",
"503 498 OFFCURVE",
"463 507 OFFCURVE",
"418 507 CURVE SMOOTH",
"359 507 OFFCURVE",
"298 493 OFFCURVE",
"237 464 CURVE SMOOTH",
"172 434 OFFCURVE",
"123 396 OFFCURVE",
"90 351 CURVE SMOOTH",
"86 346 OFFCURVE",
"84 341 OFFCURVE",
"84 337 CURVE",
"85 335 LINE",
"86 335 LINE SMOOTH",
"90 335 OFFCURVE",
"94 337 OFFCURVE",
"98 341 CURVE SMOOTH",
"159 392 OFFCURVE",
"215 426 OFFCURVE",
"267 445 CURVE",
"106 306 OFFCURVE",
"26 182 OFFCURVE",
"26 72 CURVE SMOOTH",
"26 26 OFFCURVE",
"40 -6 OFFCURVE",
"68 -24 CURVE",
"45 -53 OFFCURVE",
"25 -87 OFFCURVE",
"2 -124 CURVE SMOOTH",
"-29 -175 OFFCURVE",
"-44 -210 OFFCURVE",
"-44 -229 CURVE SMOOTH",
"-44 -237 OFFCURVE",
"-31 -248 OFFCURVE",
"-23 -248 CURVE"
);
},
{
closed = 1;
nodes = (
"59 5 OFFCURVE",
"49 30 OFFCURVE",
"49 66 CURVE SMOOTH",
"49 129 OFFCURVE",
"85 203 OFFCURVE",
"157 288 CURVE SMOOTH",
"226 369 OFFCURVE",
"292 421 OFFCURVE",
"355 442 CURVE",
"368 450 LINE",
"366 459 OFFCURVE",
"352 464 OFFCURVE",
"327 464 CURVE SMOOTH",
"322 464 OFFCURVE",
"315 463 OFFCURVE",
"304 462 CURVE",
"345 476 OFFCURVE",
"387 483 OFFCURVE",
"431 483 CURVE SMOOTH",
"466 483 OFFCURVE",
"497 478 OFFCURVE",
"522 467 CURVE",
"341 302 OFFCURVE",
"193 143 OFFCURVE",
"79 -9 CURVE"
);
},
{
closed = 1;
nodes = (
"120 -24 OFFCURVE",
"108 -22 OFFCURVE",
"97 -18 CURVE",
"201 123 OFFCURVE",
"350 276 OFFCURVE",
"549 451 CURVE",
"574 432 OFFCURVE",
"586 406 OFFCURVE",
"586 372 CURVE SMOOTH",
"586 314 OFFCURVE",
"560 253 OFFCURVE",
"507 188 CURVE SMOOTH",
"459 129 OFFCURVE",
"399 79 OFFCURVE",
"327 38 CURVE SMOOTH",
"254 -3 OFFCURVE",
"190 -24 OFFCURVE",
"134 -24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 29 218 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01233 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0122 61 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0126 61 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01216 1066 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01221 61 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 61 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0122 51 80 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0126 51 80 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01221 51 80 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 51 80 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 634;
}
);
note = Oslash;
unicode = 00D8;
},
{
color = 11;
glyphname = Oslashacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Oslash;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 634;
}
);
unicode = 01FE;
},
{
color = 11;
glyphname = Otilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 00D5;
},
{
color = 11;
glyphname = Otildemacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb_macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 774;
}
);
unicode = 022C;
},
{
glyphname = OE;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"765 -93 OFFCURVE",
"821 -86 OFFCURVE",
"874 -73 CURVE SMOOTH",
"906 -65 OFFCURVE",
"953 -49 OFFCURVE",
"1016 -25 CURVE SMOOTH",
"1065 -6 OFFCURVE",
"1121 20 OFFCURVE",
"1186 55 CURVE SMOOTH",
"1217 71 OFFCURVE",
"1261 96 OFFCURVE",
"1321 131 CURVE SMOOTH",
"1331 137 OFFCURVE",
"1336 143 OFFCURVE",
"1336 149 CURVE SMOOTH",
"1336 153 OFFCURVE",
"1334 155 OFFCURVE",
"1329 155 CURVE SMOOTH",
"1325 155 OFFCURVE",
"1321 154 OFFCURVE",
"1316 151 CURVE SMOOTH",
"1176 78 LINE SMOOTH",
"1120 49 OFFCURVE",
"1069 27 OFFCURVE",
"1023 12 CURVE SMOOTH",
"871 -39 LINE SMOOTH",
"809 -57 OFFCURVE",
"751 -66 OFFCURVE",
"696 -66 CURVE SMOOTH",
"593 -66 OFFCURVE",
"541 -31 OFFCURVE",
"541 40 CURVE SMOOTH",
"541 93 OFFCURVE",
"571 161 OFFCURVE",
"632 244 CURVE",
"707 255 OFFCURVE",
"769 264 OFFCURVE",
"818 270 CURVE SMOOTH",
"867 276 OFFCURVE",
"903 279 OFFCURVE",
"926 279 CURVE SMOOTH",
"980 279 OFFCURVE",
"1028 272 OFFCURVE",
"1070 259 CURVE SMOOTH",
"1093 252 OFFCURVE",
"1104 242 OFFCURVE",
"1104 229 CURVE SMOOTH",
"1104 223 OFFCURVE",
"1100 218 OFFCURVE",
"1092 214 CURVE SMOOTH",
"1082 209 OFFCURVE",
"1077 202 OFFCURVE",
"1077 193 CURVE SMOOTH",
"1078 186 OFFCURVE",
"1081 183 OFFCURVE",
"1086 183 CURVE SMOOTH",
"1091 183 OFFCURVE",
"1097 186 OFFCURVE",
"1104 192 CURVE SMOOTH",
"1122 206 OFFCURVE",
"1131 222 OFFCURVE",
"1131 239 CURVE SMOOTH",
"1131 261 OFFCURVE",
"1115 278 OFFCURVE",
"1083 289 CURVE SMOOTH",
"1045 301 OFFCURVE",
"1003 307 OFFCURVE",
"957 307 CURVE SMOOTH",
"924 307 OFFCURVE",
"880 303 OFFCURVE",
"823 296 CURVE SMOOTH",
"716 283 OFFCURVE",
"661 276 OFFCURVE",
"658 275 CURVE",
"713 332 OFFCURVE",
"781 384 OFFCURVE",
"863 431 CURVE SMOOTH",
"968 492 OFFCURVE",
"1066 526 OFFCURVE",
"1156 532 CURVE SMOOTH",
"1216 536 OFFCURVE",
"1256 513 OFFCURVE",
"1256 469 CURVE SMOOTH",
"1256 465 OFFCURVE",
"1256 460 OFFCURVE",
"1255 453 CURVE SMOOTH",
"1254 446 OFFCURVE",
"1253 441 OFFCURVE",
"1253 438 CURVE SMOOTH",
"1253 418 OFFCURVE",
"1260 408 OFFCURVE",
"1273 408 CURVE SMOOTH",
"1291 408 OFFCURVE",
"1299 427 OFFCURVE",
"1299 466 CURVE SMOOTH",
"1299 497 OFFCURVE",
"1290 519 OFFCURVE",
"1272 532 CURVE SMOOTH",
"1255 545 OFFCURVE",
"1228 551 OFFCURVE",
"1189 551 CURVE SMOOTH",
"1173 551 LINE SMOOTH",
"1167 551 OFFCURVE",
"1161 551 OFFCURVE",
"1154 550 CURVE SMOOTH",
"1050 543 OFFCURVE",
"946 514 OFFCURVE",
"841 458 CURVE SMOOTH",
"814 444 OFFCURVE",
"788 429 OFFCURVE",
"763 413 CURVE",
"745 434 OFFCURVE",
"721 452 OFFCURVE",
"690 468 CURVE SMOOTH",
"629 499 OFFCURVE",
"556 515 OFFCURVE",
"472 515 CURVE SMOOTH",
"387 515 OFFCURVE",
"307 496 OFFCURVE",
"232 459 CURVE SMOOTH",
"145 414 OFFCURVE",
"102 357 OFFCURVE",
"102 286 CURVE SMOOTH",
"102 275 OFFCURVE",
"102 268 OFFCURVE",
"103 265 CURVE",
"67 219 OFFCURVE",
"43 171 OFFCURVE",
"32 122 CURVE SMOOTH",
"30 114 OFFCURVE",
"29 106 OFFCURVE",
"29 99 CURVE SMOOTH",
"29 55 OFFCURVE",
"55 19 OFFCURVE",
"106 -9 CURVE SMOOTH",
"152 -35 OFFCURVE",
"204 -48 OFFCURVE",
"263 -48 CURVE SMOOTH",
"274 -48 OFFCURVE",
"283 -47 OFFCURVE",
"294 -46 CURVE SMOOTH",
"367 -38 OFFCURVE",
"440 -20 OFFCURVE",
"511 7 CURVE",
"521 -12 OFFCURVE",
"535 -29 OFFCURVE",
"554 -45 CURVE SMOOTH",
"594 -77 OFFCURVE",
"645 -93 OFFCURVE",
"707 -93 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"221 -26 OFFCURVE",
"180 -15 OFFCURVE",
"145 8 CURVE SMOOTH",
"106 32 OFFCURVE",
"87 62 OFFCURVE",
"87 99 CURVE SMOOTH",
"87 133 OFFCURVE",
"100 171 OFFCURVE",
"127 212 CURVE",
"155 171 OFFCURVE",
"200 143 OFFCURVE",
"262 127 CURVE SMOOTH",
"271 125 OFFCURVE",
"276 126 OFFCURVE",
"276 130 CURVE SMOOTH",
"276 133 OFFCURVE",
"271 137 OFFCURVE",
"262 140 CURVE SMOOTH",
"205 155 OFFCURVE",
"165 186 OFFCURVE",
"142 235 CURVE",
"181 290 OFFCURVE",
"238 339 OFFCURVE",
"313 382 CURVE SMOOTH",
"366 411 OFFCURVE",
"415 432 OFFCURVE",
"460 445 CURVE SMOOTH",
"465 446 OFFCURVE",
"467 449 OFFCURVE",
"467 455 CURVE SMOOTH",
"467 464 OFFCURVE",
"464 472 OFFCURVE",
"457 479 CURVE",
"472 479 LINE SMOOTH",
"548 479 OFFCURVE",
"612 466 OFFCURVE",
"663 440 CURVE SMOOTH",
"690 425 OFFCURVE",
"711 409 OFFCURVE",
"726 389 CURVE",
"675 353 OFFCURVE",
"629 312 OFFCURVE",
"588 268 CURVE",
"577 267 OFFCURVE",
"567 266 OFFCURVE",
"558 266 CURVE SMOOTH",
"545 266 OFFCURVE",
"534 267 OFFCURVE",
"525 269 CURVE SMOOTH",
"518 270 OFFCURVE",
"514 273 OFFCURVE",
"514 277 CURVE SMOOTH",
"514 285 OFFCURVE",
"540 298 OFFCURVE",
"557 299 CURVE SMOOTH",
"576 300 OFFCURVE",
"585 303 OFFCURVE",
"585 309 CURVE SMOOTH",
"585 311 OFFCURVE",
"582 312 OFFCURVE",
"577 312 CURVE SMOOTH",
"572 312 LINE SMOOTH",
"534 310 OFFCURVE",
"504 301 OFFCURVE",
"483 284 CURVE SMOOTH",
"474 277 OFFCURVE",
"470 269 OFFCURVE",
"470 259 CURVE SMOOTH",
"470 242 OFFCURVE",
"485 227 OFFCURVE",
"505 228 CURVE SMOOTH",
"557 233 LINE",
"516 180 OFFCURVE",
"495 128 OFFCURVE",
"495 78 CURVE SMOOTH",
"495 59 OFFCURVE",
"497 43 OFFCURVE",
"502 29 CURVE",
"491 24 OFFCURVE",
"481 20 OFFCURVE",
"470 16 CURVE SMOOTH",
"393 -12 OFFCURVE",
"326 -26 OFFCURVE",
"269 -26 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 348 OFFCURVE",
"166 389 OFFCURVE",
"225 422 CURVE SMOOTH",
"272 448 OFFCURVE",
"331 466 OFFCURVE",
"403 475 CURVE",
"296 434 OFFCURVE",
"206 375 OFFCURVE",
"131 297 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012124 1070 23 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012167 1065 29 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01289 1070 135 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 1070 56 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 56 218 56 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 89 22 89 38 89 54 89 70 89 86 89 102 89 118 89 134 89 150 89 166 89 182 89 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 89 213 89 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012106 23 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 167 118 167 134 167 150 167 166 167 182 167 198 167 214 167 230 167 246 167 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 167 22 167 38 167 54 167 70 167 86 167 102 167 118 167 134 167 150 167 166 167 182 167 198 167 214 167 230 167 246 167 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 167 22 167 38 167 54 167 70 167 86 167 102 167 118 167 134 167 150 167 166 167 182 167 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 167 213 167 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012122 29 167 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 124 118 124 134 124 150 124 166 124 182 124 198 124 214 124 230 124 246 124 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 124 22 124 38 124 54 124 70 124 86 124 102 124 118 124 134 124 150 124 166 124 182 124 198 124 214 124 230 124 246 124 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 124 22 124 38 124 54 124 70 124 86 124 102 124 118 124 134 124 150 124 166 124 182 124 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 124 213 124 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012137 23 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012163 23 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012170 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01291 1063 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012128 1061 19 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01233 1064 105 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01268 1064 84 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012149 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012145 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012145 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012105 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012167 149 65 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1253;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = P;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"118 -92 OFFCURVE",
"125 -91 OFFCURVE",
"133 -89 CURVE",
"153 -80 OFFCURVE",
"163 -73 OFFCURVE",
"163 -66 CURVE SMOOTH",
"163 -62 OFFCURVE",
"160 -60 OFFCURVE",
"154 -60 CURVE SMOOTH",
"146 -60 OFFCURVE",
"137 -63 OFFCURVE",
"126 -69 CURVE",
"123 -70 OFFCURVE",
"120 -70 OFFCURVE",
"115 -70 CURVE SMOOTH",
"99 -70 OFFCURVE",
"91 -61 OFFCURVE",
"91 -43 CURVE SMOOTH",
"91 1 OFFCURVE",
"128 70 OFFCURVE",
"202 163 CURVE",
"217 160 OFFCURVE",
"237 159 OFFCURVE",
"262 159 CURVE SMOOTH",
"307 159 OFFCURVE",
"357 164 OFFCURVE",
"412 175 CURVE SMOOTH",
"559 204 OFFCURVE",
"750 306 OFFCURVE",
"750 440 CURVE SMOOTH",
"750 565 OFFCURVE",
"574 601 OFFCURVE",
"407 596 CURVE SMOOTH",
"261 592 OFFCURVE",
"64 526 OFFCURVE",
"64 402 CURVE SMOOTH",
"64 363 OFFCURVE",
"104 320 OFFCURVE",
"144 312 CURVE SMOOTH",
"153 310 OFFCURVE",
"158 312 OFFCURVE",
"158 317 CURVE SMOOTH",
"158 323 OFFCURVE",
"152 328 OFFCURVE",
"140 331 CURVE SMOOTH",
"128 334 OFFCURVE",
"118 342 OFFCURVE",
"109 354 CURVE SMOOTH",
"100 367 OFFCURVE",
"96 381 OFFCURVE",
"96 396 CURVE SMOOTH",
"96 503 OFFCURVE",
"316 572 OFFCURVE",
"446 572 CURVE SMOOTH",
"583 572 OFFCURVE",
"714 545 OFFCURVE",
"714 430 CURVE SMOOTH",
"714 315 OFFCURVE",
"542 221 OFFCURVE",
"407 195 CURVE SMOOTH",
"360 186 OFFCURVE",
"321 181 OFFCURVE",
"286 181 CURVE SMOOTH",
"261 181 OFFCURVE",
"240 183 OFFCURVE",
"222 188 CURVE",
"291 272 OFFCURVE",
"377 354 OFFCURVE",
"481 441 CURVE SMOOTH",
"492 450 OFFCURVE",
"498 458 OFFCURVE",
"498 464 CURVE SMOOTH",
"498 465 OFFCURVE",
"498 466 OFFCURVE",
"497 467 CURVE SMOOTH",
"494 472 OFFCURVE",
"486 475 OFFCURVE",
"475 475 CURVE SMOOTH",
"454 475 OFFCURVE",
"441 471 OFFCURVE",
"434 463 CURVE",
"434 462 OFFCURVE",
"422 455 OFFCURVE",
"399 442 CURVE SMOOTH",
"381 431 OFFCURVE",
"372 421 OFFCURVE",
"372 414 CURVE SMOOTH",
"372 411 OFFCURVE",
"374 408 OFFCURVE",
"377 405 CURVE",
"280 307 LINE SMOOTH",
"245 271 OFFCURVE",
"216 237 OFFCURVE",
"189 202 CURVE",
"182 207 LINE",
"172 230 OFFCURVE",
"162 242 OFFCURVE",
"152 242 CURVE SMOOTH",
"141 242 OFFCURVE",
"137 231 OFFCURVE",
"137 211 CURVE SMOOTH",
"137 198 OFFCURVE",
"139 185 OFFCURVE",
"167 173 CURVE",
"104 86 OFFCURVE",
"72 14 OFFCURVE",
"72 -41 CURVE SMOOTH",
"72 -75 OFFCURVE",
"85 -92 OFFCURVE",
"112 -92 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1067 62 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 62 25 62 41 62 57 62 73 62 89 62 105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 62 25 62 41 62 57 62 73 62 89 62 105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01216 1064 22 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01291 1061 66 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 1061 6 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 565;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Thorn;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"91 -156 OFFCURVE",
"98 -155 OFFCURVE",
"106 -153 CURVE",
"126 -144 OFFCURVE",
"136 -137 OFFCURVE",
"136 -130 CURVE SMOOTH",
"136 -126 OFFCURVE",
"133 -124 OFFCURVE",
"127 -124 CURVE SMOOTH",
"119 -124 OFFCURVE",
"110 -127 OFFCURVE",
"99 -133 CURVE",
"96 -134 OFFCURVE",
"93 -134 OFFCURVE",
"88 -134 CURVE SMOOTH",
"72 -134 OFFCURVE",
"64 -125 OFFCURVE",
"64 -107 CURVE SMOOTH",
"64 -1 OFFCURVE",
"411 437 OFFCURVE",
"589 586 CURVE SMOOTH",
"600 595 OFFCURVE",
"606 603 OFFCURVE",
"606 609 CURVE SMOOTH",
"606 610 OFFCURVE",
"606 611 OFFCURVE",
"605 612 CURVE SMOOTH",
"602 617 OFFCURVE",
"594 620 OFFCURVE",
"583 620 CURVE SMOOTH",
"562 620 OFFCURVE",
"549 616 OFFCURVE",
"542 608 CURVE",
"542 607 OFFCURVE",
"530 600 OFFCURVE",
"507 587 CURVE SMOOTH",
"489 576 OFFCURVE",
"480 566 OFFCURVE",
"480 559 CURVE SMOOTH",
"480 556 OFFCURVE",
"482 553 OFFCURVE",
"485 550 CURVE",
"405 473 OFFCURVE",
"299 340 OFFCURVE",
"198 208 CURVE SMOOTH",
"131 121 OFFCURVE",
"45 -28 OFFCURVE",
"45 -105 CURVE SMOOTH",
"45 -139 OFFCURVE",
"58 -156 OFFCURVE",
"85 -156 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"240 107 OFFCURVE",
"290 112 OFFCURVE",
"345 123 CURVE SMOOTH",
"492 152 OFFCURVE",
"683 254 OFFCURVE",
"683 369 CURVE SMOOTH",
"683 475 OFFCURVE",
"523 506 OFFCURVE",
"372 502 CURVE SMOOTH",
"239 498 OFFCURVE",
"60 442 OFFCURVE",
"60 336 CURVE SMOOTH",
"60 303 OFFCURVE",
"96 267 OFFCURVE",
"133 260 CURVE SMOOTH",
"141 258 OFFCURVE",
"145 260 OFFCURVE",
"145 264 CURVE SMOOTH",
"145 269 OFFCURVE",
"140 273 OFFCURVE",
"129 276 CURVE SMOOTH",
"118 278 OFFCURVE",
"109 285 OFFCURVE",
"101 296 CURVE SMOOTH",
"93 307 OFFCURVE",
"89 319 OFFCURVE",
"89 331 CURVE SMOOTH",
"89 423 OFFCURVE",
"289 481 OFFCURVE",
"407 481 CURVE SMOOTH",
"530 481 OFFCURVE",
"648 458 OFFCURVE",
"650 362 CURVE SMOOTH",
"649 264 OFFCURVE",
"476 169 OFFCURVE",
"340 143 CURVE SMOOTH",
"293 134 OFFCURVE",
"254 129 OFFCURVE",
"219 129 CURVE SMOOTH",
"194 129 OFFCURVE",
"173 131 OFFCURVE",
"155 136 CURVE SMOOTH",
"120 149 OFFCURVE",
"98 160 OFFCURVE",
"88 160 CURVE SMOOTH",
"78 160 OFFCURVE",
"73 156 OFFCURVE",
"73 148 CURVE SMOOTH",
"73 123 OFFCURVE",
"142 107 OFFCURVE",
"195 107 CURVE SMOOTH"
);
}
);
width = 565;
}
);
unicode = 00DE;
},
{
glyphname = Q;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"763 -255 OFFCURVE",
"802 -241 OFFCURVE",
"837 -212 CURVE SMOOTH",
"874 -183 OFFCURVE",
"896 -148 OFFCURVE",
"905 -108 CURVE SMOOTH",
"906 -101 OFFCURVE",
"905 -98 OFFCURVE",
"904 -98 CURVE SMOOTH",
"896 -98 OFFCURVE",
"890 -108 OFFCURVE",
"885 -128 CURVE SMOOTH",
"878 -158 OFFCURVE",
"858 -181 OFFCURVE",
"826 -196 CURVE SMOOTH",
"797 -209 OFFCURVE",
"765 -216 OFFCURVE",
"728 -216 CURVE SMOOTH",
"616 -216 OFFCURVE",
"513 -180 OFFCURVE",
"420 -109 CURVE SMOOTH",
"340 -45 LINE",
"443 -20 OFFCURVE",
"535 25 OFFCURVE",
"616 90 CURVE SMOOTH",
"714 169 OFFCURVE",
"770 261 OFFCURVE",
"784 367 CURVE SMOOTH",
"786 380 OFFCURVE",
"787 392 OFFCURVE",
"787 404 CURVE SMOOTH",
"787 473 OFFCURVE",
"759 525 OFFCURVE",
"702 559 CURVE SMOOTH",
"657 588 OFFCURVE",
"597 602 OFFCURVE",
"522 602 CURVE SMOOTH",
"444 602 OFFCURVE",
"368 579 OFFCURVE",
"295 534 CURVE SMOOTH",
"208 480 OFFCURVE",
"159 410 OFFCURVE",
"147 325 CURVE SMOOTH",
"146 314 OFFCURVE",
"145 305 OFFCURVE",
"145 300 CURVE",
"99 238 OFFCURVE",
"69 180 OFFCURVE",
"55 127 CURVE SMOOTH",
"50 109 OFFCURVE",
"48 93 OFFCURVE",
"48 78 CURVE SMOOTH",
"48 66 OFFCURVE",
"49 55 OFFCURVE",
"52 45 CURVE",
"43 30 OFFCURVE",
"38 18 OFFCURVE",
"38 7 CURVE SMOOTH",
"38 4 OFFCURVE",
"41 -3 OFFCURVE",
"41 -13 CURVE SMOOTH",
"41 -15 OFFCURVE",
"40 -16 OFFCURVE",
"40 -17 CURVE",
"37 -24 OFFCURVE",
"42 -27 OFFCURVE",
"54 -27 CURVE SMOOTH",
"58 -27 OFFCURVE",
"60 -26 OFFCURVE",
"59 -23 CURVE SMOOTH",
"58 -17 OFFCURVE",
"58 -12 OFFCURVE",
"58 -8 CURVE SMOOTH",
"58 2 OFFCURVE",
"59 10 OFFCURVE",
"62 16 CURVE",
"88 -35 OFFCURVE",
"143 -60 OFFCURVE",
"227 -60 CURVE SMOOTH",
"244 -60 OFFCURVE",
"263 -59 OFFCURVE",
"283 -56 CURVE",
"391 -140 LINE SMOOTH",
"490 -217 OFFCURVE",
"599 -255 OFFCURVE",
"719 -255 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"160 -38 OFFCURVE",
"109 -10 OFFCURVE",
"99 50 CURVE",
"125 53 OFFCURVE",
"176 25 OFFCURVE",
"253 -34 CURVE"
);
},
{
closed = 1;
nodes = (
"287 -4 LINE SMOOTH",
"210 56 OFFCURVE",
"153 86 OFFCURVE",
"117 86 CURVE SMOOTH",
"110 86 OFFCURVE",
"105 85 OFFCURVE",
"98 84 CURVE",
"101 99 OFFCURVE",
"104 112 OFFCURVE",
"109 127 CURVE SMOOTH",
"126 175 OFFCURVE",
"142 211 OFFCURVE",
"157 235 CURVE",
"165 214 OFFCURVE",
"180 193 OFFCURVE",
"203 170 CURVE SMOOTH",
"228 144 OFFCURVE",
"250 131 OFFCURVE",
"270 131 CURVE SMOOTH",
"275 131 OFFCURVE",
"277 133 OFFCURVE",
"277 137 CURVE SMOOTH",
"277 142 OFFCURVE",
"273 146 OFFCURVE",
"266 149 CURVE SMOOTH",
"217 167 OFFCURVE",
"187 205 OFFCURVE",
"175 264 CURVE",
"220 331 OFFCURVE",
"280 390 OFFCURVE",
"355 441 CURVE SMOOTH",
"408 477 OFFCURVE",
"455 502 OFFCURVE",
"498 517 CURVE SMOOTH",
"503 519 OFFCURVE",
"506 525 OFFCURVE",
"507 534 CURVE SMOOTH",
"507 543 OFFCURVE",
"505 551 OFFCURVE",
"501 559 CURVE",
"515 559 LINE SMOOTH",
"581 559 OFFCURVE",
"634 547 OFFCURVE",
"673 524 CURVE SMOOTH",
"721 495 OFFCURVE",
"745 451 OFFCURVE",
"745 392 CURVE SMOOTH",
"745 380 OFFCURVE",
"744 368 OFFCURVE",
"742 355 CURVE SMOOTH",
"727 252 OFFCURVE",
"673 164 OFFCURVE",
"578 91 CURVE SMOOTH",
"500 32 OFFCURVE",
"413 -7 OFFCURVE",
"316 -26 CURVE"
);
},
{
closed = 1;
nodes = (
"188 400 OFFCURVE",
"224 450 OFFCURVE",
"282 489 CURVE SMOOTH",
"329 521 OFFCURVE",
"385 543 OFFCURVE",
"452 554 CURVE",
"349 505 OFFCURVE",
"257 433 OFFCURVE",
"175 338 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01239 1070 64 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 64 218 64 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 64 121 64 137 64 153 64 169 64 185 64 201 64 217 64 233 64 249 64 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 153 64 169 64 185 64 201 64 217 64 233 64 249 64 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 153 64 169 64 185 64 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01248 1064 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01235 1064 68 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 1063 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01212 10 95 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 10 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 696;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"775 -168 OFFCURVE",
"809 -157 OFFCURVE",
"840 -136 CURVE SMOOTH",
"871 -115 OFFCURVE",
"890 -89 OFFCURVE",
"899 -56 CURVE",
"900 -54 OFFCURVE",
"900 -52 OFFCURVE",
"900 -50 CURVE SMOOTH",
"900 -47 OFFCURVE",
"899 -46 OFFCURVE",
"898 -46 CURVE SMOOTH",
"889 -46 OFFCURVE",
"883 -54 OFFCURVE",
"879 -71 CURVE SMOOTH",
"869 -110 OFFCURVE",
"838 -130 OFFCURVE",
"785 -130 CURVE SMOOTH",
"765 -130 OFFCURVE",
"745 -127 OFFCURVE",
"724 -121 CURVE SMOOTH",
"671 -107 OFFCURVE",
"583 -30 OFFCURVE",
"458 111 CURVE SMOOTH",
"425 148 OFFCURVE",
"393 181 OFFCURVE",
"362 208 CURVE",
"405 220 LINE SMOOTH",
"487 246 OFFCURVE",
"556 279 OFFCURVE",
"612 319 CURVE SMOOTH",
"680 369 OFFCURVE",
"716 420 OFFCURVE",
"716 475 CURVE SMOOTH",
"716 510 OFFCURVE",
"699 539 OFFCURVE",
"664 561 CURVE SMOOTH",
"624 586 OFFCURVE",
"565 598 OFFCURVE",
"485 598 CURVE SMOOTH",
"399 598 OFFCURVE",
"323 585 OFFCURVE",
"258 559 CURVE SMOOTH",
"181 529 OFFCURVE",
"133 485 OFFCURVE",
"112 427 CURVE",
"109 421 OFFCURVE",
"108 413 OFFCURVE",
"108 404 CURVE SMOOTH",
"108 365 OFFCURVE",
"146 322 OFFCURVE",
"187 314 CURVE SMOOTH",
"197 312 OFFCURVE",
"202 314 OFFCURVE",
"202 319 CURVE SMOOTH",
"202 325 OFFCURVE",
"196 330 OFFCURVE",
"184 333 CURVE SMOOTH",
"172 336 OFFCURVE",
"162 344 OFFCURVE",
"153 356 CURVE SMOOTH",
"144 369 OFFCURVE",
"140 383 OFFCURVE",
"140 398 CURVE SMOOTH",
"140 406 OFFCURVE",
"141 413 OFFCURVE",
"144 419 CURVE SMOOTH",
"163 470 OFFCURVE",
"213 511 OFFCURVE",
"294 543 CURVE SMOOTH",
"359 569 OFFCURVE",
"416 582 OFFCURVE",
"467 582 CURVE SMOOTH",
"536 582 OFFCURVE",
"590 570 OFFCURVE",
"630 546 CURVE SMOOTH",
"665 525 OFFCURVE",
"683 498 OFFCURVE",
"683 465 CURVE SMOOTH",
"683 460 OFFCURVE",
"683 456 OFFCURVE",
"682 451 CURVE SMOOTH",
"670 365 OFFCURVE",
"573 293 OFFCURVE",
"392 235 CURVE SMOOTH",
"376 230 OFFCURVE",
"360 226 OFFCURVE",
"345 223 CURVE",
"330 236 OFFCURVE",
"315 247 OFFCURVE",
"299 258 CURVE",
"344 311 OFFCURVE",
"409 373 OFFCURVE",
"495 445 CURVE SMOOTH",
"506 454 OFFCURVE",
"512 462 OFFCURVE",
"512 468 CURVE SMOOTH",
"512 469 OFFCURVE",
"511 470 OFFCURVE",
"511 471 CURVE",
"508 476 OFFCURVE",
"500 479 OFFCURVE",
"489 479 CURVE SMOOTH",
"470 479 OFFCURVE",
"456 475 OFFCURVE",
"448 467 CURVE",
"394 431 LINE SMOOTH",
"377 420 OFFCURVE",
"363 410 OFFCURVE",
"353 403 CURVE SMOOTH",
"342 396 OFFCURVE",
"335 390 OFFCURVE",
"332 387 CURVE",
"351 392 OFFCURVE",
"370 400 OFFCURVE",
"391 409 CURVE",
"348 364 OFFCURVE",
"308 319 OFFCURVE",
"271 275 CURVE",
"254 284 OFFCURVE",
"239 289 OFFCURVE",
"226 289 CURVE SMOOTH",
"218 289 OFFCURVE",
"211 287 OFFCURVE",
"206 284 CURVE SMOOTH",
"186 273 OFFCURVE",
"176 260 OFFCURVE",
"176 245 CURVE SMOOTH",
"176 228 OFFCURVE",
"189 213 OFFCURVE",
"214 202 CURVE",
"170 140 LINE SMOOTH",
"138 91 OFFCURVE",
"117 54 OFFCURVE",
"106 27 CURVE SMOOTH",
"103 18 OFFCURVE",
"101 12 OFFCURVE",
"101 7 CURVE SMOOTH",
"101 -4 OFFCURVE",
"107 -9 OFFCURVE",
"120 -9 CURVE SMOOTH",
"143 -9 OFFCURVE",
"178 6 OFFCURVE",
"225 37 CURVE SMOOTH",
"226 38 OFFCURVE",
"227 39 OFFCURVE",
"227 40 CURVE SMOOTH",
"227 43 OFFCURVE",
"224 43 OFFCURVE",
"219 42 CURVE SMOOTH",
"213 42 OFFCURVE",
"207 40 OFFCURVE",
"202 37 CURVE",
"189 26 OFFCURVE",
"174 20 OFFCURVE",
"158 20 CURVE SMOOTH",
"154 20 OFFCURVE",
"152 22 OFFCURVE",
"152 27 CURVE SMOOTH",
"152 45 OFFCURVE",
"176 90 OFFCURVE",
"225 161 CURVE SMOOTH",
"239 180 LINE SMOOTH",
"242 185 OFFCURVE",
"245 190 OFFCURVE",
"248 193 CURVE",
"250 193 LINE SMOOTH",
"279 193 OFFCURVE",
"308 196 OFFCURVE",
"336 202 CURVE",
"357 182 OFFCURVE",
"383 154 OFFCURVE",
"412 119 CURVE SMOOTH",
"561 -58 OFFCURVE",
"657 -152 OFFCURVE",
"699 -163 CURVE SMOOTH",
"714 -166 OFFCURVE",
"727 -168 OFFCURVE",
"740 -168 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"217 224 OFFCURVE",
"212 229 OFFCURVE",
"212 236 CURVE SMOOTH",
"212 252 OFFCURVE",
"229 261 OFFCURVE",
"245 261 CURVE SMOOTH",
"250 261 OFFCURVE",
"254 260 OFFCURVE",
"258 259 CURVE",
"227 219 LINE"
);
},
{
closed = 1;
nodes = (
"267 219 OFFCURVE",
"272 226 OFFCURVE",
"277 231 CURVE SMOOTH",
"281 236 OFFCURVE",
"284 241 OFFCURVE",
"287 244 CURVE",
"302 233 OFFCURVE",
"312 225 OFFCURVE",
"319 218 CURVE",
"290 214 OFFCURVE",
"271 212 OFFCURVE",
"262 212 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012136 95 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01295 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 136 118 136 134 136 150 136 166 136 182 136 198 136 214 136 230 136 246 136 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 136 22 136 38 136 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 136 69 136 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012136 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01241 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01231 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012117 1064 4 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 565;
}
);
note = R;
unicode = 0052;
},
{
color = 11;
glyphname = Racute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 565;
}
);
unicode = 0154;
},
{
color = 11;
glyphname = Rcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 565;
}
);
unicode = 0158;
},
{
color = 11;
glyphname = Rcommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 565;
}
);
unicode = 0156;
},
{
color = 11;
glyphname = Rdblgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = dblgravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 565;
}
);
unicode = 0210;
},
{
color = 11;
glyphname = Rinvertedbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = breveinvertedcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 565;
}
);
unicode = 0212;
},
{
glyphname = S;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"95 -144 OFFCURVE",
"161 -128 OFFCURVE",
"250 -97 CURVE SMOOTH",
"378 -52 OFFCURVE",
"480 3 OFFCURVE",
"561 67 CURVE",
"587 70 LINE SMOOTH",
"595 71 OFFCURVE",
"603 71 OFFCURVE",
"610 72 CURVE SMOOTH",
"623 73 OFFCURVE",
"629 76 OFFCURVE",
"629 83 CURVE SMOOTH",
"629 87 OFFCURVE",
"626 89 OFFCURVE",
"620 89 CURVE SMOOTH",
"615 89 LINE SMOOTH",
"604 88 OFFCURVE",
"596 88 OFFCURVE",
"591 88 CURVE SMOOTH",
"584 87 LINE",
"635 133 OFFCURVE",
"660 178 OFFCURVE",
"658 223 CURVE",
"660 249 OFFCURVE",
"638 269 OFFCURVE",
"591 284 CURVE SMOOTH",
"566 292 OFFCURVE",
"518 301 OFFCURVE",
"447 311 CURVE SMOOTH",
"360 324 OFFCURVE",
"316 347 OFFCURVE",
"316 378 CURVE SMOOTH",
"316 387 OFFCURVE",
"319 397 OFFCURVE",
"325 409 CURVE SMOOTH",
"352 464 OFFCURVE",
"401 509 OFFCURVE",
"472 543 CURVE SMOOTH",
"538 574 OFFCURVE",
"607 591 OFFCURVE",
"680 591 CURVE SMOOTH",
"738 591 OFFCURVE",
"767 575 OFFCURVE",
"767 543 CURVE SMOOTH",
"767 530 OFFCURVE",
"762 516 OFFCURVE",
"752 500 CURVE SMOOTH",
"748 493 OFFCURVE",
"746 488 OFFCURVE",
"746 485 CURVE SMOOTH",
"746 482 OFFCURVE",
"747 481 OFFCURVE",
"749 481 CURVE SMOOTH",
"754 481 OFFCURVE",
"760 487 OFFCURVE",
"767 498 CURVE SMOOTH",
"785 526 OFFCURVE",
"794 549 OFFCURVE",
"794 568 CURVE SMOOTH",
"794 604 OFFCURVE",
"762 622 OFFCURVE",
"699 622 CURVE SMOOTH",
"611 622 OFFCURVE",
"521 594 OFFCURVE",
"427 539 CURVE SMOOTH",
"341 489 OFFCURVE",
"290 440 OFFCURVE",
"275 393 CURVE SMOOTH",
"271 381 OFFCURVE",
"269 370 OFFCURVE",
"269 361 CURVE SMOOTH",
"269 336 OFFCURVE",
"284 317 OFFCURVE",
"313 304 CURVE SMOOTH",
"336 294 OFFCURVE",
"377 285 OFFCURVE",
"435 277 CURVE SMOOTH",
"498 268 OFFCURVE",
"535 262 OFFCURVE",
"546 259 CURVE SMOOTH",
"582 248 OFFCURVE",
"600 229 OFFCURVE",
"600 204 CURVE SMOOTH",
"600 197 OFFCURVE",
"599 191 OFFCURVE",
"597 184 CURVE SMOOTH",
"588 149 OFFCURVE",
"561 113 OFFCURVE",
"517 78 CURVE",
"436 66 OFFCURVE",
"348 48 OFFCURVE",
"252 25 CURVE SMOOTH",
"199 12 OFFCURVE",
"145 -9 OFFCURVE",
"89 -38 CURVE SMOOTH",
"32 -68 OFFCURVE",
"2 -90 OFFCURVE",
"-2 -105 CURVE",
"-3 -107 OFFCURVE",
"-3 -110 OFFCURVE",
"-3 -115 CURVE SMOOTH",
"-3 -134 OFFCURVE",
"15 -144 OFFCURVE",
"50 -144 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"35 -120 OFFCURVE",
"31 -118 OFFCURVE",
"31 -114 CURVE SMOOTH",
"31 -113 LINE SMOOTH",
"32 -100 OFFCURVE",
"57 -82 OFFCURVE",
"108 -58 CURVE SMOOTH",
"159 -35 OFFCURVE",
"206 -17 OFFCURVE",
"253 -6 CURVE SMOOTH",
"350 18 OFFCURVE",
"424 37 OFFCURVE",
"480 52 CURVE",
"414 7 OFFCURVE",
"334 -32 OFFCURVE",
"239 -65 CURVE SMOOTH",
"139 -102 OFFCURVE",
"74 -120 OFFCURVE",
"44 -120 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 1070 62 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01222 1070 54 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01270 1065 8 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 8 218 8 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 16 213 16 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 54 218 54 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01272 62 70 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01282 1061 39 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01268 1064 10 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 666;
}
);
note = S;
unicode = 0053;
},
{
color = 11;
glyphname = Sacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 666;
}
);
unicode = 015A;
},
{
color = 11;
glyphname = Scaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 666;
}
);
unicode = 0160;
},
{
color = 11;
glyphname = Scedilla;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = cedillacomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 666;
}
);
unicode = 015E;
},
{
color = 11;
glyphname = Scircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 666;
}
);
unicode = 015C;
},
{
color = 11;
glyphname = Scommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 666;
}
);
unicode = 0218;
},
{
glyphname = Germandbls;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-43 -110 OFFCURVE",
"15 -71 OFFCURVE",
"80 5 CURVE SMOOTH",
"128 63 OFFCURVE",
"183 139 OFFCURVE",
"241 243 CURVE SMOOTH",
"353 442 LINE SMOOTH",
"402 530 OFFCURVE",
"459 588 OFFCURVE",
"518 588 CURVE SMOOTH",
"565 588 OFFCURVE",
"601 550 OFFCURVE",
"601 500 CURVE SMOOTH",
"601 488 OFFCURVE",
"599 476 OFFCURVE",
"595 463 CURVE SMOOTH",
"564 367 OFFCURVE",
"467 290 OFFCURVE",
"358 290 CURVE SMOOTH",
"345 290 OFFCURVE",
"328 291 OFFCURVE",
"318 294 CURVE",
"312 267 OFFCURVE",
"345 265 OFFCURVE",
"360 265 CURVE SMOOTH",
"459 265 OFFCURVE",
"499 226 OFFCURVE",
"499 177 CURVE SMOOTH",
"499 122 OFFCURVE",
"445 54 OFFCURVE",
"368 22 CURVE SMOOTH",
"311 -2 OFFCURVE",
"255 -13 OFFCURVE",
"211 -13 CURVE SMOOTH",
"172 -13 OFFCURVE",
"142 -4 OFFCURVE",
"129 12 CURVE",
"117 15 OFFCURVE",
"116 6 OFFCURVE",
"116 -2 CURVE SMOOTH",
"116 -27 OFFCURVE",
"149 -37 OFFCURVE",
"193 -37 CURVE SMOOTH",
"253 -37 OFFCURVE",
"335 -19 OFFCURVE",
"384 1 CURVE SMOOTH",
"495 43 OFFCURVE",
"550 100 OFFCURVE",
"550 172 CURVE SMOOTH",
"550 203 OFFCURVE",
"535 229 OFFCURVE",
"506 250 CURVE SMOOTH",
"483 267 OFFCURVE",
"454 278 OFFCURVE",
"417 285 CURVE",
"512 287 OFFCURVE",
"608 379 OFFCURVE",
"633 475 CURVE SMOOTH",
"637 489 OFFCURVE",
"638 502 OFFCURVE",
"638 513 CURVE SMOOTH",
"638 584 OFFCURVE",
"575 609 OFFCURVE",
"515 609 CURVE SMOOTH",
"462 609 OFFCURVE",
"414 601 OFFCURVE",
"354 521 CURVE SMOOTH",
"321 480 OFFCURVE",
"275 384 OFFCURVE",
"232 302 CURVE SMOOTH",
"199 239 OFFCURVE",
"172 189 OFFCURVE",
"150 149 CURVE SMOOTH",
"127 110 OFFCURVE",
"110 82 OFFCURVE",
"99 65 CURVE SMOOTH",
"28 -40 OFFCURVE",
"-39 -93 OFFCURVE",
"-100 -93 CURVE SMOOTH",
"-106 -93 OFFCURVE",
"-110 -96 OFFCURVE",
"-112 -100 CURVE",
"-112 -107 OFFCURVE",
"-106 -110 OFFCURVE",
"-93 -110 CURVE SMOOTH"
);
}
);
width = 636;
}
);
unicode = 1E9E;
},
{
glyphname = Schwa;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"366 -64 OFFCURVE",
"553 14 OFFCURVE",
"678 167 CURVE SMOOTH",
"773 282 OFFCURVE",
"787 338 OFFCURVE",
"787 391 CURVE SMOOTH",
"787 492 OFFCURVE",
"701 556 OFFCURVE",
"592 556 CURVE SMOOTH",
"396 556 OFFCURVE",
"214 460 OFFCURVE",
"77 357 CURVE",
"69 352 OFFCURVE",
"64 346 OFFCURVE",
"64 339 CURVE SMOOTH",
"64 335 OFFCURVE",
"67 333 OFFCURVE",
"72 333 CURVE SMOOTH",
"74 333 OFFCURVE",
"78 334 OFFCURVE",
"83 337 CURVE SMOOTH",
"174 404 OFFCURVE",
"308 473 OFFCURVE",
"443 506 CURVE SMOOTH",
"496 519 OFFCURVE",
"548 526 OFFCURVE",
"599 526 CURVE SMOOTH",
"704 526 OFFCURVE",
"753 489 OFFCURVE",
"753 422 CURVE SMOOTH",
"753 384 OFFCURVE",
"736 337 OFFCURVE",
"705 281 CURVE",
"702 309 OFFCURVE",
"646 328 OFFCURVE",
"562 328 CURVE SMOOTH",
"384 328 OFFCURVE",
"45 212 OFFCURVE",
"45 38 CURVE SMOOTH",
"45 -19 OFFCURVE",
"89 -64 OFFCURVE",
"183 -64 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 -41 OFFCURVE",
"102 -12 OFFCURVE",
"102 36 CURVE SMOOTH",
"102 182 OFFCURVE",
"341 302 OFFCURVE",
"557 302 CURVE SMOOTH",
"618 302 OFFCURVE",
"670 292 OFFCURVE",
"693 263 CURVE",
"684 249 OFFCURVE",
"675 237 OFFCURVE",
"665 223 CURVE SMOOTH",
"577 107 OFFCURVE",
"361 -41 OFFCURVE",
"208 -41 CURVE SMOOTH"
);
}
);
width = 780;
}
);
unicode = 018F;
},
{
glyphname = T;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"291 -71 OFFCURVE",
"362 -43 OFFCURVE",
"433 11 CURVE SMOOTH",
"486 52 OFFCURVE",
"532 102 OFFCURVE",
"570 161 CURVE SMOOTH",
"633 268 OFFCURVE",
"684 357 OFFCURVE",
"725 430 CURVE",
"742 419 OFFCURVE",
"770 407 OFFCURVE",
"811 393 CURVE SMOOTH",
"829 387 OFFCURVE",
"846 384 OFFCURVE",
"862 384 CURVE SMOOTH",
"905 384 OFFCURVE",
"927 402 OFFCURVE",
"927 437 CURVE SMOOTH",
"927 457 OFFCURVE",
"915 477 OFFCURVE",
"890 497 CURVE SMOOTH",
"865 516 OFFCURVE",
"840 526 OFFCURVE",
"815 526 CURVE SMOOTH",
"789 526 OFFCURVE",
"769 521 OFFCURVE",
"754 513 CURVE SMOOTH",
"743 506 OFFCURVE",
"731 495 OFFCURVE",
"716 478 CURVE",
"611 521 OFFCURVE",
"528 550 OFFCURVE",
"467 567 CURVE SMOOTH",
"380 592 OFFCURVE",
"296 604 OFFCURVE",
"214 604 CURVE SMOOTH",
"164 604 OFFCURVE",
"122 595 OFFCURVE",
"87 578 CURVE SMOOTH",
"48 557 OFFCURVE",
"28 527 OFFCURVE",
"28 490 CURVE SMOOTH",
"28 465 OFFCURVE",
"35 443 OFFCURVE",
"48 426 CURVE SMOOTH",
"55 417 OFFCURVE",
"70 404 OFFCURVE",
"95 387 CURVE",
"99 383 OFFCURVE",
"106 380 OFFCURVE",
"114 380 CURVE SMOOTH",
"117 380 OFFCURVE",
"118 381 OFFCURVE",
"118 383 CURVE SMOOTH",
"118 386 OFFCURVE",
"116 389 OFFCURVE",
"112 392 CURVE SMOOTH",
"75 426 OFFCURVE",
"57 464 OFFCURVE",
"57 505 CURVE SMOOTH",
"57 555 OFFCURVE",
"104 580 OFFCURVE",
"197 580 CURVE SMOOTH",
"279 580 OFFCURVE",
"364 565 OFFCURVE",
"456 536 CURVE SMOOTH",
"485 527 OFFCURVE",
"564 497 OFFCURVE",
"694 446 CURVE",
"532 177 LINE SMOOTH",
"490 110 OFFCURVE",
"451 60 OFFCURVE",
"414 28 CURVE SMOOTH",
"356 -24 OFFCURVE",
"292 -52 OFFCURVE",
"223 -52 CURVE SMOOTH",
"182 -52 OFFCURVE",
"146 -37 OFFCURVE",
"114 -6 CURVE SMOOTH",
"82 24 OFFCURVE",
"66 58 OFFCURVE",
"66 96 CURVE SMOOTH",
"66 129 OFFCURVE",
"77 158 OFFCURVE",
"92 183 CURVE SMOOTH",
"107 205 OFFCURVE",
"122 217 OFFCURVE",
"139 220 CURVE SMOOTH",
"150 222 OFFCURVE",
"156 225 OFFCURVE",
"156 230 CURVE SMOOTH",
"156 232 OFFCURVE",
"153 233 OFFCURVE",
"148 233 CURVE SMOOTH",
"143 233 LINE SMOOTH",
"118 230 OFFCURVE",
"95 218 OFFCURVE",
"74 197 CURVE SMOOTH",
"46 171 OFFCURVE",
"31 138 OFFCURVE",
"31 99 CURVE SMOOTH",
"31 55 OFFCURVE",
"50 15 OFFCURVE",
"88 -19 CURVE SMOOTH",
"126 -54 OFFCURVE",
"170 -71 OFFCURVE",
"219 -71 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"867 417 OFFCURVE",
"846 422 OFFCURVE",
"817 432 CURVE SMOOTH",
"792 441 OFFCURVE",
"768 451 OFFCURVE",
"747 462 CURVE",
"762 493 OFFCURVE",
"784 508 OFFCURVE",
"813 508 CURVE SMOOTH",
"836 508 OFFCURVE",
"858 500 OFFCURVE",
"878 482 CURVE SMOOTH",
"895 467 OFFCURVE",
"904 452 OFFCURVE",
"904 437 CURVE SMOOTH",
"904 424 OFFCURVE",
"896 417 OFFCURVE",
"880 417 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01245 1065 57 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 45 213 45 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01261 1061 43 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01285 1064 2 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 657;
}
);
note = T;
unicode = 0054;
},
{
color = 11;
glyphname = Tbar;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = strokeshortcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 657;
}
);
unicode = 0166;
},
{
color = 11;
glyphname = Tcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 657;
}
);
unicode = 0164;
},
{
color = 11;
glyphname = Tcedilla;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = cedillacomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 657;
}
);
unicode = 0162;
},
{
color = 11;
glyphname = Tcommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 657;
}
);
unicode = 021A;
},
{
glyphname = U;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"709 -100 OFFCURVE",
"739 -90 OFFCURVE",
"768 -70 CURVE SMOOTH",
"779 -62 OFFCURVE",
"785 -53 OFFCURVE",
"785 -44 CURVE SMOOTH",
"785 -39 OFFCURVE",
"783 -36 OFFCURVE",
"779 -36 CURVE SMOOTH",
"776 -36 OFFCURVE",
"772 -38 OFFCURVE",
"769 -41 CURVE SMOOTH",
"740 -70 OFFCURVE",
"713 -84 OFFCURVE",
"687 -84 CURVE SMOOTH",
"673 -84 OFFCURVE",
"665 -77 OFFCURVE",
"662 -62 CURVE SMOOTH",
"660 -50 OFFCURVE",
"659 -37 OFFCURVE",
"659 -22 CURVE SMOOTH",
"659 48 OFFCURVE",
"684 140 OFFCURVE",
"733 254 CURVE",
"762 285 LINE SMOOTH",
"772 295 OFFCURVE",
"782 306 OFFCURVE",
"791 317 CURVE SMOOTH",
"887 425 OFFCURVE",
"935 508 OFFCURVE",
"935 567 CURVE SMOOTH",
"935 585 OFFCURVE",
"929 594 OFFCURVE",
"918 594 CURVE SMOOTH",
"915 594 OFFCURVE",
"911 593 OFFCURVE",
"907 591 CURVE SMOOTH",
"878 577 OFFCURVE",
"845 541 OFFCURVE",
"809 483 CURVE SMOOTH",
"782 438 OFFCURVE",
"758 392 OFFCURVE",
"737 344 CURVE SMOOTH",
"720 305 OFFCURVE",
"707 277 OFFCURVE",
"699 261 CURVE",
"531 86 OFFCURVE",
"406 -2 OFFCURVE",
"325 -2 CURVE SMOOTH",
"306 -2 OFFCURVE",
"296 10 OFFCURVE",
"296 35 CURVE SMOOTH",
"296 84 OFFCURVE",
"334 158 OFFCURVE",
"409 259 CURVE SMOOTH",
"473 344 OFFCURVE",
"529 405 OFFCURVE",
"552 442 CURVE SMOOTH",
"574 477 OFFCURVE",
"585 511 OFFCURVE",
"585 539 CURVE SMOOTH",
"585 577 OFFCURVE",
"563 604 OFFCURVE",
"513 604 CURVE SMOOTH",
"451 604 OFFCURVE",
"376 578 OFFCURVE",
"287 525 CURVE SMOOTH",
"236 494 OFFCURVE",
"189 457 OFFCURVE",
"146 414 CURVE SMOOTH",
"106 373 OFFCURVE",
"83 339 OFFCURVE",
"76 314 CURVE SMOOTH",
"73 305 OFFCURVE",
"72 296 OFFCURVE",
"72 287 CURVE SMOOTH",
"72 258 OFFCURVE",
"92 243 OFFCURVE",
"133 243 CURVE SMOOTH",
"151 243 OFFCURVE",
"160 247 OFFCURVE",
"160 255 CURVE SMOOTH",
"160 260 OFFCURVE",
"154 260 OFFCURVE",
"141 260 CURVE SMOOTH",
"115 260 OFFCURVE",
"102 268 OFFCURVE",
"102 285 CURVE SMOOTH",
"102 290 OFFCURVE",
"104 295 OFFCURVE",
"107 302 CURVE SMOOTH",
"145 378 OFFCURVE",
"211 444 OFFCURVE",
"304 500 CURVE SMOOTH",
"395 555 OFFCURVE",
"464 582 OFFCURVE",
"511 582 CURVE SMOOTH",
"530 582 OFFCURVE",
"539 571 OFFCURVE",
"539 550 CURVE SMOOTH",
"539 517 OFFCURVE",
"514 466 OFFCURVE",
"463 395 CURVE SMOOTH",
"430 351 OFFCURVE",
"397 307 OFFCURVE",
"362 263 CURVE SMOOTH",
"296 175 OFFCURVE",
"263 105 OFFCURVE",
"263 52 CURVE SMOOTH",
"263 27 OFFCURVE",
"270 9 OFFCURVE",
"284 -4 CURVE SMOOTH",
"297 -15 OFFCURVE",
"312 -21 OFFCURVE",
"330 -21 CURVE SMOOTH",
"409 -20 OFFCURVE",
"523 52 OFFCURVE",
"672 195 CURVE",
"642 111 OFFCURVE",
"627 43 OFFCURVE",
"627 -10 CURVE SMOOTH",
"627 -31 OFFCURVE",
"629 -49 OFFCURVE",
"633 -66 CURVE SMOOTH",
"638 -89 OFFCURVE",
"653 -100 OFFCURVE",
"679 -100 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"799 392 OFFCURVE",
"822 436 OFFCURVE",
"847 477 CURVE SMOOTH",
"884 538 OFFCURVE",
"905 568 OFFCURVE",
"908 569 CURVE SMOOTH",
"914 570 OFFCURVE",
"917 567 OFFCURVE",
"917 562 CURVE SMOOTH",
"917 543 OFFCURVE",
"897 506 OFFCURVE",
"857 451 CURVE SMOOTH",
"831 414 OFFCURVE",
"804 379 OFFCURVE",
"776 346 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01211 1068 29 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01272 1070 44 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 1068 37 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 29 218 29 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 44 218 44 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 79 22 79 38 79 54 79 70 79 86 79 102 79 118 79 134 79 150 79 166 79 182 79 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 79 213 79 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012101 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01211 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01233 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01268 1061 46 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 767;
}
);
note = U;
unicode = 0055;
},
{
color = 11;
glyphname = Uacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 00DA;
},
{
color = 11;
glyphname = Ubreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 016C;
},
{
color = 11;
glyphname = Ucaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 01D3;
},
{
color = 11;
glyphname = Ucircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 00DB;
},
{
color = 11;
glyphname = Udblgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dblgravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 0214;
},
{
color = 11;
glyphname = Udieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 00DC;
},
{
color = 11;
glyphname = Udieresiscaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 01D9;
},
{
color = 11;
glyphname = Udieresisgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 01DB;
},
{
color = 11;
glyphname = Udieresismacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 01D5;
},
{
color = 11;
glyphname = Udotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 1EE4;
},
{
color = 11;
glyphname = Ugrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 00D9;
},
{
color = 11;
glyphname = Uhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 1EE6;
},
{
color = 11;
glyphname = Uhorn;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 911, 30}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 01AF;
},
{
color = 11;
glyphname = Uhornacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 1EE8;
},
{
color = 11;
glyphname = Uhorndotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 1EF0;
},
{
color = 11;
glyphname = Uhorngrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 1EEA;
},
{
color = 11;
glyphname = Uhornhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 1EEC;
},
{
color = 11;
glyphname = Uhorntilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 1EEE;
},
{
color = 11;
glyphname = Uhungarumlaut;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlautcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 0170;
},
{
color = 11;
glyphname = Uinvertedbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = breveinvertedcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 0216;
},
{
color = 11;
glyphname = Umacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 016A;
},
{
color = 11;
glyphname = Uogonek;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ogonekcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 0172;
},
{
color = 11;
glyphname = Uring;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ringcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 016E;
},
{
color = 11;
glyphname = Utilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 767;
}
);
unicode = 0168;
},
{
glyphname = V;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"331 -20 OFFCURVE",
"402 13 OFFCURVE",
"489 77 CURVE SMOOTH",
"573 138 OFFCURVE",
"654 212 OFFCURVE",
"732 300 CURVE SMOOTH",
"815 393 OFFCURVE",
"857 471 OFFCURVE",
"857 534 CURVE SMOOTH",
"857 577 OFFCURVE",
"836 599 OFFCURVE",
"795 599 CURVE SMOOTH",
"783 599 OFFCURVE",
"768 596 OFFCURVE",
"751 591 CURVE SMOOTH",
"738 587 OFFCURVE",
"731 581 OFFCURVE",
"731 573 CURVE SMOOTH",
"731 570 OFFCURVE",
"734 568 OFFCURVE",
"739 568 CURVE SMOOTH",
"742 568 OFFCURVE",
"744 568 OFFCURVE",
"746 569 CURVE",
"765 574 OFFCURVE",
"781 577 OFFCURVE",
"792 577 CURVE SMOOTH",
"820 577 OFFCURVE",
"834 565 OFFCURVE",
"834 541 CURVE SMOOTH",
"834 494 OFFCURVE",
"789 421 OFFCURVE",
"700 320 CURVE SMOOTH",
"620 231 OFFCURVE",
"545 157 OFFCURVE",
"473 100 CURVE SMOOTH",
"388 31 OFFCURVE",
"321 -2 OFFCURVE",
"273 -2 CURVE SMOOTH",
"257 -2 OFFCURVE",
"249 12 OFFCURVE",
"249 40 CURVE SMOOTH",
"249 66 OFFCURVE",
"257 99 OFFCURVE",
"272 139 CURVE SMOOTH",
"289 181 OFFCURVE",
"311 221 OFFCURVE",
"340 259 CURVE SMOOTH",
"405 344 OFFCURVE",
"448 405 OFFCURVE",
"471 442 CURVE SMOOTH",
"497 485 OFFCURVE",
"510 517 OFFCURVE",
"510 540 CURVE SMOOTH",
"510 559 OFFCURVE",
"500 577 OFFCURVE",
"481 595 CURVE",
"474 600 OFFCURVE",
"463 603 OFFCURVE",
"448 603 CURVE SMOOTH",
"391 603 OFFCURVE",
"317 576 OFFCURVE",
"224 522 CURVE SMOOTH",
"171 491 OFFCURVE",
"124 455 OFFCURVE",
"81 414 CURVE SMOOTH",
"39 374 OFFCURVE",
"14 341 OFFCURVE",
"7 314 CURVE SMOOTH",
"4 305 OFFCURVE",
"3 297 OFFCURVE",
"3 288 CURVE SMOOTH",
"3 258 OFFCURVE",
"23 243 OFFCURVE",
"64 243 CURVE SMOOTH",
"82 243 OFFCURVE",
"91 247 OFFCURVE",
"91 255 CURVE SMOOTH",
"91 260 OFFCURVE",
"85 260 OFFCURVE",
"72 260 CURVE SMOOTH",
"46 260 OFFCURVE",
"33 269 OFFCURVE",
"33 286 CURVE SMOOTH",
"33 291 OFFCURVE",
"34 297 OFFCURVE",
"37 302 CURVE SMOOTH",
"74 377 OFFCURVE",
"140 443 OFFCURVE",
"235 500 CURVE SMOOTH",
"326 555 OFFCURVE",
"394 582 OFFCURVE",
"441 582 CURVE SMOOTH",
"460 582 OFFCURVE",
"470 571 OFFCURVE",
"470 550 CURVE SMOOTH",
"470 517 OFFCURVE",
"445 466 OFFCURVE",
"394 395 CURVE SMOOTH",
"361 351 OFFCURVE",
"328 307 OFFCURVE",
"293 263 CURVE SMOOTH",
"238 190 OFFCURVE",
"211 125 OFFCURVE",
"211 68 CURVE SMOOTH",
"211 12 OFFCURVE",
"241 -21 OFFCURVE",
"278 -21 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 1066 67 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 1070 20 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01258 1070 13 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 20 218 20 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 153 20 169 20 185 20 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 58 213 58 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 67 25 67 41 67 57 67 73 67 89 67 105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 67 25 67 41 67 57 67 73 67 89 67 105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 656;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"177 -61 OFFCURVE",
"218 -36 OFFCURVE",
"266 15 CURVE SMOOTH",
"304 54 OFFCURVE",
"351 116 OFFCURVE",
"406 202 CURVE",
"459 243 OFFCURVE",
"529 290 OFFCURVE",
"621 346 CURVE",
"606 325 OFFCURVE",
"593 300 OFFCURVE",
"578 273 CURVE SMOOTH",
"546 210 OFFCURVE",
"530 156 OFFCURVE",
"530 112 CURVE SMOOTH",
"530 69 OFFCURVE",
"544 36 OFFCURVE",
"572 14 CURVE SMOOTH",
"596 -5 OFFCURVE",
"626 -15 OFFCURVE",
"662 -15 CURVE SMOOTH",
"722 -15 OFFCURVE",
"792 10 OFFCURVE",
"872 63 CURVE SMOOTH",
"955 118 OFFCURVE",
"1024 185 OFFCURVE",
"1077 266 CURVE SMOOTH",
"1130 347 OFFCURVE",
"1157 415 OFFCURVE",
"1157 470 CURVE SMOOTH",
"1157 523 OFFCURVE",
"1134 549 OFFCURVE",
"1089 549 CURVE SMOOTH",
"1076 549 OFFCURVE",
"1061 546 OFFCURVE",
"1044 541 CURVE SMOOTH",
"1033 537 OFFCURVE",
"1028 532 OFFCURVE",
"1028 525 CURVE SMOOTH",
"1028 520 OFFCURVE",
"1031 518 OFFCURVE",
"1037 518 CURVE SMOOTH",
"1040 518 OFFCURVE",
"1042 518 OFFCURVE",
"1044 519 CURVE",
"1064 524 OFFCURVE",
"1080 527 OFFCURVE",
"1091 527 CURVE SMOOTH",
"1119 527 OFFCURVE",
"1133 514 OFFCURVE",
"1133 488 CURVE SMOOTH",
"1133 448 OFFCURVE",
"1101 380 OFFCURVE",
"1038 285 CURVE SMOOTH",
"986 208 OFFCURVE",
"923 142 OFFCURVE",
"850 87 CURVE SMOOTH",
"775 31 OFFCURVE",
"711 4 OFFCURVE",
"659 4 CURVE SMOOTH",
"601 4 OFFCURVE",
"559 41 OFFCURVE",
"559 109 CURVE SMOOTH",
"559 152 OFFCURVE",
"574 202 OFFCURVE",
"605 259 CURVE SMOOTH",
"634 315 OFFCURVE",
"662 358 OFFCURVE",
"689 388 CURVE",
"729 413 OFFCURVE",
"760 433 OFFCURVE",
"783 448 CURVE SMOOTH",
"805 463 OFFCURVE",
"819 474 OFFCURVE",
"825 479 CURVE SMOOTH",
"844 498 OFFCURVE",
"854 513 OFFCURVE",
"854 523 CURVE SMOOTH",
"854 532 OFFCURVE",
"847 536 OFFCURVE",
"833 536 CURVE SMOOTH",
"824 536 OFFCURVE",
"815 535 OFFCURVE",
"806 532 CURVE SMOOTH",
"767 521 OFFCURVE",
"720 479 OFFCURVE",
"664 407 CURVE",
"561 340 OFFCURVE",
"485 287 OFFCURVE",
"435 250 CURVE",
"519 388 OFFCURVE",
"561 487 OFFCURVE",
"561 547 CURVE SMOOTH",
"561 600 OFFCURVE",
"520 629 OFFCURVE",
"459 629 CURVE SMOOTH",
"384 629 OFFCURVE",
"297 597 OFFCURVE",
"196 532 CURVE SMOOTH",
"162 510 OFFCURVE",
"125 480 OFFCURVE",
"86 443 CURVE SMOOTH",
"40 399 OFFCURVE",
"15 366 OFFCURVE",
"10 344 CURVE SMOOTH",
"9 339 OFFCURVE",
"8 335 OFFCURVE",
"8 331 CURVE SMOOTH",
"8 296 OFFCURVE",
"41 273 OFFCURVE",
"94 273 CURVE SMOOTH",
"110 273 OFFCURVE",
"118 276 OFFCURVE",
"118 284 CURVE SMOOTH",
"118 288 OFFCURVE",
"115 290 OFFCURVE",
"109 290 CURVE SMOOTH",
"104 290 LINE SMOOTH",
"69 288 OFFCURVE",
"52 298 OFFCURVE",
"52 320 CURVE SMOOTH",
"52 346 OFFCURVE",
"75 382 OFFCURVE",
"120 427 CURVE SMOOTH",
"156 462 OFFCURVE",
"191 491 OFFCURVE",
"225 513 CURVE SMOOTH",
"258 536 OFFCURVE",
"297 555 OFFCURVE",
"341 574 CURVE SMOOTH",
"397 597 OFFCURVE",
"441 609 OFFCURVE",
"473 609 CURVE SMOOTH",
"508 609 OFFCURVE",
"526 596 OFFCURVE",
"526 569 CURVE SMOOTH",
"526 551 OFFCURVE",
"520 526 OFFCURVE",
"508 494 CURVE SMOOTH",
"480 430 LINE SMOOTH",
"449 355 OFFCURVE",
"408 276 OFFCURVE",
"359 192 CURVE",
"221 90 LINE",
"176 52 OFFCURVE",
"143 15 OFFCURVE",
"122 -22 CURVE",
"119 -29 OFFCURVE",
"117 -35 OFFCURVE",
"117 -40 CURVE SMOOTH",
"117 -54 OFFCURVE",
"126 -61 OFFCURVE",
"143 -61 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 -16 OFFCURVE",
"161 -14 OFFCURVE",
"161 -11 CURVE",
"163 -7 LINE SMOOTH",
"172 6 OFFCURVE",
"185 20 OFFCURVE",
"202 37 CURVE SMOOTH",
"210 45 OFFCURVE",
"225 58 OFFCURVE",
"246 77 CURVE SMOOTH",
"281 105 OFFCURVE",
"308 126 OFFCURVE",
"327 139 CURVE",
"294 87 OFFCURVE",
"269 52 OFFCURVE",
"252 34 CURVE SMOOTH",
"221 1 OFFCURVE",
"193 -16 OFFCURVE",
"170 -16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 1070 50 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01281 1068 30 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012104 1067 90 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01211 50 104 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 41 22 41 38 41 54 41 70 41 86 41 102 41 118 41 134 41 150 41 166 41 182 41 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 41 213 41 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 81 118 81 134 81 150 81 166 81 182 81 198 81 214 81 230 81 246 81 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 81 22 81 38 81 54 81 70 81 86 81 102 81 118 81 134 81 150 81 166 81 182 81 198 81 214 81 230 81 246 81 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 81 22 81 38 81 54 81 70 81 86 81 102 81 118 81 134 81 150 81 166 81 182 81 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 81 213 81 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01264 50 104 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012108 50 104 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012125 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012120 1064 18 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 1061 92 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1017;
}
);
note = W;
unicode = 0057;
},
{
color = 11;
glyphname = Wacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1017;
}
);
unicode = 1E82;
},
{
color = 11;
glyphname = Wcircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1017;
}
);
unicode = 0174;
},
{
color = 11;
glyphname = Wdieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1017;
}
);
unicode = 1E84;
},
{
color = 11;
glyphname = Wgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 1017;
}
);
unicode = 1E80;
},
{
glyphname = X;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"73 -137 OFFCURVE",
"82 -132 OFFCURVE",
"82 -121 CURVE SMOOTH",
"82 -120 OFFCURVE",
"81 -119 OFFCURVE",
"81 -117 CURVE",
"79 -111 OFFCURVE",
"75 -109 OFFCURVE",
"69 -109 CURVE SMOOTH",
"66 -109 OFFCURVE",
"63 -109 OFFCURVE",
"60 -110 CURVE SMOOTH",
"58 -111 OFFCURVE",
"55 -111 OFFCURVE",
"52 -111 CURVE SMOOTH",
"45 -111 OFFCURVE",
"42 -107 OFFCURVE",
"42 -100 CURVE SMOOTH",
"42 -88 OFFCURVE",
"48 -74 OFFCURVE",
"61 -57 CURVE SMOOTH",
"116 16 OFFCURVE",
"255 130 OFFCURVE",
"479 285 CURVE",
"473 250 LINE SMOOTH",
"445 100 OFFCURVE",
"417 -3 OFFCURVE",
"388 -59 CURVE SMOOTH",
"386 -63 OFFCURVE",
"385 -66 OFFCURVE",
"385 -67 CURVE SMOOTH",
"385 -74 OFFCURVE",
"393 -70 OFFCURVE",
"410 -54 CURVE SMOOTH",
"427 -39 OFFCURVE",
"440 -23 OFFCURVE",
"449 -5 CURVE SMOOTH",
"462 20 OFFCURVE",
"475 63 OFFCURVE",
"490 124 CURVE SMOOTH",
"505 180 OFFCURVE",
"514 231 OFFCURVE",
"521 276 CURVE SMOOTH",
"524 300 LINE SMOOTH",
"525 307 OFFCURVE",
"525 312 OFFCURVE",
"526 317 CURVE",
"665 412 OFFCURVE",
"747 470 OFFCURVE",
"774 493 CURVE SMOOTH",
"787 504 OFFCURVE",
"794 517 OFFCURVE",
"794 531 CURVE SMOOTH",
"794 545 OFFCURVE",
"787 552 OFFCURVE",
"772 552 CURVE SMOOTH",
"741 552 OFFCURVE",
"708 537 OFFCURVE",
"675 512 CURVE SMOOTH",
"669 507 OFFCURVE",
"666 502 OFFCURVE",
"666 499 CURVE SMOOTH",
"666 496 OFFCURVE",
"669 494 OFFCURVE",
"674 494 CURVE SMOOTH",
"681 494 OFFCURVE",
"688 497 OFFCURVE",
"697 504 CURVE SMOOTH",
"705 510 OFFCURVE",
"715 515 OFFCURVE",
"727 518 CURVE SMOOTH",
"731 519 OFFCURVE",
"735 519 OFFCURVE",
"738 519 CURVE SMOOTH",
"743 519 OFFCURVE",
"745 518 OFFCURVE",
"745 515 CURVE SMOOTH",
"745 512 OFFCURVE",
"743 508 OFFCURVE",
"738 503 CURVE SMOOTH",
"710 471 OFFCURVE",
"640 415 OFFCURVE",
"529 336 CURVE",
"534 375 OFFCURVE",
"536 403 OFFCURVE",
"536 426 CURVE SMOOTH",
"536 492 OFFCURVE",
"516 531 OFFCURVE",
"477 542 CURVE SMOOTH",
"470 544 OFFCURVE",
"462 545 OFFCURVE",
"454 545 CURVE SMOOTH",
"416 545 OFFCURVE",
"376 526 OFFCURVE",
"335 487 CURVE SMOOTH",
"294 448 OFFCURVE",
"261 402 OFFCURVE",
"236 349 CURVE SMOOTH",
"234 345 OFFCURVE",
"233 342 OFFCURVE",
"233 339 CURVE SMOOTH",
"233 333 OFFCURVE",
"236 332 OFFCURVE",
"243 336 CURVE",
"251 343 OFFCURVE",
"259 354 OFFCURVE",
"268 371 CURVE SMOOTH",
"291 412 OFFCURVE",
"318 448 OFFCURVE",
"350 478 CURVE SMOOTH",
"385 511 OFFCURVE",
"416 528 OFFCURVE",
"441 528 CURVE SMOOTH",
"476 528 OFFCURVE",
"494 494 OFFCURVE",
"494 426 CURVE SMOOTH",
"494 393 OFFCURVE",
"490 352 OFFCURVE",
"482 303 CURVE",
"479 300 OFFCURVE",
"476 298 OFFCURVE",
"473 297 CURVE",
"470 295 OFFCURVE",
"468 293 OFFCURVE",
"466 292 CURVE SMOOTH",
"425 264 OFFCURVE",
"384 236 OFFCURVE",
"343 209 CURVE SMOOTH",
"302 181 OFFCURVE",
"261 153 OFFCURVE",
"219 125 CURVE SMOOTH",
"138 67 OFFCURVE",
"78 12 OFFCURVE",
"39 -40 CURVE SMOOTH",
"22 -63 OFFCURVE",
"14 -83 OFFCURVE",
"14 -101 CURVE SMOOTH",
"14 -125 OFFCURVE",
"27 -137 OFFCURVE",
"54 -137 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01265 1070 45 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 45 218 45 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 45 25 45 41 45 57 45 73 45 89 45 105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 45 25 45 41 45 57 45 73 45 89 45 105 45 121 45 137 45 153 45 169 45 185 45 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01283 1061 47 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01283 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"247 -256 OFFCURVE",
"260 -250 OFFCURVE",
"260 -239 CURVE SMOOTH",
"260 -236 OFFCURVE",
"259 -234 OFFCURVE",
"257 -232 CURVE SMOOTH",
"255 -229 OFFCURVE",
"251 -227 OFFCURVE",
"247 -227 CURVE SMOOTH",
"242 -227 OFFCURVE",
"238 -228 OFFCURVE",
"232 -231 CURVE SMOOTH",
"228 -233 OFFCURVE",
"224 -234 OFFCURVE",
"221 -234 CURVE SMOOTH",
"210 -234 OFFCURVE",
"205 -227 OFFCURVE",
"205 -212 CURVE SMOOTH",
"205 -181 OFFCURVE",
"235 -124 OFFCURVE",
"294 -43 CURVE SMOOTH",
"345 29 OFFCURVE",
"388 78 OFFCURVE",
"421 107 CURVE SMOOTH",
"468 147 OFFCURVE",
"520 197 OFFCURVE",
"583 261 CURVE SMOOTH",
"647 325 OFFCURVE",
"692 374 OFFCURVE",
"723 411 CURVE SMOOTH",
"729 418 OFFCURVE",
"732 425 OFFCURVE",
"732 434 CURVE SMOOTH",
"732 453 OFFCURVE",
"722 462 OFFCURVE",
"703 462 CURVE SMOOTH",
"689 462 OFFCURVE",
"672 456 OFFCURVE",
"651 443 CURVE SMOOTH",
"633 432 OFFCURVE",
"618 420 OFFCURVE",
"607 408 CURVE",
"604 403 OFFCURVE",
"602 400 OFFCURVE",
"602 398 CURVE SMOOTH",
"602 394 OFFCURVE",
"605 392 OFFCURVE",
"610 392 CURVE SMOOTH",
"619 392 OFFCURVE",
"627 396 OFFCURVE",
"634 404 CURVE SMOOTH",
"647 419 OFFCURVE",
"661 426 OFFCURVE",
"676 426 CURVE SMOOTH",
"681 426 OFFCURVE",
"683 424 OFFCURVE",
"683 421 CURVE SMOOTH",
"683 418 OFFCURVE",
"682 415 OFFCURVE",
"680 412 CURVE SMOOTH",
"659 374 OFFCURVE",
"620 327 OFFCURVE",
"563 271 CURVE SMOOTH",
"492 202 OFFCURVE",
"441 153 OFFCURVE",
"408 124 CURVE SMOOTH",
"369 90 OFFCURVE",
"325 41 OFFCURVE",
"276 -22 CURVE SMOOTH",
"227 -86 OFFCURVE",
"195 -137 OFFCURVE",
"180 -175 CURVE SMOOTH",
"175 -186 OFFCURVE",
"173 -198 OFFCURVE",
"173 -209 CURVE SMOOTH",
"173 -240 OFFCURVE",
"189 -256 OFFCURVE",
"222 -256 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"306 50 OFFCURVE",
"318 59 OFFCURVE",
"334 77 CURVE SMOOTH",
"352 97 OFFCURVE",
"364 119 OFFCURVE",
"369 144 CURVE SMOOTH",
"372 155 OFFCURVE",
"373 169 OFFCURVE",
"373 184 CURVE SMOOTH",
"373 203 OFFCURVE",
"368 240 OFFCURVE",
"358 295 CURVE SMOOTH",
"346 362 OFFCURVE",
"318 427 OFFCURVE",
"275 488 CURVE SMOOTH",
"219 567 OFFCURVE",
"155 605 OFFCURVE",
"83 605 CURVE SMOOTH",
"-14 605 OFFCURVE",
"-63 549 OFFCURVE",
"-63 437 CURVE SMOOTH",
"-63 364 OFFCURVE",
"-38 309 OFFCURVE",
"12 272 CURVE SMOOTH",
"17 268 OFFCURVE",
"21 266 OFFCURVE",
"25 266 CURVE SMOOTH",
"27 266 OFFCURVE",
"28 267 OFFCURVE",
"28 269 CURVE SMOOTH",
"28 274 OFFCURVE",
"23 281 OFFCURVE",
"13 288 CURVE SMOOTH",
"-14 308 OFFCURVE",
"-27 366 OFFCURVE",
"-27 463 CURVE SMOOTH",
"-27 546 OFFCURVE",
"9 588 OFFCURVE",
"81 588 CURVE SMOOTH",
"144 588 OFFCURVE",
"200 551 OFFCURVE",
"247 475 CURVE SMOOTH",
"284 414 OFFCURVE",
"307 349 OFFCURVE",
"315 282 CURVE SMOOTH",
"320 243 OFFCURVE",
"323 212 OFFCURVE",
"325 188 CURVE SMOOTH",
"327 163 OFFCURVE",
"328 146 OFFCURVE",
"328 137 CURVE SMOOTH",
"328 105 OFFCURVE",
"323 84 OFFCURVE",
"312 73 CURVE SMOOTH",
"302 62 OFFCURVE",
"297 55 OFFCURVE",
"297 52 CURVE SMOOTH",
"297 51 OFFCURVE",
"298 50 OFFCURVE",
"299 50 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01273 1069 83 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01211 1068 23 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01291 1070 64 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 11 22 11 38 11 54 11 70 11 86 11 102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 11 22 11 38 11 54 11 70 11 86 11 102 11 118 11 134 11 150 11 166 11 182 11 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 11 213 11 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 64 218 64 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 64 121 64 137 64 153 64 169 64 185 64 201 64 217 64 233 64 249 64 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 153 64 169 64 185 64 201 64 217 64 233 64 249 64 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 153 64 169 64 185 64 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 73 22 73 38 73 54 73 70 73 86 73 102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 73 22 73 38 73 54 73 70 73 86 73 102 73 118 73 134 73 150 73 166 73 182 73 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 73 213 73 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 549;
}
);
note = Y;
unicode = 0059;
},
{
color = 11;
glyphname = Yacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
unicode = 00DD;
},
{
color = 11;
glyphname = Ycircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
unicode = 0176;
},
{
color = 11;
glyphname = Ydieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
unicode = 0178;
},
{
color = 11;
glyphname = Ydotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
unicode = 1EF4;
},
{
color = 11;
glyphname = Ygrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
unicode = 1EF2;
},
{
color = 11;
glyphname = Yhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
unicode = 1EF6;
},
{
color = 11;
glyphname = Ymacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
unicode = 0232;
},
{
color = 11;
glyphname = Ytilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 549;
}
);
unicode = 1EF8;
},
{
glyphname = Z;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"481 -119 OFFCURVE",
"484 -118 OFFCURVE",
"487 -116 CURVE SMOOTH",
"537 -89 OFFCURVE",
"567 -66 OFFCURVE",
"578 -46 CURVE SMOOTH",
"584 -34 OFFCURVE",
"587 -23 OFFCURVE",
"587 -14 CURVE SMOOTH",
"587 37 OFFCURVE",
"505 62 OFFCURVE",
"340 62 CURVE SMOOTH",
"250 62 OFFCURVE",
"179 55 OFFCURVE",
"127 41 CURVE",
"235 142 OFFCURVE",
"341 229 OFFCURVE",
"450 304 CURVE SMOOTH",
"529 357 OFFCURVE",
"620 413 OFFCURVE",
"728 470 CURVE SMOOTH",
"737 475 OFFCURVE",
"742 481 OFFCURVE",
"742 487 CURVE SMOOTH",
"742 492 OFFCURVE",
"739 496 OFFCURVE",
"733 499 CURVE SMOOTH",
"672 534 OFFCURVE",
"592 551 OFFCURVE",
"491 551 CURVE SMOOTH",
"475 551 OFFCURVE",
"459 550 OFFCURVE",
"444 549 CURVE SMOOTH",
"371 544 OFFCURVE",
"317 528 OFFCURVE",
"280 499 CURVE SMOOTH",
"251 477 OFFCURVE",
"237 451 OFFCURVE",
"237 422 CURVE SMOOTH",
"237 413 OFFCURVE",
"240 408 OFFCURVE",
"246 408 CURVE SMOOTH",
"257 408 OFFCURVE",
"263 414 OFFCURVE",
"263 427 CURVE SMOOTH",
"263 431 LINE SMOOTH",
"262 453 OFFCURVE",
"277 473 OFFCURVE",
"306 490 CURVE SMOOTH",
"339 509 OFFCURVE",
"385 521 OFFCURVE",
"444 526 CURVE SMOOTH",
"449 527 OFFCURVE",
"453 527 OFFCURVE",
"458 527 CURVE SMOOTH",
"473 527 LINE SMOOTH",
"537 527 OFFCURVE",
"605 512 OFFCURVE",
"676 481 CURVE",
"440 354 OFFCURVE",
"224 192 OFFCURVE",
"28 -3 CURVE SMOOTH",
"13 -18 OFFCURVE",
"5 -29 OFFCURVE",
"5 -36 CURVE SMOOTH",
"5 -40 OFFCURVE",
"8 -42 OFFCURVE",
"13 -42 CURVE SMOOTH",
"21 -42 OFFCURVE",
"38 -36 OFFCURVE",
"64 -25 CURVE SMOOTH",
"144 10 OFFCURVE",
"233 28 OFFCURVE",
"332 28 CURVE SMOOTH",
"414 28 OFFCURVE",
"466 27 OFFCURVE",
"487 25 CURVE SMOOTH",
"535 19 OFFCURVE",
"559 5 OFFCURVE",
"559 -16 CURVE SMOOTH",
"559 -23 OFFCURVE",
"557 -32 OFFCURVE",
"552 -41 CURVE SMOOTH",
"547 -50 OFFCURVE",
"536 -61 OFFCURVE",
"520 -74 CURVE SMOOTH",
"513 -79 OFFCURVE",
"506 -85 OFFCURVE",
"497 -90 CURVE SMOOTH",
"482 -97 OFFCURVE",
"475 -105 OFFCURVE",
"475 -115 CURVE SMOOTH",
"475 -118 OFFCURVE",
"476 -119 OFFCURVE",
"479 -119 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 1065 30 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 30 218 30 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01264 1061 46 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1064 34 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 34 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 592;
}
);
note = Z;
unicode = 005A;
},
{
color = 11;
glyphname = Zacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 592;
}
);
unicode = 0179;
},
{
color = 11;
glyphname = Zcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 592;
}
);
unicode = 017D;
},
{
color = 11;
glyphname = Zdotaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 592;
}
);
unicode = 017B;
},
{
glyphname = a;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"51 1 OFFCURVE",
"60 3 OFFCURVE",
"70 8 CURVE SMOOTH",
"107 25 OFFCURVE",
"159 58 OFFCURVE",
"223 112 CURVE SMOOTH",
"308 183 LINE",
"287 141 OFFCURVE",
"277 98 OFFCURVE",
"277 53 CURVE SMOOTH",
"277 26 OFFCURVE",
"281 13 OFFCURVE",
"289 13 CURVE SMOOTH",
"297 13 OFFCURVE",
"307 28 OFFCURVE",
"307 36 CURVE SMOOTH",
"307 37 LINE",
"306 39 OFFCURVE",
"306 43 OFFCURVE",
"306 49 CURVE SMOOTH",
"306 78 OFFCURVE",
"322 123 OFFCURVE",
"353 184 CURVE SMOOTH",
"380 237 OFFCURVE",
"403 273 OFFCURVE",
"422 294 CURVE SMOOTH",
"423 295 OFFCURVE",
"424 297 OFFCURVE",
"424 298 CURVE SMOOTH",
"424 300 OFFCURVE",
"422 301 OFFCURVE",
"419 301 CURVE SMOOTH",
"402 301 OFFCURVE",
"385 295 OFFCURVE",
"370 284 CURVE",
"360 294 OFFCURVE",
"342 299 OFFCURVE",
"316 299 CURVE SMOOTH",
"273 299 OFFCURVE",
"219 271 OFFCURVE",
"152 215 CURVE SMOOTH",
"97 168 OFFCURVE",
"57 122 OFFCURVE",
"33 77 CURVE SMOOTH",
"24 58 OFFCURVE",
"19 42 OFFCURVE",
"19 28 CURVE SMOOTH",
"19 10 OFFCURVE",
"27 1 OFFCURVE",
"42 1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"80 47 OFFCURVE",
"76 51 OFFCURVE",
"76 58 CURVE SMOOTH",
"76 67 OFFCURVE",
"79 77 OFFCURVE",
"85 88 CURVE SMOOTH",
"102 117 OFFCURVE",
"140 156 OFFCURVE",
"199 203 CURVE SMOOTH",
"250 243 OFFCURVE",
"287 263 OFFCURVE",
"311 263 CURVE SMOOTH",
"323 263 OFFCURVE",
"331 257 OFFCURVE",
"335 246 CURVE",
"316 225 OFFCURVE",
"275 180 OFFCURVE",
"214 129 CURVE SMOOTH",
"165 88 OFFCURVE",
"117 58 OFFCURVE",
"100 51 CURVE",
"95 48 OFFCURVE",
"90 47 OFFCURVE",
"87 47 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01221 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01213 21 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01239 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 367;
}
);
note = a;
unicode = 0061;
},
{
color = 11;
glyphname = aacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 00E1;
},
{
color = 11;
glyphname = abreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 0103;
},
{
color = 11;
glyphname = abreveacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 1EAF;
},
{
color = 11;
glyphname = abrevedotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 1EB7;
},
{
color = 11;
glyphname = abrevegrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 1EB1;
},
{
color = 11;
glyphname = abrevehookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 1EB3;
},
{
color = 11;
glyphname = abrevetilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 1EB5;
},
{
color = 11;
glyphname = acaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 01CE;
},
{
color = 11;
glyphname = acircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 00E2;
},
{
color = 11;
glyphname = acircumflexacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 1EA5;
},
{
color = 11;
glyphname = acircumflexdotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 1EAD;
},
{
color = 11;
glyphname = acircumflexgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 1EA7;
},
{
color = 11;
glyphname = acircumflexhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 1EA9;
},
{
color = 11;
glyphname = acircumflextilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 1EAB;
},
{
color = 11;
glyphname = adblgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dblgravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 0201;
},
{
color = 11;
glyphname = adieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 00E4;
},
{
color = 11;
glyphname = adotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 1EA1;
},
{
color = 11;
glyphname = agrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 00E0;
},
{
color = 11;
glyphname = ahookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 1EA3;
},
{
color = 11;
glyphname = ainvertedbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = breveinvertedcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 0203;
},
{
color = 11;
glyphname = amacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 0101;
},
{
color = 11;
glyphname = aogonek;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ogonekcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 0105;
},
{
color = 11;
glyphname = aring;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ringcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 00E5;
},
{
color = 11;
glyphname = aringacute;
lastChange = "2021-12-23 19:27:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ringacute;
transform = "{1, 0, 0, 1, 367, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 483;
}
);
unicode = 01FB;
},
{
color = 11;
glyphname = atilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 00E3;
},
{
glyphname = ae;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"384 -5 OFFCURVE",
"411 5 OFFCURVE",
"448 24 CURVE SMOOTH",
"477 41 OFFCURVE",
"500 56 OFFCURVE",
"517 71 CURVE SMOOTH",
"521 75 OFFCURVE",
"524 79 OFFCURVE",
"525 84 CURVE",
"524 87 OFFCURVE",
"521 89 OFFCURVE",
"518 89 CURVE SMOOTH",
"514 89 OFFCURVE",
"510 87 OFFCURVE",
"505 84 CURVE",
"492 73 OFFCURVE",
"468 60 OFFCURVE",
"433 45 CURVE SMOOTH",
"396 29 OFFCURVE",
"368 21 OFFCURVE",
"350 21 CURVE SMOOTH",
"329 21 OFFCURVE",
"316 36 OFFCURVE",
"316 66 CURVE SMOOTH",
"316 72 OFFCURVE",
"317 79 OFFCURVE",
"319 86 CURVE SMOOTH",
"323 101 OFFCURVE",
"330 116 OFFCURVE",
"341 135 CURVE",
"348 134 OFFCURVE",
"354 133 OFFCURVE",
"361 133 CURVE SMOOTH",
"396 133 OFFCURVE",
"434 147 OFFCURVE",
"474 175 CURVE SMOOTH",
"514 203 OFFCURVE",
"534 231 OFFCURVE",
"534 259 CURVE SMOOTH",
"534 263 OFFCURVE",
"534 266 OFFCURVE",
"533 270 CURVE SMOOTH",
"530 287 OFFCURVE",
"516 297 OFFCURVE",
"490 301 CURVE",
"487 302 OFFCURVE",
"471 297 OFFCURVE",
"441 286 CURVE SMOOTH",
"401 270 LINE",
"405 275 OFFCURVE",
"409 280 OFFCURVE",
"413 284 CURVE SMOOTH",
"422 294 LINE SMOOTH",
"423 295 OFFCURVE",
"424 297 OFFCURVE",
"424 298 CURVE SMOOTH",
"424 300 OFFCURVE",
"422 301 OFFCURVE",
"419 301 CURVE SMOOTH",
"402 301 OFFCURVE",
"385 295 OFFCURVE",
"370 284 CURVE",
"360 294 OFFCURVE",
"342 299 OFFCURVE",
"316 299 CURVE SMOOTH",
"273 299 OFFCURVE",
"219 271 OFFCURVE",
"152 215 CURVE SMOOTH",
"97 168 OFFCURVE",
"57 122 OFFCURVE",
"33 77 CURVE SMOOTH",
"24 58 OFFCURVE",
"19 42 OFFCURVE",
"19 28 CURVE SMOOTH",
"19 10 OFFCURVE",
"27 1 OFFCURVE",
"42 1 CURVE SMOOTH",
"51 1 OFFCURVE",
"60 3 OFFCURVE",
"70 8 CURVE SMOOTH",
"107 25 OFFCURVE",
"158 59 OFFCURVE",
"223 112 CURVE SMOOTH",
"308 183 LINE",
"305 166 OFFCURVE",
"304 153 OFFCURVE",
"304 145 CURVE",
"291 121 OFFCURVE",
"283 97 OFFCURVE",
"279 74 CURVE SMOOTH",
"278 65 OFFCURVE",
"278 56 OFFCURVE",
"279 49 CURVE SMOOTH",
"286 20 OFFCURVE",
"324 -5 OFFCURVE",
"365 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"80 44 OFFCURVE",
"76 47 OFFCURVE",
"76 58 CURVE SMOOTH",
"76 67 OFFCURVE",
"79 77 OFFCURVE",
"85 88 CURVE SMOOTH",
"102 117 OFFCURVE",
"140 156 OFFCURVE",
"199 203 CURVE SMOOTH",
"250 243 OFFCURVE",
"287 263 OFFCURVE",
"311 263 CURVE SMOOTH",
"323 263 OFFCURVE",
"331 257 OFFCURVE",
"335 246 CURVE",
"316 225 OFFCURVE",
"275 190 OFFCURVE",
"214 139 CURVE SMOOTH",
"182 113 OFFCURVE",
"156 92 OFFCURVE",
"135 77 CURVE SMOOTH",
"114 62 OFFCURVE",
"98 52 OFFCURVE",
"87 47 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"377 155 OFFCURVE",
"367 158 OFFCURVE",
"358 165 CURVE",
"401 241 OFFCURVE",
"438 277 OFFCURVE",
"467 272 CURVE SMOOTH",
"477 271 OFFCURVE",
"483 264 OFFCURVE",
"483 251 CURVE SMOOTH",
"483 235 OFFCURVE",
"475 216 OFFCURVE",
"457 194 CURVE SMOOTH",
"435 168 OFFCURVE",
"412 155 OFFCURVE",
"388 155 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01226 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01244 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01292 1061 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01210 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 10 214 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01219 26 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01236 26 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01252 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01274 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01263 52 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 573;
}
);
note = ae;
unicode = 00E6;
},
{
color = 11;
glyphname = aeacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = ae;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 573;
}
);
unicode = 01FD;
},
{
glyphname = b;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"59 -19 OFFCURVE",
"121 11 OFFCURVE",
"202 70 CURVE SMOOTH",
"244 100 OFFCURVE",
"280 136 OFFCURVE",
"311 177 CURVE SMOOTH",
"341 217 OFFCURVE",
"356 248 OFFCURVE",
"356 269 CURVE SMOOTH",
"356 284 OFFCURVE",
"349 291 OFFCURVE",
"335 291 CURVE SMOOTH",
"331 291 OFFCURVE",
"328 291 OFFCURVE",
"324 290 CURVE SMOOTH",
"259 279 OFFCURVE",
"212 262 OFFCURVE",
"182 241 CURVE",
"181 244 OFFCURVE",
"180 246 OFFCURVE",
"180 248 CURVE SMOOTH",
"180 254 OFFCURVE",
"187 268 OFFCURVE",
"200 289 CURVE SMOOTH",
"253 370 OFFCURVE",
"291 424 OFFCURVE",
"314 451 CURVE SMOOTH",
"337 477 OFFCURVE",
"358 492 OFFCURVE",
"377 495 CURVE SMOOTH",
"390 497 OFFCURVE",
"396 501 OFFCURVE",
"396 507 CURVE SMOOTH",
"396 512 OFFCURVE",
"392 515 OFFCURVE",
"384 515 CURVE SMOOTH",
"376 515 OFFCURVE",
"361 510 OFFCURVE",
"338 500 CURVE SMOOTH",
"315 491 OFFCURVE",
"301 484 OFFCURVE",
"297 479 CURVE SMOOTH",
"284 463 OFFCURVE",
"264 437 OFFCURVE",
"238 400 CURVE SMOOTH",
"212 363 OFFCURVE",
"180 316 OFFCURVE",
"141 258 CURVE SMOOTH",
"102 200 OFFCURVE",
"71 152 OFFCURVE",
"48 115 CURVE SMOOTH",
"25 78 OFFCURVE",
"8 50 OFFCURVE",
"-1 33 CURVE SMOOTH",
"-6 24 OFFCURVE",
"-8 15 OFFCURVE",
"-8 6 CURVE SMOOTH",
"-8 -11 OFFCURVE",
"1 -19 OFFCURVE",
"18 -19 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"55 38 OFFCURVE",
"49 42 OFFCURVE",
"49 49 CURVE SMOOTH",
"49 51 OFFCURVE",
"49 53 OFFCURVE",
"51 56 CURVE SMOOTH",
"78 100 OFFCURVE",
"102 137 OFFCURVE",
"124 166 CURVE SMOOTH",
"156 209 OFFCURVE",
"223 247 OFFCURVE",
"275 255 CURVE SMOOTH",
"285 256 OFFCURVE",
"291 248 OFFCURVE",
"291 236 CURVE SMOOTH",
"291 233 OFFCURVE",
"291 230 OFFCURVE",
"290 227 CURVE SMOOTH",
"278 178 OFFCURVE",
"250 136 OFFCURVE",
"205 99 CURVE SMOOTH",
"159 60 OFFCURVE",
"112 38 OFFCURVE",
"63 38 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01218 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0128 18 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 50 23 50 39 50 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 50 70 50 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 305;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"79 0 OFFCURVE",
"86 0 OFFCURVE",
"93 1 CURVE SMOOTH",
"117 4 OFFCURVE",
"156 19 OFFCURVE",
"212 48 CURVE SMOOTH",
"256 71 OFFCURVE",
"286 88 OFFCURVE",
"302 101 CURVE SMOOTH",
"305 104 OFFCURVE",
"309 113 OFFCURVE",
"309 119 CURVE SMOOTH",
"309 122 LINE",
"308 125 OFFCURVE",
"307 126 OFFCURVE",
"305 125 CURVE SMOOTH",
"194 60 OFFCURVE",
"119 25 OFFCURVE",
"80 25 CURVE SMOOTH",
"63 25 OFFCURVE",
"55 35 OFFCURVE",
"55 55 CURVE SMOOTH",
"55 62 OFFCURVE",
"57 70 OFFCURVE",
"60 80 CURVE SMOOTH",
"71 113 OFFCURVE",
"93 147 OFFCURVE",
"128 183 CURVE SMOOTH",
"163 218 OFFCURVE",
"202 246 OFFCURVE",
"243 267 CURVE SMOOTH",
"255 273 OFFCURVE",
"267 276 OFFCURVE",
"279 276 CURVE SMOOTH",
"291 276 OFFCURVE",
"302 273 OFFCURVE",
"314 267 CURVE SMOOTH",
"317 265 OFFCURVE",
"323 268 OFFCURVE",
"332 276 CURVE SMOOTH",
"341 285 OFFCURVE",
"346 293 OFFCURVE",
"346 298 CURVE SMOOTH",
"346 306 OFFCURVE",
"338 310 OFFCURVE",
"323 310 CURVE SMOOTH",
"294 310 OFFCURVE",
"265 303 OFFCURVE",
"236 289 CURVE SMOOTH",
"187 266 OFFCURVE",
"141 235 OFFCURVE",
"100 197 CURVE SMOOTH",
"55 158 OFFCURVE",
"27 120 OFFCURVE",
"15 84 CURVE SMOOTH",
"11 72 OFFCURVE",
"9 61 OFFCURVE",
"9 52 CURVE SMOOTH",
"9 17 OFFCURVE",
"30 0 OFFCURVE",
"73 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1070 28 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 12 213 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 1075 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 272;
}
);
note = c;
unicode = 0063;
},
{
color = 11;
glyphname = cacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 272;
}
);
unicode = 0107;
},
{
color = 11;
glyphname = ccaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 272;
}
);
unicode = 010D;
},
{
color = 11;
glyphname = ccedilla;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = cedillacomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 272;
}
);
unicode = 00E7;
},
{
color = 11;
glyphname = ccircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 272;
}
);
unicode = 0109;
},
{
color = 11;
glyphname = cdotaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = dotaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 272;
}
);
unicode = 010B;
},
{
glyphname = d;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"304 -14 OFFCURVE",
"311 -9 OFFCURVE",
"311 1 CURVE SMOOTH",
"311 4 OFFCURVE",
"309 7 OFFCURVE",
"305 8 CURVE SMOOTH",
"296 12 OFFCURVE",
"291 23 OFFCURVE",
"291 41 CURVE SMOOTH",
"291 66 OFFCURVE",
"300 105 OFFCURVE",
"318 156 CURVE SMOOTH",
"331 192 OFFCURVE",
"342 221 OFFCURVE",
"353 242 CURVE",
"446 378 OFFCURVE",
"501 457 OFFCURVE",
"518 479 CURVE SMOOTH",
"524 486 OFFCURVE",
"527 492 OFFCURVE",
"527 498 CURVE SMOOTH",
"527 505 OFFCURVE",
"522 508 OFFCURVE",
"511 508 CURVE SMOOTH",
"500 508 OFFCURVE",
"491 506 OFFCURVE",
"486 501 CURVE SMOOTH",
"464 482 OFFCURVE",
"436 446 OFFCURVE",
"402 393 CURVE SMOOTH",
"333 277 LINE",
"320 284 OFFCURVE",
"305 288 OFFCURVE",
"287 288 CURVE SMOOTH",
"246 288 OFFCURVE",
"192 259 OFFCURVE",
"124 201 CURVE SMOOTH",
"70 155 OFFCURVE",
"30 109 OFFCURVE",
"5 63 CURVE SMOOTH",
"-2 50 OFFCURVE",
"-5 39 OFFCURVE",
"-5 29 CURVE SMOOTH",
"-5 10 OFFCURVE",
"5 1 OFFCURVE",
"24 1 CURVE SMOOTH",
"34 1 OFFCURVE",
"46 4 OFFCURVE",
"60 10 CURVE SMOOTH",
"113 34 OFFCURVE",
"192 94 OFFCURVE",
"297 190 CURVE",
"272 129 OFFCURVE",
"259 81 OFFCURVE",
"259 44 CURVE SMOOTH",
"259 25 OFFCURVE",
"263 9 OFFCURVE",
"270 -2 CURVE SMOOTH",
"275 -10 OFFCURVE",
"281 -14 OFFCURVE",
"290 -14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"58 46 OFFCURVE",
"54 52 OFFCURVE",
"54 62 CURVE SMOOTH",
"54 71 OFFCURVE",
"58 83 OFFCURVE",
"67 96 CURVE SMOOTH",
"86 127 OFFCURVE",
"117 160 OFFCURVE",
"162 197 CURVE SMOOTH",
"211 238 OFFCURVE",
"250 258 OFFCURVE",
"279 258 CURVE SMOOTH",
"288 258 OFFCURVE",
"297 251 OFFCURVE",
"304 237 CURVE",
"259 190 OFFCURVE",
"221 152 OFFCURVE",
"186 125 CURVE SMOOTH",
"137 86 OFFCURVE",
"100 61 OFFCURVE",
"77 50 CURVE SMOOTH",
"72 48 OFFCURVE",
"68 46 OFFCURVE",
"65 46 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 1068 17 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 17 218 17 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01213 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01231 1064 44 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01219 13 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 367;
}
);
note = d;
unicode = 0064;
},
{
glyphname = eth;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"209 -19 OFFCURVE",
"375 252 OFFCURVE",
"395 394 CURVE SMOOTH",
"398 413 OFFCURVE",
"399 431 OFFCURVE",
"399 448 CURVE SMOOTH",
"399 473 OFFCURVE",
"396 495 OFFCURVE",
"390 515 CURVE",
"405 523 OFFCURVE",
"421 531 OFFCURVE",
"437 538 CURVE SMOOTH",
"446 541 OFFCURVE",
"452 544 OFFCURVE",
"457 546 CURVE SMOOTH",
"466 551 LINE SMOOTH",
"471 553 OFFCURVE",
"474 556 OFFCURVE",
"474 560 CURVE SMOOTH",
"474 561 OFFCURVE",
"473 562 OFFCURVE",
"473 563 CURVE SMOOTH",
"472 566 OFFCURVE",
"469 568 OFFCURVE",
"465 568 CURVE SMOOTH",
"464 568 OFFCURVE",
"463 568 OFFCURVE",
"461 567 CURVE",
"434 560 LINE SMOOTH",
"417 555 OFFCURVE",
"398 549 OFFCURVE",
"379 542 CURVE",
"355 590 OFFCURVE",
"310 615 OFFCURVE",
"251 615 CURVE SMOOTH",
"226 615 OFFCURVE",
"217 604 OFFCURVE",
"190 595 CURVE SMOOTH",
"142 580 OFFCURVE",
"133 560 OFFCURVE",
"130 544 CURVE SMOOTH",
"129 534 OFFCURVE",
"135 531 OFFCURVE",
"140 531 CURVE",
"150 544 OFFCURVE",
"163 560 OFFCURVE",
"184 573 CURVE SMOOTH",
"207 586 OFFCURVE",
"228 591 OFFCURVE",
"243 591 CURVE SMOOTH",
"292 591 OFFCURVE",
"321 565 OFFCURVE",
"336 524 CURVE",
"310 512 OFFCURVE",
"282 497 OFFCURVE",
"253 480 CURVE",
"247 468 OFFCURVE",
"244 458 OFFCURVE",
"244 449 CURVE SMOOTH",
"244 444 OFFCURVE",
"245 441 OFFCURVE",
"246 437 CURVE SMOOTH",
"248 432 OFFCURVE",
"251 431 OFFCURVE",
"257 434 CURVE",
"285 455 OFFCURVE",
"315 474 OFFCURVE",
"345 491 CURVE",
"347 477 OFFCURVE",
"348 462 OFFCURVE",
"348 446 CURVE SMOOTH",
"348 271 OFFCURVE",
"213 0 OFFCURVE",
"70 0 CURVE SMOOTH",
"55 0 OFFCURVE",
"47 8 OFFCURVE",
"47 25 CURVE SMOOTH",
"47 27 OFFCURVE",
"48 31 OFFCURVE",
"48 34 CURVE SMOOTH",
"59 113 OFFCURVE",
"165 211 OFFCURVE",
"218 239 CURVE SMOOTH",
"267 265 OFFCURVE",
"281 274 OFFCURVE",
"281 288 CURVE SMOOTH",
"281 294 OFFCURVE",
"279 299 OFFCURVE",
"272 299 CURVE SMOOTH",
"235 299 OFFCURVE",
"158 255 OFFCURVE",
"97 192 CURVE SMOOTH",
"51 144 OFFCURVE",
"10 77 OFFCURVE",
"10 32 CURVE SMOOTH",
"10 2 OFFCURVE",
"28 -19 OFFCURVE",
"74 -19 CURVE SMOOTH"
);
}
);
width = 339;
}
);
unicode = 00F0;
},
{
color = 11;
glyphname = dcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = caroncomb.alt;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 010F;
},
{
color = 11;
glyphname = dcroat;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 335, 320}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 0111;
},
{
color = 11;
glyphname = dzcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 367, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 674;
}
);
unicode = 01C6;
},
{
glyphname = e;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"101 -5 OFFCURVE",
"130 5 OFFCURVE",
"170 24 CURVE SMOOTH",
"202 41 OFFCURVE",
"228 56 OFFCURVE",
"248 71 CURVE SMOOTH",
"254 76 OFFCURVE",
"257 80 OFFCURVE",
"258 84 CURVE SMOOTH",
"258 87 OFFCURVE",
"256 89 OFFCURVE",
"252 89 CURVE SMOOTH",
"248 89 OFFCURVE",
"243 87 OFFCURVE",
"238 84 CURVE SMOOTH",
"224 73 OFFCURVE",
"198 60 OFFCURVE",
"159 45 CURVE SMOOTH",
"119 29 OFFCURVE",
"90 21 OFFCURVE",
"72 21 CURVE SMOOTH",
"54 21 OFFCURVE",
"45 32 OFFCURVE",
"45 54 CURVE SMOOTH",
"45 63 OFFCURVE",
"48 74 OFFCURVE",
"53 86 CURVE SMOOTH",
"60 101 OFFCURVE",
"71 116 OFFCURVE",
"84 135 CURVE",
"91 134 OFFCURVE",
"97 133 OFFCURVE",
"104 133 CURVE SMOOTH",
"139 133 OFFCURVE",
"179 147 OFFCURVE",
"225 175 CURVE SMOOTH",
"276 206 OFFCURVE",
"302 238 OFFCURVE",
"302 270 CURVE SMOOTH",
"302 287 OFFCURVE",
"290 297 OFFCURVE",
"265 301 CURVE",
"262 302 OFFCURVE",
"245 297 OFFCURVE",
"213 286 CURVE SMOOTH",
"163 268 LINE",
"81 194 OFFCURVE",
"30 129 OFFCURVE",
"11 74 CURVE SMOOTH",
"8 64 OFFCURVE",
"6 56 OFFCURVE",
"6 49 CURVE SMOOTH",
"6 20 OFFCURVE",
"41 -5 OFFCURVE",
"82 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"124 155 OFFCURVE",
"114 158 OFFCURVE",
"107 165 CURVE",
"164 241 OFFCURVE",
"207 277 OFFCURVE",
"236 272 CURVE SMOOTH",
"245 271 OFFCURVE",
"249 266 OFFCURVE",
"249 257 CURVE SMOOTH",
"249 240 OFFCURVE",
"236 219 OFFCURVE",
"211 194 CURVE SMOOTH",
"184 168 OFFCURVE",
"158 155 OFFCURVE",
"135 155 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0128 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 8 213 8 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 49 218 49 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01237 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01225 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01245 1061 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01210 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 10 214 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 256;
}
);
note = e;
unicode = 0065;
},
{
color = 11;
glyphname = eacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 00E9;
},
{
color = 11;
glyphname = ebreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 0115;
},
{
color = 11;
glyphname = ecaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 011B;
},
{
color = 11;
glyphname = ecircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 00EA;
},
{
color = 11;
glyphname = ecircumflexacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 1EBF;
},
{
color = 11;
glyphname = ecircumflexdotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 1EC7;
},
{
color = 11;
glyphname = ecircumflexgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 1EC1;
},
{
color = 11;
glyphname = ecircumflexhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 1EC3;
},
{
color = 11;
glyphname = ecircumflextilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 1EC5;
},
{
color = 11;
glyphname = edblgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dblgravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 0205;
},
{
color = 11;
glyphname = edieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 00EB;
},
{
color = 11;
glyphname = edotaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 0117;
},
{
color = 11;
glyphname = edotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 1EB9;
},
{
color = 11;
glyphname = egrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 00E8;
},
{
color = 11;
glyphname = ehookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 1EBB;
},
{
color = 11;
glyphname = einvertedbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = breveinvertedcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 0207;
},
{
color = 11;
glyphname = emacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 0113;
},
{
color = 11;
glyphname = eogonek;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = ogonekcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 0119;
},
{
color = 11;
glyphname = etilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 256;
}
);
unicode = 1EBD;
},
{
glyphname = schwa;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"46 -6 OFFCURVE",
"63 -1 OFFCURVE",
"95 10 CURVE SMOOTH",
"145 28 LINE",
"227 102 OFFCURVE",
"278 167 OFFCURVE",
"297 222 CURVE SMOOTH",
"300 232 OFFCURVE",
"302 240 OFFCURVE",
"302 247 CURVE SMOOTH",
"302 276 OFFCURVE",
"267 301 OFFCURVE",
"226 301 CURVE SMOOTH",
"207 301 OFFCURVE",
"178 291 OFFCURVE",
"138 272 CURVE SMOOTH",
"106 255 OFFCURVE",
"80 240 OFFCURVE",
"60 225 CURVE SMOOTH",
"54 220 OFFCURVE",
"51 216 OFFCURVE",
"50 212 CURVE SMOOTH",
"50 209 OFFCURVE",
"52 207 OFFCURVE",
"56 207 CURVE SMOOTH",
"60 207 OFFCURVE",
"65 209 OFFCURVE",
"70 212 CURVE SMOOTH",
"84 223 OFFCURVE",
"110 236 OFFCURVE",
"149 251 CURVE SMOOTH",
"189 267 OFFCURVE",
"218 275 OFFCURVE",
"236 275 CURVE SMOOTH",
"254 275 OFFCURVE",
"263 264 OFFCURVE",
"263 242 CURVE SMOOTH",
"263 233 OFFCURVE",
"260 222 OFFCURVE",
"255 210 CURVE SMOOTH",
"248 195 OFFCURVE",
"237 180 OFFCURVE",
"224 161 CURVE",
"217 162 OFFCURVE",
"211 163 OFFCURVE",
"204 163 CURVE SMOOTH",
"169 163 OFFCURVE",
"129 149 OFFCURVE",
"83 121 CURVE SMOOTH",
"32 90 OFFCURVE",
"6 58 OFFCURVE",
"6 26 CURVE SMOOTH",
"6 9 OFFCURVE",
"18 -1 OFFCURVE",
"43 -5 CURVE"
);
},
{
closed = 1;
nodes = (
"63 25 OFFCURVE",
"59 30 OFFCURVE",
"59 39 CURVE SMOOTH",
"59 56 OFFCURVE",
"72 77 OFFCURVE",
"97 102 CURVE SMOOTH",
"124 128 OFFCURVE",
"150 141 OFFCURVE",
"173 141 CURVE SMOOTH",
"184 141 OFFCURVE",
"194 138 OFFCURVE",
"201 131 CURVE",
"144 55 OFFCURVE",
"101 19 OFFCURVE",
"72 24 CURVE SMOOTH"
);
}
);
width = 256;
}
);
unicode = 0259;
},
{
glyphname = f;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-9 -112 OFFCURVE",
"2 -101 OFFCURVE",
"2 -90 CURVE SMOOTH",
"2 -67 OFFCURVE",
"8 -44 OFFCURVE",
"19 -20 CURVE SMOOTH",
"54 51 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"181 253 OFFCURVE",
"197 262 OFFCURVE",
"217 263 CURVE SMOOTH",
"262 266 OFFCURVE",
"305 267 OFFCURVE",
"345 267 CURVE SMOOTH",
"358 267 OFFCURVE",
"364 270 OFFCURVE",
"364 276 CURVE SMOOTH",
"364 281 OFFCURVE",
"359 284 OFFCURVE",
"350 285 CURVE SMOOTH",
"326 289 OFFCURVE",
"291 291 OFFCURVE",
"244 291 CURVE SMOOTH",
"207 291 LINE",
"255 359 OFFCURVE",
"300 409 OFFCURVE",
"342 440 CURVE SMOOTH",
"383 471 OFFCURVE",
"417 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"527 474 OFFCURVE",
"538 484 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"266 411 OFFCURVE",
"218 359 OFFCURVE",
"169 290 CURVE",
"160 289 OFFCURVE",
"151 289 OFFCURVE",
"141 288 CURVE SMOOTH",
"107 285 LINE SMOOTH",
"103 285 OFFCURVE",
"101 284 OFFCURVE",
"101 281 CURVE SMOOTH",
"101 276 OFFCURVE",
"106 269 OFFCURVE",
"115 260 CURVE SMOOTH",
"124 251 OFFCURVE",
"131 247 OFFCURVE",
"138 247 CURVE",
"53 122 OFFCURVE",
"-2 29 OFFCURVE",
"-27 -34 CURVE SMOOTH",
"-31 -43 OFFCURVE",
"-33 -53 OFFCURVE",
"-33 -62 CURVE SMOOTH",
"-33 -69 OFFCURVE",
"-32 -76 OFFCURVE",
"-29 -85 CURVE SMOOTH",
"-26 -94 OFFCURVE",
"-25 -99 OFFCURVE",
"-25 -101 CURVE SMOOTH",
"-25 -108 OFFCURVE",
"-22 -112 OFFCURVE",
"-17 -112 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01250 1063 6 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1064 18 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 239;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"77 -312 OFFCURVE",
"152 -272 OFFCURVE",
"217 -191 CURVE SMOOTH",
"266 -128 OFFCURVE",
"306 -48 OFFCURVE",
"335 50 CURVE SMOOTH",
"344 79 OFFCURVE",
"380 101 OFFCURVE",
"441 115 CURVE",
"444 118 LINE",
"444 121 OFFCURVE",
"436 128 OFFCURVE",
"429 128 CURVE SMOOTH",
"427 128 OFFCURVE",
"426 127 OFFCURVE",
"425 127 CURVE SMOOTH",
"411 124 OFFCURVE",
"398 120 OFFCURVE",
"386 116 CURVE SMOOTH",
"373 112 OFFCURVE",
"362 108 OFFCURVE",
"351 105 CURVE",
"360 134 OFFCURVE",
"368 160 OFFCURVE",
"375 183 CURVE SMOOTH",
"395 247 LINE",
"370 241 OFFCURVE",
"354 237 OFFCURVE",
"349 235 CURVE SMOOTH",
"335 228 OFFCURVE",
"326 216 OFFCURVE",
"323 199 CURVE",
"242 143 OFFCURVE",
"178 106 OFFCURVE",
"131 83 CURVE SMOOTH",
"123 79 OFFCURVE",
"116 77 OFFCURVE",
"109 77 CURVE SMOOTH",
"99 77 OFFCURVE",
"94 82 OFFCURVE",
"94 92 CURVE SMOOTH",
"94 123 OFFCURVE",
"125 161 OFFCURVE",
"188 207 CURVE SMOOTH",
"249 251 OFFCURVE",
"297 273 OFFCURVE",
"333 273 CURVE SMOOTH",
"343 273 OFFCURVE",
"352 272 OFFCURVE",
"359 269 CURVE",
"380 280 OFFCURVE",
"390 288 OFFCURVE",
"390 294 CURVE SMOOTH",
"390 300 OFFCURVE",
"380 303 OFFCURVE",
"359 303 CURVE SMOOTH",
"313 303 OFFCURVE",
"253 279 OFFCURVE",
"180 232 CURVE SMOOTH",
"109 186 OFFCURVE",
"67 145 OFFCURVE",
"52 109 CURVE SMOOTH",
"47 99 OFFCURVE",
"45 89 OFFCURVE",
"45 78 CURVE SMOOTH",
"45 53 OFFCURVE",
"57 40 OFFCURVE",
"82 40 CURVE SMOOTH",
"103 40 OFFCURVE",
"142 58 OFFCURVE",
"199 93 CURVE SMOOTH",
"317 168 LINE",
"309 129 OFFCURVE",
"302 101 OFFCURVE",
"297 81 CURVE",
"106 1 OFFCURVE",
"-28 -61 OFFCURVE",
"-112 -104 CURVE",
"-126 -127 OFFCURVE",
"-133 -152 OFFCURVE",
"-133 -178 CURVE SMOOTH",
"-133 -214 OFFCURVE",
"-121 -245 OFFCURVE",
"-97 -272 CURVE SMOOTH",
"-73 -299 OFFCURVE",
"-44 -312 OFFCURVE",
"-9 -312 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-53 -293 OFFCURVE",
"-86 -255 OFFCURVE",
"-86 -213 CURVE SMOOTH",
"-86 -184 OFFCURVE",
"-73 -157 OFFCURVE",
"-46 -130 CURVE SMOOTH",
"-5 -89 OFFCURVE",
"48 -53 OFFCURVE",
"114 -22 CURVE SMOOTH",
"174 3 OFFCURVE",
"230 28 OFFCURVE",
"290 55 CURVE",
"267 -30 OFFCURVE",
"233 -105 OFFCURVE",
"186 -169 CURVE SMOOTH",
"125 -252 OFFCURVE",
"57 -293 OFFCURVE",
"-20 -293 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 23 218 23 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01239 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01267 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 67 118 67 134 67 150 67 166 67 182 67 198 67 214 67 230 67 246 67 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 67 22 67 38 67 54 67 70 67 86 67 102 67 118 67 134 67 150 67 166 67 182 67 198 67 214 67 230 67 246 67 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 67 22 67 38 67 54 67 70 67 86 67 102 67 118 67 134 67 150 67 166 67 182 67 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 67 213 67 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 1073 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01229 1064 35 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 404;
}
);
note = g;
unicode = 0067;
},
{
color = 11;
glyphname = gbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 404;
}
);
unicode = 011F;
},
{
color = 11;
glyphname = gcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 404;
}
);
unicode = 01E7;
},
{
color = 11;
glyphname = gcircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 404;
}
);
unicode = 011D;
},
{
color = 11;
glyphname = gcommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 404;
}
);
unicode = 0123;
},
{
color = 11;
glyphname = gdotaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = dotaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 404;
}
);
unicode = 0121;
},
{
glyphname = h;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"5 -7 OFFCURVE",
"24 0 OFFCURVE",
"55 13 CURVE",
"71 46 OFFCURVE",
"102 83 OFFCURVE",
"147 124 CURVE SMOOTH",
"162 137 OFFCURVE",
"190 158 OFFCURVE",
"231 187 CURVE SMOOTH",
"280 220 OFFCURVE",
"311 237 OFFCURVE",
"323 237 CURVE SMOOTH",
"325 237 OFFCURVE",
"326 237 OFFCURVE",
"327 236 CURVE SMOOTH",
"330 233 OFFCURVE",
"319 214 OFFCURVE",
"296 179 CURVE SMOOTH",
"267 135 OFFCURVE",
"246 100 OFFCURVE",
"235 73 CURVE",
"234 69 OFFCURVE",
"233 66 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 43 OFFCURVE",
"254 25 OFFCURVE",
"295 9 CURVE",
"322 15 OFFCURVE",
"351 27 OFFCURVE",
"382 46 CURVE SMOOTH",
"449 88 LINE SMOOTH",
"454 91 OFFCURVE",
"459 102 OFFCURVE",
"459 109 CURVE SMOOTH",
"459 112 OFFCURVE",
"458 114 OFFCURVE",
"455 113 CURVE",
"379 74 LINE SMOOTH",
"342 55 OFFCURVE",
"316 46 OFFCURVE",
"302 46 CURVE SMOOTH",
"290 46 OFFCURVE",
"284 52 OFFCURVE",
"284 64 CURVE SMOOTH",
"284 74 OFFCURVE",
"289 89 OFFCURVE",
"298 109 CURVE SMOOTH",
"324 166 OFFCURVE",
"358 216 OFFCURVE",
"401 259 CURVE",
"390 279 OFFCURVE",
"379 289 OFFCURVE",
"368 289 CURVE SMOOTH",
"350 289 OFFCURVE",
"261 234 OFFCURVE",
"100 123 CURVE",
"132 179 OFFCURVE",
"173 237 OFFCURVE",
"222 298 CURVE SMOOTH",
"310 407 OFFCURVE",
"366 473 OFFCURVE",
"389 495 CURVE SMOOTH",
"420 526 OFFCURVE",
"441 541 OFFCURVE",
"452 541 CURVE SMOOTH",
"463 541 OFFCURVE",
"468 544 OFFCURVE",
"468 550 CURVE SMOOTH",
"468 557 OFFCURVE",
"463 560 OFFCURVE",
"454 560 CURVE SMOOTH",
"445 560 OFFCURVE",
"428 555 OFFCURVE",
"402 544 CURVE SMOOTH",
"375 534 OFFCURVE",
"360 527 OFFCURVE",
"357 522 CURVE",
"304 458 OFFCURVE",
"245 382 OFFCURVE",
"180 294 CURVE SMOOTH",
"103 189 OFFCURVE",
"41 91 OFFCURVE",
"-8 -1 CURVE SMOOTH",
"-10 -5 OFFCURVE",
"-9 -7 OFFCURVE",
"-4 -7 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01224 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01244 22 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 429;
}
);
note = h;
unicode = 0068;
},
{
color = 11;
glyphname = hbar;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = strokeshortcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 429;
}
);
unicode = 0127;
},
{
color = 11;
glyphname = hcircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 429;
}
);
unicode = 0125;
},
{
glyphname = i;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-8 -5 OFFCURVE",
"10 3 OFFCURVE",
"39 18 CURVE",
"61 33 OFFCURVE",
"95 49 OFFCURVE",
"142 67 CURVE SMOOTH",
"153 71 OFFCURVE",
"166 76 OFFCURVE",
"182 81 CURVE SMOOTH",
"237 100 LINE SMOOTH",
"241 101 OFFCURVE",
"243 105 OFFCURVE",
"243 110 CURVE SMOOTH",
"243 113 OFFCURVE",
"242 117 OFFCURVE",
"241 121 CURVE",
"235 120 OFFCURVE",
"225 117 OFFCURVE",
"210 112 CURVE SMOOTH",
"195 107 OFFCURVE",
"176 101 OFFCURVE",
"153 92 CURVE SMOOTH",
"106 76 OFFCURVE",
"76 64 OFFCURVE",
"61 57 CURVE",
"137 155 LINE SMOOTH",
"171 199 OFFCURVE",
"192 232 OFFCURVE",
"199 255 CURVE SMOOTH",
"200 259 OFFCURVE",
"198 261 OFFCURVE",
"193 261 CURVE SMOOTH",
"184 261 OFFCURVE",
"170 257 OFFCURVE",
"151 248 CURVE SMOOTH",
"143 245 OFFCURVE",
"121 235 OFFCURVE",
"121 229 CURVE",
"113 193 OFFCURVE",
"88 148 OFFCURVE",
"60 107 CURVE SMOOTH",
"-15 0 LINE SMOOTH",
"-16 -1 OFFCURVE",
"-16 -2 OFFCURVE",
"-16 -3 CURVE SMOOTH",
"-16 -4 OFFCURVE",
"-15 -5 OFFCURVE",
"-14 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"250 339 OFFCURVE",
"270 343 OFFCURVE",
"275 345 CURVE SMOOTH",
"278 346 OFFCURVE",
"284 350 OFFCURVE",
"291 355 CURVE SMOOTH",
"298 360 OFFCURVE",
"308 368 OFFCURVE",
"321 377 CURVE SMOOTH",
"323 378 OFFCURVE",
"324 379 OFFCURVE",
"324 382 CURVE SMOOTH",
"324 391 OFFCURVE",
"301 402 OFFCURVE",
"282 402 CURVE SMOOTH",
"271 402 OFFCURVE",
"265 399 OFFCURVE",
"262 392 CURVE",
"253 381 OFFCURVE",
"245 370 OFFCURVE",
"238 361 CURVE SMOOTH",
"231 351 OFFCURVE",
"223 342 OFFCURVE",
"216 333 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01224 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01226 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0125 22 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 22 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 201;
}
);
note = i;
unicode = 0069;
},
{
color = 11;
glyphname = idotless;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"8 -1 OFFCURVE",
"16 2 OFFCURVE",
"23 7 CURVE SMOOTH",
"73 44 OFFCURVE",
"144 75 OFFCURVE",
"237 100 CURVE SMOOTH",
"241 101 OFFCURVE",
"243 103 OFFCURVE",
"243 106 CURVE SMOOTH",
"243 108 LINE SMOOTH",
"242 112 OFFCURVE",
"240 114 OFFCURVE",
"237 114 CURVE",
"198 105 OFFCURVE",
"171 96 OFFCURVE",
"152 89 CURVE SMOOTH",
"123 80 OFFCURVE",
"102 72 OFFCURVE",
"87 67 CURVE SMOOTH",
"72 62 OFFCURVE",
"63 58 OFFCURVE",
"61 57 CURVE",
"86 90 OFFCURVE",
"105 114 OFFCURVE",
"118 130 CURVE SMOOTH",
"167 197 LINE SMOOTH",
"183 219 OFFCURVE",
"194 238 OFFCURVE",
"199 255 CURVE SMOOTH",
"200 259 OFFCURVE",
"198 261 OFFCURVE",
"193 261 CURVE SMOOTH",
"184 261 OFFCURVE",
"170 257 OFFCURVE",
"151 248 CURVE SMOOTH",
"126 237 OFFCURVE",
"113 228 OFFCURVE",
"112 223 CURVE SMOOTH",
"109 206 LINE SMOOTH",
"108 200 OFFCURVE",
"108 194 OFFCURVE",
"107 189 CURVE SMOOTH",
"104 178 OFFCURVE",
"97 164 OFFCURVE",
"84 146 CURVE SMOOTH",
"65 118 OFFCURVE",
"47 93 OFFCURVE",
"32 71 CURVE SMOOTH",
"17 49 OFFCURVE",
"3 29 OFFCURVE",
"-8 12 CURVE SMOOTH",
"-10 9 OFFCURVE",
"-11 6 OFFCURVE",
"-11 5 CURVE SMOOTH",
"-11 1 OFFCURVE",
"-8 -1 OFFCURVE",
"-1 -1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 201;
}
);
note = dotlessi;
unicode = 0131;
},
{
color = 11;
glyphname = iacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 00ED;
},
{
color = 11;
glyphname = ibreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 012D;
},
{
color = 11;
glyphname = icaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 01D0;
},
{
color = 11;
glyphname = icircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 00EE;
},
{
color = 11;
glyphname = idblgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dblgravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 0209;
},
{
color = 11;
glyphname = idieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 00EF;
},
{
color = 11;
glyphname = idotaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
},
{
color = 11;
glyphname = idotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 1ECB;
},
{
color = 11;
glyphname = igrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 00EC;
},
{
color = 11;
glyphname = ihookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 1EC9;
},
{
color = 11;
glyphname = iinvertedbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = breveinvertedcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 020B;
},
{
color = 11;
glyphname = imacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 012B;
},
{
color = 11;
glyphname = iogonek;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
},
{
name = ogonekcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 012F;
},
{
color = 11;
glyphname = itilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
unicode = 0129;
},
{
glyphname = j;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-195 -318 OFFCURVE",
"-143 -299 OFFCURVE",
"-94 -260 CURVE SMOOTH",
"-21 -203 OFFCURVE",
"54 -113 OFFCURVE",
"133 15 CURVE SMOOTH",
"164 67 OFFCURVE",
"228 102 OFFCURVE",
"324 121 CURVE SMOOTH",
"335 124 OFFCURVE",
"341 129 OFFCURVE",
"341 134 CURVE SMOOTH",
"341 138 OFFCURVE",
"338 140 OFFCURVE",
"333 140 CURVE SMOOTH",
"331 140 OFFCURVE",
"329 140 OFFCURVE",
"326 139 CURVE SMOOTH",
"272 128 OFFCURVE",
"226 117 OFFCURVE",
"188 106 CURVE",
"233 184 LINE",
"234 187 OFFCURVE",
"237 190 OFFCURVE",
"242 195 CURVE SMOOTH",
"259 211 LINE SMOOTH",
"272 222 OFFCURVE",
"279 230 OFFCURVE",
"279 235 CURVE SMOOTH",
"279 291 LINE",
"278 296 OFFCURVE",
"275 298 OFFCURVE",
"269 298 CURVE SMOOTH",
"254 298 OFFCURVE",
"233 282 OFFCURVE",
"226 266 CURVE SMOOTH",
"201 203 OFFCURVE",
"174 145 OFFCURVE",
"145 93 CURVE",
"54 64 OFFCURVE",
"-28 29 OFFCURVE",
"-102 -12 CURVE SMOOTH",
"-199 -65 OFFCURVE",
"-266 -121 OFFCURVE",
"-302 -180 CURVE SMOOTH",
"-321 -209 OFFCURVE",
"-330 -235 OFFCURVE",
"-330 -257 CURVE SMOOTH",
"-330 -298 OFFCURVE",
"-303 -318 OFFCURVE",
"-249 -318 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-273 -301 OFFCURVE",
"-291 -285 OFFCURVE",
"-291 -254 CURVE SMOOTH",
"-291 -237 OFFCURVE",
"-284 -218 OFFCURVE",
"-271 -195 CURVE SMOOTH",
"-240 -144 OFFCURVE",
"-180 -92 OFFCURVE",
"-90 -38 CURVE SMOOTH",
"-15 7 OFFCURVE",
"57 44 OFFCURVE",
"132 71 CURVE",
"59 -64 OFFCURVE",
"-21 -167 OFFCURVE",
"-108 -240 CURVE SMOOTH",
"-155 -281 OFFCURVE",
"-199 -301 OFFCURVE",
"-238 -301 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"341 357 OFFCURVE",
"347 360 OFFCURVE",
"350 365 CURVE",
"369 388 OFFCURVE",
"385 406 OFFCURVE",
"400 421 CURVE",
"365 417 OFFCURVE",
"345 414 OFFCURVE",
"339 411 CURVE SMOOTH",
"332 409 OFFCURVE",
"317 400 OFFCURVE",
"292 384 CURVE SMOOTH",
"290 383 OFFCURVE",
"289 381 OFFCURVE",
"289 379 CURVE SMOOTH",
"289 370 OFFCURVE",
"313 357 OFFCURVE",
"332 357 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01242 1070 13 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 42 213 42 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01233 11 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01235 11 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 300;
}
);
note = j;
unicode = 006A;
},
{
color = 11;
glyphname = jdotless;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-195 -318 OFFCURVE",
"-143 -299 OFFCURVE",
"-94 -260 CURVE SMOOTH",
"-21 -203 OFFCURVE",
"54 -113 OFFCURVE",
"133 15 CURVE SMOOTH",
"164 67 OFFCURVE",
"228 102 OFFCURVE",
"324 121 CURVE SMOOTH",
"335 124 OFFCURVE",
"341 129 OFFCURVE",
"341 134 CURVE SMOOTH",
"341 138 OFFCURVE",
"338 140 OFFCURVE",
"333 140 CURVE SMOOTH",
"331 140 OFFCURVE",
"329 140 OFFCURVE",
"326 139 CURVE SMOOTH",
"272 128 OFFCURVE",
"226 117 OFFCURVE",
"188 106 CURVE",
"233 184 LINE",
"234 187 OFFCURVE",
"237 190 OFFCURVE",
"242 195 CURVE SMOOTH",
"259 211 LINE SMOOTH",
"272 222 OFFCURVE",
"279 230 OFFCURVE",
"279 235 CURVE SMOOTH",
"279 291 LINE",
"278 296 OFFCURVE",
"275 298 OFFCURVE",
"269 298 CURVE SMOOTH",
"254 298 OFFCURVE",
"233 282 OFFCURVE",
"226 266 CURVE SMOOTH",
"201 203 OFFCURVE",
"174 145 OFFCURVE",
"145 93 CURVE",
"54 64 OFFCURVE",
"-28 29 OFFCURVE",
"-102 -12 CURVE SMOOTH",
"-199 -65 OFFCURVE",
"-266 -121 OFFCURVE",
"-302 -180 CURVE SMOOTH",
"-321 -209 OFFCURVE",
"-330 -235 OFFCURVE",
"-330 -257 CURVE SMOOTH",
"-330 -298 OFFCURVE",
"-303 -318 OFFCURVE",
"-249 -318 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-273 -301 OFFCURVE",
"-291 -285 OFFCURVE",
"-291 -254 CURVE SMOOTH",
"-291 -237 OFFCURVE",
"-284 -218 OFFCURVE",
"-271 -195 CURVE SMOOTH",
"-240 -144 OFFCURVE",
"-180 -92 OFFCURVE",
"-90 -38 CURVE SMOOTH",
"-15 7 OFFCURVE",
"57 44 OFFCURVE",
"132 71 CURVE",
"59 -64 OFFCURVE",
"-21 -167 OFFCURVE",
"-108 -240 CURVE SMOOTH",
"-155 -281 OFFCURVE",
"-199 -301 OFFCURVE",
"-238 -301 CURVE SMOOTH"
);
}
);
width = 300;
}
);
unicode = 0237;
},
{
color = 11;
glyphname = jcircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 300;
}
);
unicode = 0135;
},
{
glyphname = k;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"14 -9 OFFCURVE",
"45 9 OFFCURVE",
"57 24 CURVE SMOOTH",
"91 69 OFFCURVE",
"141 116 OFFCURVE",
"207 165 CURVE",
"206 142 OFFCURVE",
"205 121 OFFCURVE",
"205 102 CURVE SMOOTH",
"205 83 OFFCURVE",
"206 67 OFFCURVE",
"207 53 CURVE SMOOTH",
"212 21 OFFCURVE",
"247 -8 OFFCURVE",
"266 -2 CURVE SMOOTH",
"289 3 OFFCURVE",
"313 13 OFFCURVE",
"340 28 CURVE SMOOTH",
"351 34 OFFCURVE",
"361 40 OFFCURVE",
"371 46 CURVE SMOOTH",
"381 52 OFFCURVE",
"391 58 OFFCURVE",
"402 63 CURVE",
"405 73 OFFCURVE",
"407 81 OFFCURVE",
"407 86 CURVE",
"350 56 LINE SMOOTH",
"327 43 OFFCURVE",
"305 33 OFFCURVE",
"285 26 CURVE SMOOTH",
"283 25 OFFCURVE",
"280 25 OFFCURVE",
"277 25 CURVE SMOOTH",
"266 25 OFFCURVE",
"260 33 OFFCURVE",
"257 50 CURVE SMOOTH",
"253 66 OFFCURVE",
"252 85 OFFCURVE",
"252 105 CURVE SMOOTH",
"252 128 OFFCURVE",
"254 153 OFFCURVE",
"258 180 CURVE",
"302 195 LINE SMOOTH",
"337 209 OFFCURVE",
"360 220 OFFCURVE",
"373 229 CURVE SMOOTH",
"400 246 OFFCURVE",
"414 265 OFFCURVE",
"414 286 CURVE SMOOTH",
"414 293 OFFCURVE",
"412 300 OFFCURVE",
"409 308 CURVE",
"348 279 OFFCURVE",
"301 254 OFFCURVE",
"267 233 CURVE",
"267 243 OFFCURVE",
"260 248 OFFCURVE",
"246 248 CURVE SMOOTH",
"223 248 OFFCURVE",
"212 231 OFFCURVE",
"212 197 CURVE",
"207 194 OFFCURVE",
"204 191 OFFCURVE",
"201 189 CURVE SMOOTH",
"198 186 OFFCURVE",
"195 184 OFFCURVE",
"193 183 CURVE",
"137 139 OFFCURVE",
"107 117 OFFCURVE",
"103 117 CURVE SMOOTH",
"100 117 OFFCURVE",
"99 119 OFFCURVE",
"100 123 CURVE",
"201 302 OFFCURVE",
"277 416 OFFCURVE",
"328 463 CURVE SMOOTH",
"373 506 OFFCURVE",
"415 527 OFFCURVE",
"455 527 CURVE SMOOTH",
"478 527 OFFCURVE",
"499 519 OFFCURVE",
"518 503 CURVE",
"541 516 OFFCURVE",
"552 526 OFFCURVE",
"552 533 CURVE SMOOTH",
"552 536 OFFCURVE",
"550 538 OFFCURVE",
"547 539 CURVE",
"528 549 OFFCURVE",
"506 554 OFFCURVE",
"481 554 CURVE SMOOTH",
"423 554 OFFCURVE",
"372 533 OFFCURVE",
"327 490 CURVE SMOOTH",
"223 392 OFFCURVE",
"111 228 OFFCURVE",
"-8 -1 CURVE",
"-9 -2 OFFCURVE",
"-9 -3 OFFCURVE",
"-9 -5 CURVE SMOOTH",
"-9 -8 OFFCURVE",
"-7 -9 OFFCURVE",
"-2 -9 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01215 7 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 7 74 7 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 7 121 7 137 7 153 7 169 7 185 7 201 7 217 7 233 7 249 7 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 7 25 7 41 7 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01211 7 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01250 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01252 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01258 1063 66 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 374;
}
);
note = k;
unicode = 006B;
},
{
color = 11;
glyphname = kcommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 374;
}
);
unicode = 0137;
},
{
glyphname = kgreenlandic;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"14 -9 OFFCURVE",
"45 9 OFFCURVE",
"57 24 CURVE SMOOTH",
"91 69 OFFCURVE",
"141 116 OFFCURVE",
"207 165 CURVE",
"206 142 OFFCURVE",
"205 121 OFFCURVE",
"205 102 CURVE SMOOTH",
"205 83 OFFCURVE",
"206 67 OFFCURVE",
"207 53 CURVE SMOOTH",
"212 21 OFFCURVE",
"247 -8 OFFCURVE",
"266 -2 CURVE SMOOTH",
"289 3 OFFCURVE",
"313 13 OFFCURVE",
"340 28 CURVE SMOOTH",
"351 34 OFFCURVE",
"361 40 OFFCURVE",
"371 46 CURVE SMOOTH",
"381 52 OFFCURVE",
"391 58 OFFCURVE",
"402 63 CURVE",
"405 73 OFFCURVE",
"407 81 OFFCURVE",
"407 86 CURVE",
"350 56 LINE SMOOTH",
"327 44 OFFCURVE",
"305 33 OFFCURVE",
"285 26 CURVE SMOOTH",
"283 25 OFFCURVE",
"280 25 OFFCURVE",
"277 25 CURVE SMOOTH",
"266 25 OFFCURVE",
"260 33 OFFCURVE",
"257 50 CURVE SMOOTH",
"254 67 OFFCURVE",
"252 94 OFFCURVE",
"252 120 CURVE SMOOTH",
"252 147 OFFCURVE",
"254 174 OFFCURVE",
"258 191 CURVE",
"306 190 OFFCURVE",
"360 211 OFFCURVE",
"360 249 CURVE SMOOTH",
"360 256 OFFCURVE",
"358 263 OFFCURVE",
"355 271 CURVE",
"251 231 OFFCURVE",
"224 207 OFFCURVE",
"103 117 CURVE SMOOTH",
"100 115 OFFCURVE",
"99 119 OFFCURVE",
"100 123 CURVE",
"201 302 OFFCURVE",
"270 400 OFFCURVE",
"313 437 CURVE",
"323 453 OFFCURVE",
"294 463 OFFCURVE",
"270 463 CURVE",
"222 396 OFFCURVE",
"111 228 OFFCURVE",
"-8 -1 CURVE",
"-9 -2 OFFCURVE",
"-9 -3 OFFCURVE",
"-9 -5 CURVE SMOOTH",
"-9 -8 OFFCURVE",
"-7 -9 OFFCURVE",
"-2 -9 CURVE SMOOTH"
);
}
);
width = 374;
}
);
unicode = 0138;
},
{
glyphname = l;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"108 3 OFFCURVE",
"132 13 OFFCURVE",
"159 28 CURVE SMOOTH",
"170 34 OFFCURVE",
"180 40 OFFCURVE",
"190 46 CURVE SMOOTH",
"200 52 OFFCURVE",
"210 58 OFFCURVE",
"221 63 CURVE SMOOTH",
"224 65 OFFCURVE",
"226 73 OFFCURVE",
"226 86 CURVE",
"202 69 OFFCURVE",
"112 25 OFFCURVE",
"96 25 CURVE SMOOTH",
"81 25 OFFCURVE",
"75 44 OFFCURVE",
"75 57 CURVE SMOOTH",
"75 86 OFFCURVE",
"121 162 OFFCURVE",
"213 283 CURVE SMOOTH",
"293 388 OFFCURVE",
"352 459 OFFCURVE",
"389 495 CURVE SMOOTH",
"420 526 OFFCURVE",
"441 541 OFFCURVE",
"452 541 CURVE SMOOTH",
"463 541 OFFCURVE",
"468 544 OFFCURVE",
"468 550 CURVE SMOOTH",
"468 557 OFFCURVE",
"463 560 OFFCURVE",
"454 560 CURVE SMOOTH",
"445 560 OFFCURVE",
"428 555 OFFCURVE",
"402 544 CURVE SMOOTH",
"375 534 OFFCURVE",
"360 527 OFFCURVE",
"357 522 CURVE",
"164 287 OFFCURVE",
"53 131 OFFCURVE",
"26 53 CURVE",
"28 35 OFFCURVE",
"37 20 OFFCURVE",
"52 9 CURVE SMOOTH",
"65 0 OFFCURVE",
"76 -4 OFFCURVE",
"85 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 202;
}
);
note = l;
unicode = 006C;
},
{
color = 11;
glyphname = lacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 202;
}
);
unicode = 013A;
},
{
color = 11;
glyphname = lcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = caroncomb.alt;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 202;
}
);
unicode = 013E;
},
{
color = 11;
glyphname = lcommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 202;
}
);
unicode = 013C;
},
{
color = 11;
glyphname = ldot;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = periodcentered;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 202;
}
);
unicode = 0140;
},
{
glyphname = lj;
layers = (
{
components = (
{
name = l;
},
{
name = j;
transform = "{1, 0, 0, 1, 202, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 502;
}
);
unicode = 01C9;
},
{
color = 11;
glyphname = lslash;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = hyphen;
transform = "{0.98769, 0.15643, -0.15643, 0.98769, 2, -76}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 202;
}
);
unicode = 0142;
},
{
glyphname = m;
lastChange = "2022-03-18 06:05:34 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"374 -24 OFFCURVE",
"375 -24 OFFCURVE",
"376 -23 CURVE",
"452 14 OFFCURVE",
"507 42 OFFCURVE",
"544 63 CURVE",
"547 73 OFFCURVE",
"549 81 OFFCURVE",
"549 86 CURVE",
"492 56 LINE SMOOTH",
"469 44 OFFCURVE",
"447 33 OFFCURVE",
"427 26 CURVE SMOOTH",
"423 25 OFFCURVE",
"420 24 OFFCURVE",
"417 25 CURVE SMOOTH",
"413 26 OFFCURVE",
"411 28 OFFCURVE",
"411 33 CURVE SMOOTH",
"411 35 OFFCURVE",
"411 37 OFFCURVE",
"412 38 CURVE SMOOTH",
"456 105 OFFCURVE",
"490 156 OFFCURVE",
"514 192 CURVE SMOOTH",
"538 227 OFFCURVE",
"552 248 OFFCURVE",
"555 255 CURVE",
"553 269 OFFCURVE",
"545 276 OFFCURVE",
"532 276 CURVE SMOOTH",
"508 276 OFFCURVE",
"465 256 OFFCURVE",
"405 209 CURVE SMOOTH",
"302 128 LINE",
"330 215 LINE SMOOTH",
"332 221 OFFCURVE",
"333 227 OFFCURVE",
"333 233 CURVE SMOOTH",
"333 253 OFFCURVE",
"326 263 OFFCURVE",
"311 263 CURVE SMOOTH",
"306 263 OFFCURVE",
"299 260 OFFCURVE",
"290 255 CURVE",
"104 129 LINE",
"107 134 OFFCURVE",
"117 147 OFFCURVE",
"133 167 CURVE SMOOTH",
"148 187 OFFCURVE",
"170 215 OFFCURVE",
"199 251 CURVE",
"206 256 OFFCURVE",
"211 261 OFFCURVE",
"214 268 CURVE SMOOTH",
"217 275 OFFCURVE",
"216 278 OFFCURVE",
"213 278 CURVE SMOOTH",
"212 278 OFFCURVE",
"210 277 OFFCURVE",
"207 275 CURVE",
"166 262 OFFCURVE",
"144 252 OFFCURVE",
"140 243 CURVE SMOOTH",
"129 218 OFFCURVE",
"110 188 OFFCURVE",
"83 151 CURVE SMOOTH",
"64 123 OFFCURVE",
"48 100 OFFCURVE",
"35 82 CURVE SMOOTH",
"22 64 OFFCURVE",
"13 51 OFFCURVE",
"8 42 CURVE SMOOTH",
"2 33 OFFCURVE",
"-1 24 OFFCURVE",
"-1 17 CURVE SMOOTH",
"-1 11 OFFCURVE",
"2 8 OFFCURVE",
"7 8 CURVE SMOOTH",
"9 8 LINE SMOOTH",
"14 8 OFFCURVE",
"24 14 OFFCURVE",
"39 27 CURVE SMOOTH",
"55 40 OFFCURVE",
"64 48 OFFCURVE",
"67 52 CURVE SMOOTH",
"78 69 OFFCURVE",
"110 98 OFFCURVE",
"163 140 CURVE SMOOTH",
"220 186 OFFCURVE",
"256 209 OFFCURVE",
"273 209 CURVE SMOOTH",
"278 209 OFFCURVE",
"280 206 OFFCURVE",
"280 201 CURVE SMOOTH",
"280 197 OFFCURVE",
"279 193 OFFCURVE",
"277 188 CURVE SMOOTH",
"262 154 OFFCURVE",
"251 127 OFFCURVE",
"243 107 CURVE SMOOTH",
"227 67 LINE SMOOTH",
"225 61 OFFCURVE",
"223 55 OFFCURVE",
"223 49 CURVE SMOOTH",
"223 42 OFFCURVE",
"226 39 OFFCURVE",
"231 39 CURVE SMOOTH",
"244 39 OFFCURVE",
"273 58 OFFCURVE",
"279 67 CURVE SMOOTH",
"290 81 OFFCURVE",
"319 108 OFFCURVE",
"367 148 CURVE SMOOTH",
"418 191 OFFCURVE",
"450 212 OFFCURVE",
"461 212 CURVE SMOOTH",
"464 212 OFFCURVE",
"465 211 OFFCURVE",
"465 208 CURVE SMOOTH",
"465 205 OFFCURVE",
"463 200 OFFCURVE",
"459 193 CURVE SMOOTH",
"344 -6 LINE",
"341 -13 OFFCURVE",
"364 -24 OFFCURVE",
"372 -24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0129 16 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01274 16 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01282 16 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 527;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"8 -1 OFFCURVE",
"12 -1 OFFCURVE",
"16 0 CURVE SMOOTH",
"30 3 OFFCURVE",
"41 8 OFFCURVE",
"49 15 CURVE SMOOTH",
"120 84 LINE SMOOTH",
"149 112 OFFCURVE",
"191 145 OFFCURVE",
"245 183 CURVE SMOOTH",
"254 190 OFFCURVE",
"261 193 OFFCURVE",
"268 193 CURVE SMOOTH",
"273 193 OFFCURVE",
"275 191 OFFCURVE",
"275 186 CURVE SMOOTH",
"275 181 OFFCURVE",
"274 177 OFFCURVE",
"271 172 CURVE SMOOTH",
"248 123 OFFCURVE",
"237 88 OFFCURVE",
"237 67 CURVE SMOOTH",
"237 40 OFFCURVE",
"250 26 OFFCURVE",
"276 26 CURVE SMOOTH",
"293 26 OFFCURVE",
"318 33 OFFCURVE",
"353 46 CURVE SMOOTH",
"388 60 OFFCURVE",
"410 72 OFFCURVE",
"419 83 CURVE SMOOTH",
"425 90 OFFCURVE",
"428 94 OFFCURVE",
"428 97 CURVE SMOOTH",
"428 100 OFFCURVE",
"426 101 OFFCURVE",
"423 101 CURVE SMOOTH",
"417 101 OFFCURVE",
"411 99 OFFCURVE",
"405 95 CURVE SMOOTH",
"381 78 OFFCURVE",
"351 66 OFFCURVE",
"316 57 CURVE SMOOTH",
"300 53 OFFCURVE",
"292 63 OFFCURVE",
"292 88 CURVE SMOOTH",
"292 106 OFFCURVE",
"295 126 OFFCURVE",
"302 148 CURVE SMOOTH",
"309 171 OFFCURVE",
"316 186 OFFCURVE",
"323 194 CURVE SMOOTH",
"337 211 OFFCURVE",
"344 224 OFFCURVE",
"344 233 CURVE SMOOTH",
"344 241 OFFCURVE",
"339 245 OFFCURVE",
"328 245 CURVE SMOOTH",
"309 245 OFFCURVE",
"292 239 OFFCURVE",
"276 227 CURVE SMOOTH",
"82 86 LINE",
"81 87 OFFCURVE",
"81 88 OFFCURVE",
"81 90 CURVE SMOOTH",
"81 103 OFFCURVE",
"95 127 OFFCURVE",
"124 164 CURVE SMOOTH",
"145 192 OFFCURVE",
"165 214 OFFCURVE",
"182 233 CURVE",
"185 238 LINE",
"185 241 OFFCURVE",
"182 242 OFFCURVE",
"177 242 CURVE SMOOTH",
"156 242 OFFCURVE",
"141 236 OFFCURVE",
"132 223 CURVE",
"96 186 LINE",
"95 184 OFFCURVE",
"96 182 OFFCURVE",
"98 180 CURVE",
"99 178 OFFCURVE",
"99 176 OFFCURVE",
"98 174 CURVE SMOOTH",
"41 86 OFFCURVE",
"10 39 OFFCURVE",
"5 33 CURVE SMOOTH",
"-3 22 OFFCURVE",
"-7 13 OFFCURVE",
"-7 8 CURVE SMOOTH",
"-7 2 OFFCURVE",
"-3 -1 OFFCURVE",
"5 -1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01252 1070 6 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 6 218 6 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01244 4 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01241 4 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 367;
}
);
note = n;
unicode = 006E;
},
{
color = 11;
glyphname = nacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 0144;
},
{
color = 11;
glyphname = ncaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 0148;
},
{
color = 11;
glyphname = ncommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 0146;
},
{
glyphname = eng;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"314 242 OFFCURVE",
"371 338 OFFCURVE",
"482 551 CURVE",
"520 536 LINE",
"487 464 OFFCURVE",
"371 270 OFFCURVE",
"308 157 CURVE SMOOTH",
"308 156 OFFCURVE",
"307 156 OFFCURVE",
"307 155 CURVE",
"266 163 LINE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-51 -318 OFFCURVE",
"-42 -316 OFFCURVE",
"-36 -312 CURVE SMOOTH",
"64 -243 OFFCURVE",
"202 -30 OFFCURVE",
"262 75 CURVE SMOOTH",
"307 156 OFFCURVE",
"319 175 OFFCURVE",
"328 194 CURVE SMOOTH",
"337 213 OFFCURVE",
"344 224 OFFCURVE",
"344 233 CURVE SMOOTH",
"344 241 OFFCURVE",
"339 245 OFFCURVE",
"328 245 CURVE SMOOTH",
"309 245 OFFCURVE",
"292 239 OFFCURVE",
"276 227 CURVE SMOOTH",
"82 86 LINE",
"81 87 OFFCURVE",
"81 88 OFFCURVE",
"81 90 CURVE SMOOTH",
"81 103 OFFCURVE",
"95 127 OFFCURVE",
"124 164 CURVE SMOOTH",
"145 192 OFFCURVE",
"165 214 OFFCURVE",
"182 233 CURVE",
"185 238 LINE",
"185 241 OFFCURVE",
"182 242 OFFCURVE",
"177 242 CURVE SMOOTH",
"156 242 OFFCURVE",
"141 236 OFFCURVE",
"132 223 CURVE",
"96 186 LINE",
"95 184 OFFCURVE",
"96 182 OFFCURVE",
"98 180 CURVE",
"99 178 OFFCURVE",
"99 176 OFFCURVE",
"98 174 CURVE SMOOTH",
"41 86 OFFCURVE",
"10 39 OFFCURVE",
"5 33 CURVE SMOOTH",
"-3 22 OFFCURVE",
"-7 13 OFFCURVE",
"-7 8 CURVE SMOOTH",
"-7 2 OFFCURVE",
"-3 -1 OFFCURVE",
"5 -1 CURVE SMOOTH",
"8 -1 OFFCURVE",
"12 -1 OFFCURVE",
"16 0 CURVE SMOOTH",
"30 3 OFFCURVE",
"41 8 OFFCURVE",
"49 15 CURVE SMOOTH",
"120 84 LINE SMOOTH",
"149 112 OFFCURVE",
"191 145 OFFCURVE",
"245 183 CURVE SMOOTH",
"254 190 OFFCURVE",
"261 193 OFFCURVE",
"268 193 CURVE SMOOTH",
"273 193 OFFCURVE",
"275 191 OFFCURVE",
"275 186 CURVE SMOOTH",
"275 181 OFFCURVE",
"274 177 OFFCURVE",
"271 172 CURVE SMOOTH",
"255 145 OFFCURVE",
"228 98 OFFCURVE",
"151 -28 CURVE SMOOTH",
"107 -99 OFFCURVE",
"26 -211 OFFCURVE",
"-67 -282 CURVE SMOOTH",
"-75 -289 OFFCURVE",
"-82 -292 OFFCURVE",
"-86 -292 CURVE SMOOTH",
"-90 -292 OFFCURVE",
"-93 -290 OFFCURVE",
"-96 -286 CURVE SMOOTH",
"-101 -278 OFFCURVE",
"-103 -264 OFFCURVE",
"-103 -245 CURVE SMOOTH",
"-103 -233 OFFCURVE",
"-102 -218 OFFCURVE",
"-100 -201 CURVE SMOOTH",
"-96 -169 OFFCURVE",
"-90 -139 OFFCURVE",
"-82 -111 CURVE SMOOTH",
"-81 -106 OFFCURVE",
"-81 -103 OFFCURVE",
"-83 -100 CURVE",
"-83 -98 OFFCURVE",
"-87 -98 OFFCURVE",
"-92 -101 CURVE SMOOTH",
"-98 -105 OFFCURVE",
"-102 -111 OFFCURVE",
"-105 -120 CURVE SMOOTH",
"-126 -181 OFFCURVE",
"-136 -226 OFFCURVE",
"-136 -256 CURVE SMOOTH",
"-136 -271 OFFCURVE",
"-134 -282 OFFCURVE",
"-129 -290 CURVE SMOOTH",
"-121 -303 OFFCURVE",
"-106 -312 OFFCURVE",
"-85 -316 CURVE SMOOTH",
"-76 -318 OFFCURVE",
"-68 -318 OFFCURVE",
"-61 -318 CURVE SMOOTH"
);
}
);
width = 367;
}
);
unicode = 014B;
},
{
glyphname = nj;
layers = (
{
components = (
{
name = n;
},
{
name = j;
transform = "{1, 0, 0, 1, 367, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 667;
}
);
unicode = 01CC;
},
{
color = 11;
glyphname = ntilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 00F1;
},
{
glyphname = o;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"54 -1 OFFCURVE",
"66 1 OFFCURVE",
"79 5 CURVE SMOOTH",
"126 18 OFFCURVE",
"179 47 OFFCURVE",
"237 91 CURVE SMOOTH",
"262 110 OFFCURVE",
"286 134 OFFCURVE",
"307 162 CURVE SMOOTH",
"332 195 OFFCURVE",
"345 223 OFFCURVE",
"345 244 CURVE SMOOTH",
"345 247 OFFCURVE",
"344 252 OFFCURVE",
"343 257 CURVE",
"354 257 OFFCURVE",
"367 258 OFFCURVE",
"381 260 CURVE SMOOTH",
"392 261 OFFCURVE",
"398 265 OFFCURVE",
"398 270 CURVE SMOOTH",
"398 275 OFFCURVE",
"392 278 OFFCURVE",
"381 278 CURVE SMOOTH",
"275 277 LINE",
"268 280 OFFCURVE",
"257 286 OFFCURVE",
"242 294 CURVE SMOOTH",
"231 299 OFFCURVE",
"223 303 OFFCURVE",
"215 303 CURVE SMOOTH",
"208 303 OFFCURVE",
"201 301 OFFCURVE",
"193 296 CURVE SMOOTH",
"184 290 OFFCURVE",
"175 285 OFFCURVE",
"167 280 CURVE",
"142 274 OFFCURVE",
"125 271 OFFCURVE",
"114 271 CURVE SMOOTH",
"103 271 OFFCURVE",
"97 267 OFFCURVE",
"97 259 CURVE SMOOTH",
"97 252 OFFCURVE",
"101 248 OFFCURVE",
"110 245 CURVE SMOOTH",
"124 240 OFFCURVE",
"130 238 OFFCURVE",
"128 238 CURVE",
"101 207 OFFCURVE",
"81 181 OFFCURVE",
"66 162 CURVE SMOOTH",
"28 118 OFFCURVE",
"9 76 OFFCURVE",
"9 37 CURVE SMOOTH",
"9 12 OFFCURVE",
"21 -1 OFFCURVE",
"45 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"45 23 OFFCURVE",
"40 29 OFFCURVE",
"40 40 CURVE SMOOTH",
"40 42 LINE SMOOTH",
"41 53 OFFCURVE",
"49 71 OFFCURVE",
"65 97 CURVE SMOOTH",
"78 119 OFFCURVE",
"91 137 OFFCURVE",
"104 152 CURVE SMOOTH",
"141 195 OFFCURVE",
"170 225 OFFCURVE",
"190 240 CURVE",
"204 247 OFFCURVE",
"225 251 OFFCURVE",
"254 252 CURVE SMOOTH",
"299 252 LINE",
"304 247 OFFCURVE",
"306 241 OFFCURVE",
"306 233 CURVE SMOOTH",
"306 216 OFFCURVE",
"295 193 OFFCURVE",
"273 165 CURVE SMOOTH",
"254 142 OFFCURVE",
"235 122 OFFCURVE",
"215 107 CURVE SMOOTH",
"161 66 OFFCURVE",
"111 38 OFFCURVE",
"66 25 CURVE SMOOTH",
"61 24 OFFCURVE",
"57 23 OFFCURVE",
"55 23 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01212 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01234 1063 40 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 327;
}
);
note = o;
unicode = 006F;
},
{
color = 11;
glyphname = oacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 00F3;
},
{
color = 11;
glyphname = obreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 014F;
},
{
color = 11;
glyphname = ocircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 00F4;
},
{
color = 11;
glyphname = ocircumflexacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 1ED1;
},
{
color = 11;
glyphname = ocircumflexdotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 1ED9;
},
{
color = 11;
glyphname = ocircumflexgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 1ED3;
},
{
color = 11;
glyphname = ocircumflexhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 1ED5;
},
{
color = 11;
glyphname = ocircumflextilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 1ED7;
},
{
color = 11;
glyphname = odblgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dblgravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 020D;
},
{
color = 11;
glyphname = odieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 00F6;
},
{
color = 11;
glyphname = odieresismacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 022B;
},
{
color = 11;
glyphname = odotaccentmacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotaccentcomb;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 0231;
},
{
color = 11;
glyphname = odotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 1ECD;
},
{
color = 11;
glyphname = ograve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 00F2;
},
{
color = 11;
glyphname = ohookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 1ECF;
},
{
color = 11;
glyphname = ohorn;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 303, -279}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 01A1;
},
{
color = 11;
glyphname = ohornacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 1EDB;
},
{
color = 11;
glyphname = ohorndotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 1EE3;
},
{
color = 11;
glyphname = ohorngrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 1EDD;
},
{
color = 11;
glyphname = ohornhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 1EDF;
},
{
color = 11;
glyphname = ohorntilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 1EE1;
},
{
color = 11;
glyphname = ohungarumlaut;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlautcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 0151;
},
{
color = 11;
glyphname = oinvertedbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = breveinvertedcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 020F;
},
{
color = 11;
glyphname = omacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 014D;
},
{
color = 11;
glyphname = oogonek;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = ogonekcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 01EB;
},
{
glyphname = oslash;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-49 -157 OFFCURVE",
"-42 -154 OFFCURVE",
"-33 -147 CURVE SMOOTH",
"-24 -141 OFFCURVE",
"-19 -136 OFFCURVE",
"-19 -131 CURVE SMOOTH",
"-17 -117 OFFCURVE",
"-7 -95 OFFCURVE",
"11 -66 CURVE SMOOTH",
"24 -45 OFFCURVE",
"39 -23 OFFCURVE",
"58 0 CURVE",
"61 1 OFFCURVE",
"65 1 OFFCURVE",
"68 2 CURVE SMOOTH",
"79 5 LINE SMOOTH",
"126 18 OFFCURVE",
"179 47 OFFCURVE",
"237 91 CURVE SMOOTH",
"262 110 OFFCURVE",
"286 134 OFFCURVE",
"307 162 CURVE SMOOTH",
"332 195 OFFCURVE",
"345 223 OFFCURVE",
"345 244 CURVE SMOOTH",
"345 247 OFFCURVE",
"344 252 OFFCURVE",
"343 257 CURVE",
"354 257 OFFCURVE",
"367 258 OFFCURVE",
"381 260 CURVE SMOOTH",
"392 261 OFFCURVE",
"398 265 OFFCURVE",
"398 270 CURVE SMOOTH",
"398 275 OFFCURVE",
"392 278 OFFCURVE",
"381 278 CURVE SMOOTH",
"310 277 LINE",
"393 365 LINE SMOOTH",
"413 386 OFFCURVE",
"426 400 OFFCURVE",
"431 406 CURVE SMOOTH",
"433 409 OFFCURVE",
"432 411 OFFCURVE",
"427 411 CURVE SMOOTH",
"411 411 OFFCURVE",
"391 397 OFFCURVE",
"367 370 CURVE SMOOTH",
"282 277 LINE",
"275 277 LINE",
"268 280 OFFCURVE",
"257 286 OFFCURVE",
"242 294 CURVE SMOOTH",
"231 299 OFFCURVE",
"223 303 OFFCURVE",
"215 303 CURVE SMOOTH",
"208 303 OFFCURVE",
"201 301 OFFCURVE",
"193 296 CURVE SMOOTH",
"184 290 OFFCURVE",
"175 285 OFFCURVE",
"167 280 CURVE",
"142 274 OFFCURVE",
"125 271 OFFCURVE",
"114 271 CURVE SMOOTH",
"103 271 OFFCURVE",
"97 267 OFFCURVE",
"97 259 CURVE SMOOTH",
"97 252 OFFCURVE",
"101 248 OFFCURVE",
"110 245 CURVE SMOOTH",
"124 240 OFFCURVE",
"130 238 OFFCURVE",
"128 238 CURVE",
"101 207 OFFCURVE",
"81 181 OFFCURVE",
"66 162 CURVE SMOOTH",
"28 118 OFFCURVE",
"9 76 OFFCURVE",
"9 37 CURVE SMOOTH",
"9 16 OFFCURVE",
"17 4 OFFCURVE",
"33 0 CURVE",
"6 -32 OFFCURVE",
"-14 -59 OFFCURVE",
"-29 -82 CURVE SMOOTH",
"-48 -111 OFFCURVE",
"-58 -135 OFFCURVE",
"-61 -152 CURVE",
"-61 -155 OFFCURVE",
"-59 -157 OFFCURVE",
"-56 -157 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"44 24 OFFCURVE",
"40 29 OFFCURVE",
"40 40 CURVE SMOOTH",
"40 42 LINE SMOOTH",
"41 53 OFFCURVE",
"49 71 OFFCURVE",
"65 97 CURVE SMOOTH",
"78 119 OFFCURVE",
"91 137 OFFCURVE",
"104 152 CURVE SMOOTH",
"141 195 OFFCURVE",
"170 225 OFFCURVE",
"190 240 CURVE",
"204 247 OFFCURVE",
"225 251 OFFCURVE",
"254 252 CURVE SMOOTH",
"259 252 LINE",
"160 144 LINE SMOOTH",
"139 121 OFFCURVE",
"119 99 OFFCURVE",
"102 79 CURVE SMOOTH",
"52 23 LINE"
);
},
{
closed = 1;
nodes = (
"119 74 OFFCURVE",
"162 123 OFFCURVE",
"213 176 CURVE SMOOTH",
"286 252 LINE",
"299 252 LINE",
"304 247 OFFCURVE",
"306 241 OFFCURVE",
"306 233 CURVE SMOOTH",
"306 216 OFFCURVE",
"295 193 OFFCURVE",
"273 165 CURVE SMOOTH",
"254 142 OFFCURVE",
"235 122 OFFCURVE",
"215 107 CURVE SMOOTH",
"167 70 OFFCURVE",
"123 45 OFFCURVE",
"83 30 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01260 1063 82 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01238 30 64 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01282 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01279 30 64 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01286 30 64 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 327;
}
);
note = oslash;
unicode = 00F8;
},
{
color = 11;
glyphname = oslashacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = oslash;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 01FF;
},
{
color = 11;
glyphname = otilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 00F5;
},
{
color = 11;
glyphname = otildemacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb_macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 327;
}
);
unicode = 022D;
},
{
glyphname = oe;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"308 -5 OFFCURVE",
"337 5 OFFCURVE",
"377 24 CURVE SMOOTH",
"409 41 OFFCURVE",
"435 56 OFFCURVE",
"455 71 CURVE SMOOTH",
"461 76 OFFCURVE",
"464 80 OFFCURVE",
"465 84 CURVE SMOOTH",
"465 87 OFFCURVE",
"463 89 OFFCURVE",
"459 89 CURVE SMOOTH",
"455 89 OFFCURVE",
"450 87 OFFCURVE",
"445 84 CURVE SMOOTH",
"431 73 OFFCURVE",
"405 60 OFFCURVE",
"366 45 CURVE SMOOTH",
"326 29 OFFCURVE",
"297 21 OFFCURVE",
"279 21 CURVE SMOOTH",
"261 21 OFFCURVE",
"252 32 OFFCURVE",
"252 54 CURVE SMOOTH",
"252 63 OFFCURVE",
"255 74 OFFCURVE",
"260 86 CURVE SMOOTH",
"267 101 OFFCURVE",
"278 116 OFFCURVE",
"291 135 CURVE",
"298 134 OFFCURVE",
"304 133 OFFCURVE",
"311 133 CURVE SMOOTH",
"346 133 OFFCURVE",
"386 147 OFFCURVE",
"432 175 CURVE SMOOTH",
"483 206 OFFCURVE",
"509 238 OFFCURVE",
"509 270 CURVE SMOOTH",
"509 287 OFFCURVE",
"497 297 OFFCURVE",
"472 301 CURVE",
"469 302 OFFCURVE",
"452 297 OFFCURVE",
"420 286 CURVE SMOOTH",
"370 268 LINE",
"345 245 LINE",
"340 260 OFFCURVE",
"318 279 OFFCURVE",
"275 277 CURVE",
"268 280 OFFCURVE",
"257 286 OFFCURVE",
"242 294 CURVE SMOOTH",
"231 299 OFFCURVE",
"223 303 OFFCURVE",
"215 303 CURVE SMOOTH",
"208 303 OFFCURVE",
"201 301 OFFCURVE",
"193 296 CURVE SMOOTH",
"184 290 OFFCURVE",
"175 285 OFFCURVE",
"167 280 CURVE",
"142 274 OFFCURVE",
"125 271 OFFCURVE",
"114 271 CURVE SMOOTH",
"103 271 OFFCURVE",
"97 267 OFFCURVE",
"97 259 CURVE SMOOTH",
"97 252 OFFCURVE",
"101 248 OFFCURVE",
"110 245 CURVE SMOOTH",
"124 240 OFFCURVE",
"130 238 OFFCURVE",
"128 238 CURVE",
"101 207 OFFCURVE",
"81 181 OFFCURVE",
"66 162 CURVE SMOOTH",
"28 118 OFFCURVE",
"9 76 OFFCURVE",
"9 37 CURVE SMOOTH",
"9 12 OFFCURVE",
"21 -1 OFFCURVE",
"45 -1 CURVE SMOOTH",
"54 -1 OFFCURVE",
"66 1 OFFCURVE",
"79 5 CURVE SMOOTH",
"123 17 OFFCURVE",
"168 42 OFFCURVE",
"219 78 CURVE",
"219 76 LINE",
"218 75 OFFCURVE",
"218 75 OFFCURVE",
"218 74 CURVE",
"215 64 OFFCURVE",
"213 56 OFFCURVE",
"213 49 CURVE SMOOTH",
"213 20 OFFCURVE",
"248 -5 OFFCURVE",
"289 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"45 23 OFFCURVE",
"40 29 OFFCURVE",
"40 40 CURVE SMOOTH",
"40 42 LINE SMOOTH",
"41 53 OFFCURVE",
"49 71 OFFCURVE",
"65 97 CURVE SMOOTH",
"78 119 OFFCURVE",
"91 137 OFFCURVE",
"104 152 CURVE SMOOTH",
"141 195 OFFCURVE",
"170 225 OFFCURVE",
"190 240 CURVE",
"204 247 OFFCURVE",
"225 251 OFFCURVE",
"254 252 CURVE SMOOTH",
"299 252 LINE",
"304 247 OFFCURVE",
"306 241 OFFCURVE",
"306 233 CURVE SMOOTH",
"306 219 OFFCURVE",
"300 203 OFFCURVE",
"287 184 CURVE",
"275 171 OFFCURVE",
"265 158 OFFCURVE",
"256 145 CURVE SMOOTH",
"243 130 OFFCURVE",
"229 117 OFFCURVE",
"215 107 CURVE SMOOTH",
"161 66 OFFCURVE",
"111 38 OFFCURVE",
"66 25 CURVE SMOOTH",
"61 24 OFFCURVE",
"57 23 OFFCURVE",
"55 23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"331 155 OFFCURVE",
"321 158 OFFCURVE",
"314 165 CURVE",
"371 241 OFFCURVE",
"414 277 OFFCURVE",
"443 272 CURVE SMOOTH",
"452 271 OFFCURVE",
"456 266 OFFCURVE",
"456 257 CURVE SMOOTH",
"456 240 OFFCURVE",
"443 219 OFFCURVE",
"418 194 CURVE SMOOTH",
"391 168 OFFCURVE",
"365 155 OFFCURVE",
"342 155 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0128 40 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01271 1070 107 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0126 8 22 8 38 8 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01253 8 69 8 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01228 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01233 40 8 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012202 107 218 107 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 107 121 107 137 107 153 107 169 107 185 107 201 107 217 107 233 107 249 107 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 107 25 107 41 107 57 107 73 107 89 107 105 107 121 107 137 107 153 107 169 107 185 107 201 107 217 107 233 107 249 107 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 107 25 107 41 107 57 107 73 107 89 107 105 107 121 107 137 107 153 107 169 107 185 107 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01225 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01238 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01260 1063 76 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012103 1061 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01210 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 10 214 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 463;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = p;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-147 -282 OFFCURVE",
"-140 -273 OFFCURVE",
"-136 -256 CURVE SMOOTH",
"-129 -226 OFFCURVE",
"-102 -175 OFFCURVE",
"-56 -102 CURVE SMOOTH",
"8 -1 OFFCURVE",
"76 101 OFFCURVE",
"148 208 CURVE",
"163 217 OFFCURVE",
"176 224 OFFCURVE",
"186 229 CURVE SMOOTH",
"196 234 OFFCURVE",
"203 237 OFFCURVE",
"208 239 CURVE SMOOTH",
"230 248 OFFCURVE",
"255 252 OFFCURVE",
"282 252 CURVE SMOOTH",
"303 252 OFFCURVE",
"314 241 OFFCURVE",
"314 218 CURVE SMOOTH",
"314 178 OFFCURVE",
"301 147 OFFCURVE",
"275 124 CURVE",
"250 117 OFFCURVE",
"231 111 OFFCURVE",
"217 106 CURVE SMOOTH",
"172 91 OFFCURVE",
"132 77 OFFCURVE",
"95 61 CURVE SMOOTH",
"78 54 OFFCURVE",
"69 46 OFFCURVE",
"69 37 CURVE SMOOTH",
"69 30 OFFCURVE",
"77 27 OFFCURVE",
"93 27 CURVE SMOOTH",
"123 27 OFFCURVE",
"159 35 OFFCURVE",
"200 52 CURVE SMOOTH",
"238 67 OFFCURVE",
"270 85 OFFCURVE",
"296 105 CURVE",
"420 137 LINE",
"437 139 OFFCURVE",
"445 144 OFFCURVE",
"445 151 CURVE SMOOTH",
"445 154 OFFCURVE",
"441 154 OFFCURVE",
"434 153 CURVE SMOOTH",
"413 150 OFFCURVE",
"394 147 OFFCURVE",
"377 144 CURVE SMOOTH",
"360 141 OFFCURVE",
"346 139 OFFCURVE",
"333 138 CURVE",
"346 157 OFFCURVE",
"354 176 OFFCURVE",
"357 195 CURVE SMOOTH",
"358 202 OFFCURVE",
"359 209 OFFCURVE",
"359 216 CURVE SMOOTH",
"359 258 OFFCURVE",
"333 279 OFFCURVE",
"280 279 CURVE SMOOTH",
"255 279 OFFCURVE",
"220 270 OFFCURVE",
"176 251 CURVE",
"220 316 LINE SMOOTH",
"268 382 OFFCURVE",
"300 422 OFFCURVE",
"317 435 CURVE SMOOTH",
"320 437 OFFCURVE",
"321 439 OFFCURVE",
"321 440 CURVE SMOOTH",
"321 443 OFFCURVE",
"317 444 OFFCURVE",
"308 444 CURVE SMOOTH",
"290 444 OFFCURVE",
"276 440 OFFCURVE",
"265 432 CURVE SMOOTH",
"248 419 OFFCURVE",
"225 390 OFFCURVE",
"195 346 CURVE SMOOTH",
"123 236 LINE",
"80 216 LINE SMOOTH",
"72 212 OFFCURVE",
"68 206 OFFCURVE",
"68 199 CURVE SMOOTH",
"68 192 OFFCURVE",
"72 189 OFFCURVE",
"79 189 CURVE SMOOTH",
"82 189 OFFCURVE",
"86 190 OFFCURVE",
"90 191 CURVE",
"67 155 OFFCURVE",
"50 127 OFFCURVE",
"37 106 CURVE SMOOTH",
"13 67 LINE SMOOTH",
"-102 -119 OFFCURVE",
"-160 -232 OFFCURVE",
"-161 -272 CURVE SMOOTH",
"-161 -279 OFFCURVE",
"-159 -282 OFFCURVE",
"-156 -282 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 1070 21 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 21 218 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01268 21 63 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 1073 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01252 23 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01261 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 357;
}
);
note = p;
unicode = 0070;
},
{
glyphname = thorn;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"77 89 OFFCURVE",
"137 178 OFFCURVE",
"229 316 CURVE SMOOTH",
"275 384 OFFCURVE",
"309 422 OFFCURVE",
"326 435 CURVE SMOOTH",
"329 437 OFFCURVE",
"330 439 OFFCURVE",
"330 440 CURVE SMOOTH",
"330 443 OFFCURVE",
"326 444 OFFCURVE",
"317 444 CURVE SMOOTH",
"299 444 OFFCURVE",
"285 440 OFFCURVE",
"274 432 CURVE SMOOTH",
"257 419 OFFCURVE",
"233 391 OFFCURVE",
"204 346 CURVE SMOOTH",
"132 236 LINE SMOOTH",
"68 144 OFFCURVE",
"121 228 OFFCURVE",
"46 106 CURVE SMOOTH",
"22 67 LINE SMOOTH",
"17 58 OFFCURVE",
"12 50 OFFCURVE",
"6 42 CURVE",
"34 23 LINE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-138 -282 OFFCURVE",
"-131 -273 OFFCURVE",
"-127 -256 CURVE SMOOTH",
"-120 -226 OFFCURVE",
"-93 -175 OFFCURVE",
"-47 -102 CURVE SMOOTH",
"-30 -76 OFFCURVE",
"-13 -50 OFFCURVE",
"7 -18 CURVE",
"11 -19 OFFCURVE",
"14 -19 OFFCURVE",
"18 -19 CURVE SMOOTH",
"59 -19 OFFCURVE",
"121 11 OFFCURVE",
"202 70 CURVE SMOOTH",
"244 100 OFFCURVE",
"280 136 OFFCURVE",
"311 177 CURVE SMOOTH",
"341 217 OFFCURVE",
"356 248 OFFCURVE",
"356 269 CURVE SMOOTH",
"356 284 OFFCURVE",
"349 291 OFFCURVE",
"334 291 CURVE SMOOTH",
"331 291 OFFCURVE",
"328 291 OFFCURVE",
"324 290 CURVE SMOOTH",
"259 279 OFFCURVE",
"212 262 OFFCURVE",
"182 241 CURVE",
"181 244 OFFCURVE",
"180 246 OFFCURVE",
"180 248 CURVE SMOOTH",
"180 254 OFFCURVE",
"187 268 OFFCURVE",
"200 289 CURVE SMOOTH",
"253 370 OFFCURVE",
"291 424 OFFCURVE",
"314 451 CURVE SMOOTH",
"337 477 OFFCURVE",
"358 492 OFFCURVE",
"377 495 CURVE SMOOTH",
"390 497 OFFCURVE",
"396 501 OFFCURVE",
"396 507 CURVE SMOOTH",
"396 512 OFFCURVE",
"392 515 OFFCURVE",
"384 515 CURVE SMOOTH",
"376 515 OFFCURVE",
"361 510 OFFCURVE",
"338 500 CURVE SMOOTH",
"315 491 OFFCURVE",
"301 484 OFFCURVE",
"297 479 CURVE SMOOTH",
"284 463 OFFCURVE",
"264 437 OFFCURVE",
"238 400 CURVE SMOOTH",
"212 363 OFFCURVE",
"180 316 OFFCURVE",
"141 258 CURVE SMOOTH",
"102 200 OFFCURVE",
"71 152 OFFCURVE",
"48 115 CURVE SMOOTH",
"25 78 OFFCURVE",
"8 50 OFFCURVE",
"-1 33 CURVE SMOOTH",
"-3 30 OFFCURVE",
"-4 27 OFFCURVE",
"-5 24 CURVE",
"-102 -136 OFFCURVE",
"-151 -235 OFFCURVE",
"-152 -272 CURVE SMOOTH",
"-152 -279 OFFCURVE",
"-150 -282 OFFCURVE",
"-147 -282 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"58 37 OFFCURVE",
"53 39 OFFCURVE",
"50 44 CURVE SMOOTH",
"48 47 OFFCURVE",
"48 51 OFFCURVE",
"51 56 CURVE SMOOTH",
"78 100 OFFCURVE",
"102 137 OFFCURVE",
"124 166 CURVE SMOOTH",
"156 209 OFFCURVE",
"223 247 OFFCURVE",
"275 255 CURVE SMOOTH",
"285 256 OFFCURVE",
"291 248 OFFCURVE",
"291 236 CURVE SMOOTH",
"291 233 OFFCURVE",
"291 230 OFFCURVE",
"290 227 CURVE SMOOTH",
"278 178 OFFCURVE",
"250 136 OFFCURVE",
"205 99 CURVE SMOOTH",
"160 61 OFFCURVE",
"114 41 OFFCURVE",
"66 38 CURVE SMOOTH"
);
}
);
width = 305;
}
);
unicode = 00FE;
},
{
glyphname = q;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"84 -250 OFFCURVE",
"111 -232 OFFCURVE",
"150 -193 CURVE SMOOTH",
"183 -159 OFFCURVE",
"209 -127 OFFCURVE",
"229 -97 CURVE SMOOTH",
"250 -62 OFFCURVE",
"261 -33 OFFCURVE",
"261 -9 CURVE SMOOTH",
"261 10 OFFCURVE",
"255 24 OFFCURVE",
"242 34 CURVE",
"299 39 OFFCURVE",
"353 56 OFFCURVE",
"406 85 CURVE SMOOTH",
"412 88 OFFCURVE",
"417 92 OFFCURVE",
"420 97 CURVE SMOOTH",
"422 102 OFFCURVE",
"421 104 OFFCURVE",
"417 104 CURVE SMOOTH",
"415 104 OFFCURVE",
"412 103 OFFCURVE",
"407 100 CURVE SMOOTH",
"372 81 OFFCURVE",
"322 68 OFFCURVE",
"259 61 CURVE",
"304 129 OFFCURVE",
"337 179 OFFCURVE",
"357 212 CURVE SMOOTH",
"364 224 OFFCURVE",
"374 236 OFFCURVE",
"385 249 CURVE SMOOTH",
"396 261 OFFCURVE",
"409 278 OFFCURVE",
"422 300 CURVE SMOOTH",
"424 304 LINE",
"424 307 OFFCURVE",
"422 308 OFFCURVE",
"417 308 CURVE SMOOTH",
"402 308 OFFCURVE",
"387 302 OFFCURVE",
"370 290 CURVE",
"360 300 OFFCURVE",
"342 305 OFFCURVE",
"316 305 CURVE SMOOTH",
"273 305 OFFCURVE",
"219 277 OFFCURVE",
"152 221 CURVE SMOOTH",
"97 174 OFFCURVE",
"57 128 OFFCURVE",
"33 83 CURVE SMOOTH",
"24 64 OFFCURVE",
"19 48 OFFCURVE",
"19 34 CURVE SMOOTH",
"19 15 OFFCURVE",
"27 6 OFFCURVE",
"42 6 CURVE SMOOTH",
"49 6 OFFCURVE",
"58 9 OFFCURVE",
"70 14 CURVE SMOOTH",
"108 31 OFFCURVE",
"159 66 OFFCURVE",
"223 118 CURVE SMOOTH",
"237 130 OFFCURVE",
"248 140 OFFCURVE",
"257 147 CURVE SMOOTH",
"273 161 LINE",
"276 160 OFFCURVE",
"277 158 OFFCURVE",
"277 154 CURVE SMOOTH",
"277 147 OFFCURVE",
"271 133 OFFCURVE",
"258 114 CURVE SMOOTH",
"227 63 LINE",
"210 63 LINE SMOOTH",
"183 63 OFFCURVE",
"167 48 OFFCURVE",
"167 35 CURVE SMOOTH",
"167 32 OFFCURVE",
"168 29 OFFCURVE",
"170 27 CURVE SMOOTH",
"187 10 LINE",
"97 -110 OFFCURVE",
"52 -187 OFFCURVE",
"52 -220 CURVE SMOOTH",
"52 -233 OFFCURVE",
"58 -242 OFFCURVE",
"69 -245 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"91 -212 OFFCURVE",
"90 -210 OFFCURVE",
"90 -208 CURVE SMOOTH",
"90 -197 OFFCURVE",
"108 -160 OFFCURVE",
"144 -97 CURVE SMOOTH",
"167 -58 OFFCURVE",
"186 -28 OFFCURVE",
"201 -5 CURVE",
"210 -18 OFFCURVE",
"215 -29 OFFCURVE",
"215 -38 CURVE SMOOTH",
"215 -50 OFFCURVE",
"210 -64 OFFCURVE",
"200 -80 CURVE SMOOTH",
"183 -107 OFFCURVE",
"163 -135 OFFCURVE",
"142 -163 CURVE SMOOTH",
"115 -200 OFFCURVE",
"99 -216 OFFCURVE",
"92 -213 CURVE"
);
},
{
closed = 1;
nodes = (
"82 58 OFFCURVE",
"79 63 OFFCURVE",
"79 72 CURVE SMOOTH",
"79 81 OFFCURVE",
"83 92 OFFCURVE",
"92 105 CURVE SMOOTH",
"113 140 OFFCURVE",
"139 173 OFFCURVE",
"170 203 CURVE SMOOTH",
"223 254 OFFCURVE",
"269 279 OFFCURVE",
"308 279 CURVE SMOOTH",
"319 279 OFFCURVE",
"328 270 OFFCURVE",
"335 252 CURVE",
"298 212 OFFCURVE",
"258 174 OFFCURVE",
"214 139 CURVE SMOOTH",
"163 99 OFFCURVE",
"126 73 OFFCURVE",
"102 62 CURVE SMOOTH",
"97 59 OFFCURVE",
"92 58 OFFCURVE",
"89 58 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01270 1070 49 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0126 49 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 49 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 70 118 70 134 70 150 70 166 70 182 70 198 70 214 70 230 70 246 70 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 70 22 70 38 70 54 70 70 70 86 70 102 70 118 70 134 70 150 70 166 70 182 70 198 70 214 70 230 70 246 70 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 70 22 70 38 70 54 70 70 70 86 70 102 70 118 70 134 70 150 70 166 70 182 70 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 70 213 70 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01226 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01276 49 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01264 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 367;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"10 4 OFFCURVE",
"19 8 OFFCURVE",
"32 15 CURVE SMOOTH",
"59 30 LINE",
"69 52 LINE",
"94 89 OFFCURVE",
"114 116 OFFCURVE",
"129 131 CURVE SMOOTH",
"208 204 OFFCURVE",
"276 241 OFFCURVE",
"333 241 CURVE SMOOTH",
"336 241 OFFCURVE",
"337 239 OFFCURVE",
"337 234 CURVE SMOOTH",
"337 231 LINE SMOOTH",
"336 226 OFFCURVE",
"336 223 OFFCURVE",
"336 221 CURVE SMOOTH",
"336 219 LINE",
"337 218 OFFCURVE",
"339 217 OFFCURVE",
"340 217 CURVE SMOOTH",
"351 217 OFFCURVE",
"361 245 OFFCURVE",
"361 264 CURVE SMOOTH",
"361 273 OFFCURVE",
"359 278 OFFCURVE",
"354 278 CURVE SMOOTH",
"316 278 OFFCURVE",
"273 261 OFFCURVE",
"224 227 CURVE",
"221 224 OFFCURVE",
"211 217 OFFCURVE",
"195 204 CURVE SMOOTH",
"129 149 LINE",
"156 193 OFFCURVE",
"180 231 OFFCURVE",
"203 262 CURVE SMOOTH",
"205 265 OFFCURVE",
"206 267 OFFCURVE",
"206 269 CURVE SMOOTH",
"206 271 OFFCURVE",
"204 272 OFFCURVE",
"201 272 CURVE SMOOTH",
"193 272 OFFCURVE",
"178 267 OFFCURVE",
"156 256 CURVE SMOOTH",
"133 246 OFFCURVE",
"121 239 OFFCURVE",
"120 236 CURVE",
"119 221 OFFCURVE",
"117 210 OFFCURVE",
"116 202 CURVE",
"103 173 OFFCURVE",
"91 151 OFFCURVE",
"80 136 CURVE",
"49 86 LINE SMOOTH",
"40 73 OFFCURVE",
"34 64 OFFCURVE",
"30 59 CURVE SMOOTH",
"14 35 LINE SMOOTH",
"9 28 OFFCURVE",
"4 21 OFFCURVE",
"1 16 CURVE",
"-1 9 LINE",
"-1 6 OFFCURVE",
"1 4 OFFCURVE",
"5 4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0120 1064 11 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 280;
}
);
note = r;
unicode = 0072;
},
{
color = 11;
glyphname = racute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 280;
}
);
unicode = 0155;
},
{
color = 11;
glyphname = rcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 280;
}
);
unicode = 0159;
},
{
color = 11;
glyphname = rcommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 280;
}
);
unicode = 0157;
},
{
color = 11;
glyphname = rdblgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = dblgravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 280;
}
);
unicode = 0211;
},
{
color = 11;
glyphname = rinvertedbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = breveinvertedcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 280;
}
);
unicode = 0213;
},
{
glyphname = s;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"130 9 OFFCURVE",
"168 15 OFFCURVE",
"187 27 CURVE",
"195 30 OFFCURVE",
"200 51 OFFCURVE",
"212 55 CURVE SMOOTH",
"220 58 OFFCURVE",
"224 62 OFFCURVE",
"224 69 CURVE SMOOTH",
"224 73 OFFCURVE",
"222 75 OFFCURVE",
"217 75 CURVE SMOOTH",
"214 75 OFFCURVE",
"211 74 OFFCURVE",
"207 72 CURVE",
"199 70 OFFCURVE",
"192 69 OFFCURVE",
"187 69 CURVE",
"186 70 OFFCURVE",
"183 75 OFFCURVE",
"178 84 CURVE SMOOTH",
"173 92 OFFCURVE",
"165 104 OFFCURVE",
"156 119 CURVE SMOOTH",
"141 142 OFFCURVE",
"133 160 OFFCURVE",
"133 171 CURVE SMOOTH",
"133 206 OFFCURVE",
"149 234 OFFCURVE",
"182 255 CURVE SMOOTH",
"209 272 OFFCURVE",
"240 281 OFFCURVE",
"275 281 CURVE SMOOTH",
"282 281 OFFCURVE",
"291 280 OFFCURVE",
"303 277 CURVE SMOOTH",
"315 274 OFFCURVE",
"324 272 OFFCURVE",
"330 272 CURVE",
"351 275 OFFCURVE",
"362 283 OFFCURVE",
"362 296 CURVE SMOOTH",
"362 309 OFFCURVE",
"347 316 OFFCURVE",
"317 316 CURVE SMOOTH",
"254 316 OFFCURVE",
"197 297 OFFCURVE",
"146 259 CURVE SMOOTH",
"107 230 OFFCURVE",
"88 196 OFFCURVE",
"88 157 CURVE SMOOTH",
"88 147 OFFCURVE",
"98 130 OFFCURVE",
"119 107 CURVE SMOOTH",
"140 84 OFFCURVE",
"150 69 OFFCURVE",
"150 62 CURVE SMOOTH",
"150 59 OFFCURVE",
"149 57 OFFCURVE",
"146 56 CURVE SMOOTH",
"98 42 OFFCURVE",
"55 35 OFFCURVE",
"15 35 CURVE SMOOTH",
"-7 35 OFFCURVE",
"-18 33 OFFCURVE",
"-18 23 CURVE SMOOTH",
"-18 20 OFFCURVE",
"-16 17 OFFCURVE",
"-12 14 CURVE SMOOTH",
"-10 12 OFFCURVE",
"19 9 OFFCURVE",
"75 9 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1070 43 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 9 118 9 134 9 150 9 166 9 182 9 198 9 214 9 230 9 246 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 9 22 9 38 9 54 9 70 9 86 9 102 9 118 9 134 9 150 9 166 9 182 9 198 9 214 9 230 9 246 9 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 9 22 9 38 9 54 9 70 9 86 9 102 9 118 9 134 9 150 9 166 9 182 9 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 9 213 9 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01235 1063 29 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01247 1064 5 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 271;
}
);
note = s;
unicode = 0073;
},
{
color = 11;
glyphname = sacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 271;
}
);
unicode = 015B;
},
{
color = 11;
glyphname = scaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 271;
}
);
unicode = 0161;
},
{
color = 11;
glyphname = scedilla;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = cedillacomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 271;
}
);
unicode = 015F;
},
{
color = 11;
glyphname = scircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 271;
}
);
unicode = 015D;
},
{
color = 11;
glyphname = scommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 271;
}
);
unicode = 0219;
},
{
glyphname = germandbls;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
background = {
components = (
{
name = s;
transform = "{1, 0, 0, 1, 154, 0}";
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-143 -314 OFFCURVE",
"-53 -174 OFFCURVE",
"4 -71 CURVE SMOOTH",
"20 -43 OFFCURVE",
"56 18 OFFCURVE",
"83 66 CURVE SMOOTH",
"199 276 OFFCURVE",
"299 463 OFFCURVE",
"433 558 CURVE SMOOTH",
"456 573 OFFCURVE",
"475 581 OFFCURVE",
"490 581 CURVE SMOOTH",
"501 581 OFFCURVE",
"505 563 OFFCURVE",
"505 539 CURVE SMOOTH",
"505 489 OFFCURVE",
"489 411 OFFCURVE",
"484 388 CURVE SMOOTH",
"479 363 OFFCURVE",
"470 351 OFFCURVE",
"462 350 CURVE SMOOTH",
"393 341 OFFCURVE",
"339 315 OFFCURVE",
"294 269 CURVE SMOOTH",
"260 235 OFFCURVE",
"238 204 OFFCURVE",
"238 178 CURVE SMOOTH",
"238 155 OFFCURVE",
"252 130 OFFCURVE",
"273 107 CURVE SMOOTH",
"294 84 OFFCURVE",
"304 69 OFFCURVE",
"304 62 CURVE SMOOTH",
"304 59 OFFCURVE",
"303 57 OFFCURVE",
"300 56 CURVE SMOOTH",
"251 42 OFFCURVE",
"207 35 OFFCURVE",
"167 35 CURVE SMOOTH",
"147 35 OFFCURVE",
"136 32 OFFCURVE",
"136 23 CURVE SMOOTH",
"136 20 OFFCURVE",
"138 17 OFFCURVE",
"142 14 CURVE SMOOTH",
"144 12 OFFCURVE",
"172 9 OFFCURVE",
"226 9 CURVE SMOOTH",
"283 9 OFFCURVE",
"322 15 OFFCURVE",
"341 27 CURVE",
"349 30 OFFCURVE",
"354 51 OFFCURVE",
"366 55 CURVE SMOOTH",
"374 58 OFFCURVE",
"378 62 OFFCURVE",
"378 69 CURVE SMOOTH",
"378 73 OFFCURVE",
"376 75 OFFCURVE",
"371 75 CURVE SMOOTH",
"368 75 OFFCURVE",
"365 74 OFFCURVE",
"361 72 CURVE",
"353 70 OFFCURVE",
"346 69 OFFCURVE",
"341 69 CURVE",
"340 70 OFFCURVE",
"337 75 OFFCURVE",
"332 84 CURVE SMOOTH",
"327 92 OFFCURVE",
"319 104 OFFCURVE",
"310 119 CURVE SMOOTH",
"295 142 OFFCURVE",
"283 171 OFFCURVE",
"283 182 CURVE SMOOTH",
"283 217 OFFCURVE",
"301 245 OFFCURVE",
"331 271 CURVE SMOOTH",
"368 304 OFFCURVE",
"401 313 OFFCURVE",
"463 323 CURVE SMOOTH",
"483 327 OFFCURVE",
"490 343 OFFCURVE",
"495 355 CURVE SMOOTH",
"505 380 OFFCURVE",
"530 433 OFFCURVE",
"539 466 CURVE SMOOTH",
"547 498 OFFCURVE",
"551 522 OFFCURVE",
"551 539 CURVE SMOOTH",
"551 557 OFFCURVE",
"547 568 OFFCURVE",
"540 576 CURVE",
"525 589 OFFCURVE",
"508 597 OFFCURVE",
"484 597 CURVE SMOOTH",
"444 597 OFFCURVE",
"399 584 OFFCURVE",
"354 540 CURVE",
"270 447 OFFCURVE",
"211 351 OFFCURVE",
"161 271 CURVE",
"132 266 OFFCURVE",
"109 260 OFFCURVE",
"92 255 CURVE SMOOTH",
"74 250 OFFCURVE",
"64 243 OFFCURVE",
"64 238 CURVE SMOOTH",
"64 236 OFFCURVE",
"67 234 OFFCURVE",
"73 233 CURVE SMOOTH",
"78 232 OFFCURVE",
"87 232 OFFCURVE",
"98 233 CURVE SMOOTH",
"109 234 OFFCURVE",
"122 236 OFFCURVE",
"138 237 CURVE",
"115 198 OFFCURVE",
"91 151 OFFCURVE",
"72 115 CURVE SMOOTH",
"48 70 OFFCURVE",
"19 16 OFFCURVE",
"-12 -29 CURVE SMOOTH",
"-85 -140 OFFCURVE",
"-151 -221 OFFCURVE",
"-190 -253 CURVE SMOOTH",
"-223 -280 OFFCURVE",
"-251 -294 OFFCURVE",
"-272 -294 CURVE SMOOTH",
"-291 -294 OFFCURVE",
"-300 -276 OFFCURVE",
"-303 -251 CURVE",
"-298 -220 LINE SMOOTH",
"-297 -213 OFFCURVE",
"-296 -208 OFFCURVE",
"-296 -204 CURVE SMOOTH",
"-296 -197 OFFCURVE",
"-298 -193 OFFCURVE",
"-301 -193 CURVE SMOOTH",
"-312 -193 OFFCURVE",
"-321 -207 OFFCURVE",
"-329 -235 CURVE SMOOTH",
"-331 -243 OFFCURVE",
"-332 -250 OFFCURVE",
"-332 -256 CURVE SMOOTH",
"-332 -270 OFFCURVE",
"-328 -281 OFFCURVE",
"-320 -291 CURVE SMOOTH",
"-309 -306 OFFCURVE",
"-292 -314 OFFCURVE",
"-268 -314 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01247 1067 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01255 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 55 213 55 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01243 1064 22 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 1061 59 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 1063 8 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 421;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = t;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"83 3 OFFCURVE",
"87 4 OFFCURVE",
"90 5 CURVE SMOOTH",
"111 14 OFFCURVE",
"131 25 OFFCURVE",
"151 38 CURVE SMOOTH",
"188 66 LINE SMOOTH",
"193 70 OFFCURVE",
"196 74 OFFCURVE",
"196 79 CURVE SMOOTH",
"196 84 OFFCURVE",
"193 87 OFFCURVE",
"186 87 CURVE SMOOTH",
"183 87 OFFCURVE",
"169 79 OFFCURVE",
"144 64 CURVE SMOOTH",
"131 55 OFFCURVE",
"120 49 OFFCURVE",
"112 44 CURVE SMOOTH",
"104 39 OFFCURVE",
"98 36 OFFCURVE",
"95 35 CURVE SMOOTH",
"84 30 OFFCURVE",
"74 28 OFFCURVE",
"66 28 CURVE SMOOTH",
"55 28 OFFCURVE",
"49 34 OFFCURVE",
"49 45 CURVE SMOOTH",
"49 52 OFFCURVE",
"53 66 OFFCURVE",
"60 86 CURVE SMOOTH",
"81 146 OFFCURVE",
"113 206 OFFCURVE",
"158 265 CURVE",
"171 274 OFFCURVE",
"181 278 OFFCURVE",
"189 279 CURVE SMOOTH",
"224 283 OFFCURVE",
"249 285 OFFCURVE",
"264 285 CURVE SMOOTH",
"286 286 OFFCURVE",
"297 289 OFFCURVE",
"297 296 CURVE SMOOTH",
"297 298 OFFCURVE",
"294 300 OFFCURVE",
"288 301 CURVE SMOOTH",
"268 302 OFFCURVE",
"249 303 OFFCURVE",
"234 303 CURVE SMOOTH",
"226 303 OFFCURVE",
"219 302 OFFCURVE",
"213 302 CURVE SMOOTH",
"205 303 OFFCURVE",
"201 306 OFFCURVE",
"201 312 CURVE SMOOTH",
"201 315 OFFCURVE",
"203 320 OFFCURVE",
"207 325 CURVE SMOOTH",
"271 398 LINE",
"292 418 OFFCURVE",
"315 436 OFFCURVE",
"339 452 CURVE",
"342 453 OFFCURVE",
"343 454 OFFCURVE",
"343 457 CURVE SMOOTH",
"343 458 OFFCURVE",
"340 459 OFFCURVE",
"335 459 CURVE SMOOTH",
"315 459 OFFCURVE",
"296 453 OFFCURVE",
"277 441 CURVE SMOOTH",
"264 434 OFFCURVE",
"246 416 OFFCURVE",
"223 388 CURVE SMOOTH",
"200 361 OFFCURVE",
"177 333 OFFCURVE",
"154 304 CURVE",
"126 303 OFFCURVE",
"104 300 OFFCURVE",
"87 296 CURVE SMOOTH",
"80 294 OFFCURVE",
"76 292 OFFCURVE",
"76 289 CURVE SMOOTH",
"76 284 OFFCURVE",
"83 278 OFFCURVE",
"98 271 CURVE SMOOTH",
"102 269 OFFCURVE",
"104 264 OFFCURVE",
"104 256 CURVE SMOOTH",
"104 251 OFFCURVE",
"104 245 OFFCURVE",
"102 238 CURVE",
"62 173 LINE SMOOTH",
"39 134 OFFCURVE",
"22 104 OFFCURVE",
"11 81 CURVE SMOOTH",
"6 69 OFFCURVE",
"3 59 OFFCURVE",
"3 52 CURVE SMOOTH",
"3 34 OFFCURVE",
"15 21 OFFCURVE",
"39 12 CURVE SMOOTH",
"55 6 OFFCURVE",
"68 3 OFFCURVE",
"78 3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 206;
}
);
note = t;
unicode = 0074;
},
{
color = 11;
glyphname = tbar;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = strokeshortcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 206;
}
);
unicode = 0167;
},
{
color = 11;
glyphname = tcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = caroncomb.alt;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 206;
}
);
unicode = 0165;
},
{
color = 11;
glyphname = tcedilla;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = cedillacomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 206;
}
);
unicode = 0163;
},
{
color = 11;
glyphname = tcommaaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = commaaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 206;
}
);
unicode = 021B;
},
{
glyphname = u;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"238 -2 OFFCURVE",
"248 3 OFFCURVE",
"261 12 CURVE SMOOTH",
"270 19 OFFCURVE",
"276 24 OFFCURVE",
"281 27 CURVE SMOOTH",
"286 30 OFFCURVE",
"289 31 OFFCURVE",
"290 32 CURVE",
"313 45 OFFCURVE",
"333 57 OFFCURVE",
"356 69 CURVE SMOOTH",
"381 82 OFFCURVE",
"407 92 OFFCURVE",
"433 99 CURVE SMOOTH",
"443 102 OFFCURVE",
"448 106 OFFCURVE",
"448 112 CURVE SMOOTH",
"448 116 OFFCURVE",
"445 118 OFFCURVE",
"440 118 CURVE SMOOTH",
"438 118 OFFCURVE",
"435 117 OFFCURVE",
"431 116 CURVE SMOOTH",
"362 89 OFFCURVE",
"312 69 OFFCURVE",
"277 54 CURVE",
"329 158 LINE SMOOTH",
"342 183 OFFCURVE",
"364 213 OFFCURVE",
"395 250 CURVE SMOOTH",
"398 253 OFFCURVE",
"399 256 OFFCURVE",
"399 259 CURVE SMOOTH",
"399 265 OFFCURVE",
"394 268 OFFCURVE",
"385 268 CURVE SMOOTH",
"378 268 OFFCURVE",
"372 265 OFFCURVE",
"365 260 CURVE",
"321 218 OFFCURVE",
"267 176 OFFCURVE",
"203 133 CURVE SMOOTH",
"176 114 OFFCURVE",
"148 96 OFFCURVE",
"120 77 CURVE SMOOTH",
"87 56 OFFCURVE",
"65 45 OFFCURVE",
"55 45 CURVE SMOOTH",
"50 45 OFFCURVE",
"47 48 OFFCURVE",
"47 53 CURVE SMOOTH",
"47 71 OFFCURVE",
"63 101 OFFCURVE",
"95 142 CURVE SMOOTH",
"131 189 OFFCURVE",
"167 232 OFFCURVE",
"203 275 CURVE",
"204 278 OFFCURVE",
"205 280 OFFCURVE",
"205 282 CURVE SMOOTH",
"205 289 OFFCURVE",
"201 292 OFFCURVE",
"194 292 CURVE SMOOTH",
"191 292 OFFCURVE",
"187 291 OFFCURVE",
"182 288 CURVE SMOOTH",
"171 282 OFFCURVE",
"155 276 OFFCURVE",
"136 270 CURVE SMOOTH",
"119 265 OFFCURVE",
"111 261 OFFCURVE",
"110 258 CURVE SMOOTH",
"107 249 OFFCURVE",
"105 242 OFFCURVE",
"104 236 CURVE SMOOTH",
"103 229 OFFCURVE",
"101 224 OFFCURVE",
"100 219 CURVE",
"84 192 OFFCURVE",
"70 169 OFFCURVE",
"58 152 CURVE SMOOTH",
"46 134 OFFCURVE",
"34 116 OFFCURVE",
"23 98 CURVE SMOOTH",
"8 73 OFFCURVE",
"0 52 OFFCURVE",
"0 35 CURVE SMOOTH",
"0 15 OFFCURVE",
"6 5 OFFCURVE",
"18 5 CURVE SMOOTH",
"36 5 OFFCURVE",
"68 19 OFFCURVE",
"114 47 CURVE SMOOTH",
"190 97 LINE SMOOTH",
"212 112 OFFCURVE",
"232 127 OFFCURVE",
"249 140 CURVE SMOOTH",
"266 153 OFFCURVE",
"282 164 OFFCURVE",
"295 173 CURVE",
"266 116 OFFCURVE",
"240 66 OFFCURVE",
"213 25 CURVE",
"211 17 LINE",
"211 4 OFFCURVE",
"218 -2 OFFCURVE",
"233 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01217 10 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01266 10 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 381;
}
);
note = u;
unicode = 0075;
},
{
color = 11;
glyphname = uacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 00FA;
},
{
color = 11;
glyphname = ubreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 016D;
},
{
color = 11;
glyphname = ucircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 00FB;
},
{
color = 11;
glyphname = udblgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dblgravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 0215;
},
{
color = 11;
glyphname = udieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 00FC;
},
{
color = 11;
glyphname = udotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 1EE5;
},
{
color = 11;
glyphname = ugrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 00F9;
},
{
color = 11;
glyphname = uhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 1EE7;
},
{
color = 11;
glyphname = uhorn;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 378, -289}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 01B0;
},
{
color = 11;
glyphname = uhornacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 1EE9;
},
{
color = 11;
glyphname = uhorndotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 1EF1;
},
{
color = 11;
glyphname = uhorngrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 1EEB;
},
{
color = 11;
glyphname = uhornhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 1EED;
},
{
color = 11;
glyphname = uhorntilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 1EEF;
},
{
color = 11;
glyphname = uhungarumlaut;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlautcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 0171;
},
{
color = 11;
glyphname = uinvertedbreve;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = breveinvertedcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 0217;
},
{
color = 11;
glyphname = umacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 016B;
},
{
color = 11;
glyphname = uogonek;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ogonekcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 0173;
},
{
color = 11;
glyphname = uring;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ringcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 016F;
},
{
color = 11;
glyphname = utilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 381;
}
);
unicode = 0169;
},
{
glyphname = v;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"50 -10 OFFCURVE",
"68 -3 OFFCURVE",
"93 10 CURVE SMOOTH",
"116 22 OFFCURVE",
"135 34 OFFCURVE",
"150 45 CURVE SMOOTH",
"228 105 OFFCURVE",
"290 160 OFFCURVE",
"335 210 CURVE",
"360 213 OFFCURVE",
"381 214 OFFCURVE",
"396 215 CURVE SMOOTH",
"411 216 OFFCURVE",
"419 220 OFFCURVE",
"419 229 CURVE SMOOTH",
"419 232 OFFCURVE",
"416 233 OFFCURVE",
"411 233 CURVE SMOOTH",
"405 233 LINE",
"402 232 OFFCURVE",
"399 232 OFFCURVE",
"397 232 CURVE SMOOTH",
"389 232 LINE SMOOTH",
"377 232 OFFCURVE",
"370 234 OFFCURVE",
"368 239 CURVE",
"367 240 OFFCURVE",
"367 244 OFFCURVE",
"367 252 CURVE",
"374 262 OFFCURVE",
"371 261 OFFCURVE",
"383 273 CURVE SMOOTH",
"387 277 OFFCURVE",
"389 281 OFFCURVE",
"389 284 CURVE SMOOTH",
"389 294 OFFCURVE",
"381 299 OFFCURVE",
"365 299 CURVE SMOOTH",
"362 299 OFFCURVE",
"359 298 OFFCURVE",
"355 297 CURVE SMOOTH",
"337 292 OFFCURVE",
"325 280 OFFCURVE",
"320 263 CURVE SMOOTH",
"314 244 LINE SMOOTH",
"313 241 OFFCURVE",
"313 239 OFFCURVE",
"312 237 CURVE SMOOTH",
"293 208 OFFCURVE",
"271 182 OFFCURVE",
"248 159 CURVE SMOOTH",
"233 146 OFFCURVE",
"213 126 OFFCURVE",
"182 101 CURVE SMOOTH",
"123 52 OFFCURVE",
"87 26 OFFCURVE",
"76 24 CURVE SMOOTH",
"67 23 OFFCURVE",
"62 28 OFFCURVE",
"62 39 CURVE SMOOTH",
"62 49 OFFCURVE",
"64 58 OFFCURVE",
"69 67 CURVE SMOOTH",
"84 99 OFFCURVE",
"102 129 OFFCURVE",
"121 160 CURVE",
"122 160 OFFCURVE",
"137 181 OFFCURVE",
"167 224 CURVE SMOOTH",
"169 227 OFFCURVE",
"170 230 OFFCURVE",
"170 234 CURVE SMOOTH",
"170 246 OFFCURVE",
"160 258 OFFCURVE",
"149 258 CURVE SMOOTH",
"145 258 OFFCURVE",
"142 256 OFFCURVE",
"139 252 CURVE SMOOTH",
"132 245 OFFCURVE",
"125 238 OFFCURVE",
"118 233 CURVE SMOOTH",
"111 227 OFFCURVE",
"105 222 OFFCURVE",
"100 217 CURVE SMOOTH",
"99 216 OFFCURVE",
"100 214 OFFCURVE",
"103 211 CURVE SMOOTH",
"106 208 OFFCURVE",
"106 206 OFFCURVE",
"105 204 CURVE SMOOTH",
"68 148 OFFCURVE",
"38 97 OFFCURVE",
"15 50 CURVE SMOOTH",
"8 34 OFFCURVE",
"4 23 OFFCURVE",
"4 18 CURVE SMOOTH",
"4 15 OFFCURVE",
"5 14 OFFCURVE",
"6 13 CURVE SMOOTH",
"7 12 OFFCURVE",
"10 7 OFFCURVE",
"17 -2 CURVE SMOOTH",
"20 -7 OFFCURVE",
"28 -10 OFFCURVE",
"40 -10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01212 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 330;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"305 24 OFFCURVE",
"349 46 OFFCURVE",
"398 88 CURVE SMOOTH",
"450 131 OFFCURVE",
"481 177 OFFCURVE",
"490 225 CURVE",
"498 225 OFFCURVE",
"506 226 OFFCURVE",
"513 228 CURVE SMOOTH",
"523 231 OFFCURVE",
"529 232 OFFCURVE",
"530 232 CURVE SMOOTH",
"541 233 OFFCURVE",
"547 238 OFFCURVE",
"547 245 CURVE SMOOTH",
"547 250 OFFCURVE",
"544 252 OFFCURVE",
"538 252 CURVE SMOOTH",
"535 252 OFFCURVE",
"532 252 OFFCURVE",
"529 251 CURVE SMOOTH",
"525 250 OFFCURVE",
"520 250 OFFCURVE",
"516 250 CURVE SMOOTH",
"508 250 OFFCURVE",
"499 251 OFFCURVE",
"490 253 CURVE",
"485 266 OFFCURVE",
"464 277 OFFCURVE",
"447 277 CURVE SMOOTH",
"434 277 OFFCURVE",
"428 272 OFFCURVE",
"428 261 CURVE SMOOTH",
"428 254 OFFCURVE",
"430 249 OFFCURVE",
"434 245 CURVE SMOOTH",
"453 225 LINE",
"444 183 OFFCURVE",
"422 144 OFFCURVE",
"387 108 CURVE SMOOTH",
"351 72 OFFCURVE",
"319 52 OFFCURVE",
"290 52 CURVE SMOOTH",
"271 52 OFFCURVE",
"260 80 OFFCURVE",
"263 110 CURVE SMOOTH",
"269 177 OFFCURVE",
"290 239 OFFCURVE",
"325 295 CURVE",
"328 298 OFFCURVE",
"329 302 OFFCURVE",
"329 305 CURVE SMOOTH",
"329 310 OFFCURVE",
"325 312 OFFCURVE",
"317 312 CURVE SMOOTH",
"296 312 OFFCURVE",
"283 306 OFFCURVE",
"276 293 CURVE SMOOTH",
"261 265 OFFCURVE",
"244 240 OFFCURVE",
"225 219 CURVE SMOOTH",
"173 163 LINE",
"152 142 LINE SMOOTH",
"143 133 OFFCURVE",
"131 123 OFFCURVE",
"118 110 CURVE SMOOTH",
"86 82 OFFCURVE",
"67 68 OFFCURVE",
"60 68 CURVE SMOOTH",
"55 68 OFFCURVE",
"52 70 OFFCURVE",
"52 75 CURVE SMOOTH",
"52 80 OFFCURVE",
"56 89 OFFCURVE",
"62 100 CURVE SMOOTH",
"109 180 OFFCURVE",
"145 232 OFFCURVE",
"172 263 CURVE SMOOTH",
"175 266 OFFCURVE",
"176 269 OFFCURVE",
"176 273 CURVE SMOOTH",
"176 286 OFFCURVE",
"170 292 OFFCURVE",
"159 292 CURVE SMOOTH",
"154 292 OFFCURVE",
"151 290 OFFCURVE",
"148 285 CURVE SMOOTH",
"140 271 OFFCURVE",
"116 257 OFFCURVE",
"106 247 CURVE",
"105 236 OFFCURVE",
"106 228 OFFCURVE",
"107 221 CURVE",
"54 151 LINE SMOOTH",
"35 124 OFFCURVE",
"20 99 OFFCURVE",
"9 76 CURVE SMOOTH",
"7 72 OFFCURVE",
"6 68 OFFCURVE",
"6 64 CURVE SMOOTH",
"6 43 OFFCURVE",
"17 33 OFFCURVE",
"40 33 CURVE SMOOTH",
"52 33 OFFCURVE",
"65 38 OFFCURVE",
"78 47 CURVE SMOOTH",
"127 81 OFFCURVE",
"167 117 OFFCURVE",
"199 154 CURVE SMOOTH",
"230 190 LINE",
"225 171 OFFCURVE",
"222 145 OFFCURVE",
"219 112 CURVE SMOOTH",
"215 60 OFFCURVE",
"232 24 OFFCURVE",
"266 24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01255 1075 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01257 1075 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 467;
}
);
note = w;
unicode = 0077;
},
{
color = 11;
glyphname = wacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 467;
}
);
unicode = 1E83;
},
{
color = 11;
glyphname = wcircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 467;
}
);
unicode = 0175;
},
{
color = 11;
glyphname = wdieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 467;
}
);
unicode = 1E85;
},
{
color = 11;
glyphname = wgrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 467;
}
);
unicode = 1E81;
},
{
glyphname = x;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-180 -149 OFFCURVE",
"-177 -147 OFFCURVE",
"-172 -142 CURVE SMOOTH",
"-83 -34 OFFCURVE",
"24 62 OFFCURVE",
"149 150 CURVE",
"144 127 OFFCURVE",
"139 107 OFFCURVE",
"136 91 CURVE SMOOTH",
"129 63 OFFCURVE",
"123 41 OFFCURVE",
"118 26 CURVE SMOOTH",
"113 11 OFFCURVE",
"110 1 OFFCURVE",
"107 -2 CURVE SMOOTH",
"105 -5 OFFCURVE",
"104 -8 OFFCURVE",
"104 -10 CURVE SMOOTH",
"104 -14 OFFCURVE",
"108 -16 OFFCURVE",
"115 -16 CURVE SMOOTH",
"123 -16 OFFCURVE",
"131 -13 OFFCURVE",
"138 -8 CURVE SMOOTH",
"188 29 OFFCURVE",
"259 60 OFFCURVE",
"352 85 CURVE SMOOTH",
"356 86 OFFCURVE",
"358 88 OFFCURVE",
"358 91 CURVE SMOOTH",
"358 93 LINE SMOOTH",
"357 97 OFFCURVE",
"355 99 OFFCURVE",
"352 99 CURVE",
"313 90 OFFCURVE",
"286 81 OFFCURVE",
"267 74 CURVE SMOOTH",
"206 53 OFFCURVE",
"171 41 OFFCURVE",
"161 36 CURVE",
"168 61 OFFCURVE",
"172 81 OFFCURVE",
"175 94 CURVE SMOOTH",
"192 172 LINE",
"260 217 OFFCURVE",
"306 249 OFFCURVE",
"337 270 CURVE SMOOTH",
"344 274 OFFCURVE",
"347 279 OFFCURVE",
"347 284 CURVE SMOOTH",
"347 287 OFFCURVE",
"345 289 OFFCURVE",
"341 289 CURVE SMOOTH",
"338 289 OFFCURVE",
"334 288 OFFCURVE",
"329 285 CURVE SMOOTH",
"197 204 LINE",
"204 233 OFFCURVE",
"208 251 OFFCURVE",
"208 257 CURVE SMOOTH",
"208 268 OFFCURVE",
"203 273 OFFCURVE",
"194 273 CURVE SMOOTH",
"188 273 OFFCURVE",
"180 271 OFFCURVE",
"170 267 CURVE SMOOTH",
"115 244 OFFCURVE",
"82 228 OFFCURVE",
"72 218 CURVE SMOOTH",
"67 213 OFFCURVE",
"65 209 OFFCURVE",
"65 206 CURVE SMOOTH",
"65 202 OFFCURVE",
"67 200 OFFCURVE",
"72 200 CURVE SMOOTH",
"77 200 OFFCURVE",
"82 203 OFFCURVE",
"87 208 CURVE SMOOTH",
"101 222 OFFCURVE",
"119 233 OFFCURVE",
"140 240 CURVE SMOOTH",
"150 243 OFFCURVE",
"155 235 OFFCURVE",
"155 216 CURVE SMOOTH",
"155 203 OFFCURVE",
"153 188 OFFCURVE",
"148 171 CURVE",
"19 83 OFFCURVE",
"-91 -16 OFFCURVE",
"-183 -125 CURVE SMOOTH",
"-188 -130 OFFCURVE",
"-190 -135 OFFCURVE",
"-190 -140 CURVE SMOOTH",
"-190 -146 OFFCURVE",
"-188 -149 OFFCURVE",
"-183 -149 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01214 4 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01245 4 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01259 4 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"89 -358 OFFCURVE",
"198 -276 OFFCURVE",
"282 -111 CURVE SMOOTH",
"310 -56 OFFCURVE",
"333 2 OFFCURVE",
"352 63 CURVE SMOOTH",
"360 89 OFFCURVE",
"381 108 OFFCURVE",
"414 120 CURVE SMOOTH",
"435 128 OFFCURVE",
"450 133 OFFCURVE",
"458 136 CURVE SMOOTH",
"465 138 OFFCURVE",
"469 140 OFFCURVE",
"469 143 CURVE SMOOTH",
"469 147 OFFCURVE",
"464 149 OFFCURVE",
"453 149 CURVE SMOOTH",
"437 149 OFFCURVE",
"409 141 OFFCURVE",
"368 125 CURVE",
"381 175 LINE",
"389 204 LINE SMOOTH",
"391 211 OFFCURVE",
"393 217 OFFCURVE",
"394 222 CURVE",
"409 239 OFFCURVE",
"417 252 OFFCURVE",
"417 261 CURVE SMOOTH",
"417 268 OFFCURVE",
"412 272 OFFCURVE",
"402 272 CURVE SMOOTH",
"395 272 OFFCURVE",
"387 271 OFFCURVE",
"379 268 CURVE SMOOTH",
"358 261 OFFCURVE",
"347 252 OFFCURVE",
"345 241 CURVE SMOOTH",
"340 220 LINE",
"305 197 OFFCURVE",
"265 170 OFFCURVE",
"214 141 CURVE SMOOTH",
"143 100 OFFCURVE",
"101 79 OFFCURVE",
"87 79 CURVE SMOOTH",
"82 79 OFFCURVE",
"80 81 OFFCURVE",
"80 84 CURVE SMOOTH",
"80 89 OFFCURVE",
"84 97 OFFCURVE",
"92 109 CURVE SMOOTH",
"111 136 OFFCURVE",
"124 156 OFFCURVE",
"135 167 CURVE SMOOTH",
"168 201 OFFCURVE",
"192 225 OFFCURVE",
"207 239 CURVE",
"208 242 OFFCURVE",
"209 243 OFFCURVE",
"209 244 CURVE SMOOTH",
"209 247 OFFCURVE",
"206 248 OFFCURVE",
"201 248 CURVE SMOOTH",
"190 248 OFFCURVE",
"173 244 OFFCURVE",
"151 236 CURVE SMOOTH",
"128 228 OFFCURVE",
"115 221 OFFCURVE",
"110 215 CURVE SMOOTH",
"108 213 OFFCURVE",
"108 210 OFFCURVE",
"108 205 CURVE SMOOTH",
"108 194 LINE SMOOTH",
"108 188 OFFCURVE",
"106 183 OFFCURVE",
"103 179 CURVE SMOOTH",
"83 151 OFFCURVE",
"66 126 OFFCURVE",
"51 104 CURVE SMOOTH",
"36 82 OFFCURVE",
"23 63 OFFCURVE",
"12 48 CURVE SMOOTH",
"8 41 OFFCURVE",
"6 36 OFFCURVE",
"6 33 CURVE SMOOTH",
"6 28 OFFCURVE",
"10 25 OFFCURVE",
"18 25 CURVE SMOOTH",
"46 25 OFFCURVE",
"90 43 OFFCURVE",
"149 80 CURVE SMOOTH",
"244 137 OFFCURVE",
"304 174 OFFCURVE",
"335 189 CURVE",
"314 102 LINE",
"241 71 OFFCURVE",
"175 39 OFFCURVE",
"118 6 CURVE SMOOTH",
"65 -25 OFFCURVE",
"10 -61 OFFCURVE",
"-50 -106 CURVE SMOOTH",
"-110 -151 OFFCURVE",
"-145 -182 OFFCURVE",
"-156 -198 CURVE SMOOTH",
"-169 -219 OFFCURVE",
"-176 -240 OFFCURVE",
"-176 -260 CURVE SMOOTH",
"-176 -318 OFFCURVE",
"-116 -358 OFFCURVE",
"-45 -358 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-96 -337 OFFCURVE",
"-141 -306 OFFCURVE",
"-141 -261 CURVE SMOOTH",
"-141 -246 OFFCURVE",
"-135 -229 OFFCURVE",
"-124 -210 CURVE SMOOTH",
"-113 -192 OFFCURVE",
"-82 -163 OFFCURVE",
"-31 -124 CURVE SMOOTH",
"23 -81 OFFCURVE",
"77 -45 OFFCURVE",
"130 -16 CURVE SMOOTH",
"200 23 OFFCURVE",
"259 54 OFFCURVE",
"307 77 CURVE",
"287 0 OFFCURVE",
"267 -59 OFFCURVE",
"247 -100 CURVE SMOOTH",
"212 -171 OFFCURVE",
"178 -223 OFFCURVE",
"144 -257 CURVE SMOOTH",
"91 -310 OFFCURVE",
"28 -337 OFFCURVE",
"-43 -337 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01287 1069 11 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 102 87 118 87 134 87 150 87 166 87 182 87 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 87 213 87 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01290 1061 6 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 430;
}
);
note = y;
unicode = 0079;
},
{
color = 11;
glyphname = yacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
unicode = 00FD;
},
{
color = 11;
glyphname = ycircumflex;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
unicode = 0177;
},
{
color = 11;
glyphname = ydieresis;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
unicode = 00FF;
},
{
color = 11;
glyphname = ydotbelow;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
unicode = 1EF5;
},
{
color = 11;
glyphname = ygrave;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
unicode = 1EF3;
},
{
color = 11;
glyphname = yhookabove;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = hookabovecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
unicode = 1EF7;
},
{
color = 11;
glyphname = ymacron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
unicode = 0233;
},
{
color = 11;
glyphname = ytilde;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 430;
}
);
unicode = 1EF9;
},
{
glyphname = z;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"3 6 OFFCURVE",
"7 7 OFFCURVE",
"10 10 CURVE",
"85 51 OFFCURVE",
"156 72 OFFCURVE",
"222 72 CURVE SMOOTH",
"247 72 OFFCURVE",
"260 68 OFFCURVE",
"260 61 CURVE SMOOTH",
"260 54 OFFCURVE",
"254 42 OFFCURVE",
"242 25 CURVE SMOOTH",
"239 20 OFFCURVE",
"237 16 OFFCURVE",
"237 15 CURVE SMOOTH",
"237 14 OFFCURVE",
"238 13 OFFCURVE",
"239 13 CURVE SMOOTH",
"243 13 OFFCURVE",
"247 15 OFFCURVE",
"252 20 CURVE SMOOTH",
"276 45 OFFCURVE",
"288 67 OFFCURVE",
"288 88 CURVE SMOOTH",
"288 103 OFFCURVE",
"279 109 OFFCURVE",
"260 109 CURVE SMOOTH",
"220 109 OFFCURVE",
"163 96 OFFCURVE",
"87 71 CURVE",
"140 127 OFFCURVE",
"177 162 OFFCURVE",
"198 181 CURVE SMOOTH",
"243 222 OFFCURVE",
"284 249 OFFCURVE",
"320 264 CURVE SMOOTH",
"325 266 OFFCURVE",
"328 269 OFFCURVE",
"328 272 CURVE SMOOTH",
"328 284 OFFCURVE",
"313 288 OFFCURVE",
"282 288 CURVE SMOOTH",
"263 288 OFFCURVE",
"240 286 OFFCURVE",
"212 282 CURVE SMOOTH",
"169 276 OFFCURVE",
"139 267 OFFCURVE",
"122 256 CURVE SMOOTH",
"111 248 OFFCURVE",
"105 240 OFFCURVE",
"105 232 CURVE SMOOTH",
"105 227 OFFCURVE",
"107 224 OFFCURVE",
"111 224 CURVE SMOOTH",
"112 224 OFFCURVE",
"114 225 OFFCURVE",
"117 226 CURVE",
"146 249 OFFCURVE",
"182 260 OFFCURVE",
"225 260 CURVE SMOOTH",
"232 260 OFFCURVE",
"239 259 OFFCURVE",
"246 258 CURVE",
"209 234 OFFCURVE",
"164 197 OFFCURVE",
"113 146 CURVE SMOOTH",
"-7 29 LINE SMOOTH",
"-12 25 OFFCURVE",
"-14 21 OFFCURVE",
"-14 16 CURVE SMOOTH",
"-14 9 OFFCURVE",
"-10 6 OFFCURVE",
"-2 6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0128 1064 22 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01233 22 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 307;
}
);
note = z;
unicode = 007A;
},
{
color = 11;
glyphname = zacute;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 307;
}
);
unicode = 017A;
},
{
color = 11;
glyphname = zcaron;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 307;
}
);
unicode = 017E;
},
{
color = 11;
glyphname = zdotaccent;
lastChange = "2021-12-02 23:37:03 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 307;
}
);
unicode = 017C;
},
{
glyphname = f_f;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-9 -112 OFFCURVE",
"2 -101 OFFCURVE",
"2 -90 CURVE SMOOTH",
"2 -67 OFFCURVE",
"8 -44 OFFCURVE",
"19 -20 CURVE SMOOTH",
"54 51 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"181 253 OFFCURVE",
"197 262 OFFCURVE",
"217 263 CURVE SMOOTH",
"246 265 OFFCURVE",
"275 266 OFFCURVE",
"302 267 CURVE",
"308 260 LINE SMOOTH",
"317 251 OFFCURVE",
"324 247 OFFCURVE",
"331 247 CURVE",
"246 122 OFFCURVE",
"191 29 OFFCURVE",
"166 -34 CURVE SMOOTH",
"162 -43 OFFCURVE",
"160 -53 OFFCURVE",
"160 -62 CURVE SMOOTH",
"160 -69 OFFCURVE",
"161 -76 OFFCURVE",
"164 -85 CURVE SMOOTH",
"167 -94 OFFCURVE",
"168 -99 OFFCURVE",
"168 -101 CURVE SMOOTH",
"168 -108 OFFCURVE",
"171 -112 OFFCURVE",
"176 -112 CURVE SMOOTH",
"184 -112 OFFCURVE",
"195 -101 OFFCURVE",
"195 -90 CURVE SMOOTH",
"195 -67 OFFCURVE",
"201 -44 OFFCURVE",
"212 -20 CURVE SMOOTH",
"247 51 OFFCURVE",
"296 135 OFFCURVE",
"363 235 CURVE SMOOTH",
"374 253 OFFCURVE",
"390 262 OFFCURVE",
"410 263 CURVE SMOOTH",
"455 266 OFFCURVE",
"498 267 OFFCURVE",
"538 267 CURVE SMOOTH",
"551 267 OFFCURVE",
"557 270 OFFCURVE",
"557 276 CURVE SMOOTH",
"557 281 OFFCURVE",
"552 284 OFFCURVE",
"543 285 CURVE SMOOTH",
"518 289 OFFCURVE",
"481 291 OFFCURVE",
"431 291 CURVE SMOOTH",
"400 291 LINE",
"448 359 OFFCURVE",
"493 409 OFFCURVE",
"535 440 CURVE SMOOTH",
"576 471 OFFCURVE",
"610 486 OFFCURVE",
"636 486 CURVE SMOOTH",
"658 486 OFFCURVE",
"678 478 OFFCURVE",
"697 461 CURVE",
"720 474 OFFCURVE",
"731 484 OFFCURVE",
"731 491 CURVE SMOOTH",
"731 494 OFFCURVE",
"729 496 OFFCURVE",
"726 497 CURVE SMOOTH",
"707 506 OFFCURVE",
"687 511 OFFCURVE",
"666 511 CURVE SMOOTH",
"613 511 OFFCURVE",
"560 490 OFFCURVE",
"506 448 CURVE SMOOTH",
"459 411 OFFCURVE",
"411 359 OFFCURVE",
"362 290 CURVE",
"356 289 OFFCURVE",
"351 289 OFFCURVE",
"345 289 CURVE SMOOTH",
"316 290 OFFCURVE",
"280 291 OFFCURVE",
"245 291 CURVE SMOOTH",
"207 291 LINE",
"255 359 OFFCURVE",
"300 409 OFFCURVE",
"342 440 CURVE SMOOTH",
"383 471 OFFCURVE",
"417 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"527 474 OFFCURVE",
"538 484 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"266 411 OFFCURVE",
"218 359 OFFCURVE",
"169 290 CURVE",
"160 289 OFFCURVE",
"151 289 OFFCURVE",
"141 288 CURVE SMOOTH",
"107 285 LINE SMOOTH",
"103 285 OFFCURVE",
"101 284 OFFCURVE",
"101 281 CURVE SMOOTH",
"101 276 OFFCURVE",
"106 269 OFFCURVE",
"115 260 CURVE SMOOTH",
"124 251 OFFCURVE",
"131 247 OFFCURVE",
"138 247 CURVE",
"53 122 OFFCURVE",
"-2 29 OFFCURVE",
"-27 -34 CURVE SMOOTH",
"-31 -43 OFFCURVE",
"-33 -53 OFFCURVE",
"-33 -62 CURVE SMOOTH",
"-33 -69 OFFCURVE",
"-32 -76 OFFCURVE",
"-29 -85 CURVE SMOOTH",
"-26 -94 OFFCURVE",
"-25 -99 OFFCURVE",
"-25 -101 CURVE SMOOTH",
"-25 -108 OFFCURVE",
"-22 -112 OFFCURVE",
"-17 -112 CURVE SMOOTH"
);
}
);
width = 432;
}
);
leftMetricsKey = f;
},
{
glyphname = f_f_i;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-9 -112 OFFCURVE",
"2 -101 OFFCURVE",
"2 -90 CURVE SMOOTH",
"2 -67 OFFCURVE",
"8 -44 OFFCURVE",
"19 -20 CURVE SMOOTH",
"54 51 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"181 253 OFFCURVE",
"197 262 OFFCURVE",
"217 263 CURVE SMOOTH",
"246 265 OFFCURVE",
"275 266 OFFCURVE",
"302 267 CURVE",
"308 260 LINE SMOOTH",
"316 250 OFFCURVE",
"324 247 OFFCURVE",
"331 247 CURVE",
"246 122 OFFCURVE",
"191 29 OFFCURVE",
"166 -34 CURVE SMOOTH",
"162 -43 OFFCURVE",
"160 -53 OFFCURVE",
"160 -62 CURVE SMOOTH",
"160 -69 OFFCURVE",
"161 -76 OFFCURVE",
"164 -85 CURVE SMOOTH",
"167 -94 OFFCURVE",
"168 -99 OFFCURVE",
"168 -101 CURVE SMOOTH",
"168 -108 OFFCURVE",
"171 -112 OFFCURVE",
"176 -112 CURVE SMOOTH",
"184 -112 OFFCURVE",
"195 -101 OFFCURVE",
"195 -90 CURVE SMOOTH",
"195 -67 OFFCURVE",
"201 -44 OFFCURVE",
"212 -20 CURVE SMOOTH",
"247 51 OFFCURVE",
"296 135 OFFCURVE",
"363 235 CURVE SMOOTH",
"374 253 OFFCURVE",
"390 262 OFFCURVE",
"410 263 CURVE SMOOTH",
"455 266 OFFCURVE",
"498 267 OFFCURVE",
"538 267 CURVE SMOOTH",
"551 267 OFFCURVE",
"557 270 OFFCURVE",
"557 276 CURVE SMOOTH",
"557 281 OFFCURVE",
"552 284 OFFCURVE",
"543 285 CURVE SMOOTH",
"518 289 OFFCURVE",
"481 291 OFFCURVE",
"431 291 CURVE SMOOTH",
"400 291 LINE",
"448 359 OFFCURVE",
"493 409 OFFCURVE",
"535 440 CURVE SMOOTH",
"576 471 OFFCURVE",
"610 486 OFFCURVE",
"636 486 CURVE SMOOTH",
"658 486 OFFCURVE",
"678 478 OFFCURVE",
"697 461 CURVE",
"720 474 OFFCURVE",
"731 484 OFFCURVE",
"731 491 CURVE SMOOTH",
"731 494 OFFCURVE",
"729 496 OFFCURVE",
"726 497 CURVE SMOOTH",
"707 506 OFFCURVE",
"687 511 OFFCURVE",
"666 511 CURVE SMOOTH",
"613 511 OFFCURVE",
"560 490 OFFCURVE",
"506 448 CURVE SMOOTH",
"459 411 OFFCURVE",
"411 359 OFFCURVE",
"362 290 CURVE",
"356 289 OFFCURVE",
"351 289 OFFCURVE",
"345 289 CURVE SMOOTH",
"316 290 OFFCURVE",
"280 291 OFFCURVE",
"245 291 CURVE SMOOTH",
"207 291 LINE",
"255 359 OFFCURVE",
"300 409 OFFCURVE",
"342 440 CURVE SMOOTH",
"383 471 OFFCURVE",
"417 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"527 474 OFFCURVE",
"538 484 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"266 411 OFFCURVE",
"218 359 OFFCURVE",
"169 290 CURVE",
"160 289 OFFCURVE",
"151 289 OFFCURVE",
"141 288 CURVE SMOOTH",
"107 285 LINE SMOOTH",
"103 285 OFFCURVE",
"101 284 OFFCURVE",
"101 281 CURVE SMOOTH",
"101 276 OFFCURVE",
"106 269 OFFCURVE",
"115 260 CURVE SMOOTH",
"124 251 OFFCURVE",
"131 247 OFFCURVE",
"138 247 CURVE",
"53 122 OFFCURVE",
"-2 29 OFFCURVE",
"-27 -34 CURVE SMOOTH",
"-31 -43 OFFCURVE",
"-33 -53 OFFCURVE",
"-33 -62 CURVE SMOOTH",
"-33 -69 OFFCURVE",
"-32 -76 OFFCURVE",
"-29 -85 CURVE SMOOTH",
"-26 -94 OFFCURVE",
"-25 -99 OFFCURVE",
"-25 -101 CURVE SMOOTH",
"-25 -108 OFFCURVE",
"-22 -112 OFFCURVE",
"-17 -112 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"376 -5 OFFCURVE",
"394 3 OFFCURVE",
"423 18 CURVE",
"445 33 OFFCURVE",
"479 49 OFFCURVE",
"526 67 CURVE SMOOTH",
"537 71 OFFCURVE",
"550 76 OFFCURVE",
"566 81 CURVE SMOOTH",
"621 100 LINE SMOOTH",
"625 101 OFFCURVE",
"627 105 OFFCURVE",
"627 110 CURVE SMOOTH",
"627 113 OFFCURVE",
"626 117 OFFCURVE",
"625 121 CURVE",
"619 120 OFFCURVE",
"609 117 OFFCURVE",
"594 112 CURVE SMOOTH",
"579 107 OFFCURVE",
"560 101 OFFCURVE",
"537 92 CURVE SMOOTH",
"490 76 OFFCURVE",
"460 64 OFFCURVE",
"445 57 CURVE",
"521 155 LINE SMOOTH",
"555 199 OFFCURVE",
"576 232 OFFCURVE",
"583 255 CURVE SMOOTH",
"584 259 OFFCURVE",
"582 261 OFFCURVE",
"577 261 CURVE SMOOTH",
"568 261 OFFCURVE",
"554 257 OFFCURVE",
"535 248 CURVE SMOOTH",
"527 245 OFFCURVE",
"505 235 OFFCURVE",
"505 229 CURVE",
"497 193 OFFCURVE",
"472 148 OFFCURVE",
"444 107 CURVE SMOOTH",
"369 0 LINE SMOOTH",
"368 -1 OFFCURVE",
"368 -2 OFFCURVE",
"368 -3 CURVE SMOOTH",
"368 -4 OFFCURVE",
"369 -5 OFFCURVE",
"370 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"634 339 OFFCURVE",
"654 343 OFFCURVE",
"659 345 CURVE SMOOTH",
"662 346 OFFCURVE",
"668 350 OFFCURVE",
"675 355 CURVE SMOOTH",
"682 360 OFFCURVE",
"692 368 OFFCURVE",
"705 377 CURVE SMOOTH",
"707 378 OFFCURVE",
"708 379 OFFCURVE",
"708 382 CURVE SMOOTH",
"708 391 OFFCURVE",
"685 402 OFFCURVE",
"666 402 CURVE SMOOTH",
"655 402 OFFCURVE",
"649 399 OFFCURVE",
"646 392 CURVE",
"637 381 OFFCURVE",
"629 370 OFFCURVE",
"622 361 CURVE SMOOTH",
"615 351 OFFCURVE",
"607 342 OFFCURVE",
"600 333 CURVE"
);
}
);
width = 616;
}
);
leftMetricsKey = f;
},
{
glyphname = f_f_l;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-9 -112 OFFCURVE",
"2 -101 OFFCURVE",
"2 -90 CURVE SMOOTH",
"2 -67 OFFCURVE",
"8 -44 OFFCURVE",
"19 -20 CURVE SMOOTH",
"54 51 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"181 253 OFFCURVE",
"197 262 OFFCURVE",
"217 263 CURVE SMOOTH",
"246 265 OFFCURVE",
"275 266 OFFCURVE",
"302 267 CURVE",
"308 260 LINE SMOOTH",
"316 250 OFFCURVE",
"324 247 OFFCURVE",
"331 247 CURVE",
"246 122 OFFCURVE",
"191 29 OFFCURVE",
"166 -34 CURVE SMOOTH",
"162 -43 OFFCURVE",
"160 -53 OFFCURVE",
"160 -62 CURVE SMOOTH",
"160 -69 OFFCURVE",
"161 -76 OFFCURVE",
"164 -85 CURVE SMOOTH",
"167 -94 OFFCURVE",
"168 -99 OFFCURVE",
"168 -101 CURVE SMOOTH",
"168 -108 OFFCURVE",
"171 -112 OFFCURVE",
"176 -112 CURVE SMOOTH",
"184 -112 OFFCURVE",
"195 -101 OFFCURVE",
"195 -90 CURVE SMOOTH",
"195 -67 OFFCURVE",
"201 -44 OFFCURVE",
"212 -20 CURVE SMOOTH",
"247 51 OFFCURVE",
"296 135 OFFCURVE",
"363 235 CURVE SMOOTH",
"374 253 OFFCURVE",
"390 262 OFFCURVE",
"410 263 CURVE SMOOTH",
"455 266 OFFCURVE",
"498 267 OFFCURVE",
"538 267 CURVE SMOOTH",
"551 267 OFFCURVE",
"557 270 OFFCURVE",
"557 276 CURVE SMOOTH",
"557 281 OFFCURVE",
"552 284 OFFCURVE",
"543 285 CURVE SMOOTH",
"518 289 OFFCURVE",
"481 291 OFFCURVE",
"431 291 CURVE SMOOTH",
"400 291 LINE",
"448 359 OFFCURVE",
"493 409 OFFCURVE",
"535 440 CURVE SMOOTH",
"576 471 OFFCURVE",
"610 486 OFFCURVE",
"636 486 CURVE SMOOTH",
"658 486 OFFCURVE",
"678 478 OFFCURVE",
"697 461 CURVE",
"720 474 OFFCURVE",
"731 484 OFFCURVE",
"731 491 CURVE SMOOTH",
"731 494 OFFCURVE",
"729 496 OFFCURVE",
"726 497 CURVE SMOOTH",
"707 506 OFFCURVE",
"687 511 OFFCURVE",
"666 511 CURVE SMOOTH",
"613 511 OFFCURVE",
"560 490 OFFCURVE",
"506 448 CURVE SMOOTH",
"459 411 OFFCURVE",
"411 359 OFFCURVE",
"362 290 CURVE",
"356 289 OFFCURVE",
"351 289 OFFCURVE",
"345 289 CURVE SMOOTH",
"316 290 OFFCURVE",
"280 291 OFFCURVE",
"245 291 CURVE SMOOTH",
"207 291 LINE",
"255 359 OFFCURVE",
"300 409 OFFCURVE",
"342 440 CURVE SMOOTH",
"383 471 OFFCURVE",
"417 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"527 474 OFFCURVE",
"538 484 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"266 411 OFFCURVE",
"218 359 OFFCURVE",
"169 290 CURVE",
"160 289 OFFCURVE",
"151 289 OFFCURVE",
"141 288 CURVE SMOOTH",
"107 285 LINE SMOOTH",
"103 285 OFFCURVE",
"101 284 OFFCURVE",
"101 281 CURVE SMOOTH",
"101 276 OFFCURVE",
"106 269 OFFCURVE",
"115 260 CURVE SMOOTH",
"124 251 OFFCURVE",
"131 247 OFFCURVE",
"138 247 CURVE",
"53 122 OFFCURVE",
"-2 29 OFFCURVE",
"-27 -34 CURVE SMOOTH",
"-31 -43 OFFCURVE",
"-33 -53 OFFCURVE",
"-33 -62 CURVE SMOOTH",
"-33 -69 OFFCURVE",
"-32 -76 OFFCURVE",
"-29 -85 CURVE SMOOTH",
"-26 -94 OFFCURVE",
"-25 -99 OFFCURVE",
"-25 -101 CURVE SMOOTH",
"-25 -108 OFFCURVE",
"-22 -112 OFFCURVE",
"-17 -112 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"495 3 OFFCURVE",
"519 13 OFFCURVE",
"546 28 CURVE SMOOTH",
"557 34 OFFCURVE",
"567 40 OFFCURVE",
"577 46 CURVE SMOOTH",
"587 52 OFFCURVE",
"597 58 OFFCURVE",
"608 63 CURVE SMOOTH",
"611 65 OFFCURVE",
"613 73 OFFCURVE",
"613 86 CURVE",
"589 69 OFFCURVE",
"499 25 OFFCURVE",
"483 25 CURVE SMOOTH",
"468 25 OFFCURVE",
"462 44 OFFCURVE",
"462 57 CURVE SMOOTH",
"462 86 OFFCURVE",
"508 162 OFFCURVE",
"600 283 CURVE SMOOTH",
"680 388 OFFCURVE",
"739 459 OFFCURVE",
"776 495 CURVE SMOOTH",
"807 526 OFFCURVE",
"828 541 OFFCURVE",
"839 541 CURVE SMOOTH",
"850 541 OFFCURVE",
"855 544 OFFCURVE",
"855 550 CURVE SMOOTH",
"855 557 OFFCURVE",
"850 560 OFFCURVE",
"841 560 CURVE SMOOTH",
"832 560 OFFCURVE",
"815 555 OFFCURVE",
"789 544 CURVE SMOOTH",
"762 534 OFFCURVE",
"747 527 OFFCURVE",
"744 522 CURVE",
"551 287 OFFCURVE",
"440 131 OFFCURVE",
"413 53 CURVE",
"415 35 OFFCURVE",
"424 20 OFFCURVE",
"439 9 CURVE SMOOTH",
"452 0 OFFCURVE",
"463 -4 OFFCURVE",
"472 -2 CURVE SMOOTH"
);
}
);
width = 589;
}
);
leftMetricsKey = f;
},
{
glyphname = fi;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-9 -112 OFFCURVE",
"2 -101 OFFCURVE",
"2 -90 CURVE SMOOTH",
"2 -67 OFFCURVE",
"8 -44 OFFCURVE",
"19 -20 CURVE SMOOTH",
"54 51 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"181 253 OFFCURVE",
"197 262 OFFCURVE",
"217 263 CURVE SMOOTH",
"246 266 OFFCURVE",
"258 267 OFFCURVE",
"321 267 CURVE",
"294 210 OFFCURVE",
"258 148 OFFCURVE",
"230 107 CURVE SMOOTH",
"155 0 LINE SMOOTH",
"154 -1 OFFCURVE",
"154 -2 OFFCURVE",
"154 -3 CURVE SMOOTH",
"154 -4 OFFCURVE",
"155 -5 OFFCURVE",
"156 -5 CURVE SMOOTH",
"162 -5 OFFCURVE",
"180 3 OFFCURVE",
"209 18 CURVE",
"231 33 OFFCURVE",
"265 49 OFFCURVE",
"312 67 CURVE SMOOTH",
"323 71 OFFCURVE",
"336 76 OFFCURVE",
"352 81 CURVE SMOOTH",
"407 100 LINE SMOOTH",
"411 101 OFFCURVE",
"413 105 OFFCURVE",
"413 110 CURVE SMOOTH",
"413 113 OFFCURVE",
"412 117 OFFCURVE",
"411 121 CURVE",
"405 120 OFFCURVE",
"395 117 OFFCURVE",
"380 112 CURVE SMOOTH",
"365 107 OFFCURVE",
"346 101 OFFCURVE",
"323 92 CURVE SMOOTH",
"276 76 OFFCURVE",
"246 64 OFFCURVE",
"231 57 CURVE",
"307 155 LINE SMOOTH",
"340 198 OFFCURVE",
"368 235 OFFCURVE",
"376 259 CURVE",
"376 262 OFFCURVE",
"380 276 OFFCURVE",
"380 283 CURVE SMOOTH",
"380 285 OFFCURVE",
"379 287 OFFCURVE",
"378 287 CURVE SMOOTH",
"207 291 LINE",
"255 359 OFFCURVE",
"300 409 OFFCURVE",
"342 440 CURVE SMOOTH",
"383 471 OFFCURVE",
"417 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"527 474 OFFCURVE",
"538 484 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"266 411 OFFCURVE",
"218 359 OFFCURVE",
"169 290 CURVE",
"160 289 OFFCURVE",
"151 289 OFFCURVE",
"141 288 CURVE SMOOTH",
"107 285 LINE SMOOTH",
"103 285 OFFCURVE",
"101 284 OFFCURVE",
"101 281 CURVE SMOOTH",
"101 276 OFFCURVE",
"106 269 OFFCURVE",
"115 260 CURVE SMOOTH",
"124 251 OFFCURVE",
"131 247 OFFCURVE",
"138 247 CURVE",
"53 122 OFFCURVE",
"-2 29 OFFCURVE",
"-27 -34 CURVE SMOOTH",
"-31 -43 OFFCURVE",
"-33 -53 OFFCURVE",
"-33 -62 CURVE SMOOTH",
"-33 -69 OFFCURVE",
"-32 -76 OFFCURVE",
"-29 -85 CURVE SMOOTH",
"-26 -94 OFFCURVE",
"-25 -99 OFFCURVE",
"-25 -101 CURVE SMOOTH",
"-25 -108 OFFCURVE",
"-22 -112 OFFCURVE",
"-17 -112 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"420 339 OFFCURVE",
"440 343 OFFCURVE",
"445 345 CURVE SMOOTH",
"448 346 OFFCURVE",
"454 350 OFFCURVE",
"461 355 CURVE SMOOTH",
"468 360 OFFCURVE",
"478 368 OFFCURVE",
"491 377 CURVE SMOOTH",
"493 378 OFFCURVE",
"494 379 OFFCURVE",
"494 382 CURVE SMOOTH",
"494 391 OFFCURVE",
"471 402 OFFCURVE",
"452 402 CURVE SMOOTH",
"441 402 OFFCURVE",
"435 399 OFFCURVE",
"432 392 CURVE",
"423 381 OFFCURVE",
"415 370 OFFCURVE",
"408 361 CURVE SMOOTH",
"401 351 OFFCURVE",
"393 342 OFFCURVE",
"386 333 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01224 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01226 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01267 1063 75 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 1061 30 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 415;
}
);
note = fi;
unicode = FB01;
},
{
glyphname = fl;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-9 -112 OFFCURVE",
"2 -101 OFFCURVE",
"2 -90 CURVE SMOOTH",
"2 -67 OFFCURVE",
"8 -44 OFFCURVE",
"19 -20 CURVE SMOOTH",
"54 51 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"181 253 OFFCURVE",
"197 262 OFFCURVE",
"217 263 CURVE SMOOTH",
"262 266 OFFCURVE",
"286 267 OFFCURVE",
"326 267 CURVE SMOOTH",
"339 267 OFFCURVE",
"345 270 OFFCURVE",
"345 276 CURVE SMOOTH",
"345 281 OFFCURVE",
"340 284 OFFCURVE",
"331 285 CURVE SMOOTH",
"304 290 OFFCURVE",
"252 291 OFFCURVE",
"207 291 CURVE",
"255 359 OFFCURVE",
"300 409 OFFCURVE",
"342 440 CURVE SMOOTH",
"383 471 OFFCURVE",
"417 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"527 474 OFFCURVE",
"538 484 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"266 411 OFFCURVE",
"218 359 OFFCURVE",
"169 290 CURVE",
"160 289 OFFCURVE",
"151 289 OFFCURVE",
"141 288 CURVE SMOOTH",
"107 285 LINE SMOOTH",
"103 285 OFFCURVE",
"101 284 OFFCURVE",
"101 281 CURVE SMOOTH",
"101 276 OFFCURVE",
"106 269 OFFCURVE",
"115 260 CURVE SMOOTH",
"124 251 OFFCURVE",
"131 247 OFFCURVE",
"138 247 CURVE",
"53 122 OFFCURVE",
"-2 29 OFFCURVE",
"-27 -34 CURVE SMOOTH",
"-31 -43 OFFCURVE",
"-33 -53 OFFCURVE",
"-33 -62 CURVE SMOOTH",
"-33 -69 OFFCURVE",
"-32 -76 OFFCURVE",
"-29 -85 CURVE SMOOTH",
"-26 -94 OFFCURVE",
"-25 -99 OFFCURVE",
"-25 -101 CURVE SMOOTH",
"-25 -108 OFFCURVE",
"-22 -112 OFFCURVE",
"-17 -112 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"292 3 OFFCURVE",
"316 13 OFFCURVE",
"343 28 CURVE SMOOTH",
"354 34 OFFCURVE",
"364 40 OFFCURVE",
"374 46 CURVE SMOOTH",
"384 52 OFFCURVE",
"394 58 OFFCURVE",
"405 63 CURVE SMOOTH",
"408 65 OFFCURVE",
"410 73 OFFCURVE",
"410 86 CURVE",
"385 71 OFFCURVE",
"345 51 OFFCURVE",
"288 26 CURVE SMOOTH",
"286 25 OFFCURVE",
"283 25 OFFCURVE",
"280 25 CURVE SMOOTH",
"269 25 OFFCURVE",
"263 33 OFFCURVE",
"260 50 CURVE",
"259 51 OFFCURVE",
"259 54 OFFCURVE",
"259 57 CURVE SMOOTH",
"259 86 OFFCURVE",
"305 162 OFFCURVE",
"397 283 CURVE SMOOTH",
"477 388 OFFCURVE",
"536 459 OFFCURVE",
"573 495 CURVE SMOOTH",
"604 526 OFFCURVE",
"625 541 OFFCURVE",
"636 541 CURVE SMOOTH",
"647 541 OFFCURVE",
"652 544 OFFCURVE",
"652 550 CURVE SMOOTH",
"652 557 OFFCURVE",
"647 560 OFFCURVE",
"638 560 CURVE SMOOTH",
"629 560 OFFCURVE",
"612 555 OFFCURVE",
"586 544 CURVE SMOOTH",
"559 534 OFFCURVE",
"544 527 OFFCURVE",
"541 522 CURVE",
"348 287 OFFCURVE",
"237 131 OFFCURVE",
"210 53 CURVE",
"212 35 OFFCURVE",
"221 20 OFFCURVE",
"236 9 CURVE SMOOTH",
"249 0 OFFCURVE",
"260 -4 OFFCURVE",
"269 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01253 1063 6 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1064 21 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01240 31 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01268 31 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = fl;
unicode = FB02;
},
{
glyphname = ordfeminine;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"31 226 OFFCURVE",
"36 228 OFFCURVE",
"43 231 CURVE SMOOTH",
"65 241 OFFCURVE",
"96 261 OFFCURVE",
"135 293 CURVE SMOOTH",
"146 302 OFFCURVE",
"155 310 OFFCURVE",
"163 317 CURVE SMOOTH",
"179 330 LINE",
"169 307 OFFCURVE",
"164 285 OFFCURVE",
"164 260 CURVE SMOOTH",
"164 244 OFFCURVE",
"167 234 OFFCURVE",
"173 234 CURVE SMOOTH",
"180 234 OFFCURVE",
"186 243 OFFCURVE",
"186 249 CURVE SMOOTH",
"186 250 LINE",
"186 257 LINE SMOOTH",
"186 275 OFFCURVE",
"195 301 OFFCURVE",
"214 337 CURVE SMOOTH",
"230 369 OFFCURVE",
"244 391 OFFCURVE",
"254 403 CURVE",
"256 404 OFFCURVE",
"256 405 OFFCURVE",
"256 407 CURVE SMOOTH",
"256 410 OFFCURVE",
"254 410 OFFCURVE",
"251 410 CURVE SMOOTH",
"240 410 OFFCURVE",
"230 406 OFFCURVE",
"222 401 CURVE",
"215 406 OFFCURVE",
"204 409 OFFCURVE",
"190 409 CURVE SMOOTH",
"164 409 OFFCURVE",
"131 393 OFFCURVE",
"90 359 CURVE SMOOTH",
"57 331 OFFCURVE",
"33 303 OFFCURVE",
"18 275 CURVE SMOOTH",
"13 265 OFFCURVE",
"9 254 OFFCURVE",
"9 245 CURVE SMOOTH",
"9 233 OFFCURVE",
"15 226 OFFCURVE",
"25 226 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"49 257 OFFCURVE",
"48 257 OFFCURVE",
"48 263 CURVE SMOOTH",
"48 268 OFFCURVE",
"49 274 OFFCURVE",
"53 280 CURVE SMOOTH",
"63 297 OFFCURVE",
"85 320 OFFCURVE",
"120 348 CURVE SMOOTH",
"151 372 OFFCURVE",
"173 384 OFFCURVE",
"187 384 CURVE SMOOTH",
"193 384 OFFCURVE",
"197 380 OFFCURVE",
"199 375 CURVE",
"187 363 OFFCURVE",
"163 343 OFFCURVE",
"127 313 CURVE SMOOTH",
"120 307 OFFCURVE",
"114 302 OFFCURVE",
"108 298 CURVE",
"98 289 OFFCURVE",
"88 282 OFFCURVE",
"80 276 CURVE SMOOTH",
"67 267 OFFCURVE",
"58 261 OFFCURVE",
"51 258 CURVE SMOOTH"
);
}
);
width = 220;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"24 225 OFFCURVE",
"33 227 OFFCURVE",
"40 229 CURVE SMOOTH",
"69 237 OFFCURVE",
"101 255 OFFCURVE",
"135 281 CURVE SMOOTH",
"150 292 OFFCURVE",
"166 307 OFFCURVE",
"178 324 CURVE SMOOTH",
"193 345 OFFCURVE",
"201 362 OFFCURVE",
"201 374 CURVE SMOOTH",
"201 378 LINE",
"200 378 OFFCURVE",
"200 379 OFFCURVE",
"200 380 CURVE",
"206 380 OFFCURVE",
"213 381 OFFCURVE",
"221 382 CURVE SMOOTH",
"228 383 OFFCURVE",
"233 386 OFFCURVE",
"233 390 CURVE SMOOTH",
"233 394 OFFCURVE",
"229 397 OFFCURVE",
"221 397 CURVE SMOOTH",
"157 396 LINE",
"157 396 OFFCURVE",
"155 397 OFFCURVE",
"154 398 CURVE",
"138 406 LINE SMOOTH",
"134 408 OFFCURVE",
"129 411 OFFCURVE",
"123 412 CURVE SMOOTH",
"118 412 OFFCURVE",
"112 411 OFFCURVE",
"107 408 CURVE SMOOTH",
"91 398 LINE",
"77 394 OFFCURVE",
"67 393 OFFCURVE",
"60 393 CURVE SMOOTH",
"52 393 OFFCURVE",
"48 389 OFFCURVE",
"48 383 CURVE SMOOTH",
"48 378 OFFCURVE",
"51 375 OFFCURVE",
"57 373 CURVE SMOOTH",
"61 372 OFFCURVE",
"64 371 OFFCURVE",
"66 370 CURVE SMOOTH",
"68 369 OFFCURVE",
"70 373 OFFCURVE",
"69 373 CURVE",
"67 372 LINE",
"51 353 OFFCURVE",
"39 338 OFFCURVE",
"30 326 CURVE SMOOTH",
"7 300 OFFCURVE",
"-5 275 OFFCURVE",
"-5 250 CURVE SMOOTH",
"-5 234 OFFCURVE",
"4 225 OFFCURVE",
"19 225 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"20 244 OFFCURVE",
"18 245 OFFCURVE",
"18 250 CURVE SMOOTH",
"18 253 LINE SMOOTH",
"19 260 OFFCURVE",
"23 270 OFFCURVE",
"33 285 CURVE SMOOTH",
"41 298 OFFCURVE",
"49 309 OFFCURVE",
"56 318 CURVE SMOOTH",
"78 344 OFFCURVE",
"95 362 OFFCURVE",
"107 370 CURVE SMOOTH",
"115 374 OFFCURVE",
"127 377 OFFCURVE",
"144 377 CURVE SMOOTH",
"170 377 LINE",
"173 374 OFFCURVE",
"174 371 OFFCURVE",
"174 368 CURVE SMOOTH",
"174 359 OFFCURVE",
"167 345 OFFCURVE",
"154 328 CURVE SMOOTH",
"143 314 OFFCURVE",
"132 302 OFFCURVE",
"120 294 CURVE SMOOTH",
"88 270 OFFCURVE",
"58 253 OFFCURVE",
"31 245 CURVE SMOOTH",
"29 244 OFFCURVE",
"27 244 OFFCURVE",
"25 244 CURVE SMOOTH"
);
}
);
width = 196;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = uni03A9;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"364 -8 OFFCURVE",
"366 -7 OFFCURVE",
"368 -6 CURVE",
"368 -5 LINE SMOOTH",
"368 -4 OFFCURVE",
"368 -4 OFFCURVE",
"369 -4 CURVE",
"378 2 OFFCURVE",
"388 4 OFFCURVE",
"397 4 CURVE SMOOTH",
"420 4 OFFCURVE",
"443 -8 OFFCURVE",
"473 -8 CURVE SMOOTH",
"500 -8 OFFCURVE",
"527 4 OFFCURVE",
"547 60 CURVE",
"548 65 OFFCURVE",
"549 69 OFFCURVE",
"549 72 CURVE SMOOTH",
"549 76 OFFCURVE",
"548 78 OFFCURVE",
"546 78 CURVE SMOOTH",
"543 78 OFFCURVE",
"538 72 OFFCURVE",
"534 62 CURVE SMOOTH",
"521 27 OFFCURVE",
"503 17 OFFCURVE",
"480 17 CURVE SMOOTH",
"467 17 OFFCURVE",
"453 19 OFFCURVE",
"439 24 CURVE SMOOTH",
"424 29 OFFCURVE",
"410 32 OFFCURVE",
"397 33 CURVE",
"410 54 OFFCURVE",
"425 77 OFFCURVE",
"442 101 CURVE SMOOTH",
"458 124 OFFCURVE",
"472 149 OFFCURVE",
"483 174 CURVE SMOOTH",
"500 210 OFFCURVE",
"516 264 OFFCURVE",
"527 305 CURVE SMOOTH",
"534 337 OFFCURVE",
"537 369 OFFCURVE",
"537 398 CURVE SMOOTH",
"537 485 OFFCURVE",
"507 550 OFFCURVE",
"460 587 CURVE SMOOTH",
"429 612 OFFCURVE",
"389 625 OFFCURVE",
"349 625 CURVE SMOOTH",
"274 625 OFFCURVE",
"197 584 OFFCURVE",
"150 516 CURVE SMOOTH",
"115 465 OFFCURVE",
"104 406 OFFCURVE",
"104 342 CURVE SMOOTH",
"104 230 OFFCURVE",
"146 109 OFFCURVE",
"202 26 CURVE",
"185 26 OFFCURVE",
"99 55 OFFCURVE",
"67 55 CURVE SMOOTH",
"37 55 OFFCURVE",
"15 45 OFFCURVE",
"15 16 CURVE SMOOTH",
"15 -3 OFFCURVE",
"33 -12 OFFCURVE",
"33 1 CURVE SMOOTH",
"33 8 OFFCURVE",
"35 21 OFFCURVE",
"44 24 CURVE SMOOTH",
"50 25 OFFCURVE",
"56 26 OFFCURVE",
"62 26 CURVE SMOOTH",
"101 26 OFFCURVE",
"143 7 OFFCURVE",
"184 7 CURVE SMOOTH",
"195 7 OFFCURVE",
"206 8 OFFCURVE",
"217 12 CURVE",
"223 16 OFFCURVE",
"226 21 OFFCURVE",
"226 27 CURVE SMOOTH",
"226 31 OFFCURVE",
"224 36 OFFCURVE",
"221 40 CURVE SMOOTH",
"174 110 OFFCURVE",
"143 230 OFFCURVE",
"143 326 CURVE SMOOTH",
"143 378 OFFCURVE",
"151 426 OFFCURVE",
"170 462 CURVE SMOOTH",
"207 533 OFFCURVE",
"273 566 OFFCURVE",
"334 566 CURVE SMOOTH",
"404 566 OFFCURVE",
"468 523 OFFCURVE",
"486 448 CURVE SMOOTH",
"491 425 OFFCURVE",
"494 402 OFFCURVE",
"494 375 CURVE SMOOTH",
"494 251 OFFCURVE",
"431 83 OFFCURVE",
"353 21 CURVE",
"352 17 OFFCURVE",
"351 13 OFFCURVE",
"351 10 CURVE SMOOTH",
"351 0 OFFCURVE",
"355 -8 OFFCURVE",
"362 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01259 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01264 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01266 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01247 1061 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01250 1062 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 567;
}
);
note = uni03A9;
unicode = 03A9;
},
{
glyphname = pi;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"266 10 OFFCURVE",
"273 12 OFFCURVE",
"282 15 CURVE SMOOTH",
"297 20 OFFCURVE",
"317 44 OFFCURVE",
"341 87 CURVE SMOOTH",
"365 130 OFFCURVE",
"377 159 OFFCURVE",
"377 176 CURVE SMOOTH",
"377 179 OFFCURVE",
"376 180 OFFCURVE",
"375 180 CURVE SMOOTH",
"372 180 OFFCURVE",
"370 176 OFFCURVE",
"367 168 CURVE SMOOTH",
"362 159 OFFCURVE",
"358 149 OFFCURVE",
"354 139 CURVE SMOOTH",
"342 109 LINE SMOOTH",
"331 85 OFFCURVE",
"319 67 OFFCURVE",
"308 56 CURVE SMOOTH",
"291 39 OFFCURVE",
"277 30 OFFCURVE",
"267 30 CURVE SMOOTH",
"250 30 OFFCURVE",
"242 53 OFFCURVE",
"242 98 CURVE SMOOTH",
"242 133 OFFCURVE",
"247 175 OFFCURVE",
"256 223 CURVE SMOOTH",
"264 264 OFFCURVE",
"272 306 OFFCURVE",
"281 347 CURVE",
"322 343 OFFCURVE",
"356 358 OFFCURVE",
"382 392 CURVE",
"389 399 OFFCURVE",
"392 408 OFFCURVE",
"392 417 CURVE SMOOTH",
"392 422 OFFCURVE",
"391 424 OFFCURVE",
"389 424 CURVE SMOOTH",
"390 424 OFFCURVE",
"382 417 OFFCURVE",
"366 403 CURVE SMOOTH",
"351 389 OFFCURVE",
"332 382 OFFCURVE",
"311 382 CURVE SMOOTH",
"290 382 OFFCURVE",
"260 390 OFFCURVE",
"223 407 CURVE SMOOTH",
"186 424 OFFCURVE",
"156 432 OFFCURVE",
"135 432 CURVE SMOOTH",
"92 432 OFFCURVE",
"55 409 OFFCURVE",
"22 363 CURVE SMOOTH",
"15 354 OFFCURVE",
"12 346 OFFCURVE",
"12 338 CURVE SMOOTH",
"12 333 OFFCURVE",
"13 331 OFFCURVE",
"16 331 CURVE SMOOTH",
"17 331 OFFCURVE",
"19 333 OFFCURVE",
"22 336 CURVE SMOOTH",
"39 355 OFFCURVE",
"54 366 OFFCURVE",
"65 373 CURVE",
"80 380 OFFCURVE",
"98 384 OFFCURVE",
"121 384 CURVE SMOOTH",
"126 384 LINE",
"126 343 OFFCURVE",
"120 283 OFFCURVE",
"109 203 CURVE SMOOTH",
"97 107 LINE SMOOTH",
"94 83 OFFCURVE",
"92 66 OFFCURVE",
"92 57 CURVE SMOOTH",
"92 52 OFFCURVE",
"95 49 OFFCURVE",
"100 49 CURVE SMOOTH",
"103 49 OFFCURVE",
"106 51 OFFCURVE",
"107 55 CURVE",
"122 88 OFFCURVE",
"134 141 OFFCURVE",
"144 214 CURVE SMOOTH",
"153 275 OFFCURVE",
"157 331 OFFCURVE",
"158 380 CURVE",
"197 369 OFFCURVE",
"226 361 OFFCURVE",
"245 354 CURVE",
"226 280 OFFCURVE",
"216 194 OFFCURVE",
"216 95 CURVE SMOOTH",
"216 38 OFFCURVE",
"230 10 OFFCURVE",
"259 10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01231 1070 36 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 31 118 31 134 31 150 31 166 31 182 31 198 31 214 31 230 31 246 31 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 31 22 31 38 31 54 31 70 31 86 31 102 31 118 31 134 31 150 31 166 31 182 31 198 31 214 31 230 31 246 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 31 22 31 38 31 54 31 70 31 86 31 102 31 118 31 134 31 150 31 166 31 182 31 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 31 213 31 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01210 1067 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01212 1062 29 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 401;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = zero;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"188 -25 OFFCURVE",
"238 -12 OFFCURVE",
"294 13 CURVE SMOOTH",
"349 39 OFFCURVE",
"396 72 OFFCURVE",
"436 113 CURVE SMOOTH",
"519 198 OFFCURVE",
"561 278 OFFCURVE",
"561 353 CURVE SMOOTH",
"561 428 OFFCURVE",
"514 466 OFFCURVE",
"419 466 CURVE SMOOTH",
"342 466 OFFCURVE",
"273 449 OFFCURVE",
"211 417 CURVE SMOOTH",
"137 380 OFFCURVE",
"100 331 OFFCURVE",
"100 271 CURVE SMOOTH",
"100 266 OFFCURVE",
"101 261 OFFCURVE",
"102 254 CURVE",
"73 217 OFFCURVE",
"52 177 OFFCURVE",
"41 132 CURVE SMOOTH",
"36 111 OFFCURVE",
"33 92 OFFCURVE",
"33 77 CURVE SMOOTH",
"33 9 OFFCURVE",
"70 -25 OFFCURVE",
"145 -25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 -4 OFFCURVE",
"70 21 OFFCURVE",
"70 72 CURVE SMOOTH",
"70 87 OFFCURVE",
"72 103 OFFCURVE",
"77 119 CURVE SMOOTH",
"83 142 OFFCURVE",
"98 171 OFFCURVE",
"122 208 CURVE",
"131 195 OFFCURVE",
"139 188 OFFCURVE",
"146 188 CURVE SMOOTH",
"150 188 OFFCURVE",
"152 190 OFFCURVE",
"152 195 CURVE SMOOTH",
"152 204 OFFCURVE",
"146 215 OFFCURVE",
"134 228 CURVE",
"168 275 OFFCURVE",
"217 317 OFFCURVE",
"280 353 CURVE SMOOTH",
"326 378 OFFCURVE",
"368 396 OFFCURVE",
"405 406 CURVE SMOOTH",
"409 407 OFFCURVE",
"411 410 OFFCURVE",
"411 415 CURVE SMOOTH",
"411 421 OFFCURVE",
"408 428 OFFCURVE",
"402 435 CURVE",
"416 435 LINE SMOOTH",
"493 438 OFFCURVE",
"532 410 OFFCURVE",
"532 349 CURVE SMOOTH",
"532 284 OFFCURVE",
"494 211 OFFCURVE",
"419 128 CURVE SMOOTH",
"386 91 OFFCURVE",
"343 60 OFFCURVE",
"291 35 CURVE SMOOTH",
"239 9 OFFCURVE",
"193 -4 OFFCURVE",
"153 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"129 323 OFFCURVE",
"156 359 OFFCURVE",
"205 386 CURVE SMOOTH",
"246 409 OFFCURVE",
"296 425 OFFCURVE",
"356 432 CURVE",
"265 396 OFFCURVE",
"188 345 OFFCURVE",
"125 280 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 31 218 31 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01220 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01222 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01227 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01234 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01248 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01252 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 52 213 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01254 1061 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 1064 33 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 485;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-27 -56 OFFCURVE",
"8 -40 OFFCURVE",
"41 -8 CURVE",
"52 -3 OFFCURVE",
"62 1 OFFCURVE",
"73 5 CURVE SMOOTH",
"84 9 OFFCURVE",
"95 13 OFFCURVE",
"106 18 CURVE SMOOTH",
"132 27 OFFCURVE",
"153 32 OFFCURVE",
"169 32 CURVE SMOOTH",
"192 32 LINE SMOOTH",
"203 32 OFFCURVE",
"209 36 OFFCURVE",
"209 45 CURVE SMOOTH",
"209 53 OFFCURVE",
"203 57 OFFCURVE",
"192 57 CURVE SMOOTH",
"169 57 LINE SMOOTH",
"142 57 OFFCURVE",
"108 50 OFFCURVE",
"67 37 CURVE",
"127 148 OFFCURVE",
"171 228 OFFCURVE",
"202 281 CURVE SMOOTH",
"219 310 OFFCURVE",
"239 342 OFFCURVE",
"262 377 CURVE SMOOTH",
"279 400 OFFCURVE",
"287 413 OFFCURVE",
"287 418 CURVE",
"270 420 OFFCURVE",
"245 407 OFFCURVE",
"212 379 CURVE SMOOTH",
"189 360 OFFCURVE",
"171 344 OFFCURVE",
"157 333 CURVE SMOOTH",
"143 321 OFFCURVE",
"133 313 OFFCURVE",
"126 310 CURVE SMOOTH",
"113 303 OFFCURVE",
"107 295 OFFCURVE",
"107 286 CURVE SMOOTH",
"107 283 OFFCURVE",
"108 282 OFFCURVE",
"111 282 CURVE SMOOTH",
"112 282 OFFCURVE",
"115 283 OFFCURVE",
"118 285 CURVE SMOOTH",
"159 308 OFFCURVE",
"185 325 OFFCURVE",
"196 335 CURVE",
"191 326 OFFCURVE",
"186 319 OFFCURVE",
"183 313 CURVE SMOOTH",
"179 306 OFFCURVE",
"176 301 OFFCURVE",
"173 297 CURVE",
"133 226 OFFCURVE",
"101 168 OFFCURVE",
"76 123 CURVE SMOOTH",
"51 77 OFFCURVE",
"32 43 OFFCURVE",
"21 22 CURVE",
"-8 13 LINE SMOOTH",
"-18 10 OFFCURVE",
"-28 6 OFFCURVE",
"-38 3 CURVE SMOOTH",
"-60 -6 OFFCURVE",
"-77 -17 OFFCURVE",
"-88 -30 CURVE",
"-89 -32 OFFCURVE",
"-89 -34 OFFCURVE",
"-89 -37 CURVE SMOOTH",
"-89 -50 OFFCURVE",
"-80 -56 OFFCURVE",
"-63 -56 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 240;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"34 -14 OFFCURVE",
"57 -7 OFFCURVE",
"92 7 CURVE SMOOTH",
"135 24 OFFCURVE",
"165 34 OFFCURVE",
"182 39 CURVE SMOOTH",
"227 51 OFFCURVE",
"262 57 OFFCURVE",
"289 57 CURVE SMOOTH",
"324 57 OFFCURVE",
"356 50 OFFCURVE",
"356 22 CURVE SMOOTH",
"356 15 OFFCURVE",
"353 9 OFFCURVE",
"347 4 CURVE SMOOTH",
"341 -1 OFFCURVE",
"338 -4 OFFCURVE",
"338 -7 CURVE SMOOTH",
"338 -12 OFFCURVE",
"341 -14 OFFCURVE",
"348 -14 CURVE SMOOTH",
"353 -14 OFFCURVE",
"357 -13 OFFCURVE",
"362 -10 CURVE SMOOTH",
"384 3 OFFCURVE",
"395 18 OFFCURVE",
"395 35 CURVE SMOOTH",
"395 52 OFFCURVE",
"389 63 OFFCURVE",
"376 68 CURVE SMOOTH",
"361 75 OFFCURVE",
"337 78 OFFCURVE",
"304 78 CURVE SMOOTH",
"269 78 OFFCURVE",
"231 75 OFFCURVE",
"188 68 CURVE SMOOTH",
"148 61 OFFCURVE",
"119 54 OFFCURVE",
"100 47 CURVE",
"131 84 OFFCURVE",
"167 118 OFFCURVE",
"206 147 CURVE SMOOTH",
"225 162 OFFCURVE",
"262 186 OFFCURVE",
"322 222 CURVE SMOOTH",
"420 283 OFFCURVE",
"471 332 OFFCURVE",
"474 369 CURVE SMOOTH",
"478 423 OFFCURVE",
"448 450 OFFCURVE",
"384 450 CURVE SMOOTH",
"375 450 OFFCURVE",
"366 449 OFFCURVE",
"355 448 CURVE SMOOTH",
"326 445 OFFCURVE",
"292 433 OFFCURVE",
"252 412 CURVE SMOOTH",
"203 387 OFFCURVE",
"179 363 OFFCURVE",
"179 340 CURVE SMOOTH",
"179 328 OFFCURVE",
"183 322 OFFCURVE",
"190 322 CURVE SMOOTH",
"193 322 OFFCURVE",
"197 324 OFFCURVE",
"201 328 CURVE SMOOTH",
"226 355 OFFCURVE",
"239 371 OFFCURVE",
"240 378 CURVE",
"283 413 OFFCURVE",
"326 430 OFFCURVE",
"367 430 CURVE SMOOTH",
"407 430 OFFCURVE",
"433 408 OFFCURVE",
"433 374 CURVE SMOOTH",
"433 339 OFFCURVE",
"400 300 OFFCURVE",
"330 257 CURVE SMOOTH",
"257 212 OFFCURVE",
"193 167 OFFCURVE",
"134 123 CURVE SMOOTH",
"52 61 OFFCURVE",
"11 19 OFFCURVE",
"11 -4 CURVE SMOOTH",
"11 -11 OFFCURVE",
"15 -14 OFFCURVE",
"23 -14 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 44 218 44 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01216 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 16 213 16 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01218 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01220 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 12 119 12 135 12 151 12 167 12 183 12 199 12 215 12 231 12 247 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 12 23 12 39 12 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 12 70 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0127 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01228 1061 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 392;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-67 -97 OFFCURVE",
"-64 -96 OFFCURVE",
"-61 -95 CURVE SMOOTH",
"31 -72 OFFCURVE",
"118 -38 OFFCURVE",
"201 7 CURVE SMOOTH",
"318 70 OFFCURVE",
"376 134 OFFCURVE",
"376 199 CURVE SMOOTH",
"376 251 OFFCURVE",
"340 297 OFFCURVE",
"288 308 CURVE",
"339 335 OFFCURVE",
"364 360 OFFCURVE",
"364 385 CURVE SMOOTH",
"364 418 OFFCURVE",
"336 435 OFFCURVE",
"279 435 CURVE SMOOTH",
"247 435 OFFCURVE",
"218 430 OFFCURVE",
"192 420 CURVE SMOOTH",
"170 412 OFFCURVE",
"155 403 OFFCURVE",
"148 394 CURVE SMOOTH",
"144 389 OFFCURVE",
"142 384 OFFCURVE",
"142 380 CURVE SMOOTH",
"142 373 OFFCURVE",
"145 369 OFFCURVE",
"151 369 CURVE SMOOTH",
"154 369 OFFCURVE",
"158 372 OFFCURVE",
"163 379 CURVE SMOOTH",
"168 385 OFFCURVE",
"179 391 OFFCURVE",
"196 398 CURVE SMOOTH",
"217 406 OFFCURVE",
"240 410 OFFCURVE",
"265 410 CURVE SMOOTH",
"300 410 OFFCURVE",
"317 400 OFFCURVE",
"317 381 CURVE SMOOTH",
"317 360 OFFCURVE",
"288 338 OFFCURVE",
"229 313 CURVE",
"184 315 OFFCURVE",
"135 307 OFFCURVE",
"135 283 CURVE SMOOTH",
"135 270 OFFCURVE",
"142 263 OFFCURVE",
"165 263 CURVE SMOOTH",
"185 263 OFFCURVE",
"209 269 OFFCURVE",
"237 282 CURVE",
"274 278 LINE SMOOTH",
"314 274 OFFCURVE",
"343 237 OFFCURVE",
"343 198 CURVE SMOOTH",
"343 141 OFFCURVE",
"289 82 OFFCURVE",
"182 22 CURVE SMOOTH",
"101 -23 OFFCURVE",
"23 -56 OFFCURVE",
"-57 -75 CURVE SMOOTH",
"-70 -78 OFFCURVE",
"-76 -83 OFFCURVE",
"-76 -90 CURVE SMOOTH",
"-76 -94 OFFCURVE",
"-74 -97 OFFCURVE",
"-69 -97 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 1070 21 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 21 218 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\0129 21 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 9 218 9 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01243 1068 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01236 1063 23 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01240 36 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"192 -49 OFFCURVE",
"226 -32 OFFCURVE",
"269 3 CURVE SMOOTH",
"270 4 OFFCURVE",
"271 6 OFFCURVE",
"271 7 CURVE SMOOTH",
"271 9 OFFCURVE",
"268 12 OFFCURVE",
"261 12 CURVE SMOOTH",
"257 12 OFFCURVE",
"253 11 OFFCURVE",
"248 8 CURVE SMOOTH",
"226 -8 OFFCURVE",
"212 -16 OFFCURVE",
"205 -16 CURVE SMOOTH",
"199 -16 OFFCURVE",
"196 -9 OFFCURVE",
"196 5 CURVE SMOOTH",
"196 24 OFFCURVE",
"207 54 OFFCURVE",
"228 93 CURVE SMOOTH",
"271 167 LINE",
"322 176 OFFCURVE",
"367 180 OFFCURVE",
"404 180 CURVE SMOOTH",
"429 180 OFFCURVE",
"453 178 OFFCURVE",
"475 174 CURVE SMOOTH",
"487 172 OFFCURVE",
"493 174 OFFCURVE",
"493 180 CURVE SMOOTH",
"493 187 OFFCURVE",
"484 191 OFFCURVE",
"465 194 CURVE SMOOTH",
"450 196 OFFCURVE",
"434 197 OFFCURVE",
"418 197 CURVE SMOOTH",
"409 197 OFFCURVE",
"364 193 OFFCURVE",
"281 185 CURVE",
"330 260 LINE SMOOTH",
"342 278 OFFCURVE",
"350 290 OFFCURVE",
"354 295 CURVE SMOOTH",
"398 356 OFFCURVE",
"438 399 OFFCURVE",
"475 424 CURVE SMOOTH",
"502 441 OFFCURVE",
"509 450 OFFCURVE",
"496 450 CURVE SMOOTH",
"488 450 OFFCURVE",
"474 443 OFFCURVE",
"453 430 CURVE SMOOTH",
"433 416 OFFCURVE",
"420 406 OFFCURVE",
"415 399 CURVE SMOOTH",
"402 381 OFFCURVE",
"373 346 OFFCURVE",
"328 294 CURVE SMOOTH",
"293 253 OFFCURVE",
"265 216 OFFCURVE",
"244 183 CURVE",
"81 152 LINE",
"222 270 LINE SMOOTH",
"283 321 OFFCURVE",
"333 365 OFFCURVE",
"372 404 CURVE SMOOTH",
"373 405 OFFCURVE",
"373 406 OFFCURVE",
"373 407 CURVE SMOOTH",
"373 415 OFFCURVE",
"369 419 OFFCURVE",
"361 419 CURVE SMOOTH",
"360 419 OFFCURVE",
"359 418 OFFCURVE",
"358 417 CURVE SMOOTH",
"267 328 OFFCURVE",
"147 232 OFFCURVE",
"-2 129 CURVE SMOOTH",
"-6 126 OFFCURVE",
"-8 121 OFFCURVE",
"-8 116 CURVE SMOOTH",
"-7 110 OFFCURVE",
"-4 107 OFFCURVE",
"-1 106 CURVE SMOOTH",
"8 103 OFFCURVE",
"45 110 OFFCURVE",
"110 128 CURVE SMOOTH",
"186 149 OFFCURVE",
"225 159 OFFCURVE",
"228 159 CURVE",
"183 83 OFFCURVE",
"155 28 OFFCURVE",
"146 -9 CURVE SMOOTH",
"145 -16 OFFCURVE",
"144 -20 OFFCURVE",
"144 -25 CURVE SMOOTH",
"144 -41 OFFCURVE",
"152 -49 OFFCURVE",
"167 -49 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01225 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01240 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0127 35 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 35 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 388;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-67 -83 OFFCURVE",
"-64 -82 OFFCURVE",
"-61 -81 CURVE SMOOTH",
"31 -58 OFFCURVE",
"118 -24 OFFCURVE",
"201 21 CURVE SMOOTH",
"306 78 OFFCURVE",
"364 136 OFFCURVE",
"374 193 CURVE SMOOTH",
"376 203 OFFCURVE",
"377 213 OFFCURVE",
"377 222 CURVE SMOOTH",
"377 291 OFFCURVE",
"334 325 OFFCURVE",
"249 325 CURVE SMOOTH",
"218 325 OFFCURVE",
"184 319 OFFCURVE",
"148 308 CURVE",
"166 349 OFFCURVE",
"182 373 OFFCURVE",
"197 382 CURVE",
"212 382 OFFCURVE",
"227 381 OFFCURVE",
"241 381 CURVE SMOOTH",
"315 381 OFFCURVE",
"374 387 OFFCURVE",
"417 399 CURVE SMOOTH",
"421 400 OFFCURVE",
"422 402 OFFCURVE",
"421 407 CURVE SMOOTH",
"420 411 OFFCURVE",
"418 412 OFFCURVE",
"413 411 CURVE SMOOTH",
"389 404 OFFCURVE",
"362 400 OFFCURVE",
"331 400 CURVE SMOOTH",
"314 400 OFFCURVE",
"289 402 OFFCURVE",
"258 405 CURVE SMOOTH",
"214 408 LINE SMOOTH",
"202 409 OFFCURVE",
"192 409 OFFCURVE",
"185 410 CURVE SMOOTH",
"178 410 OFFCURVE",
"163 391 OFFCURVE",
"140 353 CURVE SMOOTH",
"127 332 OFFCURVE",
"112 309 OFFCURVE",
"93 285 CURVE",
"90 284 LINE SMOOTH",
"78 278 OFFCURVE",
"72 270 OFFCURVE",
"72 261 CURVE SMOOTH",
"72 254 OFFCURVE",
"78 250 OFFCURVE",
"89 250 CURVE SMOOTH",
"102 250 OFFCURVE",
"123 256 OFFCURVE",
"152 268 CURVE SMOOTH",
"186 283 OFFCURVE",
"221 290 OFFCURVE",
"258 290 CURVE SMOOTH",
"315 290 OFFCURVE",
"344 267 OFFCURVE",
"344 221 CURVE SMOOTH",
"344 214 OFFCURVE",
"343 207 OFFCURVE",
"342 199 CURVE SMOOTH",
"333 146 OFFCURVE",
"281 91 OFFCURVE",
"184 36 CURVE SMOOTH",
"107 -7 OFFCURVE",
"26 -40 OFFCURVE",
"-57 -61 CURVE SMOOTH",
"-70 -64 OFFCURVE",
"-76 -69 OFFCURVE",
"-76 -76 CURVE SMOOTH",
"-76 -80 OFFCURVE",
"-74 -83 OFFCURVE",
"-69 -83 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 1068 25 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 25 218 25 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0126 1064 27 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 27 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"180 -28 OFFCURVE",
"204 -26 OFFCURVE",
"229 -21 CURVE SMOOTH",
"236 -20 OFFCURVE",
"239 -16 OFFCURVE",
"239 -8 CURVE SMOOTH",
"239 -6 OFFCURVE",
"236 -4 OFFCURVE",
"231 -4 CURVE SMOOTH",
"227 -4 LINE",
"204 -9 OFFCURVE",
"182 -11 OFFCURVE",
"161 -11 CURVE SMOOTH",
"128 -11 OFFCURVE",
"105 -5 OFFCURVE",
"90 8 CURVE",
"104 4 OFFCURVE",
"119 2 OFFCURVE",
"136 2 CURVE SMOOTH",
"193 2 OFFCURVE",
"250 21 OFFCURVE",
"309 60 CURVE SMOOTH",
"368 99 OFFCURVE",
"397 136 OFFCURVE",
"397 173 CURVE SMOOTH",
"397 192 OFFCURVE",
"387 207 OFFCURVE",
"367 218 CURVE SMOOTH",
"352 227 OFFCURVE",
"332 231 OFFCURVE",
"309 231 CURVE SMOOTH",
"264 231 OFFCURVE",
"215 215 OFFCURVE",
"163 183 CURVE SMOOTH",
"111 151 OFFCURVE",
"76 116 OFFCURVE",
"59 79 CURVE",
"56 84 LINE SMOOTH",
"46 101 OFFCURVE",
"40 119 OFFCURVE",
"40 139 CURVE SMOOTH",
"40 198 OFFCURVE",
"84 257 OFFCURVE",
"172 314 CURVE SMOOTH",
"255 368 OFFCURVE",
"341 400 OFFCURVE",
"430 410 CURVE SMOOTH",
"444 411 OFFCURVE",
"451 415 OFFCURVE",
"451 422 CURVE SMOOTH",
"451 429 OFFCURVE",
"445 434 OFFCURVE",
"433 434 CURVE SMOOTH",
"431 434 OFFCURVE",
"428 433 OFFCURVE",
"425 433 CURVE SMOOTH",
"344 424 OFFCURVE",
"256 400 OFFCURVE",
"163 337 CURVE SMOOTH",
"60 268 OFFCURVE",
"9 188 OFFCURVE",
"9 119 CURVE SMOOTH",
"9 78 OFFCURVE",
"25 46 OFFCURVE",
"57 24 CURVE",
"63 12 LINE",
"81 -15 OFFCURVE",
"112 -28 OFFCURVE",
"157 -28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"121 28 OFFCURVE",
"96 37 OFFCURVE",
"77 56 CURVE",
"84 89 OFFCURVE",
"115 129 OFFCURVE",
"157 161 CURVE SMOOTH",
"202 195 OFFCURVE",
"240 205 OFFCURVE",
"285 205 CURVE SMOOTH",
"326 205 OFFCURVE",
"361 192 OFFCURVE",
"361 164 CURVE SMOOTH",
"361 156 OFFCURVE",
"358 146 OFFCURVE",
"351 135 CURVE SMOOTH",
"335 109 OFFCURVE",
"308 85 OFFCURVE",
"269 63 CURVE SMOOTH",
"228 40 OFFCURVE",
"189 28 OFFCURVE",
"153 28 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 1065 36 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 4 213 4 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01225 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01227 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01221 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01211 1063 46 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01252 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 52 119 52 135 52 151 52 167 52 183 52 199 52 215 52 231 52 247 52 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 52 23 52 39 52 55 52 71 52 87 52 103 52 119 52 135 52 151 52 167 52 183 52 199 52 215 52 231 52 247 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 52 23 52 39 52 55 52 71 52 87 52 103 52 119 52 135 52 151 52 167 52 183 52 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 52 214 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01231 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 400;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"51 -45 OFFCURVE",
"55 -43 OFFCURVE",
"56 -40 CURVE SMOOTH",
"65 -7 OFFCURVE",
"84 34 OFFCURVE",
"113 82 CURVE SMOOTH",
"142 131 OFFCURVE",
"174 172 OFFCURVE",
"207 207 CURVE SMOOTH",
"242 242 OFFCURVE",
"287 284 OFFCURVE",
"347 331 CURVE SMOOTH",
"402 374 OFFCURVE",
"435 397 OFFCURVE",
"445 400 CURVE SMOOTH",
"459 404 OFFCURVE",
"466 411 OFFCURVE",
"466 420 CURVE SMOOTH",
"466 432 OFFCURVE",
"459 438 OFFCURVE",
"446 438 CURVE SMOOTH",
"442 438 OFFCURVE",
"439 437 OFFCURVE",
"436 435 CURVE SMOOTH",
"429 431 OFFCURVE",
"380 425 OFFCURVE",
"291 418 CURVE SMOOTH",
"249 415 OFFCURVE",
"215 412 OFFCURVE",
"190 410 CURVE SMOOTH",
"164 408 OFFCURVE",
"146 407 OFFCURVE",
"137 407 CURVE SMOOTH",
"115 407 OFFCURVE",
"99 400 OFFCURVE",
"88 386 CURVE SMOOTH",
"79 375 OFFCURVE",
"75 362 OFFCURVE",
"75 347 CURVE SMOOTH",
"75 343 OFFCURVE",
"76 339 OFFCURVE",
"77 335 CURVE",
"82 324 OFFCURVE",
"87 318 OFFCURVE",
"91 318 CURVE SMOOTH",
"94 318 OFFCURVE",
"97 321 OFFCURVE",
"99 328 CURVE SMOOTH",
"100 334 OFFCURVE",
"100 339 OFFCURVE",
"99 342 CURVE SMOOTH",
"98 346 OFFCURVE",
"97 349 OFFCURVE",
"97 352 CURVE SMOOTH",
"97 374 OFFCURVE",
"112 385 OFFCURVE",
"142 385 CURVE SMOOTH",
"211 385 OFFCURVE",
"292 391 OFFCURVE",
"387 404 CURVE",
"327 359 OFFCURVE",
"263 301 OFFCURVE",
"192 226 CURVE SMOOTH",
"159 191 OFFCURVE",
"126 147 OFFCURVE",
"92 94 CURVE SMOOTH",
"58 40 OFFCURVE",
"37 -4 OFFCURVE",
"29 -38 CURVE SMOOTH",
"28 -43 OFFCURVE",
"33 -45 OFFCURVE",
"44 -45 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01243 1064 24 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01221 24 43 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 379;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"69 -54 OFFCURVE",
"118 -41 OFFCURVE",
"171 -15 CURVE SMOOTH",
"232 16 OFFCURVE",
"271 53 OFFCURVE",
"289 96 CURVE SMOOTH",
"295 110 OFFCURVE",
"298 123 OFFCURVE",
"298 134 CURVE SMOOTH",
"298 163 OFFCURVE",
"274 192 OFFCURVE",
"226 221 CURVE",
"351 316 OFFCURVE",
"479 398 OFFCURVE",
"609 465 CURVE SMOOTH",
"611 466 OFFCURVE",
"612 467 OFFCURVE",
"612 469 CURVE SMOOTH",
"612 475 OFFCURVE",
"610 478 OFFCURVE",
"606 478 CURVE SMOOTH",
"605 478 OFFCURVE",
"603 478 OFFCURVE",
"601 477 CURVE SMOOTH",
"506 440 OFFCURVE",
"377 359 OFFCURVE",
"212 232 CURVE",
"181 246 OFFCURVE",
"165 264 OFFCURVE",
"165 287 CURVE SMOOTH",
"165 290 OFFCURVE",
"165 293 OFFCURVE",
"166 297 CURVE SMOOTH",
"177 363 OFFCURVE",
"232 396 OFFCURVE",
"332 396 CURVE SMOOTH",
"349 396 OFFCURVE",
"366 395 OFFCURVE",
"383 393 CURVE SMOOTH",
"390 393 OFFCURVE",
"404 405 OFFCURVE",
"404 412 CURVE SMOOTH",
"404 413 OFFCURVE",
"403 414 OFFCURVE",
"402 414 CURVE SMOOTH",
"386 418 OFFCURVE",
"368 420 OFFCURVE",
"347 420 CURVE SMOOTH",
"296 420 OFFCURVE",
"249 409 OFFCURVE",
"208 388 CURVE SMOOTH",
"159 364 OFFCURVE",
"131 331 OFFCURVE",
"124 289 CURVE SMOOTH",
"122 278 OFFCURVE",
"128 263 OFFCURVE",
"141 244 CURVE SMOOTH",
"156 226 OFFCURVE",
"169 214 OFFCURVE",
"181 209 CURVE",
"92 142 OFFCURVE",
"31 84 OFFCURVE",
"-2 35 CURVE SMOOTH",
"-17 12 OFFCURVE",
"-25 -6 OFFCURVE",
"-25 -21 CURVE SMOOTH",
"-25 -43 OFFCURVE",
"-8 -54 OFFCURVE",
"26 -54 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"24 -27 OFFCURVE",
"12 -21 OFFCURVE",
"12 -10 CURVE SMOOTH",
"12 -1 OFFCURVE",
"19 15 OFFCURVE",
"34 36 CURVE SMOOTH",
"69 87 OFFCURVE",
"123 142 OFFCURVE",
"196 199 CURVE",
"238 171 OFFCURVE",
"259 145 OFFCURVE",
"259 121 CURVE SMOOTH",
"259 114 OFFCURVE",
"257 106 OFFCURVE",
"254 96 CURVE",
"237 56 OFFCURVE",
"207 24 OFFCURVE",
"164 1 CURVE SMOOTH",
"129 -18 OFFCURVE",
"90 -27 OFFCURVE",
"49 -27 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 1070 45 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 4 213 4 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01253 1063 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 1061 33 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"194 -68 LINE SMOOTH",
"201 -67 OFFCURVE",
"204 -65 OFFCURVE",
"204 -63 CURVE",
"204 -63 OFFCURVE",
"204 -62 OFFCURVE",
"203 -61 CURVE SMOOTH",
"195 -49 OFFCURVE",
"191 -35 OFFCURVE",
"191 -19 CURVE SMOOTH",
"191 36 OFFCURVE",
"236 111 OFFCURVE",
"326 207 CURVE SMOOTH",
"383 267 OFFCURVE",
"439 318 OFFCURVE",
"494 360 CURVE SMOOTH",
"499 363 OFFCURVE",
"501 366 OFFCURVE",
"501 369 CURVE SMOOTH",
"501 371 OFFCURVE",
"500 372 OFFCURVE",
"499 373 CURVE SMOOTH",
"496 376 OFFCURVE",
"489 378 OFFCURVE",
"480 378 CURVE SMOOTH",
"468 378 OFFCURVE",
"459 375 OFFCURVE",
"452 370 CURVE SMOOTH",
"327 265 OFFCURVE",
"238 212 OFFCURVE",
"185 212 CURVE SMOOTH",
"158 212 OFFCURVE",
"145 224 OFFCURVE",
"145 247 CURVE SMOOTH",
"145 262 OFFCURVE",
"154 281 OFFCURVE",
"171 304 CURVE SMOOTH",
"187 323 OFFCURVE",
"201 337 OFFCURVE",
"214 345 CURVE SMOOTH",
"285 392 OFFCURVE",
"359 415 OFFCURVE",
"436 415 CURVE SMOOTH",
"455 415 OFFCURVE",
"472 413 OFFCURVE",
"491 410 CURVE SMOOTH",
"495 409 OFFCURVE",
"498 411 OFFCURVE",
"498 417 CURVE SMOOTH",
"498 420 OFFCURVE",
"496 422 OFFCURVE",
"493 423 CURVE",
"474 426 OFFCURVE",
"456 428 OFFCURVE",
"436 428 CURVE SMOOTH",
"347 428 OFFCURVE",
"265 403 OFFCURVE",
"190 354 CURVE SMOOTH",
"173 343 OFFCURVE",
"157 327 OFFCURVE",
"143 307 CURVE SMOOTH",
"127 284 OFFCURVE",
"119 263 OFFCURVE",
"119 245 CURVE SMOOTH",
"119 212 OFFCURVE",
"138 196 OFFCURVE",
"175 196 CURVE SMOOTH",
"213 196 OFFCURVE",
"263 212 OFFCURVE",
"324 244 CURVE",
"216 138 OFFCURVE",
"162 52 OFFCURVE",
"162 -13 CURVE SMOOTH",
"162 -32 OFFCURVE",
"167 -49 OFFCURVE",
"177 -64 CURVE",
"180 -67 OFFCURVE",
"184 -68 OFFCURVE",
"190 -68 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 12 218 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0124 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01240 1067 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01224 16 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01214 16 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 418;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = zero.lf;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"188 -25 OFFCURVE",
"238 -12 OFFCURVE",
"294 13 CURVE SMOOTH",
"349 39 OFFCURVE",
"396 72 OFFCURVE",
"436 113 CURVE SMOOTH",
"519 198 OFFCURVE",
"561 278 OFFCURVE",
"561 353 CURVE SMOOTH",
"561 428 OFFCURVE",
"514 466 OFFCURVE",
"419 466 CURVE SMOOTH",
"342 466 OFFCURVE",
"273 449 OFFCURVE",
"211 417 CURVE SMOOTH",
"137 380 OFFCURVE",
"100 331 OFFCURVE",
"100 271 CURVE SMOOTH",
"100 266 OFFCURVE",
"101 261 OFFCURVE",
"102 254 CURVE",
"73 217 OFFCURVE",
"52 177 OFFCURVE",
"41 132 CURVE SMOOTH",
"36 111 OFFCURVE",
"33 92 OFFCURVE",
"33 77 CURVE SMOOTH",
"33 9 OFFCURVE",
"70 -25 OFFCURVE",
"145 -25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 -4 OFFCURVE",
"70 21 OFFCURVE",
"70 72 CURVE SMOOTH",
"70 87 OFFCURVE",
"72 103 OFFCURVE",
"77 119 CURVE SMOOTH",
"83 142 OFFCURVE",
"98 171 OFFCURVE",
"122 208 CURVE",
"131 195 OFFCURVE",
"139 188 OFFCURVE",
"146 188 CURVE SMOOTH",
"150 188 OFFCURVE",
"152 190 OFFCURVE",
"152 195 CURVE SMOOTH",
"152 204 OFFCURVE",
"146 215 OFFCURVE",
"134 228 CURVE",
"168 275 OFFCURVE",
"217 317 OFFCURVE",
"280 353 CURVE SMOOTH",
"326 378 OFFCURVE",
"368 396 OFFCURVE",
"405 406 CURVE SMOOTH",
"409 407 OFFCURVE",
"411 410 OFFCURVE",
"411 415 CURVE SMOOTH",
"411 421 OFFCURVE",
"408 428 OFFCURVE",
"402 435 CURVE",
"416 435 LINE SMOOTH",
"493 438 OFFCURVE",
"532 410 OFFCURVE",
"532 349 CURVE SMOOTH",
"532 284 OFFCURVE",
"494 211 OFFCURVE",
"419 128 CURVE SMOOTH",
"386 91 OFFCURVE",
"343 60 OFFCURVE",
"291 35 CURVE SMOOTH",
"239 9 OFFCURVE",
"193 -4 OFFCURVE",
"153 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"129 323 OFFCURVE",
"156 359 OFFCURVE",
"205 386 CURVE SMOOTH",
"246 409 OFFCURVE",
"296 425 OFFCURVE",
"356 432 CURVE",
"265 396 OFFCURVE",
"188 345 OFFCURVE",
"125 280 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 31 218 31 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01220 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01222 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01227 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01234 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01248 6 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01252 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 52 213 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01254 1061 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 1064 33 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 485;
}
);
note = zero;
},
{
glyphname = one.lf;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-27 -56 OFFCURVE",
"8 -40 OFFCURVE",
"41 -8 CURVE",
"52 -3 OFFCURVE",
"62 1 OFFCURVE",
"73 5 CURVE SMOOTH",
"84 9 OFFCURVE",
"95 13 OFFCURVE",
"106 18 CURVE SMOOTH",
"132 27 OFFCURVE",
"153 32 OFFCURVE",
"169 32 CURVE SMOOTH",
"192 32 LINE SMOOTH",
"203 32 OFFCURVE",
"209 36 OFFCURVE",
"209 45 CURVE SMOOTH",
"209 53 OFFCURVE",
"203 57 OFFCURVE",
"192 57 CURVE SMOOTH",
"169 57 LINE SMOOTH",
"142 57 OFFCURVE",
"108 50 OFFCURVE",
"67 37 CURVE",
"127 148 OFFCURVE",
"171 228 OFFCURVE",
"202 281 CURVE SMOOTH",
"219 310 OFFCURVE",
"239 342 OFFCURVE",
"262 377 CURVE SMOOTH",
"279 400 OFFCURVE",
"287 413 OFFCURVE",
"287 418 CURVE",
"270 420 OFFCURVE",
"245 407 OFFCURVE",
"212 379 CURVE SMOOTH",
"189 360 OFFCURVE",
"171 344 OFFCURVE",
"157 333 CURVE SMOOTH",
"143 321 OFFCURVE",
"133 313 OFFCURVE",
"126 310 CURVE SMOOTH",
"113 303 OFFCURVE",
"107 295 OFFCURVE",
"107 286 CURVE SMOOTH",
"107 283 OFFCURVE",
"108 282 OFFCURVE",
"111 282 CURVE SMOOTH",
"112 282 OFFCURVE",
"115 283 OFFCURVE",
"118 285 CURVE SMOOTH",
"159 308 OFFCURVE",
"185 325 OFFCURVE",
"196 335 CURVE",
"191 326 OFFCURVE",
"186 319 OFFCURVE",
"183 313 CURVE SMOOTH",
"179 306 OFFCURVE",
"176 301 OFFCURVE",
"173 297 CURVE",
"133 226 OFFCURVE",
"101 168 OFFCURVE",
"76 123 CURVE SMOOTH",
"51 77 OFFCURVE",
"32 43 OFFCURVE",
"21 22 CURVE",
"-8 13 LINE SMOOTH",
"-18 10 OFFCURVE",
"-28 6 OFFCURVE",
"-38 3 CURVE SMOOTH",
"-60 -6 OFFCURVE",
"-77 -17 OFFCURVE",
"-88 -30 CURVE",
"-89 -32 OFFCURVE",
"-89 -34 OFFCURVE",
"-89 -37 CURVE SMOOTH",
"-89 -50 OFFCURVE",
"-80 -56 OFFCURVE",
"-63 -56 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 240;
}
);
note = one;
},
{
glyphname = two.lf;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"34 -14 OFFCURVE",
"57 -7 OFFCURVE",
"92 7 CURVE SMOOTH",
"135 24 OFFCURVE",
"165 34 OFFCURVE",
"182 39 CURVE SMOOTH",
"227 51 OFFCURVE",
"262 57 OFFCURVE",
"289 57 CURVE SMOOTH",
"324 57 OFFCURVE",
"356 50 OFFCURVE",
"356 22 CURVE SMOOTH",
"356 15 OFFCURVE",
"353 9 OFFCURVE",
"347 4 CURVE SMOOTH",
"341 -1 OFFCURVE",
"338 -4 OFFCURVE",
"338 -7 CURVE SMOOTH",
"338 -12 OFFCURVE",
"341 -14 OFFCURVE",
"348 -14 CURVE SMOOTH",
"353 -14 OFFCURVE",
"357 -13 OFFCURVE",
"362 -10 CURVE SMOOTH",
"384 3 OFFCURVE",
"395 18 OFFCURVE",
"395 35 CURVE SMOOTH",
"395 52 OFFCURVE",
"389 63 OFFCURVE",
"376 68 CURVE SMOOTH",
"361 75 OFFCURVE",
"337 78 OFFCURVE",
"304 78 CURVE SMOOTH",
"269 78 OFFCURVE",
"231 75 OFFCURVE",
"188 68 CURVE SMOOTH",
"148 61 OFFCURVE",
"119 54 OFFCURVE",
"100 47 CURVE",
"131 84 OFFCURVE",
"167 118 OFFCURVE",
"206 147 CURVE SMOOTH",
"225 162 OFFCURVE",
"262 186 OFFCURVE",
"322 222 CURVE SMOOTH",
"420 283 OFFCURVE",
"471 332 OFFCURVE",
"474 369 CURVE SMOOTH",
"478 423 OFFCURVE",
"448 450 OFFCURVE",
"384 450 CURVE SMOOTH",
"375 450 OFFCURVE",
"366 449 OFFCURVE",
"355 448 CURVE SMOOTH",
"326 445 OFFCURVE",
"292 433 OFFCURVE",
"252 412 CURVE SMOOTH",
"203 387 OFFCURVE",
"179 363 OFFCURVE",
"179 340 CURVE SMOOTH",
"179 328 OFFCURVE",
"183 322 OFFCURVE",
"190 322 CURVE SMOOTH",
"193 322 OFFCURVE",
"197 324 OFFCURVE",
"201 328 CURVE SMOOTH",
"226 355 OFFCURVE",
"239 371 OFFCURVE",
"240 378 CURVE",
"283 413 OFFCURVE",
"326 430 OFFCURVE",
"367 430 CURVE SMOOTH",
"407 430 OFFCURVE",
"433 408 OFFCURVE",
"433 374 CURVE SMOOTH",
"433 339 OFFCURVE",
"400 300 OFFCURVE",
"330 257 CURVE SMOOTH",
"257 212 OFFCURVE",
"193 167 OFFCURVE",
"134 123 CURVE SMOOTH",
"52 61 OFFCURVE",
"11 19 OFFCURVE",
"11 -4 CURVE SMOOTH",
"11 -11 OFFCURVE",
"15 -14 OFFCURVE",
"23 -14 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 44 218 44 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01216 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 16 213 16 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01218 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01220 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 12 119 12 135 12 151 12 167 12 183 12 199 12 215 12 231 12 247 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 12 23 12 39 12 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 12 70 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0127 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01228 1061 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 392;
}
);
note = two;
},
{
glyphname = three.lf;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-67 -97 OFFCURVE",
"-64 -96 OFFCURVE",
"-61 -95 CURVE SMOOTH",
"31 -72 OFFCURVE",
"118 -38 OFFCURVE",
"201 7 CURVE SMOOTH",
"318 70 OFFCURVE",
"376 134 OFFCURVE",
"376 199 CURVE SMOOTH",
"376 251 OFFCURVE",
"340 297 OFFCURVE",
"288 308 CURVE",
"339 335 OFFCURVE",
"364 360 OFFCURVE",
"364 385 CURVE SMOOTH",
"364 418 OFFCURVE",
"336 435 OFFCURVE",
"279 435 CURVE SMOOTH",
"247 435 OFFCURVE",
"218 430 OFFCURVE",
"192 420 CURVE SMOOTH",
"170 412 OFFCURVE",
"155 403 OFFCURVE",
"148 394 CURVE SMOOTH",
"144 389 OFFCURVE",
"142 384 OFFCURVE",
"142 380 CURVE SMOOTH",
"142 373 OFFCURVE",
"145 369 OFFCURVE",
"151 369 CURVE SMOOTH",
"154 369 OFFCURVE",
"158 372 OFFCURVE",
"163 379 CURVE SMOOTH",
"168 385 OFFCURVE",
"179 391 OFFCURVE",
"196 398 CURVE SMOOTH",
"217 406 OFFCURVE",
"240 410 OFFCURVE",
"265 410 CURVE SMOOTH",
"300 410 OFFCURVE",
"317 400 OFFCURVE",
"317 381 CURVE SMOOTH",
"317 360 OFFCURVE",
"288 338 OFFCURVE",
"229 313 CURVE",
"184 315 OFFCURVE",
"135 307 OFFCURVE",
"135 283 CURVE SMOOTH",
"135 270 OFFCURVE",
"142 263 OFFCURVE",
"165 263 CURVE SMOOTH",
"185 263 OFFCURVE",
"209 269 OFFCURVE",
"237 282 CURVE",
"274 278 LINE SMOOTH",
"314 274 OFFCURVE",
"343 237 OFFCURVE",
"343 198 CURVE SMOOTH",
"343 141 OFFCURVE",
"289 82 OFFCURVE",
"182 22 CURVE SMOOTH",
"101 -23 OFFCURVE",
"23 -56 OFFCURVE",
"-57 -75 CURVE SMOOTH",
"-70 -78 OFFCURVE",
"-76 -83 OFFCURVE",
"-76 -90 CURVE SMOOTH",
"-76 -94 OFFCURVE",
"-74 -97 OFFCURVE",
"-69 -97 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 1070 21 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 21 218 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\0129 21 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 9 218 9 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01243 1068 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01236 1063 23 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01240 36 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = three;
},
{
glyphname = four.lf;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"192 -49 OFFCURVE",
"226 -32 OFFCURVE",
"269 3 CURVE SMOOTH",
"270 4 OFFCURVE",
"271 6 OFFCURVE",
"271 7 CURVE SMOOTH",
"271 9 OFFCURVE",
"268 12 OFFCURVE",
"261 12 CURVE SMOOTH",
"257 12 OFFCURVE",
"253 11 OFFCURVE",
"248 8 CURVE SMOOTH",
"226 -8 OFFCURVE",
"212 -16 OFFCURVE",
"205 -16 CURVE SMOOTH",
"199 -16 OFFCURVE",
"196 -9 OFFCURVE",
"196 5 CURVE SMOOTH",
"196 24 OFFCURVE",
"207 54 OFFCURVE",
"228 93 CURVE SMOOTH",
"271 167 LINE",
"322 176 OFFCURVE",
"367 180 OFFCURVE",
"404 180 CURVE SMOOTH",
"429 180 OFFCURVE",
"453 178 OFFCURVE",
"475 174 CURVE SMOOTH",
"487 172 OFFCURVE",
"493 174 OFFCURVE",
"493 180 CURVE SMOOTH",
"493 187 OFFCURVE",
"484 191 OFFCURVE",
"465 194 CURVE SMOOTH",
"450 196 OFFCURVE",
"434 197 OFFCURVE",
"418 197 CURVE SMOOTH",
"409 197 OFFCURVE",
"364 193 OFFCURVE",
"281 185 CURVE",
"330 260 LINE SMOOTH",
"342 278 OFFCURVE",
"350 290 OFFCURVE",
"354 295 CURVE SMOOTH",
"398 356 OFFCURVE",
"438 399 OFFCURVE",
"475 424 CURVE SMOOTH",
"502 441 OFFCURVE",
"509 450 OFFCURVE",
"496 450 CURVE SMOOTH",
"488 450 OFFCURVE",
"474 443 OFFCURVE",
"453 430 CURVE SMOOTH",
"433 416 OFFCURVE",
"420 406 OFFCURVE",
"415 399 CURVE SMOOTH",
"402 381 OFFCURVE",
"373 346 OFFCURVE",
"328 294 CURVE SMOOTH",
"293 253 OFFCURVE",
"265 216 OFFCURVE",
"244 183 CURVE",
"81 152 LINE",
"222 270 LINE SMOOTH",
"283 321 OFFCURVE",
"333 365 OFFCURVE",
"372 404 CURVE SMOOTH",
"373 405 OFFCURVE",
"373 406 OFFCURVE",
"373 407 CURVE SMOOTH",
"373 415 OFFCURVE",
"369 419 OFFCURVE",
"361 419 CURVE SMOOTH",
"360 419 OFFCURVE",
"359 418 OFFCURVE",
"358 417 CURVE SMOOTH",
"267 328 OFFCURVE",
"147 232 OFFCURVE",
"-2 129 CURVE SMOOTH",
"-6 126 OFFCURVE",
"-8 121 OFFCURVE",
"-8 116 CURVE SMOOTH",
"-7 110 OFFCURVE",
"-4 107 OFFCURVE",
"-1 106 CURVE SMOOTH",
"8 103 OFFCURVE",
"45 110 OFFCURVE",
"110 128 CURVE SMOOTH",
"186 149 OFFCURVE",
"225 159 OFFCURVE",
"228 159 CURVE",
"183 83 OFFCURVE",
"155 28 OFFCURVE",
"146 -9 CURVE SMOOTH",
"145 -16 OFFCURVE",
"144 -20 OFFCURVE",
"144 -25 CURVE SMOOTH",
"144 -41 OFFCURVE",
"152 -49 OFFCURVE",
"167 -49 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01225 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01240 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0127 35 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 35 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 388;
}
);
note = four;
},
{
glyphname = five.lf;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-67 -83 OFFCURVE",
"-64 -82 OFFCURVE",
"-61 -81 CURVE SMOOTH",
"31 -58 OFFCURVE",
"118 -24 OFFCURVE",
"201 21 CURVE SMOOTH",
"306 78 OFFCURVE",
"364 136 OFFCURVE",
"374 193 CURVE SMOOTH",
"376 203 OFFCURVE",
"377 213 OFFCURVE",
"377 222 CURVE SMOOTH",
"377 291 OFFCURVE",
"334 325 OFFCURVE",
"249 325 CURVE SMOOTH",
"218 325 OFFCURVE",
"184 319 OFFCURVE",
"148 308 CURVE",
"166 349 OFFCURVE",
"182 373 OFFCURVE",
"197 382 CURVE",
"212 382 OFFCURVE",
"227 381 OFFCURVE",
"241 381 CURVE SMOOTH",
"315 381 OFFCURVE",
"374 387 OFFCURVE",
"417 399 CURVE SMOOTH",
"421 400 OFFCURVE",
"422 402 OFFCURVE",
"421 407 CURVE SMOOTH",
"420 411 OFFCURVE",
"418 412 OFFCURVE",
"413 411 CURVE SMOOTH",
"389 404 OFFCURVE",
"362 400 OFFCURVE",
"331 400 CURVE SMOOTH",
"314 400 OFFCURVE",
"289 402 OFFCURVE",
"258 405 CURVE SMOOTH",
"214 408 LINE SMOOTH",
"202 409 OFFCURVE",
"192 409 OFFCURVE",
"185 410 CURVE SMOOTH",
"178 410 OFFCURVE",
"163 391 OFFCURVE",
"140 353 CURVE SMOOTH",
"127 332 OFFCURVE",
"112 309 OFFCURVE",
"93 285 CURVE",
"90 284 LINE SMOOTH",
"78 278 OFFCURVE",
"72 270 OFFCURVE",
"72 261 CURVE SMOOTH",
"72 254 OFFCURVE",
"78 250 OFFCURVE",
"89 250 CURVE SMOOTH",
"102 250 OFFCURVE",
"123 256 OFFCURVE",
"152 268 CURVE SMOOTH",
"186 283 OFFCURVE",
"221 290 OFFCURVE",
"258 290 CURVE SMOOTH",
"315 290 OFFCURVE",
"344 267 OFFCURVE",
"344 221 CURVE SMOOTH",
"344 214 OFFCURVE",
"343 207 OFFCURVE",
"342 199 CURVE SMOOTH",
"333 146 OFFCURVE",
"281 91 OFFCURVE",
"184 36 CURVE SMOOTH",
"107 -7 OFFCURVE",
"26 -40 OFFCURVE",
"-57 -61 CURVE SMOOTH",
"-70 -64 OFFCURVE",
"-76 -69 OFFCURVE",
"-76 -76 CURVE SMOOTH",
"-76 -80 OFFCURVE",
"-74 -83 OFFCURVE",
"-69 -83 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 1068 25 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 25 218 25 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0126 1064 27 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 27 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = five;
},
{
glyphname = six.lf;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"180 -28 OFFCURVE",
"204 -26 OFFCURVE",
"229 -21 CURVE SMOOTH",
"236 -20 OFFCURVE",
"239 -16 OFFCURVE",
"239 -8 CURVE SMOOTH",
"239 -6 OFFCURVE",
"236 -4 OFFCURVE",
"231 -4 CURVE SMOOTH",
"227 -4 LINE",
"204 -9 OFFCURVE",
"182 -11 OFFCURVE",
"161 -11 CURVE SMOOTH",
"128 -11 OFFCURVE",
"105 -5 OFFCURVE",
"90 8 CURVE",
"104 4 OFFCURVE",
"119 2 OFFCURVE",
"136 2 CURVE SMOOTH",
"193 2 OFFCURVE",
"250 21 OFFCURVE",
"309 60 CURVE SMOOTH",
"368 99 OFFCURVE",
"397 136 OFFCURVE",
"397 173 CURVE SMOOTH",
"397 192 OFFCURVE",
"387 207 OFFCURVE",
"367 218 CURVE SMOOTH",
"352 227 OFFCURVE",
"332 231 OFFCURVE",
"309 231 CURVE SMOOTH",
"264 231 OFFCURVE",
"215 215 OFFCURVE",
"163 183 CURVE SMOOTH",
"111 151 OFFCURVE",
"76 116 OFFCURVE",
"59 79 CURVE",
"56 84 LINE SMOOTH",
"46 101 OFFCURVE",
"40 119 OFFCURVE",
"40 139 CURVE SMOOTH",
"40 198 OFFCURVE",
"84 257 OFFCURVE",
"172 314 CURVE SMOOTH",
"255 368 OFFCURVE",
"341 400 OFFCURVE",
"430 410 CURVE SMOOTH",
"444 411 OFFCURVE",
"451 415 OFFCURVE",
"451 422 CURVE SMOOTH",
"451 429 OFFCURVE",
"445 434 OFFCURVE",
"433 434 CURVE SMOOTH",
"431 434 OFFCURVE",
"428 433 OFFCURVE",
"425 433 CURVE SMOOTH",
"344 424 OFFCURVE",
"256 400 OFFCURVE",
"163 337 CURVE SMOOTH",
"60 268 OFFCURVE",
"9 188 OFFCURVE",
"9 119 CURVE SMOOTH",
"9 78 OFFCURVE",
"25 46 OFFCURVE",
"57 24 CURVE",
"63 12 LINE",
"81 -15 OFFCURVE",
"112 -28 OFFCURVE",
"157 -28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"121 28 OFFCURVE",
"96 37 OFFCURVE",
"77 56 CURVE",
"84 89 OFFCURVE",
"115 129 OFFCURVE",
"157 161 CURVE SMOOTH",
"202 195 OFFCURVE",
"240 205 OFFCURVE",
"285 205 CURVE SMOOTH",
"326 205 OFFCURVE",
"361 192 OFFCURVE",
"361 164 CURVE SMOOTH",
"361 156 OFFCURVE",
"358 146 OFFCURVE",
"351 135 CURVE SMOOTH",
"335 109 OFFCURVE",
"308 85 OFFCURVE",
"269 63 CURVE SMOOTH",
"228 40 OFFCURVE",
"189 28 OFFCURVE",
"153 28 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 1065 36 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 4 213 4 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01225 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01227 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01221 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01211 1063 46 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01252 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 52 119 52 135 52 151 52 167 52 183 52 199 52 215 52 231 52 247 52 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 52 23 52 39 52 55 52 71 52 87 52 103 52 119 52 135 52 151 52 167 52 183 52 199 52 215 52 231 52 247 52 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 52 23 52 39 52 55 52 71 52 87 52 103 52 119 52 135 52 151 52 167 52 183 52 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 52 214 52 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01231 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 400;
}
);
note = six;
},
{
glyphname = seven.lf;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"51 -45 OFFCURVE",
"55 -43 OFFCURVE",
"56 -40 CURVE SMOOTH",
"65 -7 OFFCURVE",
"84 34 OFFCURVE",
"113 82 CURVE SMOOTH",
"142 131 OFFCURVE",
"174 172 OFFCURVE",
"207 207 CURVE SMOOTH",
"242 242 OFFCURVE",
"287 284 OFFCURVE",
"347 331 CURVE SMOOTH",
"402 374 OFFCURVE",
"435 397 OFFCURVE",
"445 400 CURVE SMOOTH",
"459 404 OFFCURVE",
"466 411 OFFCURVE",
"466 420 CURVE SMOOTH",
"466 432 OFFCURVE",
"459 438 OFFCURVE",
"446 438 CURVE SMOOTH",
"442 438 OFFCURVE",
"439 437 OFFCURVE",
"436 435 CURVE SMOOTH",
"429 431 OFFCURVE",
"380 425 OFFCURVE",
"291 418 CURVE SMOOTH",
"249 415 OFFCURVE",
"215 412 OFFCURVE",
"190 410 CURVE SMOOTH",
"164 408 OFFCURVE",
"146 407 OFFCURVE",
"137 407 CURVE SMOOTH",
"115 407 OFFCURVE",
"99 400 OFFCURVE",
"88 386 CURVE SMOOTH",
"79 375 OFFCURVE",
"75 362 OFFCURVE",
"75 347 CURVE SMOOTH",
"75 343 OFFCURVE",
"76 339 OFFCURVE",
"77 335 CURVE",
"82 324 OFFCURVE",
"87 318 OFFCURVE",
"91 318 CURVE SMOOTH",
"94 318 OFFCURVE",
"97 321 OFFCURVE",
"99 328 CURVE SMOOTH",
"100 334 OFFCURVE",
"100 339 OFFCURVE",
"99 342 CURVE SMOOTH",
"98 346 OFFCURVE",
"97 349 OFFCURVE",
"97 352 CURVE SMOOTH",
"97 374 OFFCURVE",
"112 385 OFFCURVE",
"142 385 CURVE SMOOTH",
"211 385 OFFCURVE",
"292 391 OFFCURVE",
"387 404 CURVE",
"327 359 OFFCURVE",
"263 301 OFFCURVE",
"192 226 CURVE SMOOTH",
"159 191 OFFCURVE",
"126 147 OFFCURVE",
"92 94 CURVE SMOOTH",
"58 40 OFFCURVE",
"37 -4 OFFCURVE",
"29 -38 CURVE SMOOTH",
"28 -43 OFFCURVE",
"33 -45 OFFCURVE",
"44 -45 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01243 1064 24 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01221 24 43 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 379;
}
);
note = seven;
},
{
glyphname = eight.lf;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"69 -54 OFFCURVE",
"118 -41 OFFCURVE",
"171 -15 CURVE SMOOTH",
"232 16 OFFCURVE",
"271 53 OFFCURVE",
"289 96 CURVE SMOOTH",
"295 110 OFFCURVE",
"298 123 OFFCURVE",
"298 134 CURVE SMOOTH",
"298 163 OFFCURVE",
"274 192 OFFCURVE",
"226 221 CURVE",
"351 316 OFFCURVE",
"479 398 OFFCURVE",
"609 465 CURVE SMOOTH",
"611 466 OFFCURVE",
"612 467 OFFCURVE",
"612 469 CURVE SMOOTH",
"612 475 OFFCURVE",
"610 478 OFFCURVE",
"606 478 CURVE SMOOTH",
"605 478 OFFCURVE",
"603 478 OFFCURVE",
"601 477 CURVE SMOOTH",
"506 440 OFFCURVE",
"377 359 OFFCURVE",
"212 232 CURVE",
"181 246 OFFCURVE",
"165 264 OFFCURVE",
"165 287 CURVE SMOOTH",
"165 290 OFFCURVE",
"165 293 OFFCURVE",
"166 297 CURVE SMOOTH",
"177 363 OFFCURVE",
"232 396 OFFCURVE",
"332 396 CURVE SMOOTH",
"349 396 OFFCURVE",
"366 395 OFFCURVE",
"383 393 CURVE SMOOTH",
"390 393 OFFCURVE",
"404 405 OFFCURVE",
"404 412 CURVE SMOOTH",
"404 413 OFFCURVE",
"403 414 OFFCURVE",
"402 414 CURVE SMOOTH",
"386 418 OFFCURVE",
"368 420 OFFCURVE",
"347 420 CURVE SMOOTH",
"296 420 OFFCURVE",
"249 409 OFFCURVE",
"208 388 CURVE SMOOTH",
"159 364 OFFCURVE",
"131 331 OFFCURVE",
"124 289 CURVE SMOOTH",
"122 278 OFFCURVE",
"128 263 OFFCURVE",
"141 244 CURVE SMOOTH",
"156 226 OFFCURVE",
"169 214 OFFCURVE",
"181 209 CURVE",
"92 142 OFFCURVE",
"31 84 OFFCURVE",
"-2 35 CURVE SMOOTH",
"-17 12 OFFCURVE",
"-25 -6 OFFCURVE",
"-25 -21 CURVE SMOOTH",
"-25 -43 OFFCURVE",
"-8 -54 OFFCURVE",
"26 -54 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"24 -27 OFFCURVE",
"12 -21 OFFCURVE",
"12 -10 CURVE SMOOTH",
"12 -1 OFFCURVE",
"19 15 OFFCURVE",
"34 36 CURVE SMOOTH",
"69 87 OFFCURVE",
"123 142 OFFCURVE",
"196 199 CURVE",
"238 171 OFFCURVE",
"259 145 OFFCURVE",
"259 121 CURVE SMOOTH",
"259 114 OFFCURVE",
"257 106 OFFCURVE",
"254 96 CURVE",
"237 56 OFFCURVE",
"207 24 OFFCURVE",
"164 1 CURVE SMOOTH",
"129 -18 OFFCURVE",
"90 -27 OFFCURVE",
"49 -27 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0124 1070 45 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 4 213 4 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01253 1063 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 1061 33 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = eight;
},
{
glyphname = nine.lf;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"194 -68 LINE SMOOTH",
"201 -67 OFFCURVE",
"204 -65 OFFCURVE",
"204 -63 CURVE",
"204 -63 OFFCURVE",
"204 -62 OFFCURVE",
"203 -61 CURVE SMOOTH",
"195 -49 OFFCURVE",
"191 -35 OFFCURVE",
"191 -19 CURVE SMOOTH",
"191 36 OFFCURVE",
"236 111 OFFCURVE",
"326 207 CURVE SMOOTH",
"383 267 OFFCURVE",
"439 318 OFFCURVE",
"494 360 CURVE SMOOTH",
"499 363 OFFCURVE",
"501 366 OFFCURVE",
"501 369 CURVE SMOOTH",
"501 371 OFFCURVE",
"500 372 OFFCURVE",
"499 373 CURVE SMOOTH",
"496 376 OFFCURVE",
"489 378 OFFCURVE",
"480 378 CURVE SMOOTH",
"468 378 OFFCURVE",
"459 375 OFFCURVE",
"452 370 CURVE SMOOTH",
"327 265 OFFCURVE",
"238 212 OFFCURVE",
"185 212 CURVE SMOOTH",
"158 212 OFFCURVE",
"145 224 OFFCURVE",
"145 247 CURVE SMOOTH",
"145 262 OFFCURVE",
"154 281 OFFCURVE",
"171 304 CURVE SMOOTH",
"187 323 OFFCURVE",
"201 337 OFFCURVE",
"214 345 CURVE SMOOTH",
"285 392 OFFCURVE",
"359 415 OFFCURVE",
"436 415 CURVE SMOOTH",
"455 415 OFFCURVE",
"472 413 OFFCURVE",
"491 410 CURVE SMOOTH",
"495 409 OFFCURVE",
"498 411 OFFCURVE",
"498 417 CURVE SMOOTH",
"498 420 OFFCURVE",
"496 422 OFFCURVE",
"493 423 CURVE",
"474 426 OFFCURVE",
"456 428 OFFCURVE",
"436 428 CURVE SMOOTH",
"347 428 OFFCURVE",
"265 403 OFFCURVE",
"190 354 CURVE SMOOTH",
"173 343 OFFCURVE",
"157 327 OFFCURVE",
"143 307 CURVE SMOOTH",
"127 284 OFFCURVE",
"119 263 OFFCURVE",
"119 245 CURVE SMOOTH",
"119 212 OFFCURVE",
"138 196 OFFCURVE",
"175 196 CURVE SMOOTH",
"213 196 OFFCURVE",
"263 212 OFFCURVE",
"324 244 CURVE",
"216 138 OFFCURVE",
"162 52 OFFCURVE",
"162 -13 CURVE SMOOTH",
"162 -32 OFFCURVE",
"167 -49 OFFCURVE",
"177 -64 CURVE",
"180 -67 OFFCURVE",
"184 -68 OFFCURVE",
"190 -68 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 12 218 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0124 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01240 1067 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01224 16 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01214 16 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 418;
}
);
note = nine;
},
{
glyphname = onesuperior;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"77 201 OFFCURVE",
"98 210 OFFCURVE",
"118 230 CURVE",
"125 233 OFFCURVE",
"131 235 OFFCURVE",
"137 237 CURVE SMOOTH",
"157 245 LINE SMOOTH",
"173 251 OFFCURVE",
"185 254 OFFCURVE",
"195 254 CURVE SMOOTH",
"209 254 LINE SMOOTH",
"215 254 OFFCURVE",
"219 256 OFFCURVE",
"219 261 CURVE SMOOTH",
"219 266 OFFCURVE",
"215 269 OFFCURVE",
"209 269 CURVE SMOOTH",
"195 269 LINE SMOOTH",
"179 269 OFFCURVE",
"158 264 OFFCURVE",
"134 257 CURVE",
"170 323 OFFCURVE",
"196 371 OFFCURVE",
"215 403 CURVE SMOOTH",
"225 420 OFFCURVE",
"237 440 OFFCURVE",
"251 461 CURVE SMOOTH",
"261 474 OFFCURVE",
"266 482 OFFCURVE",
"266 485 CURVE",
"255 486 OFFCURVE",
"240 479 OFFCURVE",
"221 462 CURVE SMOOTH",
"188 434 LINE SMOOTH",
"179 427 OFFCURVE",
"173 422 OFFCURVE",
"169 420 CURVE SMOOTH",
"161 416 OFFCURVE",
"158 411 OFFCURVE",
"158 406 CURVE SMOOTH",
"158 404 OFFCURVE",
"158 404 OFFCURVE",
"160 404 CURVE SMOOTH",
"161 404 OFFCURVE",
"162 404 OFFCURVE",
"164 405 CURVE SMOOTH",
"189 419 OFFCURVE",
"204 429 OFFCURVE",
"211 435 CURVE",
"208 430 OFFCURVE",
"205 426 OFFCURVE",
"203 422 CURVE SMOOTH",
"201 418 OFFCURVE",
"199 415 OFFCURVE",
"197 413 CURVE",
"139 308 LINE SMOOTH",
"124 281 OFFCURVE",
"113 260 OFFCURVE",
"106 248 CURVE",
"101 246 OFFCURVE",
"95 244 OFFCURVE",
"89 242 CURVE SMOOTH",
"71 236 LINE SMOOTH",
"57 231 OFFCURVE",
"47 224 OFFCURVE",
"41 216 CURVE SMOOTH",
"40 215 OFFCURVE",
"40 214 OFFCURVE",
"40 212 CURVE SMOOTH",
"40 204 OFFCURVE",
"45 201 OFFCURVE",
"56 201 CURVE SMOOTH"
);
}
);
width = 306;
}
);
unicode = 00B9;
},
{
glyphname = twosuperior;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"20 199 OFFCURVE",
"34 203 OFFCURVE",
"56 211 CURVE SMOOTH",
"82 221 OFFCURVE",
"100 227 OFFCURVE",
"110 230 CURVE SMOOTH",
"136 238 OFFCURVE",
"157 241 OFFCURVE",
"173 241 CURVE SMOOTH",
"194 241 OFFCURVE",
"212 237 OFFCURVE",
"212 222 CURVE SMOOTH",
"212 219 OFFCURVE",
"211 216 OFFCURVE",
"207 213 CURVE SMOOTH",
"204 210 LINE SMOOTH",
"202 208 OFFCURVE",
"201 207 OFFCURVE",
"201 205 CURVE SMOOTH",
"201 201 OFFCURVE",
"203 199 OFFCURVE",
"209 199 CURVE SMOOTH",
"212 199 OFFCURVE",
"215 199 OFFCURVE",
"218 201 CURVE SMOOTH",
"231 209 OFFCURVE",
"239 219 OFFCURVE",
"239 230 CURVE SMOOTH",
"239 241 OFFCURVE",
"234 249 OFFCURVE",
"227 252 CURVE SMOOTH",
"218 256 OFFCURVE",
"202 258 OFFCURVE",
"182 258 CURVE SMOOTH",
"161 258 OFFCURVE",
"139 256 OFFCURVE",
"113 252 CURVE SMOOTH",
"89 248 OFFCURVE",
"70 243 OFFCURVE",
"59 239 CURVE",
"62 236 LINE",
"83 261 OFFCURVE",
"104 280 OFFCURVE",
"125 295 CURVE SMOOTH",
"136 304 OFFCURVE",
"158 319 OFFCURVE",
"194 340 CURVE SMOOTH",
"256 379 OFFCURVE",
"285 408 OFFCURVE",
"286 430 CURVE SMOOTH",
"289 464 OFFCURVE",
"271 481 OFFCURVE",
"230 481 CURVE SMOOTH",
"223 481 LINE",
"220 480 OFFCURVE",
"217 480 OFFCURVE",
"213 480 CURVE SMOOTH",
"194 478 OFFCURVE",
"172 470 OFFCURVE",
"150 458 CURVE SMOOTH",
"119 442 OFFCURVE",
"105 427 OFFCURVE",
"105 413 CURVE SMOOTH",
"105 405 OFFCURVE",
"109 400 OFFCURVE",
"114 400 CURVE SMOOTH",
"117 400 OFFCURVE",
"120 402 OFFCURVE",
"122 405 CURVE",
"136 419 OFFCURVE",
"144 430 OFFCURVE",
"146 435 CURVE",
"172 456 OFFCURVE",
"196 465 OFFCURVE",
"219 465 CURVE SMOOTH",
"243 465 OFFCURVE",
"258 453 OFFCURVE",
"258 433 CURVE SMOOTH",
"258 414 OFFCURVE",
"240 392 OFFCURVE",
"197 365 CURVE SMOOTH",
"153 338 OFFCURVE",
"115 311 OFFCURVE",
"79 285 CURVE SMOOTH",
"30 248 OFFCURVE",
"5 221 OFFCURVE",
"5 207 CURVE SMOOTH",
"5 201 OFFCURVE",
"7 199 OFFCURVE",
"14 199 CURVE SMOOTH"
);
}
);
width = 286;
}
);
unicode = 00B2;
},
{
glyphname = threesuperior;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-12 150 OFFCURVE",
"-10 150 OFFCURVE",
"-8 151 CURVE",
"-9 153 LINE",
"-8 151 LINE",
"48 165 OFFCURVE",
"100 186 OFFCURVE",
"150 212 CURVE SMOOTH",
"221 251 OFFCURVE",
"256 290 OFFCURVE",
"256 329 CURVE SMOOTH",
"256 360 OFFCURVE",
"236 387 OFFCURVE",
"206 395 CURVE",
"235 411 OFFCURVE",
"248 426 OFFCURVE",
"248 441 CURVE SMOOTH",
"248 462 OFFCURVE",
"231 473 OFFCURVE",
"195 473 CURVE SMOOTH",
"177 473 OFFCURVE",
"159 470 OFFCURVE",
"142 464 CURVE SMOOTH",
"129 459 OFFCURVE",
"120 453 OFFCURVE",
"115 448 CURVE SMOOTH",
"113 445 OFFCURVE",
"111 442 OFFCURVE",
"111 438 CURVE SMOOTH",
"111 432 OFFCURVE",
"114 429 OFFCURVE",
"119 429 CURVE SMOOTH",
"121 429 OFFCURVE",
"124 431 OFFCURVE",
"127 436 CURVE",
"130 439 OFFCURVE",
"136 443 OFFCURVE",
"146 447 CURVE SMOOTH",
"158 451 OFFCURVE",
"172 454 OFFCURVE",
"187 454 CURVE SMOOTH",
"206 454 OFFCURVE",
"216 449 OFFCURVE",
"216 439 CURVE SMOOTH",
"216 428 OFFCURVE",
"200 415 OFFCURVE",
"165 400 CURVE",
"131 401 OFFCURVE",
"107 394 OFFCURVE",
"107 380 CURVE SMOOTH",
"107 370 OFFCURVE",
"114 366 OFFCURVE",
"127 366 CURVE SMOOTH",
"140 366 OFFCURVE",
"155 370 OFFCURVE",
"171 377 CURVE",
"192 375 LINE SMOOTH",
"214 373 OFFCURVE",
"232 352 OFFCURVE",
"232 329 CURVE SMOOTH",
"232 295 OFFCURVE",
"199 260 OFFCURVE",
"136 225 CURVE SMOOTH",
"88 198 OFFCURVE",
"41 178 OFFCURVE",
"-7 167 CURVE SMOOTH",
"-16 165 OFFCURVE",
"-20 161 OFFCURVE",
"-20 156 CURVE SMOOTH",
"-20 152 OFFCURVE",
"-18 150 OFFCURVE",
"-13 150 CURVE SMOOTH"
);
}
);
width = 296;
}
);
unicode = 00B3;
},
{
glyphname = foursuperior;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"123 194 OFFCURVE",
"143 204 OFFCURVE",
"170 225 CURVE",
"170 226 OFFCURVE",
"172 228 OFFCURVE",
"172 229 CURVE SMOOTH",
"172 232 OFFCURVE",
"168 234 OFFCURVE",
"163 234 CURVE SMOOTH",
"161 234 OFFCURVE",
"159 233 OFFCURVE",
"155 232 CURVE",
"142 222 OFFCURVE",
"134 217 OFFCURVE",
"130 217 CURVE SMOOTH",
"128 217 OFFCURVE",
"127 220 OFFCURVE",
"127 228 CURVE SMOOTH",
"127 239 OFFCURVE",
"133 257 OFFCURVE",
"146 280 CURVE SMOOTH",
"171 323 LINE",
"201 329 OFFCURVE",
"228 331 OFFCURVE",
"249 331 CURVE SMOOTH",
"265 331 OFFCURVE",
"279 330 OFFCURVE",
"292 327 CURVE SMOOTH",
"300 326 OFFCURVE",
"305 328 OFFCURVE",
"305 333 CURVE SMOOTH",
"305 339 OFFCURVE",
"298 341 OFFCURVE",
"286 343 CURVE SMOOTH",
"277 345 OFFCURVE",
"267 345 OFFCURVE",
"258 345 CURVE SMOOTH",
"253 345 OFFCURVE",
"229 343 OFFCURVE",
"180 338 CURVE",
"184 346 OFFCURVE",
"189 352 OFFCURVE",
"193 358 CURVE SMOOTH",
"198 367 OFFCURVE",
"203 374 OFFCURVE",
"207 380 CURVE SMOOTH",
"221 401 LINE SMOOTH",
"247 437 OFFCURVE",
"271 463 OFFCURVE",
"293 478 CURVE SMOOTH",
"304 485 OFFCURVE",
"311 491 OFFCURVE",
"311 494 CURVE SMOOTH",
"311 496 OFFCURVE",
"309 497 OFFCURVE",
"305 497 CURVE SMOOTH",
"300 497 OFFCURVE",
"292 494 OFFCURVE",
"278 485 CURVE SMOOTH",
"263 475 OFFCURVE",
"257 470 OFFCURVE",
"254 466 CURVE SMOOTH",
"247 455 OFFCURVE",
"229 434 OFFCURVE",
"202 403 CURVE SMOOTH",
"181 378 OFFCURVE",
"165 356 OFFCURVE",
"152 337 CURVE",
"55 318 LINE",
"57 315 LINE",
"141 385 LINE SMOOTH",
"178 416 OFFCURVE",
"208 443 OFFCURVE",
"232 466 CURVE SMOOTH",
"233 467 OFFCURVE",
"233 468 OFFCURVE",
"233 469 CURVE SMOOTH",
"233 475 OFFCURVE",
"229 478 OFFCURVE",
"224 478 CURVE SMOOTH",
"222 478 OFFCURVE",
"222 478 OFFCURVE",
"220 477 CURVE",
"166 423 OFFCURVE",
"94 366 OFFCURVE",
"5 304 CURVE",
"1 302 OFFCURVE",
"0 298 OFFCURVE",
"0 294 CURVE SMOOTH",
"1 290 OFFCURVE",
"3 288 OFFCURVE",
"6 287 CURVE SMOOTH",
"12 285 OFFCURVE",
"35 289 OFFCURVE",
"74 300 CURVE SMOOTH",
"109 310 OFFCURVE",
"131 316 OFFCURVE",
"140 318 CURVE",
"114 274 OFFCURVE",
"98 242 OFFCURVE",
"93 220 CURVE",
"92 219 OFFCURVE",
"92 218 OFFCURVE",
"92 217 CURVE SMOOTH",
"92 214 OFFCURVE",
"91 212 OFFCURVE",
"91 210 CURVE SMOOTH",
"91 199 OFFCURVE",
"97 194 OFFCURVE",
"107 194 CURVE SMOOTH"
);
}
);
width = 351;
}
);
unicode = 2074;
},
{
glyphname = fraction;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"117 -16 LINE SMOOTH",
"121 -16 OFFCURVE",
"124 -13 OFFCURVE",
"122 -10 CURVE",
"122 -7 OFFCURVE",
"124 22 OFFCURVE",
"131 42 CURVE SMOOTH",
"136 60 OFFCURVE",
"164 114 OFFCURVE",
"184 150 CURVE SMOOTH",
"237 250 OFFCURVE",
"316 361 OFFCURVE",
"459 508 CURVE",
"460 511 LINE",
"460 513 OFFCURVE",
"455 514 OFFCURVE",
"451 513 CURVE SMOOTH",
"424 509 OFFCURVE",
"379 468 OFFCURVE",
"317 389 CURVE SMOOTH",
"256 314 OFFCURVE",
"205 238 OFFCURVE",
"159 157 CURVE SMOOTH",
"117 82 OFFCURVE",
"96 31 OFFCURVE",
"96 4 CURVE SMOOTH",
"96 0 OFFCURVE",
"97 -4 OFFCURVE",
"98 -7 CURVE SMOOTH",
"100 -12 OFFCURVE",
"109 -16 OFFCURVE",
"115 -16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 446;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = onehalf;
lastChange = "2021-12-02 22:30:18 +0000";
layers = (
{
components = (
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 66, -62}";
},
{
name = onesuperior;
},
{
name = twosuperior;
transform = "{1, 0, 0, 1, 372, -229}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 698;
}
);
unicode = 00BD;
},
{
glyphname = onequarter;
lastChange = "2021-12-02 22:30:49 +0000";
layers = (
{
components = (
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 66, -62}";
},
{
name = onesuperior;
},
{
name = foursuperior;
transform = "{1, 0, 0, 1, 344, -230}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 695;
}
);
unicode = 00BC;
},
{
glyphname = threequarters;
lastChange = "2021-12-02 22:31:10 +0000";
layers = (
{
components = (
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 66, -62}";
},
{
name = foursuperior;
transform = "{1, 0, 0, 1, 344, -230}";
},
{
name = threesuperior;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 695;
}
);
unicode = 00BE;
},
{
glyphname = period;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"134 6 OFFCURVE",
"138 19 OFFCURVE",
"153 44 CURVE SMOOTH",
"158 53 OFFCURVE",
"160 60 OFFCURVE",
"160 65 CURVE SMOOTH",
"160 72 OFFCURVE",
"156 75 OFFCURVE",
"148 75 CURVE SMOOTH",
"136 75 OFFCURVE",
"125 71 OFFCURVE",
"114 62 CURVE",
"107 54 OFFCURVE",
"100 47 OFFCURVE",
"95 40 CURVE SMOOTH",
"89 33 OFFCURVE",
"84 26 OFFCURVE",
"79 21 CURVE SMOOTH",
"71 11 OFFCURVE",
"79 6 OFFCURVE",
"102 6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 201;
}
);
note = period;
unicode = 002E;
},
{
glyphname = comma;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"22 -77 OFFCURVE",
"27 -75 OFFCURVE",
"32 -71 CURVE SMOOTH",
"90 -26 OFFCURVE",
"121 9 OFFCURVE",
"124 36 CURVE SMOOTH",
"125 47 OFFCURVE",
"124 57 OFFCURVE",
"120 66 CURVE SMOOTH",
"115 78 OFFCURVE",
"107 84 OFFCURVE",
"98 84 CURVE SMOOTH",
"83 84 OFFCURVE",
"67 74 OFFCURVE",
"67 63 CURVE SMOOTH",
"67 60 OFFCURVE",
"69 55 OFFCURVE",
"72 47 CURVE SMOOTH",
"75 39 OFFCURVE",
"76 32 OFFCURVE",
"76 27 CURVE SMOOTH",
"76 -12 OFFCURVE",
"62 -39 OFFCURVE",
"33 -56 CURVE SMOOTH",
"20 -63 OFFCURVE",
"14 -69 OFFCURVE",
"14 -74 CURVE SMOOTH",
"14 -76 OFFCURVE",
"15 -77 OFFCURVE",
"18 -77 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 166;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = colon;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"211 212 OFFCURVE",
"217 225 OFFCURVE",
"230 250 CURVE SMOOTH",
"235 259 OFFCURVE",
"237 266 OFFCURVE",
"237 271 CURVE SMOOTH",
"237 278 OFFCURVE",
"233 282 OFFCURVE",
"225 282 CURVE SMOOTH",
"214 282 OFFCURVE",
"202 277 OFFCURVE",
"191 268 CURVE SMOOTH",
"176 253 OFFCURVE",
"165 239 OFFCURVE",
"156 227 CURVE SMOOTH",
"148 217 OFFCURVE",
"156 212 OFFCURVE",
"180 212 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"126 33 OFFCURVE",
"137 36 OFFCURVE",
"142 42 CURVE SMOOTH",
"159 66 OFFCURVE",
"169 80 OFFCURVE",
"169 91 CURVE SMOOTH",
"169 98 OFFCURVE",
"165 102 OFFCURVE",
"156 102 CURVE SMOOTH",
"144 102 OFFCURVE",
"133 98 OFFCURVE",
"122 89 CURVE",
"87 48 LINE SMOOTH",
"79 38 OFFCURVE",
"87 33 OFFCURVE",
"110 33 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 201;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"39 -77 OFFCURVE",
"44 -75 OFFCURVE",
"49 -71 CURVE SMOOTH",
"108 -25 OFFCURVE",
"139 11 OFFCURVE",
"141 36 CURVE SMOOTH",
"142 47 OFFCURVE",
"140 57 OFFCURVE",
"136 66 CURVE SMOOTH",
"131 78 OFFCURVE",
"123 84 OFFCURVE",
"114 84 CURVE SMOOTH",
"99 84 OFFCURVE",
"83 74 OFFCURVE",
"83 63 CURVE SMOOTH",
"83 62 OFFCURVE",
"84 60 OFFCURVE",
"85 57 CURVE SMOOTH",
"90 47 OFFCURVE",
"92 37 OFFCURVE",
"92 27 CURVE SMOOTH",
"92 -12 OFFCURVE",
"78 -39 OFFCURVE",
"50 -56 CURVE SMOOTH",
"37 -63 OFFCURVE",
"31 -69 OFFCURVE",
"31 -74 CURVE SMOOTH",
"31 -76 OFFCURVE",
"32 -77 OFFCURVE",
"35 -77 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"211 212 OFFCURVE",
"217 225 OFFCURVE",
"230 250 CURVE SMOOTH",
"235 259 OFFCURVE",
"237 266 OFFCURVE",
"237 271 CURVE SMOOTH",
"237 278 OFFCURVE",
"233 282 OFFCURVE",
"225 282 CURVE SMOOTH",
"214 282 OFFCURVE",
"202 277 OFFCURVE",
"191 268 CURVE SMOOTH",
"176 253 OFFCURVE",
"165 239 OFFCURVE",
"156 227 CURVE SMOOTH",
"148 217 OFFCURVE",
"156 212 OFFCURVE",
"180 212 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 201;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = ellipsis;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"479 -14 OFFCURVE",
"500 4 OFFCURVE",
"504 27 CURVE SMOOTH",
"508 50 OFFCURVE",
"493 68 OFFCURVE",
"470 68 CURVE SMOOTH",
"445 68 OFFCURVE",
"421 46 OFFCURVE",
"421 20 CURVE SMOOTH",
"421 1 OFFCURVE",
"436 -14 OFFCURVE",
"456 -14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 -14 OFFCURVE",
"100 4 OFFCURVE",
"104 27 CURVE SMOOTH",
"108 50 OFFCURVE",
"93 68 OFFCURVE",
"70 68 CURVE SMOOTH",
"45 68 OFFCURVE",
"21 46 OFFCURVE",
"21 20 CURVE SMOOTH",
"21 1 OFFCURVE",
"36 -14 OFFCURVE",
"56 -14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"273 -14 OFFCURVE",
"294 4 OFFCURVE",
"298 27 CURVE SMOOTH",
"302 50 OFFCURVE",
"287 68 OFFCURVE",
"264 68 CURVE SMOOTH",
"239 68 OFFCURVE",
"215 46 OFFCURVE",
"215 20 CURVE SMOOTH",
"215 1 OFFCURVE",
"230 -14 OFFCURVE",
"250 -14 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0123 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01215 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01227 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 9 119 9 135 9 151 9 167 9 183 9 199 9 215 9 231 9 247 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 9 23 9 39 9 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 9 70 9 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 537;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = exclam;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"198 143 OFFCURVE",
"214 164 OFFCURVE",
"241 206 CURVE SMOOTH",
"276 262 OFFCURVE",
"299 296 OFFCURVE",
"312 312 CURVE SMOOTH",
"389 410 OFFCURVE",
"445 476 OFFCURVE",
"479 509 CURVE SMOOTH",
"510 540 OFFCURVE",
"531 555 OFFCURVE",
"542 555 CURVE SMOOTH",
"553 555 OFFCURVE",
"558 558 OFFCURVE",
"558 564 CURVE SMOOTH",
"558 571 OFFCURVE",
"553 574 OFFCURVE",
"544 574 CURVE SMOOTH",
"536 574 OFFCURVE",
"519 569 OFFCURVE",
"493 558 CURVE SMOOTH",
"465 547 OFFCURVE",
"450 539 OFFCURVE",
"447 536 CURVE SMOOTH",
"356 429 OFFCURVE",
"297 353 OFFCURVE",
"270 307 CURVE SMOOTH",
"235 251 OFFCURVE",
"217 221 OFFCURVE",
"216 216 CURVE",
"197 184 OFFCURVE",
"189 161 OFFCURVE",
"190 147 CURVE SMOOTH",
"190 144 OFFCURVE",
"191 143 OFFCURVE",
"193 143 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"121 1 OFFCURVE",
"131 4 OFFCURVE",
"136 10 CURVE SMOOTH",
"147 22 OFFCURVE",
"160 34 OFFCURVE",
"176 45 CURVE SMOOTH",
"179 47 OFFCURVE",
"180 49 OFFCURVE",
"180 51 CURVE SMOOTH",
"180 59 OFFCURVE",
"170 63 OFFCURVE",
"149 63 CURVE SMOOTH",
"138 63 OFFCURVE",
"131 61 OFFCURVE",
"126 57 CURVE",
"111 41 OFFCURVE",
"100 27 OFFCURVE",
"91 15 CURVE SMOOTH",
"84 6 OFFCURVE",
"89 1 OFFCURVE",
"107 1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01230 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 37 119 37 135 37 151 37 167 37 183 37 199 37 215 37 231 37 247 37 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0127 37 23 37 39 37 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\01254 37 70 37 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 201;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = exclamdown;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-175 -381 OFFCURVE",
"-158 -375 OFFCURVE",
"-130 -364 CURVE SMOOTH",
"-102 -353 OFFCURVE",
"-87 -345 OFFCURVE",
"-84 -342 CURVE SMOOTH",
"-59 -313 OFFCURVE",
"-34 -283 OFFCURVE",
"-7 -253 CURVE SMOOTH",
"36 -202 OFFCURVE",
"69 -155 OFFCURVE",
"93 -114 CURVE SMOOTH",
"147 -22 LINE SMOOTH",
"164 11 OFFCURVE",
"173 33 OFFCURVE",
"172 46 CURVE SMOOTH",
"172 49 OFFCURVE",
"171 51 OFFCURVE",
"169 51 CURVE SMOOTH",
"164 51 OFFCURVE",
"148 30 OFFCURVE",
"121 -13 CURVE SMOOTH",
"104 -41 OFFCURVE",
"89 -64 OFFCURVE",
"77 -81 CURVE SMOOTH",
"65 -98 OFFCURVE",
"56 -111 OFFCURVE",
"50 -118 CURVE SMOOTH",
"-30 -221 OFFCURVE",
"-86 -285 OFFCURVE",
"-117 -316 CURVE SMOOTH",
"-148 -347 OFFCURVE",
"-169 -362 OFFCURVE",
"-178 -362 CURVE SMOOTH",
"-190 -362 OFFCURVE",
"-196 -365 OFFCURVE",
"-196 -371 CURVE SMOOTH",
"-196 -378 OFFCURVE",
"-191 -381 OFFCURVE",
"-181 -381 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"224 130 OFFCURVE",
"232 132 OFFCURVE",
"237 137 CURVE SMOOTH",
"272 178 LINE SMOOTH",
"274 181 OFFCURVE",
"275 183 OFFCURVE",
"275 185 CURVE SMOOTH",
"275 190 OFFCURVE",
"268 193 OFFCURVE",
"254 193 CURVE SMOOTH",
"241 193 OFFCURVE",
"232 190 OFFCURVE",
"227 184 CURVE SMOOTH",
"214 169 OFFCURVE",
"201 157 OFFCURVE",
"187 148 CURVE SMOOTH",
"184 146 OFFCURVE",
"183 144 OFFCURVE",
"183 142 CURVE SMOOTH",
"183 134 OFFCURVE",
"193 130 OFFCURVE",
"213 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01211 3 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 320;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = question;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"157 175 OFFCURVE",
"163 181 OFFCURVE",
"169 193 CURVE SMOOTH",
"184 226 OFFCURVE",
"219 252 OFFCURVE",
"274 273 CURVE SMOOTH",
"411 326 LINE",
"458 351 OFFCURVE",
"483 384 OFFCURVE",
"487 427 CURVE SMOOTH",
"494 513 OFFCURVE",
"425 572 OFFCURVE",
"324 572 CURVE SMOOTH",
"288 572 OFFCURVE",
"255 564 OFFCURVE",
"224 549 CURVE SMOOTH",
"181 528 OFFCURVE",
"154 496 OFFCURVE",
"141 455 CURVE SMOOTH",
"138 447 OFFCURVE",
"137 438 OFFCURVE",
"137 429 CURVE SMOOTH",
"137 396 OFFCURVE",
"157 366 OFFCURVE",
"180 357 CURVE SMOOTH",
"189 354 OFFCURVE",
"193 355 OFFCURVE",
"193 360 CURVE SMOOTH",
"193 363 OFFCURVE",
"191 366 OFFCURVE",
"187 368 CURVE SMOOTH",
"173 374 OFFCURVE",
"166 394 OFFCURVE",
"166 427 CURVE SMOOTH",
"166 438 OFFCURVE",
"167 448 OFFCURVE",
"170 455 CURVE SMOOTH",
"198 530 OFFCURVE",
"246 554 OFFCURVE",
"338 551 CURVE SMOOTH",
"409 549 OFFCURVE",
"454 502 OFFCURVE",
"454 440 CURVE SMOOTH",
"454 394 OFFCURVE",
"428 358 OFFCURVE",
"376 331 CURVE",
"240 277 LINE SMOOTH",
"188 256 OFFCURVE",
"157 229 OFFCURVE",
"148 198 CURVE SMOOTH",
"146 192 OFFCURVE",
"145 187 OFFCURVE",
"145 183 CURVE SMOOTH",
"145 178 OFFCURVE",
"147 175 OFFCURVE",
"150 175 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"90 3 OFFCURVE",
"100 6 OFFCURVE",
"105 12 CURVE SMOOTH",
"116 24 OFFCURVE",
"129 36 OFFCURVE",
"145 47 CURVE SMOOTH",
"148 49 OFFCURVE",
"149 51 OFFCURVE",
"149 53 CURVE SMOOTH",
"149 61 OFFCURVE",
"138 65 OFFCURVE",
"117 65 CURVE SMOOTH",
"107 65 OFFCURVE",
"100 63 OFFCURVE",
"95 59 CURVE",
"80 43 OFFCURVE",
"69 29 OFFCURVE",
"60 17 CURVE SMOOTH",
"53 8 OFFCURVE",
"58 3 OFFCURVE",
"76 3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 1065 37 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 28 213 28 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01258 51 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 490;
}
);
note = question;
unicode = 003F;
},
{
glyphname = questiondown;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"156 -321 OFFCURVE",
"190 -313 OFFCURVE",
"220 -298 CURVE SMOOTH",
"262 -277 OFFCURVE",
"290 -246 OFFCURVE",
"303 -204 CURVE SMOOTH",
"306 -196 OFFCURVE",
"307 -187 OFFCURVE",
"307 -178 CURVE SMOOTH",
"307 -146 OFFCURVE",
"288 -115 OFFCURVE",
"265 -106 CURVE SMOOTH",
"256 -103 OFFCURVE",
"252 -105 OFFCURVE",
"252 -110 CURVE SMOOTH",
"252 -114 OFFCURVE",
"254 -116 OFFCURVE",
"258 -117 CURVE SMOOTH",
"271 -122 OFFCURVE",
"278 -142 OFFCURVE",
"278 -175 CURVE SMOOTH",
"278 -186 OFFCURVE",
"277 -196 OFFCURVE",
"274 -203 CURVE SMOOTH",
"261 -240 OFFCURVE",
"243 -265 OFFCURVE",
"218 -279 CURVE SMOOTH",
"193 -293 OFFCURVE",
"158 -300 OFFCURVE",
"112 -300 CURVE SMOOTH",
"70 -300 OFFCURVE",
"38 -288 OFFCURVE",
"16 -261 CURVE SMOOTH",
"-2 -240 OFFCURVE",
"-10 -217 OFFCURVE",
"-10 -190 CURVE SMOOTH",
"-10 -144 OFFCURVE",
"14 -108 OFFCURVE",
"68 -80 CURVE",
"205 -26 LINE SMOOTH",
"257 -5 OFFCURVE",
"288 22 OFFCURVE",
"297 53 CURVE SMOOTH",
"299 59 OFFCURVE",
"300 64 OFFCURVE",
"300 68 CURVE SMOOTH",
"300 73 OFFCURVE",
"298 76 OFFCURVE",
"295 76 CURVE SMOOTH",
"288 76 OFFCURVE",
"282 70 OFFCURVE",
"276 58 CURVE SMOOTH",
"261 26 OFFCURVE",
"225 -1 OFFCURVE",
"170 -22 CURVE SMOOTH",
"33 -74 LINE",
"-19 -101 OFFCURVE",
"-44 -140 OFFCURVE",
"-44 -189 CURVE SMOOTH",
"-44 -268 OFFCURVE",
"26 -321 OFFCURVE",
"120 -321 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"337 186 OFFCURVE",
"345 188 OFFCURVE",
"350 192 CURVE",
"365 208 OFFCURVE",
"376 222 OFFCURVE",
"385 234 CURVE SMOOTH",
"393 243 OFFCURVE",
"387 248 OFFCURVE",
"367 248 CURVE SMOOTH",
"354 248 OFFCURVE",
"345 245 OFFCURVE",
"340 240 CURVE SMOOTH",
"327 225 OFFCURVE",
"313 213 OFFCURVE",
"300 204 CURVE SMOOTH",
"297 202 OFFCURVE",
"296 200 OFFCURVE",
"296 198 CURVE SMOOTH",
"296 190 OFFCURVE",
"306 186 OFFCURVE",
"327 186 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01259 1065 50 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 50 218 50 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 50 25 50 41 50 57 50 73 50 89 50 105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 50 25 50 41 50 57 50 73 50 89 50 105 50 121 50 137 50 153 50 169 50 185 50 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01213 5 13 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 428;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = periodcentered;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"133 274 OFFCURVE",
"137 287 OFFCURVE",
"152 312 CURVE SMOOTH",
"157 321 OFFCURVE",
"159 328 OFFCURVE",
"159 333 CURVE SMOOTH",
"159 340 OFFCURVE",
"155 343 OFFCURVE",
"147 343 CURVE SMOOTH",
"135 343 OFFCURVE",
"124 339 OFFCURVE",
"113 330 CURVE",
"106 322 OFFCURVE",
"99 315 OFFCURVE",
"94 308 CURVE SMOOTH",
"88 301 OFFCURVE",
"83 294 OFFCURVE",
"78 289 CURVE SMOOTH",
"70 279 OFFCURVE",
"78 274 OFFCURVE",
"101 274 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 201;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = bullet;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"380 55 OFFCURVE",
"463 134 OFFCURVE",
"463 237 CURVE SMOOTH",
"463 337 OFFCURVE",
"382 418 OFFCURVE",
"282 418 CURVE SMOOTH",
"181 418 OFFCURVE",
"100 337 OFFCURVE",
"100 237 CURVE SMOOTH",
"100 136 OFFCURVE",
"181 55 OFFCURVE",
"282 55 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 563;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = asterisk;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"103 364 OFFCURVE",
"113 382 OFFCURVE",
"124 419 CURVE SMOOTH",
"148 489 LINE",
"248 423 LINE",
"256 421 LINE",
"260 421 OFFCURVE",
"260 424 OFFCURVE",
"256 431 CURVE SMOOTH",
"251 438 OFFCURVE",
"245 444 OFFCURVE",
"237 449 CURVE",
"170 501 LINE",
"247 531 LINE SMOOTH",
"265 538 OFFCURVE",
"274 544 OFFCURVE",
"274 551 CURVE SMOOTH",
"274 554 OFFCURVE",
"271 555 OFFCURVE",
"264 554 CURVE",
"235 546 OFFCURVE",
"212 539 OFFCURVE",
"193 532 CURVE SMOOTH",
"158 520 LINE",
"183 592 LINE SMOOTH",
"186 601 OFFCURVE",
"187 609 OFFCURVE",
"187 616 CURVE SMOOTH",
"187 622 LINE SMOOTH",
"186 631 OFFCURVE",
"182 629 OFFCURVE",
"176 618 CURVE",
"163 587 OFFCURVE",
"153 562 OFFCURVE",
"146 543 CURVE SMOOTH",
"145 539 OFFCURVE",
"143 536 OFFCURVE",
"142 533 CURVE SMOOTH",
"139 525 LINE",
"83 568 LINE SMOOTH",
"62 585 OFFCURVE",
"46 593 OFFCURVE",
"37 593 CURVE SMOOTH",
"33 593 OFFCURVE",
"31 591 OFFCURVE",
"31 587 CURVE SMOOTH",
"31 582 OFFCURVE",
"34 577 OFFCURVE",
"39 570 CURVE",
"70 545 OFFCURVE",
"97 524 OFFCURVE",
"120 508 CURVE",
"95 499 OFFCURVE",
"74 492 OFFCURVE",
"58 486 CURVE SMOOTH",
"41 480 OFFCURVE",
"30 475 OFFCURVE",
"23 470 CURVE SMOOTH",
"14 464 OFFCURVE",
"10 458 OFFCURVE",
"10 453 CURVE SMOOTH",
"10 450 OFFCURVE",
"13 448 OFFCURVE",
"20 448 CURVE SMOOTH",
"29 448 OFFCURVE",
"45 452 OFFCURVE",
"66 460 CURVE SMOOTH",
"122 482 LINE",
"111 455 OFFCURVE",
"103 434 OFFCURVE",
"98 418 CURVE SMOOTH",
"92 401 OFFCURVE",
"88 389 OFFCURVE",
"87 382 CURVE SMOOTH",
"86 370 OFFCURVE",
"88 364 OFFCURVE",
"94 364 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 282;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = numbersign;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"336 77 OFFCURVE",
"341 81 OFFCURVE",
"343 88 CURVE SMOOTH",
"363 160 OFFCURVE",
"399 242 OFFCURVE",
"452 338 CURVE",
"472 339 OFFCURVE",
"492 339 OFFCURVE",
"512 339 CURVE SMOOTH",
"570 339 OFFCURVE",
"627 336 OFFCURVE",
"683 328 CURVE SMOOTH",
"696 326 OFFCURVE",
"703 329 OFFCURVE",
"703 337 CURVE SMOOTH",
"703 341 OFFCURVE",
"699 344 OFFCURVE",
"692 345 CURVE SMOOTH",
"619 355 OFFCURVE",
"542 360 OFFCURVE",
"463 360 CURVE",
"486 401 LINE",
"510 441 LINE",
"626 448 OFFCURVE",
"696 460 OFFCURVE",
"721 475 CURVE SMOOTH",
"731 482 OFFCURVE",
"736 489 OFFCURVE",
"736 497 CURVE SMOOTH",
"736 508 OFFCURVE",
"732 513 OFFCURVE",
"725 513 CURVE SMOOTH",
"718 513 OFFCURVE",
"715 507 OFFCURVE",
"714 495 CURVE",
"689 479 OFFCURVE",
"626 469 OFFCURVE",
"523 464 CURVE",
"598 593 LINE SMOOTH",
"600 597 OFFCURVE",
"601 600 OFFCURVE",
"601 603 CURVE SMOOTH",
"601 607 OFFCURVE",
"599 609 OFFCURVE",
"596 609 CURVE SMOOTH",
"591 609 OFFCURVE",
"587 605 OFFCURVE",
"583 598 CURVE SMOOTH",
"566 569 OFFCURVE",
"540 524 OFFCURVE",
"501 464 CURVE",
"392 461 LINE SMOOTH",
"361 460 OFFCURVE",
"334 460 OFFCURVE",
"313 459 CURVE",
"391 579 LINE",
"394 582 OFFCURVE",
"395 586 OFFCURVE",
"395 591 CURVE SMOOTH",
"395 600 OFFCURVE",
"392 605 OFFCURVE",
"385 605 CURVE SMOOTH",
"382 605 OFFCURVE",
"379 603 OFFCURVE",
"376 598 CURVE SMOOTH",
"281 459 LINE",
"50 455 LINE",
"41 454 OFFCURVE",
"36 449 OFFCURVE",
"36 441 CURVE SMOOTH",
"36 430 OFFCURVE",
"41 425 OFFCURVE",
"50 425 CURVE SMOOTH",
"52 425 LINE SMOOTH",
"129 428 OFFCURVE",
"199 430 OFFCURVE",
"263 431 CURVE",
"239 392 OFFCURVE",
"221 363 OFFCURVE",
"209 342 CURVE",
"23 329 LINE SMOOTH",
"14 328 OFFCURVE",
"10 323 OFFCURVE",
"10 314 CURVE SMOOTH",
"10 304 OFFCURVE",
"15 299 OFFCURVE",
"24 299 CURVE SMOOTH",
"26 299 LINE",
"191 312 LINE",
"172 281 OFFCURVE",
"158 257 OFFCURVE",
"149 238 CURVE SMOOTH",
"136 214 OFFCURVE",
"132 199 OFFCURVE",
"132 194 CURVE SMOOTH",
"132 182 OFFCURVE",
"141 174 OFFCURVE",
"150 174 CURVE SMOOTH",
"155 174 OFFCURVE",
"160 177 OFFCURVE",
"163 183 CURVE SMOOTH",
"176 208 OFFCURVE",
"188 232 OFFCURVE",
"199 255 CURVE SMOOTH",
"210 277 OFFCURVE",
"220 297 OFFCURVE",
"229 316 CURVE",
"424 337 LINE",
"371 248 OFFCURVE",
"335 167 OFFCURVE",
"315 96 CURVE SMOOTH",
"312 83 OFFCURVE",
"317 77 OFFCURVE",
"329 77 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"296 432 LINE",
"343 433 OFFCURVE",
"407 436 OFFCURVE",
"487 440 CURVE",
"482 431 OFFCURVE",
"475 419 OFFCURVE",
"467 406 CURVE SMOOTH",
"458 393 OFFCURVE",
"449 377 OFFCURVE",
"438 359 CURVE",
"395 356 OFFCURVE",
"358 354 OFFCURVE",
"326 352 CURVE SMOOTH",
"294 350 OFFCURVE",
"267 348 OFFCURVE",
"246 345 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01261 1061 79 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01286 1061 13 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01286 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01234 18 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01245 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 738;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = slash;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"13 -138 OFFCURVE",
"23 -134 OFFCURVE",
"36 -125 CURVE SMOOTH",
"49 -116 OFFCURVE",
"55 -109 OFFCURVE",
"56 -102 CURVE SMOOTH",
"58 -82 OFFCURVE",
"72 -51 OFFCURVE",
"98 -10 CURVE SMOOTH",
"160 84 OFFCURVE",
"254 197 OFFCURVE",
"381 329 CURVE SMOOTH",
"474 426 OFFCURVE",
"546 501 OFFCURVE",
"597 555 CURVE SMOOTH",
"648 608 OFFCURVE",
"678 641 OFFCURVE",
"688 652 CURVE",
"691 657 OFFCURVE",
"689 659 OFFCURVE",
"682 659 CURVE SMOOTH",
"659 659 OFFCURVE",
"631 640 OFFCURVE",
"598 602 CURVE SMOOTH",
"307 285 LINE SMOOTH",
"178 144 OFFCURVE",
"89 39 OFFCURVE",
"42 -33 CURVE SMOOTH",
"15 -74 OFFCURVE",
"0 -107 OFFCURVE",
"-3 -132 CURVE SMOOTH",
"-3 -136 OFFCURVE",
"-1 -138 OFFCURVE",
"4 -138 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0120 1077 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01221 1077 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 557;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = backslash;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"497 -116 LINE",
"514 -116 OFFCURVE",
"523 -105 OFFCURVE",
"523 -84 CURVE SMOOTH",
"523 -5 OFFCURVE",
"477 113 OFFCURVE",
"386 268 CURVE SMOOTH",
"318 381 OFFCURVE",
"245 489 OFFCURVE",
"164 590 CURVE SMOOTH",
"117 649 OFFCURVE",
"86 684 OFFCURVE",
"72 696 CURVE SMOOTH",
"57 709 OFFCURVE",
"41 715 OFFCURVE",
"24 715 CURVE SMOOTH",
"15 715 OFFCURVE",
"10 713 OFFCURVE",
"10 709 CURVE",
"105 608 OFFCURVE",
"186 511 OFFCURVE",
"254 420 CURVE SMOOTH",
"416 202 OFFCURVE",
"497 30 OFFCURVE",
"497 -96 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 1067 1 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 551;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = periodcentered.loclCAT;
lastChange = "2021-12-23 19:29:06 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 21, 159}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 201;
}
);
},
{
glyphname = parenleft;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"68 -193 OFFCURVE",
"81 -171 OFFCURVE",
"77 -158 CURVE SMOOTH",
"64 -108 OFFCURVE",
"58 -55 OFFCURVE",
"58 0 CURVE SMOOTH",
"58 141 OFFCURVE",
"94 264 OFFCURVE",
"166 369 CURVE SMOOTH",
"245 485 OFFCURVE",
"349 549 OFFCURVE",
"480 561 CURVE SMOOTH",
"491 562 OFFCURVE",
"497 572 OFFCURVE",
"497 591 CURVE SMOOTH",
"497 604 OFFCURVE",
"493 611 OFFCURVE",
"485 611 CURVE SMOOTH",
"484 611 LINE SMOOTH",
"350 602 OFFCURVE",
"240 541 OFFCURVE",
"154 426 CURVE SMOOTH",
"70 315 OFFCURVE",
"28 180 OFFCURVE",
"28 21 CURVE SMOOTH",
"28 -47 OFFCURVE",
"37 -116 OFFCURVE",
"54 -187 CURVE SMOOTH",
"55 -191 OFFCURVE",
"57 -193 OFFCURVE",
"60 -193 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 1065 2 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 14 213 14 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 402;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-47 -187 LINE SMOOTH",
"87 -178 OFFCURVE",
"197 -117 OFFCURVE",
"283 -2 CURVE SMOOTH",
"367 109 OFFCURVE",
"409 244 OFFCURVE",
"409 403 CURVE SMOOTH",
"409 471 OFFCURVE",
"400 540 OFFCURVE",
"383 611 CURVE SMOOTH",
"382 615 OFFCURVE",
"380 617 OFFCURVE",
"378 617 CURVE SMOOTH",
"369 617 OFFCURVE",
"356 595 OFFCURVE",
"360 582 CURVE SMOOTH",
"373 532 OFFCURVE",
"379 479 OFFCURVE",
"379 424 CURVE SMOOTH",
"379 283 OFFCURVE",
"343 160 OFFCURVE",
"271 55 CURVE SMOOTH",
"192 -61 OFFCURVE",
"88 -125 OFFCURVE",
"-43 -137 CURVE SMOOTH",
"-54 -138 OFFCURVE",
"-60 -148 OFFCURVE",
"-60 -167 CURVE SMOOTH",
"-60 -180 OFFCURVE",
"-56 -187 OFFCURVE",
"-48 -187 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 1065 14 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 14 218 14 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 480;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = braceleft;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"240 -134 OFFCURVE",
"244 -133 OFFCURVE",
"244 -131 CURVE",
"241 -129 LINE",
"191 -123 LINE SMOOTH",
"152 -116 OFFCURVE",
"131 -93 OFFCURVE",
"131 -44 CURVE SMOOTH",
"131 -17 OFFCURVE",
"137 24 OFFCURVE",
"150 77 CURVE SMOOTH",
"163 130 OFFCURVE",
"169 171 OFFCURVE",
"169 199 CURVE SMOOTH",
"169 259 OFFCURVE",
"123 300 OFFCURVE",
"62 305 CURVE",
"101 304 OFFCURVE",
"136 318 OFFCURVE",
"167 348 CURVE SMOOTH",
"195 375 OFFCURVE",
"215 408 OFFCURVE",
"227 448 CURVE SMOOTH",
"228 451 OFFCURVE",
"231 464 OFFCURVE",
"236 485 CURVE SMOOTH",
"254 576 LINE SMOOTH",
"263 623 OFFCURVE",
"277 658 OFFCURVE",
"296 679 CURVE SMOOTH",
"321 707 OFFCURVE",
"360 721 OFFCURVE",
"415 721 CURVE",
"423 724 LINE",
"420 725 OFFCURVE",
"418 726 OFFCURVE",
"417 726 CURVE SMOOTH",
"331 726 OFFCURVE",
"273 701 OFFCURVE",
"242 650 CURVE SMOOTH",
"227 623 OFFCURVE",
"213 570 OFFCURVE",
"201 489 CURVE SMOOTH",
"190 417 OFFCURVE",
"170 369 OFFCURVE",
"143 346 CURVE SMOOTH",
"122 327 OFFCURVE",
"83 315 OFFCURVE",
"26 309 CURVE",
"21 301 LINE",
"99 300 OFFCURVE",
"138 268 OFFCURVE",
"138 205 CURVE SMOOTH",
"138 179 OFFCURVE",
"131 138 OFFCURVE",
"118 83 CURVE SMOOTH",
"105 28 OFFCURVE",
"98 -12 OFFCURVE",
"98 -39 CURVE SMOOTH",
"98 -77 OFFCURVE",
"111 -103 OFFCURVE",
"138 -118 CURVE SMOOTH",
"157 -129 OFFCURVE",
"189 -134 OFFCURVE",
"232 -134 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 48 218 48 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 48 121 48 137 48 153 48 169 48 185 48 201 48 217 48 233 48 249 48 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 48 25 48 41 48 57 48 73 48 89 48 105 48 121 48 137 48 153 48 169 48 185 48 201 48 217 48 233 48 249 48 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 48 25 48 41 48 57 48 73 48 89 48 105 48 121 48 137 48 153 48 169 48 185 48 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01226 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01232 1068 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 32 118 32 134 32 150 32 166 32 182 32 198 32 214 32 230 32 246 32 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 32 22 32 38 32 54 32 70 32 86 32 102 32 118 32 134 32 150 32 166 32 182 32 198 32 214 32 230 32 246 32 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 32 22 32 38 32 54 32 70 32 86 32 102 32 118 32 134 32 150 32 166 32 182 32 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 32 213 32 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0120 40 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01223 40 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 369;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = braceright;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"128 -131 OFFCURVE",
"195 -95 OFFCURVE",
"230 -24 CURVE",
"293 177 LINE",
"323 250 OFFCURVE",
"380 286 OFFCURVE",
"464 287 CURVE",
"471 296 LINE",
"398 303 OFFCURVE",
"361 330 OFFCURVE",
"361 376 CURVE SMOOTH",
"361 408 OFFCURVE",
"371 453 OFFCURVE",
"392 511 CURVE SMOOTH",
"413 572 OFFCURVE",
"424 617 OFFCURVE",
"424 648 CURVE SMOOTH",
"424 679 OFFCURVE",
"409 701 OFFCURVE",
"379 712 CURVE SMOOTH",
"362 719 OFFCURVE",
"332 722 OFFCURVE",
"291 722 CURVE",
"288 721 OFFCURVE",
"285 719 OFFCURVE",
"284 718 CURVE",
"284 717 OFFCURVE",
"285 716 OFFCURVE",
"286 716 CURVE SMOOTH",
"309 713 OFFCURVE",
"332 709 OFFCURVE",
"355 705 CURVE",
"377 698 OFFCURVE",
"388 679 OFFCURVE",
"388 648 CURVE SMOOTH",
"388 620 OFFCURVE",
"378 576 OFFCURVE",
"359 517 CURVE SMOOTH",
"340 458 OFFCURVE",
"330 413 OFFCURVE",
"330 384 CURVE SMOOTH",
"330 356 OFFCURVE",
"342 334 OFFCURVE",
"366 318 CURVE SMOOTH",
"386 304 OFFCURVE",
"411 296 OFFCURVE",
"441 294 CURVE",
"390 289 OFFCURVE",
"343 267 OFFCURVE",
"300 226 CURVE SMOOTH",
"272 199 OFFCURVE",
"246 143 OFFCURVE",
"221 58 CURVE SMOOTH",
"197 -26 OFFCURVE",
"172 -78 OFFCURVE",
"146 -99 CURVE SMOOTH",
"132 -111 OFFCURVE",
"108 -119 OFFCURVE",
"75 -122 CURVE SMOOTH",
"44 -125 OFFCURVE",
"27 -127 OFFCURVE",
"25 -129 CURVE",
"25 -130 OFFCURVE",
"27 -131 OFFCURVE",
"31 -131 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 38 218 38 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0126 1069 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01210 1065 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 10 213 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01212 18 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01230 18 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 485;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = bracketleft;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"239 -17 OFFCURVE",
"268 -12 OFFCURVE",
"268 -3 CURVE SMOOTH",
"268 5 OFFCURVE",
"257 9 OFFCURVE",
"236 9 CURVE SMOOTH",
"227 9 OFFCURVE",
"173 4 OFFCURVE",
"164 4 CURVE SMOOTH",
"113 4 OFFCURVE",
"87 23 OFFCURVE",
"87 60 CURVE SMOOTH",
"87 125 OFFCURVE",
"131 235 OFFCURVE",
"218 392 CURVE SMOOTH",
"305 546 OFFCURVE",
"376 642 OFFCURVE",
"431 680 CURVE SMOOTH",
"438 685 OFFCURVE",
"459 687 OFFCURVE",
"494 687 CURVE SMOOTH",
"509 687 OFFCURVE",
"542 683 OFFCURVE",
"558 683 CURVE SMOOTH",
"565 683 OFFCURVE",
"570 683 OFFCURVE",
"572 684 CURVE",
"573 697 LINE SMOOTH",
"574 711 OFFCURVE",
"540 718 OFFCURVE",
"472 718 CURVE SMOOTH",
"446 718 OFFCURVE",
"425 713 OFFCURVE",
"408 703 CURVE SMOOTH",
"345 665 OFFCURVE",
"269 561 OFFCURVE",
"180 390 CURVE SMOOTH",
"92 220 OFFCURVE",
"48 96 OFFCURVE",
"48 19 CURVE SMOOTH",
"48 2 OFFCURVE",
"66 -9 OFFCURVE",
"103 -14 CURVE SMOOTH",
"116 -16 OFFCURVE",
"142 -17 OFFCURVE",
"181 -17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 1070 28 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 13 213 13 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01224 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01226 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01234 1064 7 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01215 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 15 119 15 135 15 151 15 167 15 183 15 199 15 215 15 231 15 247 15 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 15 23 15 39 15 55 15 71 15 87 15 103 15 119 15 135 15 151 15 167 15 183 15 199 15 215 15 231 15 247 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 15 23 15 39 15 55 15 71 15 87 15 103 15 119 15 135 15 151 15 167 15 183 15 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 15 214 15 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 585;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = bracketright;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"119 -17 OFFCURVE",
"155 -16 OFFCURVE",
"174 -13 CURVE SMOOTH",
"218 -7 OFFCURVE",
"249 6 OFFCURVE",
"268 27 CURVE SMOOTH",
"337 100 OFFCURVE",
"399 202 OFFCURVE",
"454 333 CURVE SMOOTH",
"510 466 OFFCURVE",
"538 581 OFFCURVE",
"538 679 CURVE SMOOTH",
"538 696 OFFCURVE",
"533 707 OFFCURVE",
"523 712 CURVE SMOOTH",
"518 715 OFFCURVE",
"505 716 OFFCURVE",
"485 716 CURVE SMOOTH",
"452 716 OFFCURVE",
"429 715 OFFCURVE",
"416 713 CURVE SMOOTH",
"390 708 OFFCURVE",
"370 698 OFFCURVE",
"356 684 CURVE",
"364 684 OFFCURVE",
"381 685 OFFCURVE",
"406 687 CURVE SMOOTH",
"427 688 OFFCURVE",
"443 689 OFFCURVE",
"455 689 CURVE SMOOTH",
"472 689 OFFCURVE",
"486 686 OFFCURVE",
"495 680 CURVE",
"498 664 OFFCURVE",
"499 652 OFFCURVE",
"499 643 CURVE SMOOTH",
"499 570 OFFCURVE",
"471 469 OFFCURVE",
"416 339 CURVE SMOOTH",
"363 217 OFFCURVE",
"311 125 OFFCURVE",
"259 63 CURVE SMOOTH",
"228 26 OFFCURVE",
"181 8 OFFCURVE",
"116 8 CURVE SMOOTH",
"71 8 LINE",
"60 6 OFFCURVE",
"47 -2 OFFCURVE",
"32 -15 CURVE",
"40 -16 OFFCURVE",
"52 -17 OFFCURVE",
"68 -17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1070 21 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 21 218 21 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0129 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01212 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01235 1064 29 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01214 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 556;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = hyphen;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"130 224 OFFCURVE",
"198 227 OFFCURVE",
"271 226 CURVE",
"280 225 OFFCURVE",
"287 225 OFFCURVE",
"292 225 CURVE SMOOTH",
"303 225 LINE SMOOTH",
"310 225 OFFCURVE",
"314 227 OFFCURVE",
"314 232 CURVE SMOOTH",
"314 235 OFFCURVE",
"311 238 OFFCURVE",
"305 239 CURVE SMOOTH",
"277 243 LINE SMOOTH",
"242 248 OFFCURVE",
"202 251 OFFCURVE",
"158 251 CURVE SMOOTH",
"132 251 OFFCURVE",
"105 250 OFFCURVE",
"76 248 CURVE",
"61 238 OFFCURVE",
"53 228 OFFCURVE",
"53 219 CURVE SMOOTH",
"53 215 OFFCURVE",
"56 213 OFFCURVE",
"62 213 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01214 1061 7 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 325;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = softhyphen;
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 325;
}
);
unicode = 00AD;
},
{
glyphname = endash;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"117 222 OFFCURVE",
"209 226 OFFCURVE",
"313 226 CURVE SMOOTH",
"361 226 LINE SMOOTH",
"372 225 OFFCURVE",
"382 225 OFFCURVE",
"389 225 CURVE SMOOTH",
"405 225 LINE SMOOTH",
"414 225 OFFCURVE",
"418 227 OFFCURVE",
"418 232 CURVE SMOOTH",
"418 235 OFFCURVE",
"414 238 OFFCURVE",
"407 239 CURVE SMOOTH",
"370 243 LINE SMOOTH",
"325 249 OFFCURVE",
"269 251 OFFCURVE",
"202 251 CURVE SMOOTH",
"158 251 OFFCURVE",
"108 250 OFFCURVE",
"54 248 CURVE",
"34 238 OFFCURVE",
"24 228 OFFCURVE",
"24 219 CURVE SMOOTH",
"24 215 OFFCURVE",
"28 213 OFFCURVE",
"35 213 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01214 1061 7 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 434;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"156 222 OFFCURVE",
"278 226 OFFCURVE",
"417 226 CURVE SMOOTH",
"481 226 LINE SMOOTH",
"497 225 OFFCURVE",
"510 225 OFFCURVE",
"520 225 CURVE SMOOTH",
"540 225 LINE SMOOTH",
"552 225 OFFCURVE",
"558 227 OFFCURVE",
"558 232 CURVE SMOOTH",
"558 235 OFFCURVE",
"553 238 OFFCURVE",
"543 239 CURVE SMOOTH",
"492 243 LINE SMOOTH",
"428 249 OFFCURVE",
"352 251 OFFCURVE",
"263 251 CURVE SMOOTH",
"205 251 OFFCURVE",
"141 250 OFFCURVE",
"72 248 CURVE",
"46 238 OFFCURVE",
"33 228 OFFCURVE",
"33 219 CURVE SMOOTH",
"33 215 OFFCURVE",
"38 213 OFFCURVE",
"47 213 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01214 1061 7 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 578;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = hyphentwo;
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 325;
}
);
unicode = 2010;
},
{
glyphname = underscore;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"50 -73 OFFCURVE",
"82 -72 OFFCURVE",
"122 -71 CURVE SMOOTH",
"184 -68 LINE SMOOTH",
"200 -67 OFFCURVE",
"212 -67 OFFCURVE",
"219 -67 CURVE SMOOTH",
"418 -62 OFFCURVE",
"603 -60 OFFCURVE",
"786 -60 CURVE",
"793 -53 LINE",
"790 -34 OFFCURVE",
"781 -25 OFFCURVE",
"765 -25 CURVE SMOOTH",
"25 -25 LINE SMOOTH",
"14 -25 OFFCURVE",
"8 -31 OFFCURVE",
"8 -44 CURVE SMOOTH",
"8 -63 OFFCURVE",
"14 -73 OFFCURVE",
"25 -73 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01214 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 806;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = quotesinglbase;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"53 -123 OFFCURVE",
"73 -99 OFFCURVE",
"100 -52 CURVE SMOOTH",
"127 -7 OFFCURVE",
"140 23 OFFCURVE",
"140 40 CURVE SMOOTH",
"140 45 OFFCURVE",
"139 51 OFFCURVE",
"137 56 CURVE",
"137 55 LINE",
"129 67 OFFCURVE",
"121 73 OFFCURVE",
"113 73 CURVE SMOOTH",
"102 73 OFFCURVE",
"92 55 OFFCURVE",
"92 43 CURVE SMOOTH",
"92 40 OFFCURVE",
"93 35 OFFCURVE",
"95 29 CURVE SMOOTH",
"97 23 OFFCURVE",
"98 18 OFFCURVE",
"98 14 CURVE SMOOTH",
"98 -9 OFFCURVE",
"88 -38 OFFCURVE",
"69 -73 CURVE SMOOTH",
"50 -108 OFFCURVE",
"40 -124 OFFCURVE",
"40 -122 CURVE SMOOTH",
"40 -123 OFFCURVE",
"40 -123 OFFCURVE",
"41 -123 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 207;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"109 -123 OFFCURVE",
"129 -99 OFFCURVE",
"156 -52 CURVE SMOOTH",
"183 -7 OFFCURVE",
"196 23 OFFCURVE",
"196 40 CURVE SMOOTH",
"196 45 OFFCURVE",
"195 51 OFFCURVE",
"193 56 CURVE",
"193 55 LINE",
"185 67 OFFCURVE",
"177 73 OFFCURVE",
"169 73 CURVE SMOOTH",
"158 73 OFFCURVE",
"148 55 OFFCURVE",
"148 43 CURVE SMOOTH",
"148 40 OFFCURVE",
"149 35 OFFCURVE",
"151 29 CURVE SMOOTH",
"153 23 OFFCURVE",
"154 18 OFFCURVE",
"154 14 CURVE SMOOTH",
"154 -9 OFFCURVE",
"144 -38 OFFCURVE",
"125 -73 CURVE SMOOTH",
"106 -108 OFFCURVE",
"96 -124 OFFCURVE",
"96 -122 CURVE SMOOTH",
"96 -123 OFFCURVE",
"96 -123 OFFCURVE",
"97 -123 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"25 -123 OFFCURVE",
"45 -99 OFFCURVE",
"72 -52 CURVE SMOOTH",
"98 -7 OFFCURVE",
"111 23 OFFCURVE",
"111 40 CURVE SMOOTH",
"111 47 OFFCURVE",
"110 52 OFFCURVE",
"109 56 CURVE",
"109 55 LINE",
"99 67 OFFCURVE",
"91 73 OFFCURVE",
"85 73 CURVE SMOOTH",
"74 73 OFFCURVE",
"64 55 OFFCURVE",
"64 43 CURVE SMOOTH",
"64 40 OFFCURVE",
"65 35 OFFCURVE",
"67 29 CURVE SMOOTH",
"69 23 OFFCURVE",
"70 18 OFFCURVE",
"70 14 CURVE SMOOTH",
"70 -9 OFFCURVE",
"60 -38 OFFCURVE",
"41 -73 CURVE SMOOTH",
"22 -108 OFFCURVE",
"12 -124 OFFCURVE",
"12 -122 CURVE SMOOTH",
"12 -123 OFFCURVE",
"12 -123 OFFCURVE",
"13 -123 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 207;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = quotedblleft;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"71 336 OFFCURVE",
"87 346 OFFCURVE",
"87 357 CURVE SMOOTH",
"87 358 OFFCURVE",
"86 360 OFFCURVE",
"85 363 CURVE SMOOTH",
"80 377 OFFCURVE",
"77 387 OFFCURVE",
"77 392 CURVE SMOOTH",
"77 408 OFFCURVE",
"83 423 OFFCURVE",
"94 438 CURVE",
"99 443 OFFCURVE",
"105 449 OFFCURVE",
"110 455 CURVE SMOOTH",
"115 461 OFFCURVE",
"120 467 OFFCURVE",
"125 472 CURVE",
"133 483 OFFCURVE",
"137 490 OFFCURVE",
"137 494 CURVE SMOOTH",
"137 495 OFFCURVE",
"136 496 OFFCURVE",
"135 497 CURVE",
"133 497 OFFCURVE",
"130 495 OFFCURVE",
"125 491 CURVE SMOOTH",
"63 443 OFFCURVE",
"31 407 OFFCURVE",
"29 384 CURVE SMOOTH",
"28 373 OFFCURVE",
"30 363 OFFCURVE",
"34 354 CURVE SMOOTH",
"39 342 OFFCURVE",
"46 336 OFFCURVE",
"56 336 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"167 336 OFFCURVE",
"183 346 OFFCURVE",
"183 357 CURVE SMOOTH",
"183 359 OFFCURVE",
"182 364 OFFCURVE",
"179 372 CURVE SMOOTH",
"176 379 OFFCURVE",
"174 386 OFFCURVE",
"174 392 CURVE SMOOTH",
"174 427 OFFCURVE",
"196 446 OFFCURVE",
"215 466 CURVE SMOOTH",
"226 479 OFFCURVE",
"231 489 OFFCURVE",
"231 494 CURVE SMOOTH",
"231 495 OFFCURVE",
"231 495 OFFCURVE",
"230 495 CURVE SMOOTH",
"219 495 OFFCURVE",
"200 480 OFFCURVE",
"171 449 CURVE SMOOTH",
"142 418 OFFCURVE",
"127 396 OFFCURVE",
"126 384 CURVE SMOOTH",
"125 373 OFFCURVE",
"126 363 OFFCURVE",
"130 354 CURVE SMOOTH",
"135 342 OFFCURVE",
"142 336 OFFCURVE",
"152 336 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 230;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"180 336 OFFCURVE",
"184 338 OFFCURVE",
"189 342 CURVE SMOOTH",
"251 390 OFFCURVE",
"283 426 OFFCURVE",
"285 450 CURVE SMOOTH",
"286 470 OFFCURVE",
"277 498 OFFCURVE",
"258 498 CURVE SMOOTH",
"243 498 OFFCURVE",
"227 488 OFFCURVE",
"227 477 CURVE SMOOTH",
"227 476 OFFCURVE",
"228 474 OFFCURVE",
"229 471 CURVE SMOOTH",
"234 461 OFFCURVE",
"236 451 OFFCURVE",
"236 441 CURVE SMOOTH",
"237 416 OFFCURVE",
"178 354 OFFCURVE",
"178 339 CURVE SMOOTH",
"178 337 OFFCURVE",
"178 336 OFFCURVE",
"179 336 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"278 337 OFFCURVE",
"281 339 OFFCURVE",
"286 342 CURVE",
"347 389 OFFCURVE",
"379 425 OFFCURVE",
"381 450 CURVE SMOOTH",
"382 459 OFFCURVE",
"380 469 OFFCURVE",
"377 480 CURVE SMOOTH",
"372 492 OFFCURVE",
"364 498 OFFCURVE",
"355 498 CURVE SMOOTH",
"340 498 OFFCURVE",
"324 488 OFFCURVE",
"324 476 CURVE SMOOTH",
"324 474 OFFCURVE",
"326 469 OFFCURVE",
"329 461 CURVE SMOOTH",
"332 453 OFFCURVE",
"333 446 OFFCURVE",
"333 441 CURVE SMOOTH",
"333 413 OFFCURVE",
"319 386 OFFCURVE",
"292 360 CURVE SMOOTH",
"281 349 OFFCURVE",
"276 342 OFFCURVE",
"276 338 CURVE SMOOTH",
"276 337 OFFCURVE",
"276 337 OFFCURVE",
"277 337 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 322;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"95 328 OFFCURVE",
"111 338 OFFCURVE",
"111 349 CURVE SMOOTH",
"111 350 OFFCURVE",
"110 352 OFFCURVE",
"109 355 CURVE SMOOTH",
"104 369 OFFCURVE",
"101 379 OFFCURVE",
"101 384 CURVE SMOOTH",
"101 401 OFFCURVE",
"108 416 OFFCURVE",
"122 429 CURVE SMOOTH",
"157 462 LINE",
"162 469 OFFCURVE",
"165 476 OFFCURVE",
"165 481 CURVE SMOOTH",
"165 486 OFFCURVE",
"163 488 OFFCURVE",
"160 488 CURVE SMOOTH",
"157 488 OFFCURVE",
"154 486 OFFCURVE",
"149 483 CURVE",
"87 435 OFFCURVE",
"55 399 OFFCURVE",
"53 376 CURVE SMOOTH",
"52 364 OFFCURVE",
"55 351 OFFCURVE",
"63 336 CURVE SMOOTH",
"66 331 OFFCURVE",
"72 328 OFFCURVE",
"79 328 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 126;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"155 337 OFFCURVE",
"158 339 OFFCURVE",
"163 342 CURVE",
"225 390 OFFCURVE",
"257 426 OFFCURVE",
"259 450 CURVE SMOOTH",
"260 470 OFFCURVE",
"252 498 OFFCURVE",
"232 498 CURVE SMOOTH",
"217 498 OFFCURVE",
"201 488 OFFCURVE",
"201 476 CURVE SMOOTH",
"201 474 OFFCURVE",
"203 469 OFFCURVE",
"206 461 CURVE SMOOTH",
"209 453 OFFCURVE",
"210 446 OFFCURVE",
"210 441 CURVE SMOOTH",
"210 411 OFFCURVE",
"177 384 OFFCURVE",
"155 364 CURVE",
"150 357 OFFCURVE",
"147 350 OFFCURVE",
"147 344 CURVE SMOOTH",
"147 339 OFFCURVE",
"149 337 OFFCURVE",
"152 337 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 126;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = guillemetleft;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"165 24 LINE",
"170 34 LINE",
"171 170 LINE",
"256 230 LINE SMOOTH",
"301 264 OFFCURVE",
"326 286 OFFCURVE",
"333 297 CURVE",
"332 304 LINE",
"325 307 LINE SMOOTH",
"322 308 OFFCURVE",
"251 265 OFFCURVE",
"112 179 CURVE",
"117 152 OFFCURVE",
"122 128 OFFCURVE",
"129 101 CURVE SMOOTH",
"136 68 OFFCURVE",
"143 43 OFFCURVE",
"150 24 CURVE",
"158 21 LINE"
);
},
{
closed = 1;
nodes = (
"310 24 LINE",
"315 34 LINE",
"316 170 LINE",
"401 230 LINE SMOOTH",
"422 245 OFFCURVE",
"439 259 OFFCURVE",
"452 270 CURVE SMOOTH",
"465 281 OFFCURVE",
"473 290 OFFCURVE",
"477 297 CURVE",
"476 304 LINE",
"470 307 LINE SMOOTH",
"467 308 OFFCURVE",
"396 265 OFFCURVE",
"257 179 CURVE",
"264 152 OFFCURVE",
"269 126 OFFCURVE",
"274 99 CURVE SMOOTH",
"283 59 OFFCURVE",
"290 34 OFFCURVE",
"295 24 CURVE",
"303 21 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 451;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemetright;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"43 22 LINE",
"248 150 LINE",
"233 227 LINE SMOOTH",
"227 258 OFFCURVE",
"220 284 OFFCURVE",
"212 303 CURVE",
"203 307 LINE",
"195 303 LINE",
"190 294 LINE",
"189 158 LINE",
"107 99 LINE SMOOTH",
"54 60 OFFCURVE",
"27 36 OFFCURVE",
"27 27 CURVE",
"28 23 LINE",
"36 21 LINE"
);
},
{
closed = 1;
nodes = (
"188 22 LINE",
"393 150 LINE",
"371 249 OFFCURVE",
"358 300 OFFCURVE",
"355 303 CURVE",
"347 307 LINE",
"339 303 LINE",
"337 299 OFFCURVE",
"335 286 OFFCURVE",
"334 264 CURVE SMOOTH",
"333 249 OFFCURVE",
"333 228 OFFCURVE",
"334 203 CURVE SMOOTH",
"334 158 LINE",
"249 98 LINE SMOOTH",
"208 67 OFFCURVE",
"182 45 OFFCURVE",
"173 32 CURVE",
"173 23 LINE",
"180 21 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 451;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = guilsinglleft;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"165 24 LINE",
"170 34 LINE",
"171 170 LINE",
"256 230 LINE SMOOTH",
"301 264 OFFCURVE",
"326 286 OFFCURVE",
"333 297 CURVE",
"332 304 LINE",
"325 307 LINE SMOOTH",
"322 308 OFFCURVE",
"251 265 OFFCURVE",
"112 179 CURVE",
"117 152 OFFCURVE",
"122 128 OFFCURVE",
"129 101 CURVE SMOOTH",
"136 68 OFFCURVE",
"143 43 OFFCURVE",
"150 24 CURVE",
"158 21 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 326;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"43 22 LINE",
"248 150 LINE",
"233 227 LINE SMOOTH",
"227 258 OFFCURVE",
"220 284 OFFCURVE",
"212 303 CURVE",
"203 307 LINE",
"195 303 LINE",
"190 294 LINE",
"189 158 LINE",
"107 99 LINE SMOOTH",
"54 60 OFFCURVE",
"27 36 OFFCURVE",
"27 27 CURVE",
"28 23 LINE",
"36 21 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = quotedbl;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"304 332 OFFCURVE",
"308 336 OFFCURVE",
"311 342 CURVE",
"346 391 LINE SMOOTH",
"363 414 OFFCURVE",
"371 434 OFFCURVE",
"372 450 CURVE SMOOTH",
"373 470 OFFCURVE",
"365 498 OFFCURVE",
"345 498 CURVE SMOOTH",
"330 498 OFFCURVE",
"314 488 OFFCURVE",
"314 476 CURVE SMOOTH",
"314 474 OFFCURVE",
"316 469 OFFCURVE",
"319 461 CURVE SMOOTH",
"322 453 OFFCURVE",
"323 446 OFFCURVE",
"323 441 CURVE SMOOTH",
"323 416 OFFCURVE",
"315 386 OFFCURVE",
"299 349 CURVE",
"296 344 OFFCURVE",
"295 340 OFFCURVE",
"295 335 CURVE SMOOTH",
"295 331 OFFCURVE",
"297 330 OFFCURVE",
"300 331 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"204 332 OFFCURVE",
"208 336 OFFCURVE",
"211 342 CURVE",
"246 391 LINE SMOOTH",
"263 414 OFFCURVE",
"271 434 OFFCURVE",
"272 450 CURVE SMOOTH",
"273 470 OFFCURVE",
"265 498 OFFCURVE",
"245 498 CURVE SMOOTH",
"230 498 OFFCURVE",
"214 488 OFFCURVE",
"214 476 CURVE SMOOTH",
"214 474 OFFCURVE",
"216 469 OFFCURVE",
"219 461 CURVE SMOOTH",
"222 453 OFFCURVE",
"223 446 OFFCURVE",
"223 441 CURVE SMOOTH",
"223 416 OFFCURVE",
"215 386 OFFCURVE",
"199 349 CURVE",
"196 344 OFFCURVE",
"195 340 OFFCURVE",
"195 335 CURVE SMOOTH",
"195 331 OFFCURVE",
"197 330 OFFCURVE",
"200 331 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 316;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = quotesingle;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"176 337 OFFCURVE",
"179 339 OFFCURVE",
"184 342 CURVE",
"246 390 OFFCURVE",
"278 426 OFFCURVE",
"280 450 CURVE SMOOTH",
"281 470 OFFCURVE",
"272 498 OFFCURVE",
"253 498 CURVE SMOOTH",
"238 498 OFFCURVE",
"222 488 OFFCURVE",
"222 477 CURVE SMOOTH",
"222 476 OFFCURVE",
"223 474 OFFCURVE",
"224 471 CURVE SMOOTH",
"229 457 OFFCURVE",
"232 447 OFFCURVE",
"232 441 CURVE SMOOTH",
"232 424 OFFCURVE",
"225 410 OFFCURVE",
"211 397 CURVE SMOOTH",
"176 364 LINE",
"171 357 OFFCURVE",
"168 350 OFFCURVE",
"168 344 CURVE SMOOTH",
"168 339 OFFCURVE",
"170 337 OFFCURVE",
"173 337 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 154;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = "leftanglebracket-math";
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"133 -62 OFFCURVE",
"137 -58 OFFCURVE",
"138 -49 CURVE SMOOTH",
"140 -41 OFFCURVE",
"77 211 OFFCURVE",
"64 285 CURVE",
"126 363 OFFCURVE",
"327 609 OFFCURVE",
"330 620 CURVE SMOOTH",
"331 624 OFFCURVE",
"329 626 OFFCURVE",
"324 626 CURVE SMOOTH",
"317 626 OFFCURVE",
"310 624 OFFCURVE",
"303 615 CURVE SMOOTH",
"229 525 OFFCURVE",
"22 296 OFFCURVE",
"21 289 CURVE SMOOTH",
"19 281 OFFCURVE",
"20 279 OFFCURVE",
"21 277 CURVE SMOOTH",
"47 217 OFFCURVE",
"100 -24 OFFCURVE",
"119 -58 CURVE",
"126 -62 LINE"
);
}
);
width = 258;
}
);
unicode = 27E8;
},
{
glyphname = "rightanglebracket-math";
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"93 -62 OFFCURVE",
"100 -60 OFFCURVE",
"107 -51 CURVE SMOOTH",
"181 39 OFFCURVE",
"388 268 OFFCURVE",
"389 275 CURVE SMOOTH",
"391 283 OFFCURVE",
"390 285 OFFCURVE",
"389 287 CURVE SMOOTH",
"363 347 OFFCURVE",
"310 588 OFFCURVE",
"291 622 CURVE",
"284 626 LINE",
"277 626 OFFCURVE",
"273 622 OFFCURVE",
"272 613 CURVE SMOOTH",
"270 605 OFFCURVE",
"333 353 OFFCURVE",
"346 279 CURVE",
"284 201 OFFCURVE",
"83 -45 OFFCURVE",
"80 -56 CURVE SMOOTH",
"79 -60 OFFCURVE",
"81 -62 OFFCURVE",
"86 -62 CURVE SMOOTH"
);
}
);
width = 410;
}
);
unicode = 27E9;
},
{
glyphname = cedi;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"509 446 OFFCURVE",
"477 464 OFFCURVE",
"416 458 CURVE SMOOTH",
"317 450 OFFCURVE",
"188 362 OFFCURVE",
"104 268 CURVE",
"51 258 OFFCURVE",
"12 251 OFFCURVE",
"16 227 CURVE",
"16 224 OFFCURVE",
"19 220 OFFCURVE",
"24 220 CURVE",
"26 221 OFFCURVE",
"31 222 OFFCURVE",
"40 224 CURVE SMOOTH",
"48 225 OFFCURVE",
"58 227 OFFCURVE",
"71 230 CURVE",
"64 222 OFFCURVE",
"59 213 OFFCURVE",
"54 204 CURVE SMOOTH",
"49 195 OFFCURVE",
"44 186 OFFCURVE",
"39 178 CURVE",
"36 177 OFFCURVE",
"33 177 OFFCURVE",
"30 177 CURVE",
"9 173 OFFCURVE",
"-10 169 OFFCURVE",
"-9 146 CURVE SMOOTH",
"-8 139 OFFCURVE",
"-7 139 OFFCURVE",
"1 139 CURVE SMOOTH",
"6 139 OFFCURVE",
"13 140 OFFCURVE",
"22 142 CURVE",
"-22 27 OFFCURVE",
"46 -39 OFFCURVE",
"163 -28 CURVE SMOOTH",
"251 -20 OFFCURVE",
"371 52 OFFCURVE",
"445 129 CURVE SMOOTH",
"453 137 OFFCURVE",
"450 147 OFFCURVE",
"438 139 CURVE",
"371 69 OFFCURVE",
"254 12 OFFCURVE",
"178 4 CURVE SMOOTH",
"73 -4 OFFCURVE",
"38 68 OFFCURVE",
"69 163 CURVE",
"112 174 OFFCURVE",
"176 183 OFFCURVE",
"236 188 CURVE SMOOTH",
"272 191 OFFCURVE",
"305 193 OFFCURVE",
"329 193 CURVE",
"353 214 OFFCURVE",
"284 215 OFFCURVE",
"215 208 CURVE SMOOTH",
"172 205 OFFCURVE",
"128 197 OFFCURVE",
"81 189 CURVE",
"92 208 OFFCURVE",
"109 233 OFFCURVE",
"120 248 CURVE",
"148 256 OFFCURVE",
"185 262 OFFCURVE",
"222 265 CURVE SMOOTH",
"245 268 OFFCURVE",
"268 269 OFFCURVE",
"291 270 CURVE SMOOTH",
"314 271 OFFCURVE",
"335 271 OFFCURVE",
"354 272 CURVE",
"377 295 OFFCURVE",
"313 296 OFFCURVE",
"240 289 CURVE SMOOTH",
"225 287 OFFCURVE",
"209 285 OFFCURVE",
"194 284 CURVE SMOOTH",
"179 283 OFFCURVE",
"163 281 OFFCURVE",
"147 278 CURVE",
"216 353 OFFCURVE",
"332 428 OFFCURVE",
"415 442 CURVE SMOOTH",
"496 454 OFFCURVE",
"486 386 OFFCURVE",
"471 329 CURVE",
"497 332 OFFCURVE",
"516 379 OFFCURVE",
"513 404 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"221 -47 OFFCURVE",
"278 -24 OFFCURVE",
"345 28 CURVE SMOOTH",
"354 35 OFFCURVE",
"397 74 OFFCURVE",
"397 83 CURVE SMOOTH",
"397 85 OFFCURVE",
"396 89 OFFCURVE",
"391 89 CURVE SMOOTH",
"381 89 OFFCURVE",
"265 -30 OFFCURVE",
"152 -30 CURVE SMOOTH",
"98 -30 OFFCURVE",
"72 12 OFFCURVE",
"72 68 CURVE SMOOTH",
"72 81 OFFCURVE",
"73 94 OFFCURVE",
"76 108 CURVE SMOOTH",
"103 235 OFFCURVE",
"268 392 OFFCURVE",
"363 392 CURVE SMOOTH",
"370 392 LINE SMOOTH",
"389 392 OFFCURVE",
"422 387 OFFCURVE",
"422 364 CURVE SMOOTH",
"422 344 OFFCURVE",
"406 333 OFFCURVE",
"406 320 CURVE SMOOTH",
"406 314 OFFCURVE",
"410 309 OFFCURVE",
"414 309 CURVE SMOOTH",
"425 309 OFFCURVE",
"436 329 OFFCURVE",
"438 340 CURVE SMOOTH",
"439 347 OFFCURVE",
"440 353 OFFCURVE",
"440 359 CURVE SMOOTH",
"440 396 OFFCURVE",
"410 407 OFFCURVE",
"366 407 CURVE SMOOTH",
"247 407 OFFCURVE",
"56 260 OFFCURVE",
"25 112 CURVE SMOOTH",
"22 98 OFFCURVE",
"21 85 OFFCURVE",
"21 73 CURVE SMOOTH",
"21 -1 OFFCURVE",
"73 -47 OFFCURVE",
"150 -47 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"147 -124 OFFCURVE",
"150 -121 OFFCURVE",
"151 -116 CURVE",
"151 -104 OFFCURVE",
"152 -81 OFFCURVE",
"155 -65 CURVE SMOOTH",
"170 27 OFFCURVE",
"232 137 OFFCURVE",
"275 215 CURVE SMOOTH",
"322 305 OFFCURVE",
"376 390 OFFCURVE",
"416 450 CURVE SMOOTH",
"422 459 OFFCURVE",
"431 474 OFFCURVE",
"431 476 CURVE",
"432 478 OFFCURVE",
"427 480 OFFCURVE",
"417 480 CURVE SMOOTH",
"408 480 OFFCURVE",
"398 468 OFFCURVE",
"391 460 CURVE SMOOTH",
"312 355 OFFCURVE",
"154 48 OFFCURVE",
"135 -72 CURVE SMOOTH",
"134 -80 OFFCURVE",
"132 -92 OFFCURVE",
"132 -103 CURVE SMOOTH",
"132 -114 OFFCURVE",
"134 -124 OFFCURVE",
"141 -124 CURVE SMOOTH"
);
}
);
width = 460;
}
);
unicode = 20B5;
},
{
glyphname = cent;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"25 74 OFFCURVE",
"42 85 OFFCURVE",
"60 106 CURVE SMOOTH",
"90 138 LINE SMOOTH",
"104 153 OFFCURVE",
"116 169 OFFCURVE",
"125 187 CURVE",
"150 194 OFFCURVE",
"188 210 OFFCURVE",
"237 237 CURVE SMOOTH",
"276 258 OFFCURVE",
"302 272 OFFCURVE",
"315 283 CURVE SMOOTH",
"321 288 OFFCURVE",
"324 292 OFFCURVE",
"324 296 CURVE SMOOTH",
"324 299 OFFCURVE",
"321 301 OFFCURVE",
"316 301 CURVE SMOOTH",
"312 301 OFFCURVE",
"307 299 OFFCURVE",
"302 296 CURVE SMOOTH",
"212 243 OFFCURVE",
"145 213 OFFCURVE",
"101 208 CURVE SMOOTH",
"79 205 OFFCURVE",
"68 214 OFFCURVE",
"68 237 CURVE SMOOTH",
"68 244 OFFCURVE",
"70 252 OFFCURVE",
"73 262 CURVE SMOOTH",
"84 295 OFFCURVE",
"106 329 OFFCURVE",
"141 365 CURVE SMOOTH",
"176 400 OFFCURVE",
"215 428 OFFCURVE",
"256 449 CURVE SMOOTH",
"268 455 OFFCURVE",
"280 458 OFFCURVE",
"292 458 CURVE SMOOTH",
"304 458 OFFCURVE",
"315 455 OFFCURVE",
"327 449 CURVE SMOOTH",
"330 448 OFFCURVE",
"332 447 OFFCURVE",
"334 447 CURVE SMOOTH",
"346 447 OFFCURVE",
"360 464 OFFCURVE",
"360 477 CURVE SMOOTH",
"360 482 OFFCURVE",
"358 486 OFFCURVE",
"353 489 CURVE",
"350 490 OFFCURVE",
"344 491 OFFCURVE",
"336 491 CURVE SMOOTH",
"329 491 OFFCURVE",
"319 490 OFFCURVE",
"307 489 CURVE",
"322 518 OFFCURVE",
"345 548 OFFCURVE",
"374 581 CURVE SMOOTH",
"376 583 OFFCURVE",
"377 585 OFFCURVE",
"377 586 CURVE SMOOTH",
"377 589 OFFCURVE",
"375 590 OFFCURVE",
"371 590 CURVE SMOOTH",
"356 590 OFFCURVE",
"339 579 OFFCURVE",
"320 558 CURVE SMOOTH",
"316 554 OFFCURVE",
"306 540 OFFCURVE",
"289 516 CURVE SMOOTH",
"275 498 OFFCURVE",
"262 483 OFFCURVE",
"249 471 CURVE",
"200 448 OFFCURVE",
"155 418 OFFCURVE",
"112 380 CURVE SMOOTH",
"68 340 OFFCURVE",
"40 302 OFFCURVE",
"28 266 CURVE SMOOTH",
"24 254 OFFCURVE",
"22 243 OFFCURVE",
"22 233 CURVE SMOOTH",
"22 202 OFFCURVE",
"40 185 OFFCURVE",
"77 182 CURVE",
"62 151 OFFCURVE",
"38 117 OFFCURVE",
"6 82 CURVE SMOOTH",
"5 81 OFFCURVE",
"4 79 OFFCURVE",
"4 77 CURVE SMOOTH",
"4 75 OFFCURVE",
"6 74 OFFCURVE",
"10 74 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 1070 48 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 20 213 20 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0123 40 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01244 40 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01246 40 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 272;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = colonsign;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"221 -47 OFFCURVE",
"278 -24 OFFCURVE",
"345 28 CURVE SMOOTH",
"354 35 OFFCURVE",
"397 74 OFFCURVE",
"397 83 CURVE SMOOTH",
"397 85 OFFCURVE",
"396 89 OFFCURVE",
"391 89 CURVE SMOOTH",
"381 89 OFFCURVE",
"265 -30 OFFCURVE",
"152 -30 CURVE SMOOTH",
"98 -30 OFFCURVE",
"72 12 OFFCURVE",
"72 68 CURVE SMOOTH",
"72 81 OFFCURVE",
"73 94 OFFCURVE",
"76 108 CURVE SMOOTH",
"103 235 OFFCURVE",
"268 392 OFFCURVE",
"363 392 CURVE SMOOTH",
"370 392 LINE SMOOTH",
"389 392 OFFCURVE",
"422 387 OFFCURVE",
"422 364 CURVE SMOOTH",
"422 344 OFFCURVE",
"406 333 OFFCURVE",
"406 320 CURVE SMOOTH",
"406 314 OFFCURVE",
"410 309 OFFCURVE",
"414 309 CURVE SMOOTH",
"425 309 OFFCURVE",
"436 329 OFFCURVE",
"438 340 CURVE SMOOTH",
"439 347 OFFCURVE",
"440 353 OFFCURVE",
"440 359 CURVE SMOOTH",
"440 396 OFFCURVE",
"410 407 OFFCURVE",
"366 407 CURVE SMOOTH",
"247 407 OFFCURVE",
"56 260 OFFCURVE",
"25 112 CURVE SMOOTH",
"22 98 OFFCURVE",
"21 85 OFFCURVE",
"21 73 CURVE SMOOTH",
"21 -1 OFFCURVE",
"73 -47 OFFCURVE",
"150 -47 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 -124 OFFCURVE",
"98 -121 OFFCURVE",
"99 -116 CURVE",
"99 -104 OFFCURVE",
"100 -81 OFFCURVE",
"103 -65 CURVE SMOOTH",
"118 27 OFFCURVE",
"180 137 OFFCURVE",
"223 215 CURVE SMOOTH",
"270 305 OFFCURVE",
"324 390 OFFCURVE",
"364 450 CURVE SMOOTH",
"370 459 OFFCURVE",
"379 474 OFFCURVE",
"379 476 CURVE",
"380 478 OFFCURVE",
"375 480 OFFCURVE",
"365 480 CURVE SMOOTH",
"356 480 OFFCURVE",
"346 468 OFFCURVE",
"339 460 CURVE SMOOTH",
"260 355 OFFCURVE",
"102 48 OFFCURVE",
"83 -72 CURVE SMOOTH",
"82 -80 OFFCURVE",
"80 -92 OFFCURVE",
"80 -103 CURVE SMOOTH",
"80 -114 OFFCURVE",
"82 -124 OFFCURVE",
"89 -124 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"172 -124 OFFCURVE",
"175 -121 OFFCURVE",
"176 -116 CURVE",
"176 -104 OFFCURVE",
"177 -81 OFFCURVE",
"180 -65 CURVE SMOOTH",
"195 27 OFFCURVE",
"257 137 OFFCURVE",
"300 215 CURVE SMOOTH",
"347 305 OFFCURVE",
"401 390 OFFCURVE",
"441 450 CURVE SMOOTH",
"447 459 OFFCURVE",
"456 474 OFFCURVE",
"456 476 CURVE",
"457 478 OFFCURVE",
"452 480 OFFCURVE",
"442 480 CURVE SMOOTH",
"433 480 OFFCURVE",
"423 468 OFFCURVE",
"416 460 CURVE SMOOTH",
"337 355 OFFCURVE",
"179 48 OFFCURVE",
"160 -72 CURVE SMOOTH",
"159 -80 OFFCURVE",
"157 -92 OFFCURVE",
"157 -103 CURVE SMOOTH",
"157 -114 OFFCURVE",
"159 -124 OFFCURVE",
"166 -124 CURVE SMOOTH"
);
}
);
width = 476;
}
);
unicode = 20A1;
},
{
color = 3;
glyphname = currency;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"255 229 OFFCURVE",
"319 264 OFFCURVE",
"340 317 CURVE SMOOTH",
"346 332 OFFCURVE",
"350 349 OFFCURVE",
"350 364 CURVE SMOOTH",
"350 424 OFFCURVE",
"296 460 OFFCURVE",
"240 460 CURVE SMOOTH",
"193 460 OFFCURVE",
"155 427 OFFCURVE",
"134 387 CURVE SMOOTH",
"127 373 OFFCURVE",
"122 358 OFFCURVE",
"120 341 CURVE SMOOTH",
"119 335 OFFCURVE",
"118 329 OFFCURVE",
"118 322 CURVE SMOOTH",
"118 272 OFFCURVE",
"146 229 OFFCURVE",
"200 229 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"86 200 OFFCURVE",
"93 201 OFFCURVE",
"98 203 CURVE",
"109 217 OFFCURVE",
"140 243 OFFCURVE",
"155 256 CURVE",
"130 286 LINE",
"109 267 OFFCURVE",
"71 235 OFFCURVE",
"50 215 CURVE",
"47 205 OFFCURVE",
"63 200 OFFCURVE",
"79 200 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"380 193 OFFCURVE",
"386 195 OFFCURVE",
"386 201 CURVE SMOOTH",
"386 204 OFFCURVE",
"384 207 OFFCURVE",
"380 212 CURVE SMOOTH",
"365 230 OFFCURVE",
"342 259 OFFCURVE",
"317 291 CURVE",
"282 269 LINE",
"303 247 OFFCURVE",
"330 224 OFFCURVE",
"351 201 CURVE SMOOTH",
"355 196 OFFCURVE",
"365 193 OFFCURVE",
"373 193 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"174 249 OFFCURVE",
"157 288 OFFCURVE",
"157 322 CURVE SMOOTH",
"157 328 OFFCURVE",
"157 336 OFFCURVE",
"159 342 CURVE",
"166 389 OFFCURVE",
"195 438 OFFCURVE",
"239 438 CURVE SMOOTH",
"281 438 OFFCURVE",
"309 402 OFFCURVE",
"309 356 CURVE SMOOTH",
"309 343 OFFCURVE",
"307 330 OFFCURVE",
"302 318 CURVE SMOOTH",
"289 283 OFFCURVE",
"239 249 OFFCURVE",
"207 249 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"186 436 LINE",
"166 457 OFFCURVE",
"144 478 OFFCURVE",
"123 498 CURVE",
"113 492 OFFCURVE",
"109 481 OFFCURVE",
"109 470 CURVE SMOOTH",
"109 463 OFFCURVE",
"111 456 OFFCURVE",
"114 450 CURVE",
"129 438 OFFCURVE",
"145 423 OFFCURVE",
"160 408 CURVE"
);
},
{
closed = 1;
nodes = (
"367 420 OFFCURVE",
"394 452 OFFCURVE",
"420 472 CURVE",
"422 473 OFFCURVE",
"423 478 OFFCURVE",
"423 482 CURVE SMOOTH",
"423 487 OFFCURVE",
"421 493 OFFCURVE",
"416 493 CURVE SMOOTH",
"414 493 OFFCURVE",
"413 493 OFFCURVE",
"412 492 CURVE",
"390 484 OFFCURVE",
"347 455 OFFCURVE",
"305 425 CURVE",
"336 393 LINE"
);
}
);
width = 473;
}
);
unicode = 00A4;
},
{
glyphname = dollar;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"19 61 OFFCURVE",
"21 63 OFFCURVE",
"24 66 CURVE",
"81 150 OFFCURVE",
"124 214 OFFCURVE",
"151 259 CURVE",
"205 267 OFFCURVE",
"232 280 OFFCURVE",
"232 298 CURVE SMOOTH",
"232 309 OFFCURVE",
"219 327 OFFCURVE",
"192 354 CURVE SMOOTH",
"166 381 OFFCURVE",
"153 402 OFFCURVE",
"153 417 CURVE SMOOTH",
"153 450 OFFCURVE",
"171 478 OFFCURVE",
"207 502 CURVE SMOOTH",
"238 522 OFFCURVE",
"267 532 OFFCURVE",
"296 532 CURVE SMOOTH",
"308 532 OFFCURVE",
"316 530 OFFCURVE",
"320 525 CURVE SMOOTH",
"330 514 OFFCURVE",
"341 508 OFFCURVE",
"352 508 CURVE SMOOTH",
"367 508 OFFCURVE",
"374 515 OFFCURVE",
"374 529 CURVE SMOOTH",
"374 535 OFFCURVE",
"372 541 OFFCURVE",
"368 547 CURVE SMOOTH",
"361 558 OFFCURVE",
"348 563 OFFCURVE",
"329 562 CURVE",
"340 587 OFFCURVE",
"351 607 OFFCURVE",
"364 624 CURVE SMOOTH",
"367 629 OFFCURVE",
"369 634 OFFCURVE",
"369 637 CURVE SMOOTH",
"369 640 OFFCURVE",
"368 642 OFFCURVE",
"365 642 CURVE SMOOTH",
"358 642 OFFCURVE",
"340 618 OFFCURVE",
"322 597 CURVE SMOOTH",
"311 585 OFFCURVE",
"301 572 OFFCURVE",
"294 558 CURVE",
"247 550 OFFCURVE",
"204 532 OFFCURVE",
"166 505 CURVE SMOOTH",
"127 476 OFFCURVE",
"108 442 OFFCURVE",
"108 403 CURVE SMOOTH",
"108 393 OFFCURVE",
"118 376 OFFCURVE",
"139 353 CURVE SMOOTH",
"160 330 OFFCURVE",
"170 315 OFFCURVE",
"170 308 CURVE SMOOTH",
"170 305 OFFCURVE",
"169 303 OFFCURVE",
"166 302 CURVE SMOOTH",
"118 288 OFFCURVE",
"75 281 OFFCURVE",
"35 281 CURVE SMOOTH",
"13 281 OFFCURVE",
"2 279 OFFCURVE",
"2 269 CURVE SMOOTH",
"2 266 OFFCURVE",
"4 263 OFFCURVE",
"7 261 CURVE SMOOTH",
"12 257 OFFCURVE",
"35 255 OFFCURVE",
"78 255 CURVE SMOOTH",
"106 255 LINE",
"43 138 LINE SMOOTH",
"29 111 OFFCURVE",
"21 97 OFFCURVE",
"20 95 CURVE SMOOTH",
"16 88 OFFCURVE",
"14 80 OFFCURVE",
"14 71 CURVE SMOOTH",
"14 64 OFFCURVE",
"15 61 OFFCURVE",
"18 61 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1070 45 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 12 213 12 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01237 1063 31 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01262 23 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 313;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = dong;
lastChange = "2021-12-02 23:23:24 +0000";
layers = (
{
components = (
{
name = dcroat;
},
{
name = macronbelowcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 367;
}
);
unicode = 20AB;
},
{
glyphname = euro;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"195 -29 OFFCURVE",
"204 -29 OFFCURVE",
"212 -28 CURVE SMOOTH",
"300 -20 OFFCURVE",
"420 52 OFFCURVE",
"494 129 CURVE SMOOTH",
"497 132 OFFCURVE",
"499 135 OFFCURVE",
"499 138 CURVE SMOOTH",
"499 140 OFFCURVE",
"497 142 OFFCURVE",
"494 142 CURVE SMOOTH",
"493 142 OFFCURVE",
"490 141 OFFCURVE",
"487 139 CURVE",
"415 64 OFFCURVE",
"287 3 OFFCURVE",
"212 3 CURVE SMOOTH",
"141 3 OFFCURVE",
"107 43 OFFCURVE",
"107 101 CURVE SMOOTH",
"107 120 OFFCURVE",
"111 141 OFFCURVE",
"118 163 CURVE",
"161 174 OFFCURVE",
"225 183 OFFCURVE",
"285 188 CURVE SMOOTH",
"321 191 OFFCURVE",
"354 193 OFFCURVE",
"378 193 CURVE",
"381 196 OFFCURVE",
"383 199 OFFCURVE",
"383 201 CURVE SMOOTH",
"383 209 OFFCURVE",
"362 212 OFFCURVE",
"332 212 CURVE SMOOTH",
"312 212 OFFCURVE",
"288 210 OFFCURVE",
"264 208 CURVE SMOOTH",
"221 205 OFFCURVE",
"177 197 OFFCURVE",
"130 189 CURVE",
"141 208 OFFCURVE",
"158 233 OFFCURVE",
"169 248 CURVE",
"197 256 OFFCURVE",
"234 262 OFFCURVE",
"271 265 CURVE SMOOTH",
"294 268 OFFCURVE",
"317 269 OFFCURVE",
"340 270 CURVE SMOOTH",
"363 271 OFFCURVE",
"384 271 OFFCURVE",
"403 272 CURVE",
"406 275 OFFCURVE",
"408 278 OFFCURVE",
"408 280 CURVE SMOOTH",
"408 289 OFFCURVE",
"387 293 OFFCURVE",
"357 293 CURVE SMOOTH",
"337 293 OFFCURVE",
"314 291 OFFCURVE",
"289 289 CURVE SMOOTH",
"274 287 OFFCURVE",
"258 285 OFFCURVE",
"243 284 CURVE SMOOTH",
"228 283 OFFCURVE",
"212 281 OFFCURVE",
"196 278 CURVE",
"265 353 OFFCURVE",
"381 428 OFFCURVE",
"464 442 CURVE SMOOTH",
"471 443 OFFCURVE",
"477 444 OFFCURVE",
"482 444 CURVE SMOOTH",
"519 444 OFFCURVE",
"530 421 OFFCURVE",
"530 391 CURVE SMOOTH",
"530 372 OFFCURVE",
"525 350 OFFCURVE",
"520 329 CURVE",
"546 332 OFFCURVE",
"565 379 OFFCURVE",
"562 404 CURVE SMOOTH",
"559 441 OFFCURVE",
"534 459 OFFCURVE",
"487 459 CURVE SMOOTH",
"480 459 OFFCURVE",
"473 459 OFFCURVE",
"465 458 CURVE SMOOTH",
"366 450 OFFCURVE",
"237 362 OFFCURVE",
"153 268 CURVE",
"100 258 OFFCURVE",
"61 251 OFFCURVE",
"65 227 CURVE",
"65 224 OFFCURVE",
"68 220 OFFCURVE",
"73 220 CURVE",
"75 221 OFFCURVE",
"80 222 OFFCURVE",
"89 224 CURVE SMOOTH",
"97 225 OFFCURVE",
"107 227 OFFCURVE",
"120 230 CURVE",
"113 222 OFFCURVE",
"108 213 OFFCURVE",
"103 204 CURVE SMOOTH",
"98 195 OFFCURVE",
"93 186 OFFCURVE",
"88 178 CURVE",
"85 177 OFFCURVE",
"82 177 OFFCURVE",
"79 177 CURVE",
"59 173 OFFCURVE",
"40 169 OFFCURVE",
"40 148 CURVE SMOOTH",
"40 139 OFFCURVE",
"41 139 OFFCURVE",
"50 139 CURVE SMOOTH",
"55 139 OFFCURVE",
"62 140 OFFCURVE",
"71 142 CURVE",
"62 118 OFFCURVE",
"57 96 OFFCURVE",
"57 77 CURVE SMOOTH",
"57 9 OFFCURVE",
"109 -29 OFFCURVE",
"187 -29 CURVE SMOOTH"
);
}
);
width = 522;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = florin;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-143 -314 OFFCURVE",
"-53 -174 OFFCURVE",
"4 -71 CURVE SMOOTH",
"20 -43 OFFCURVE",
"56 18 OFFCURVE",
"83 66 CURVE SMOOTH",
"114 122 OFFCURVE",
"146 181 OFFCURVE",
"166 220 CURVE",
"185 227 OFFCURVE",
"231 231 OFFCURVE",
"302 232 CURVE",
"309 236 LINE",
"312 239 LINE",
"314 246 OFFCURVE",
"305 250 OFFCURVE",
"286 252 CURVE SMOOTH",
"279 253 OFFCURVE",
"269 254 OFFCURVE",
"256 254 CURVE SMOOTH",
"250 254 OFFCURVE",
"243 253 OFFCURVE",
"235 253 CURVE SMOOTH",
"220 252 OFFCURVE",
"207 253 OFFCURVE",
"188 254 CURVE",
"236 339 OFFCURVE",
"337 490 OFFCURVE",
"433 558 CURVE SMOOTH",
"456 573 OFFCURVE",
"475 581 OFFCURVE",
"490 581 CURVE SMOOTH",
"513 581 OFFCURVE",
"525 568 OFFCURVE",
"525 542 CURVE SMOOTH",
"525 531 OFFCURVE",
"522 517 OFFCURVE",
"518 501 CURVE SMOOTH",
"516 491 OFFCURVE",
"515 483 OFFCURVE",
"515 478 CURVE SMOOTH",
"515 472 OFFCURVE",
"516 469 OFFCURVE",
"519 469 CURVE SMOOTH",
"527 469 OFFCURVE",
"533 476 OFFCURVE",
"538 491 CURVE",
"545 500 OFFCURVE",
"548 510 OFFCURVE",
"551 517 CURVE SMOOTH",
"553 524 OFFCURVE",
"553 531 OFFCURVE",
"553 538 CURVE SMOOTH",
"553 553 OFFCURVE",
"549 566 OFFCURVE",
"540 576 CURVE",
"525 589 OFFCURVE",
"508 597 OFFCURVE",
"484 597 CURVE SMOOTH",
"444 597 OFFCURVE",
"399 584 OFFCURVE",
"354 540 CURVE",
"270 447 OFFCURVE",
"211 351 OFFCURVE",
"150 251 CURVE",
"121 246 OFFCURVE",
"98 240 OFFCURVE",
"81 235 CURVE SMOOTH",
"62 229 OFFCURVE",
"53 223 OFFCURVE",
"53 218 CURVE SMOOTH",
"53 215 OFFCURVE",
"56 214 OFFCURVE",
"62 213 CURVE SMOOTH",
"67 212 OFFCURVE",
"76 212 OFFCURVE",
"87 213 CURVE SMOOTH",
"98 214 OFFCURVE",
"111 216 OFFCURVE",
"127 217 CURVE",
"115 198 OFFCURVE",
"91 151 OFFCURVE",
"72 115 CURVE SMOOTH",
"48 70 OFFCURVE",
"19 16 OFFCURVE",
"-12 -29 CURVE SMOOTH",
"-85 -140 OFFCURVE",
"-151 -221 OFFCURVE",
"-190 -253 CURVE SMOOTH",
"-223 -280 OFFCURVE",
"-251 -294 OFFCURVE",
"-272 -294 CURVE SMOOTH",
"-291 -294 OFFCURVE",
"-300 -276 OFFCURVE",
"-303 -251 CURVE",
"-298 -220 LINE SMOOTH",
"-297 -213 OFFCURVE",
"-297 -208 OFFCURVE",
"-297 -204 CURVE SMOOTH",
"-297 -197 OFFCURVE",
"-298 -193 OFFCURVE",
"-301 -193 CURVE SMOOTH",
"-312 -193 OFFCURVE",
"-321 -207 OFFCURVE",
"-329 -235 CURVE SMOOTH",
"-331 -243 OFFCURVE",
"-332 -250 OFFCURVE",
"-332 -256 CURVE SMOOTH",
"-332 -270 OFFCURVE",
"-328 -281 OFFCURVE",
"-320 -291 CURVE SMOOTH",
"-309 -306 OFFCURVE",
"-292 -314 OFFCURVE",
"-268 -314 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01239 1073 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01219 1061 27 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01251 1062 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01261 39 75 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 245;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = franc;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"37 -39 OFFCURVE",
"67 -26 OFFCURVE",
"68 -16 CURVE SMOOTH",
"68 -11 OFFCURVE",
"67 -4 OFFCURVE",
"68 2 CURVE SMOOTH",
"74 46 OFFCURVE",
"103 133 OFFCURVE",
"121 178 CURVE",
"139 178 OFFCURVE",
"296 180 OFFCURVE",
"321 187 CURVE SMOOTH",
"329 189 OFFCURVE",
"332 192 OFFCURVE",
"332 194 CURVE SMOOTH",
"332 199 OFFCURVE",
"321 203 OFFCURVE",
"306 203 CURVE SMOOTH",
"129 203 LINE",
"132 222 OFFCURVE",
"209 387 OFFCURVE",
"221 393 CURVE SMOOTH",
"229 398 OFFCURVE",
"257 398 OFFCURVE",
"266 398 CURVE SMOOTH",
"299 398 OFFCURVE",
"331 395 OFFCURVE",
"362 393 CURVE SMOOTH",
"371 393 OFFCURVE",
"379 392 OFFCURVE",
"386 392 CURVE SMOOTH",
"390 392 OFFCURVE",
"394 392 OFFCURVE",
"397 393 CURVE",
"389 379 OFFCURVE",
"374 334 OFFCURVE",
"374 325 CURVE SMOOTH",
"374 322 OFFCURVE",
"375 317 OFFCURVE",
"378 317 CURVE SMOOTH",
"383 317 OFFCURVE",
"387 325 OFFCURVE",
"387 328 CURVE",
"399 352 OFFCURVE",
"410 386 OFFCURVE",
"440 402 CURVE",
"443 403 OFFCURVE",
"446 404 OFFCURVE",
"446 408 CURVE SMOOTH",
"446 415 OFFCURVE",
"438 428 OFFCURVE",
"430 428 CURVE SMOOTH",
"422 428 OFFCURVE",
"422 417 OFFCURVE",
"399 417 CURVE SMOOTH",
"394 417 LINE SMOOTH",
"329 417 OFFCURVE",
"255 419 OFFCURVE",
"191 419 CURVE SMOOTH",
"170 419 OFFCURVE",
"138 417 OFFCURVE",
"138 403 CURVE SMOOTH",
"138 398 OFFCURVE",
"143 397 OFFCURVE",
"148 397 CURVE SMOOTH",
"156 397 LINE SMOOTH",
"162 397 OFFCURVE",
"168 397 OFFCURVE",
"168 392 CURVE SMOOTH",
"168 391 LINE SMOOTH",
"166 380 OFFCURVE",
"154 347 OFFCURVE",
"149 334 CURVE SMOOTH",
"132 287 OFFCURVE",
"125 273 OFFCURVE",
"106 227 CURVE",
"104 226 OFFCURVE",
"97 206 OFFCURVE",
"97 205 CURVE",
"93 202 OFFCURVE",
"73 206 OFFCURVE",
"73 196 CURVE SMOOTH",
"73 190 OFFCURVE",
"84 189 OFFCURVE",
"84 182 CURVE SMOOTH",
"84 181 LINE",
"54 105 LINE SMOOTH",
"38 65 OFFCURVE",
"23 22 OFFCURVE",
"19 -20 CURVE SMOOTH",
"18 -29 OFFCURVE",
"18 -39 OFFCURVE",
"25 -39 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"22 72 OFFCURVE",
"41 72 OFFCURVE",
"58 73 CURVE SMOOTH",
"97 76 OFFCURVE",
"135 79 OFFCURVE",
"173 79 CURVE SMOOTH",
"176 79 OFFCURVE",
"179 80 OFFCURVE",
"179 84 CURVE SMOOTH",
"179 86 OFFCURVE",
"178 87 OFFCURVE",
"176 88 CURVE SMOOTH",
"154 99 OFFCURVE",
"102 99 OFFCURVE",
"79 99 CURVE SMOOTH",
"49 99 OFFCURVE",
"19 98 OFFCURVE",
"-11 94 CURVE",
"-13 92 LINE",
"-12 84 OFFCURVE",
"0 71 OFFCURVE",
"6 68 CURVE"
);
}
);
width = 396;
}
);
note = franc;
unicode = 20A3;
},
{
glyphname = guarani;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"221 -47 OFFCURVE",
"278 -24 OFFCURVE",
"345 28 CURVE SMOOTH",
"354 35 OFFCURVE",
"397 74 OFFCURVE",
"397 83 CURVE SMOOTH",
"397 85 OFFCURVE",
"396 89 OFFCURVE",
"391 89 CURVE SMOOTH",
"381 89 OFFCURVE",
"265 -30 OFFCURVE",
"152 -30 CURVE SMOOTH",
"98 -30 OFFCURVE",
"72 12 OFFCURVE",
"72 68 CURVE SMOOTH",
"72 81 OFFCURVE",
"73 94 OFFCURVE",
"76 108 CURVE SMOOTH",
"103 235 OFFCURVE",
"268 392 OFFCURVE",
"363 392 CURVE SMOOTH",
"370 392 LINE SMOOTH",
"389 392 OFFCURVE",
"422 387 OFFCURVE",
"422 364 CURVE SMOOTH",
"422 344 OFFCURVE",
"406 333 OFFCURVE",
"406 320 CURVE SMOOTH",
"406 314 OFFCURVE",
"410 309 OFFCURVE",
"414 309 CURVE SMOOTH",
"425 309 OFFCURVE",
"436 329 OFFCURVE",
"438 340 CURVE SMOOTH",
"439 347 OFFCURVE",
"440 353 OFFCURVE",
"440 359 CURVE SMOOTH",
"440 396 OFFCURVE",
"410 407 OFFCURVE",
"366 407 CURVE SMOOTH",
"247 407 OFFCURVE",
"56 260 OFFCURVE",
"25 112 CURVE SMOOTH",
"22 98 OFFCURVE",
"21 85 OFFCURVE",
"21 73 CURVE SMOOTH",
"21 -1 OFFCURVE",
"73 -47 OFFCURVE",
"150 -47 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"359 -56 OFFCURVE",
"371 -49 OFFCURVE",
"377 -47 CURVE SMOOTH",
"386 -43 OFFCURVE",
"398 -34 OFFCURVE",
"398 -24 CURVE SMOOTH",
"398 -13 OFFCURVE",
"384 -24 OFFCURVE",
"384 -2 CURVE",
"421 111 LINE",
"431 133 LINE",
"438 141 OFFCURVE",
"498 143 OFFCURVE",
"498 152 CURVE SMOOTH",
"498 156 OFFCURVE",
"490 155 OFFCURVE",
"489 155 CURVE SMOOTH",
"424 155 OFFCURVE",
"292 153 OFFCURVE",
"229 150 CURVE",
"219 128 LINE",
"399 133 LINE",
"349 -47 LINE",
"349 -50 OFFCURVE",
"349 -56 OFFCURVE",
"353 -56 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"147 -124 OFFCURVE",
"150 -121 OFFCURVE",
"151 -116 CURVE",
"151 -104 OFFCURVE",
"152 -81 OFFCURVE",
"155 -65 CURVE SMOOTH",
"170 27 OFFCURVE",
"232 137 OFFCURVE",
"275 215 CURVE SMOOTH",
"322 305 OFFCURVE",
"376 390 OFFCURVE",
"416 450 CURVE SMOOTH",
"422 459 OFFCURVE",
"431 474 OFFCURVE",
"431 476 CURVE",
"432 478 OFFCURVE",
"427 480 OFFCURVE",
"417 480 CURVE SMOOTH",
"408 480 OFFCURVE",
"398 468 OFFCURVE",
"391 460 CURVE SMOOTH",
"312 355 OFFCURVE",
"154 48 OFFCURVE",
"135 -72 CURVE SMOOTH",
"134 -80 OFFCURVE",
"132 -92 OFFCURVE",
"132 -103 CURVE SMOOTH",
"132 -114 OFFCURVE",
"134 -124 OFFCURVE",
"141 -124 CURVE SMOOTH"
);
}
);
width = 498;
}
);
unicode = 20B2;
},
{
glyphname = kip;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"37 -39 OFFCURVE",
"67 -26 OFFCURVE",
"68 -16 CURVE SMOOTH",
"68 -11 OFFCURVE",
"67 -4 OFFCURVE",
"68 2 CURVE SMOOTH",
"74 46 OFFCURVE",
"103 133 OFFCURVE",
"121 178 CURVE",
"139 178 OFFCURVE",
"296 180 OFFCURVE",
"321 187 CURVE SMOOTH",
"342 193 OFFCURVE",
"330 203 OFFCURVE",
"306 203 CURVE SMOOTH",
"284 203 OFFCURVE",
"131 203 OFFCURVE",
"129 203 CURVE",
"132 222 OFFCURVE",
"209 387 OFFCURVE",
"221 393 CURVE SMOOTH",
"229 398 OFFCURVE",
"257 398 OFFCURVE",
"266 398 CURVE SMOOTH",
"299 398 OFFCURVE",
"331 395 OFFCURVE",
"362 393 CURVE SMOOTH",
"371 393 OFFCURVE",
"379 392 OFFCURVE",
"386 392 CURVE SMOOTH",
"390 392 OFFCURVE",
"394 392 OFFCURVE",
"397 393 CURVE",
"390 380 OFFCURVE",
"376 341 OFFCURVE",
"374 328 CURVE SMOOTH",
"373 325 OFFCURVE",
"374 317 OFFCURVE",
"378 317 CURVE SMOOTH",
"383 317 OFFCURVE",
"387 325 OFFCURVE",
"387 328 CURVE",
"399 352 OFFCURVE",
"410 386 OFFCURVE",
"440 402 CURVE SMOOTH",
"443 403 OFFCURVE",
"445 404 OFFCURVE",
"446 407 CURVE",
"447 414 OFFCURVE",
"438 428 OFFCURVE",
"430 428 CURVE SMOOTH",
"422 428 OFFCURVE",
"422 417 OFFCURVE",
"399 417 CURVE SMOOTH",
"394 417 LINE SMOOTH",
"329 417 OFFCURVE",
"255 419 OFFCURVE",
"191 419 CURVE SMOOTH",
"171 419 OFFCURVE",
"139 417 OFFCURVE",
"138 404 CURVE",
"137 398 OFFCURVE",
"142 397 OFFCURVE",
"148 397 CURVE SMOOTH",
"156 397 LINE SMOOTH",
"163 397 OFFCURVE",
"169 397 OFFCURVE",
"168 391 CURVE SMOOTH",
"166 380 OFFCURVE",
"154 347 OFFCURVE",
"149 334 CURVE SMOOTH",
"132 287 OFFCURVE",
"125 273 OFFCURVE",
"106 227 CURVE",
"104 226 OFFCURVE",
"97 206 OFFCURVE",
"97 205 CURVE",
"93 202 OFFCURVE",
"75 206 OFFCURVE",
"73 197 CURVE SMOOTH",
"72 190 OFFCURVE",
"85 189 OFFCURVE",
"84 181 CURVE",
"54 105 LINE SMOOTH",
"38 65 OFFCURVE",
"23 22 OFFCURVE",
"19 -20 CURVE SMOOTH",
"18 -29 OFFCURVE",
"18 -39 OFFCURVE",
"25 -39 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"374 -36 OFFCURVE",
"386 -28 OFFCURVE",
"394 -22 CURVE SMOOTH",
"400 -18 OFFCURVE",
"403 -14 OFFCURVE",
"403 -11 CURVE SMOOTH",
"403 -10 OFFCURVE",
"402 -9 OFFCURVE",
"399 -9 CURVE SMOOTH",
"395 -9 LINE",
"385 -12 OFFCURVE",
"379 -14 OFFCURVE",
"368 -14 CURVE SMOOTH",
"292 -14 OFFCURVE",
"193 85 OFFCURVE",
"151 175 CURVE",
"179 198 OFFCURVE",
"215 221 OFFCURVE",
"289 275 CURVE SMOOTH",
"354 322 OFFCURVE",
"433 362 OFFCURVE",
"478 390 CURVE SMOOTH",
"489 397 OFFCURVE",
"500 416 OFFCURVE",
"502 428 CURVE SMOOTH",
"502 431 OFFCURVE",
"502 434 OFFCURVE",
"497 434 CURVE SMOOTH",
"471 434 OFFCURVE",
"170 214 OFFCURVE",
"122 187 CURVE",
"138 224 OFFCURVE",
"155 269 OFFCURVE",
"177 312 CURVE SMOOTH",
"193 343 OFFCURVE",
"212 373 OFFCURVE",
"229 403 CURVE SMOOTH",
"230 405 LINE SMOOTH",
"231 408 OFFCURVE",
"222 408 OFFCURVE",
"219 408 CURVE SMOOTH",
"209 408 OFFCURVE",
"180 406 OFFCURVE",
"174 396 CURVE SMOOTH",
"170 391 OFFCURVE",
"169 385 OFFCURVE",
"167 379 CURVE SMOOTH",
"96 216 OFFCURVE",
"49 94 OFFCURVE",
"24 1 CURVE SMOOTH",
"22 -8 OFFCURVE",
"20 -15 OFFCURVE",
"20 -20 CURVE SMOOTH",
"20 -27 LINE SMOOTH",
"20 -31 OFFCURVE",
"22 -33 OFFCURVE",
"26 -33 CURVE SMOOTH",
"40 -33 OFFCURVE",
"60 -21 OFFCURVE",
"64 -10 CURVE SMOOTH",
"67 -2 OFFCURVE",
"68 4 OFFCURVE",
"70 10 CURVE SMOOTH",
"80 46 LINE SMOOTH",
"91 87 OFFCURVE",
"103 127 OFFCURVE",
"113 157 CURVE",
"149 100 OFFCURVE",
"260 -36 OFFCURVE",
"356 -36 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"54 165 OFFCURVE",
"164 167 OFFCURVE",
"204 167 CURVE SMOOTH",
"244 167 OFFCURVE",
"371 168 OFFCURVE",
"409 173 CURVE",
"409 184 OFFCURVE",
"397 188 OFFCURVE",
"375 189 CURVE SMOOTH",
"332 190 OFFCURVE",
"208 190 OFFCURVE",
"153 190 CURVE SMOOTH",
"76 190 OFFCURVE",
"37 188 OFFCURVE",
"30 186 CURVE SMOOTH",
"20 184 OFFCURVE",
"16 180 OFFCURVE",
"16 177 CURVE SMOOTH",
"16 169 OFFCURVE",
"21 165 OFFCURVE",
"43 165 CURVE SMOOTH"
);
}
);
width = 495;
}
);
unicode = 20AD;
},
{
glyphname = lira;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"452 -43 OFFCURVE",
"521 6 OFFCURVE",
"521 58 CURVE SMOOTH",
"521 74 OFFCURVE",
"514 90 OFFCURVE",
"500 104 CURVE SMOOTH",
"494 110 OFFCURVE",
"483 104 OFFCURVE",
"483 98 CURVE SMOOTH",
"483 94 LINE",
"497 75 OFFCURVE",
"503 58 OFFCURVE",
"503 45 CURVE SMOOTH",
"503 -1 OFFCURVE",
"433 -14 OFFCURVE",
"375 -14 CURVE SMOOTH",
"297 -14 OFFCURVE",
"226 13 OFFCURVE",
"150 30 CURVE",
"163 53 OFFCURVE",
"170 69 OFFCURVE",
"178 93 CURVE SMOOTH",
"204 170 OFFCURVE",
"304 403 OFFCURVE",
"405 403 CURVE SMOOTH",
"435 403 OFFCURVE",
"450 389 OFFCURVE",
"450 363 CURVE SMOOTH",
"450 334 OFFCURVE",
"429 289 OFFCURVE",
"385 239 CURVE SMOOTH",
"358 209 OFFCURVE",
"322 191 OFFCURVE",
"322 188 CURVE SMOOTH",
"322 185 OFFCURVE",
"322 184 OFFCURVE",
"330 184 CURVE SMOOTH",
"346 184 OFFCURVE",
"375 196 OFFCURVE",
"402 222 CURVE SMOOTH",
"455 272 OFFCURVE",
"482 322 OFFCURVE",
"482 359 CURVE SMOOTH",
"482 395 OFFCURVE",
"458 418 OFFCURVE",
"409 418 CURVE SMOOTH",
"225 418 OFFCURVE",
"186 178 OFFCURVE",
"119 36 CURVE",
"91 44 OFFCURVE",
"59 52 OFFCURVE",
"28 52 CURVE SMOOTH",
"13 52 OFFCURVE",
"-9 41 OFFCURVE",
"-9 25 CURVE SMOOTH",
"-9 -2 OFFCURVE",
"24 -29 OFFCURVE",
"74 -29 CURVE SMOOTH",
"99 -29 OFFCURVE",
"124 -14 OFFCURVE",
"135 3 CURVE",
"205 -14 OFFCURVE",
"296 -43 OFFCURVE",
"370 -43 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"39 -18 OFFCURVE",
"20 3 OFFCURVE",
"20 16 CURVE SMOOTH",
"20 22 OFFCURVE",
"25 28 OFFCURVE",
"34 28 CURVE SMOOTH",
"58 28 OFFCURVE",
"85 19 OFFCURVE",
"108 11 CURVE",
"106 -3 OFFCURVE",
"85 -18 OFFCURVE",
"67 -18 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"118 89 OFFCURVE",
"137 89 OFFCURVE",
"154 90 CURVE SMOOTH",
"193 93 OFFCURVE",
"231 96 OFFCURVE",
"269 96 CURVE SMOOTH",
"272 96 OFFCURVE",
"275 97 OFFCURVE",
"275 101 CURVE SMOOTH",
"275 103 OFFCURVE",
"274 104 OFFCURVE",
"272 105 CURVE SMOOTH",
"250 116 OFFCURVE",
"198 116 OFFCURVE",
"175 116 CURVE SMOOTH",
"145 116 OFFCURVE",
"115 115 OFFCURVE",
"85 111 CURVE",
"83 109 LINE",
"84 101 OFFCURVE",
"96 88 OFFCURVE",
"102 85 CURVE"
);
},
{
closed = 1;
nodes = (
"136 150 OFFCURVE",
"156 150 OFFCURVE",
"173 151 CURVE SMOOTH",
"211 154 OFFCURVE",
"249 157 OFFCURVE",
"287 157 CURVE SMOOTH",
"291 157 OFFCURVE",
"294 157 OFFCURVE",
"294 161 CURVE SMOOTH",
"294 164 OFFCURVE",
"293 164 OFFCURVE",
"291 165 CURVE SMOOTH",
"268 176 OFFCURVE",
"216 177 OFFCURVE",
"193 177 CURVE SMOOTH",
"164 177 OFFCURVE",
"133 175 OFFCURVE",
"104 171 CURVE",
"102 169 LINE",
"103 161 OFFCURVE",
"114 148 OFFCURVE",
"120 145 CURVE"
);
}
);
width = 586;
}
);
note = lira;
unicode = 20A4;
},
{
glyphname = liraTurkish;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"134 -21 OFFCURVE",
"166 -14 OFFCURVE",
"193 1 CURVE SMOOTH",
"236 25 OFFCURVE",
"276 67 OFFCURVE",
"303 109 CURVE SMOOTH",
"320 136 OFFCURVE",
"344 175 OFFCURVE",
"344 194 CURVE SMOOTH",
"344 208 OFFCURVE",
"338 214 OFFCURVE",
"332 214 CURVE SMOOTH",
"328 214 OFFCURVE",
"323 210 OFFCURVE",
"321 203 CURVE SMOOTH",
"312 179 OFFCURVE",
"292 139 OFFCURVE",
"276 113 CURVE SMOOTH",
"238 46 OFFCURVE",
"186 -4 OFFCURVE",
"117 -4 CURVE SMOOTH",
"107 -4 OFFCURVE",
"96 -3 OFFCURVE",
"85 -1 CURVE SMOOTH",
"71 2 OFFCURVE",
"66 9 OFFCURVE",
"66 19 CURVE SMOOTH",
"66 25 OFFCURVE",
"68 32 OFFCURVE",
"71 40 CURVE SMOOTH",
"112 136 OFFCURVE",
"227 390 OFFCURVE",
"238 407 CURVE SMOOTH",
"239 408 OFFCURVE",
"240 409 OFFCURVE",
"240 411 CURVE SMOOTH",
"240 416 OFFCURVE",
"233 416 OFFCURVE",
"228 416 CURVE SMOOTH",
"214 416 OFFCURVE",
"191 412 OFFCURVE",
"186 402 CURVE SMOOTH",
"182 394 OFFCURVE",
"181 384 OFFCURVE",
"177 375 CURVE SMOOTH",
"156 326 LINE",
"27 28 LINE",
"26 24 OFFCURVE",
"26 21 OFFCURVE",
"26 18 CURVE SMOOTH",
"26 0 OFFCURVE",
"40 -10 OFFCURVE",
"57 -15 CURVE SMOOTH",
"71 -19 OFFCURVE",
"87 -21 OFFCURVE",
"104 -21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"7 104 OFFCURVE",
"18 105 OFFCURVE",
"31 108 CURVE SMOOTH",
"50 114 OFFCURVE",
"166 157 OFFCURVE",
"193 169 CURVE SMOOTH",
"203 173 OFFCURVE",
"209 180 OFFCURVE",
"209 184 CURVE SMOOTH",
"209 186 OFFCURVE",
"208 187 OFFCURVE",
"205 187 CURVE",
"153 173 OFFCURVE",
"83 152 OFFCURVE",
"32 139 CURVE SMOOTH",
"11 135 OFFCURVE",
"-1 123 OFFCURVE",
"0 104 CURVE"
);
},
{
closed = 1;
nodes = (
"25 179 OFFCURVE",
"36 180 OFFCURVE",
"49 183 CURVE SMOOTH",
"68 189 OFFCURVE",
"184 232 OFFCURVE",
"211 244 CURVE SMOOTH",
"221 248 OFFCURVE",
"227 255 OFFCURVE",
"227 259 CURVE SMOOTH",
"227 261 OFFCURVE",
"226 262 OFFCURVE",
"223 262 CURVE",
"171 248 OFFCURVE",
"101 227 OFFCURVE",
"50 214 CURVE SMOOTH",
"29 210 OFFCURVE",
"17 198 OFFCURVE",
"18 179 CURVE"
);
}
);
width = 364;
}
);
unicode = 20BA;
},
{
glyphname = manat;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"87 -13 LINE",
"62 21 OFFCURVE",
"51 64 OFFCURVE",
"51 110 CURVE SMOOTH",
"51 243 OFFCURVE",
"145 399 OFFCURVE",
"268 399 CURVE SMOOTH",
"361 399 OFFCURVE",
"403 331 OFFCURVE",
"403 246 CURVE SMOOTH",
"403 159 OFFCURVE",
"359 55 OFFCURVE",
"280 -13 CURVE",
"300 -13 LINE",
"389 40 OFFCURVE",
"453 203 OFFCURVE",
"453 267 CURVE SMOOTH",
"453 364 OFFCURVE",
"373 413 OFFCURVE",
"272 413 CURVE SMOOTH",
"164 413 OFFCURVE",
"74 373 OFFCURVE",
"33 246 CURVE SMOOTH",
"25 219 OFFCURVE",
"20 183 OFFCURVE",
"20 146 CURVE SMOOTH",
"20 83 OFFCURVE",
"34 17 OFFCURVE",
"70 -13 CURVE"
);
},
{
closed = 1;
nodes = (
"197 15 OFFCURVE",
"203 19 OFFCURVE",
"204 26 CURVE SMOOTH",
"212 118 OFFCURVE",
"245 318 OFFCURVE",
"304 455 CURVE SMOOTH",
"307 463 OFFCURVE",
"312 476 OFFCURVE",
"311 477 CURVE",
"311 478 OFFCURVE",
"308 479 OFFCURVE",
"303 479 CURVE SMOOTH",
"296 479 LINE",
"286 477 OFFCURVE",
"280 467 OFFCURVE",
"275 459 CURVE SMOOTH",
"227 368 OFFCURVE",
"190 118 OFFCURVE",
"185 22 CURVE",
"184 17 OFFCURVE",
"187 15 OFFCURVE",
"192 15 CURVE SMOOTH"
);
}
);
width = 473;
}
);
unicode = 20BC;
},
{
glyphname = naira;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"400 -50 OFFCURVE",
"416 -17 OFFCURVE",
"417 -7 CURVE SMOOTH",
"418 -1 OFFCURVE",
"417 -2 OFFCURVE",
"414 0 CURVE",
"411 5 OFFCURVE",
"416 34 OFFCURVE",
"418 39 CURVE SMOOTH",
"454 152 OFFCURVE",
"507 312 OFFCURVE",
"545 393 CURVE SMOOTH",
"554 412 OFFCURVE",
"562 434 OFFCURVE",
"562 444 CURVE SMOOTH",
"562 448 OFFCURVE",
"559 454 OFFCURVE",
"553 454 CURVE SMOOTH",
"547 454 OFFCURVE",
"536 452 OFFCURVE",
"527 436 CURVE SMOOTH",
"477 343 OFFCURVE",
"419 123 OFFCURVE",
"393 16 CURVE",
"322 54 OFFCURVE",
"260 305 OFFCURVE",
"240 398 CURVE",
"237 402 OFFCURVE",
"221 421 OFFCURVE",
"215 421 CURVE SMOOTH",
"207 421 OFFCURVE",
"188 414 OFFCURVE",
"187 405 CURVE SMOOTH",
"186 401 OFFCURVE",
"187 397 OFFCURVE",
"187 392 CURVE SMOOTH",
"187 391 OFFCURVE",
"187 390 OFFCURVE",
"186 388 CURVE SMOOTH",
"135 258 OFFCURVE",
"70 76 OFFCURVE",
"50 11 CURVE SMOOTH",
"46 -3 OFFCURVE",
"34 -35 OFFCURVE",
"34 -38 CURVE SMOOTH",
"34 -43 OFFCURVE",
"39 -47 OFFCURVE",
"45 -47 CURVE SMOOTH",
"58 -47 OFFCURVE",
"66 -34 OFFCURVE",
"70 -23 CURVE SMOOTH",
"103 86 OFFCURVE",
"200 374 OFFCURVE",
"202 380 CURVE",
"256 164 OFFCURVE",
"314 21 OFFCURVE",
"362 -14 CURVE",
"363 -28 OFFCURVE",
"367 -50 OFFCURVE",
"386 -50 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"109 172 OFFCURVE",
"237 174 OFFCURVE",
"284 174 CURVE SMOOTH",
"329 174 OFFCURVE",
"476 175 OFFCURVE",
"521 180 CURVE",
"521 191 OFFCURVE",
"507 195 OFFCURVE",
"481 196 CURVE SMOOTH",
"432 197 OFFCURVE",
"287 197 OFFCURVE",
"224 197 CURVE SMOOTH",
"134 197 OFFCURVE",
"90 195 OFFCURVE",
"81 193 CURVE SMOOTH",
"70 191 OFFCURVE",
"65 187 OFFCURVE",
"65 184 CURVE SMOOTH",
"65 176 OFFCURVE",
"71 172 OFFCURVE",
"96 172 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"140 276 OFFCURVE",
"268 278 OFFCURVE",
"314 278 CURVE SMOOTH",
"360 278 OFFCURVE",
"507 279 OFFCURVE",
"552 284 CURVE",
"552 295 OFFCURVE",
"538 299 OFFCURVE",
"512 300 CURVE SMOOTH",
"463 301 OFFCURVE",
"318 301 OFFCURVE",
"255 301 CURVE SMOOTH",
"165 301 OFFCURVE",
"121 299 OFFCURVE",
"112 297 CURVE SMOOTH",
"101 295 OFFCURVE",
"96 291 OFFCURVE",
"96 288 CURVE SMOOTH",
"96 280 OFFCURVE",
"102 276 OFFCURVE",
"127 276 CURVE SMOOTH"
);
}
);
width = 582;
}
);
unicode = 20A6;
},
{
glyphname = peseta;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"69 240 OFFCURVE",
"172 242 OFFCURVE",
"210 242 CURVE SMOOTH",
"247 242 OFFCURVE",
"366 243 OFFCURVE",
"402 248 CURVE",
"402 259 OFFCURVE",
"391 263 OFFCURVE",
"370 264 CURVE SMOOTH",
"330 265 OFFCURVE",
"213 265 OFFCURVE",
"162 265 CURVE SMOOTH",
"89 265 OFFCURVE",
"53 263 OFFCURVE",
"46 261 CURVE SMOOTH",
"37 259 OFFCURVE",
"33 255 OFFCURVE",
"33 252 CURVE SMOOTH",
"33 244 OFFCURVE",
"38 240 OFFCURVE",
"58 240 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"25 -55 OFFCURVE",
"54 -35 OFFCURVE",
"57 -26 CURVE",
"56 -25 LINE",
"63 29 OFFCURVE",
"78 81 OFFCURVE",
"93 134 CURVE",
"144 134 OFFCURVE",
"185 140 OFFCURVE",
"224 152 CURVE SMOOTH",
"269 165 OFFCURVE",
"346 199 OFFCURVE",
"352 262 CURVE SMOOTH",
"353 280 OFFCURVE",
"348 299 OFFCURVE",
"339 314 CURVE SMOOTH",
"311 368 OFFCURVE",
"235 396 OFFCURVE",
"196 410 CURVE SMOOTH",
"181 414 OFFCURVE",
"162 418 OFFCURVE",
"148 418 CURVE SMOOTH",
"141 418 OFFCURVE",
"133 415 OFFCURVE",
"133 407 CURVE SMOOTH",
"133 399 OFFCURVE",
"139 395 OFFCURVE",
"145 390 CURVE",
"133 359 LINE SMOOTH",
"119 323 OFFCURVE",
"55 139 OFFCURVE",
"39 82 CURVE SMOOTH",
"28 42 OFFCURVE",
"16 1 OFFCURVE",
"11 -39 CURVE SMOOTH",
"11 -41 OFFCURVE",
"10 -45 OFFCURVE",
"10 -48 CURVE SMOOTH",
"10 -52 OFFCURVE",
"11 -55 OFFCURVE",
"14 -55 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"69 240 OFFCURVE",
"172 242 OFFCURVE",
"210 242 CURVE SMOOTH",
"247 242 OFFCURVE",
"366 243 OFFCURVE",
"402 248 CURVE",
"402 259 OFFCURVE",
"391 263 OFFCURVE",
"370 264 CURVE SMOOTH",
"330 265 OFFCURVE",
"213 265 OFFCURVE",
"162 265 CURVE SMOOTH",
"89 265 OFFCURVE",
"53 263 OFFCURVE",
"46 261 CURVE SMOOTH",
"37 259 OFFCURVE",
"33 255 OFFCURVE",
"33 252 CURVE SMOOTH",
"33 244 OFFCURVE",
"38 240 OFFCURVE",
"58 240 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 150 OFFCURVE",
"100 155 OFFCURVE",
"101 161 CURVE SMOOTH",
"108 191 OFFCURVE",
"162 345 OFFCURVE",
"184 383 CURVE",
"235 365 OFFCURVE",
"318 329 OFFCURVE",
"318 261 CURVE SMOOTH",
"318 198 OFFCURVE",
"246 172 OFFCURVE",
"203 162 CURVE SMOOTH",
"173 155 OFFCURVE",
"139 150 OFFCURVE",
"105 150 CURVE SMOOTH"
);
}
);
width = 402;
}
);
unicode = 20A7;
},
{
glyphname = peso;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"25 -55 OFFCURVE",
"54 -35 OFFCURVE",
"57 -26 CURVE",
"56 -25 LINE",
"63 29 OFFCURVE",
"78 81 OFFCURVE",
"93 134 CURVE",
"144 134 OFFCURVE",
"185 140 OFFCURVE",
"224 152 CURVE SMOOTH",
"269 165 OFFCURVE",
"346 199 OFFCURVE",
"352 262 CURVE SMOOTH",
"353 280 OFFCURVE",
"348 299 OFFCURVE",
"339 314 CURVE SMOOTH",
"311 368 OFFCURVE",
"235 396 OFFCURVE",
"196 410 CURVE SMOOTH",
"181 414 OFFCURVE",
"162 418 OFFCURVE",
"148 418 CURVE SMOOTH",
"141 418 OFFCURVE",
"133 415 OFFCURVE",
"133 407 CURVE SMOOTH",
"133 399 OFFCURVE",
"139 395 OFFCURVE",
"145 390 CURVE",
"133 359 LINE SMOOTH",
"119 323 OFFCURVE",
"55 139 OFFCURVE",
"39 82 CURVE SMOOTH",
"28 42 OFFCURVE",
"16 1 OFFCURVE",
"11 -39 CURVE SMOOTH",
"11 -41 OFFCURVE",
"10 -45 OFFCURVE",
"10 -48 CURVE SMOOTH",
"10 -52 OFFCURVE",
"11 -55 OFFCURVE",
"14 -55 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"59 210 OFFCURVE",
"162 212 OFFCURVE",
"200 212 CURVE SMOOTH",
"237 212 OFFCURVE",
"356 213 OFFCURVE",
"392 218 CURVE",
"392 229 OFFCURVE",
"381 233 OFFCURVE",
"360 234 CURVE SMOOTH",
"320 235 OFFCURVE",
"203 235 OFFCURVE",
"152 235 CURVE SMOOTH",
"79 235 OFFCURVE",
"43 233 OFFCURVE",
"36 231 CURVE SMOOTH",
"27 229 OFFCURVE",
"23 225 OFFCURVE",
"23 222 CURVE SMOOTH",
"23 214 OFFCURVE",
"28 210 OFFCURVE",
"48 210 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 150 OFFCURVE",
"100 155 OFFCURVE",
"101 161 CURVE SMOOTH",
"108 191 OFFCURVE",
"162 345 OFFCURVE",
"184 383 CURVE",
"235 365 OFFCURVE",
"318 329 OFFCURVE",
"318 261 CURVE SMOOTH",
"318 198 OFFCURVE",
"246 172 OFFCURVE",
"203 162 CURVE SMOOTH",
"173 155 OFFCURVE",
"139 150 OFFCURVE",
"105 150 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 275 OFFCURVE",
"182 277 OFFCURVE",
"220 277 CURVE SMOOTH",
"257 277 OFFCURVE",
"376 278 OFFCURVE",
"412 283 CURVE",
"412 294 OFFCURVE",
"401 298 OFFCURVE",
"380 299 CURVE SMOOTH",
"340 300 OFFCURVE",
"223 300 OFFCURVE",
"172 300 CURVE SMOOTH",
"99 300 OFFCURVE",
"63 298 OFFCURVE",
"56 296 CURVE SMOOTH",
"47 294 OFFCURVE",
"43 290 OFFCURVE",
"43 287 CURVE SMOOTH",
"43 279 OFFCURVE",
"48 275 OFFCURVE",
"68 275 CURVE SMOOTH"
);
}
);
width = 402;
}
);
unicode = 20B1;
},
{
glyphname = ruble;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"45 -55 OFFCURVE",
"74 -35 OFFCURVE",
"77 -26 CURVE",
"76 -25 LINE",
"83 29 OFFCURVE",
"98 81 OFFCURVE",
"113 134 CURVE",
"164 134 OFFCURVE",
"205 140 OFFCURVE",
"244 152 CURVE SMOOTH",
"289 165 OFFCURVE",
"366 199 OFFCURVE",
"372 262 CURVE SMOOTH",
"373 280 OFFCURVE",
"368 299 OFFCURVE",
"359 314 CURVE SMOOTH",
"331 368 OFFCURVE",
"255 396 OFFCURVE",
"216 410 CURVE SMOOTH",
"201 414 OFFCURVE",
"182 418 OFFCURVE",
"168 418 CURVE SMOOTH",
"161 418 OFFCURVE",
"153 415 OFFCURVE",
"153 407 CURVE SMOOTH",
"153 399 OFFCURVE",
"159 395 OFFCURVE",
"165 390 CURVE",
"153 359 LINE SMOOTH",
"139 323 OFFCURVE",
"75 139 OFFCURVE",
"59 82 CURVE SMOOTH",
"48 42 OFFCURVE",
"36 1 OFFCURVE",
"31 -39 CURVE SMOOTH",
"31 -41 OFFCURVE",
"30 -45 OFFCURVE",
"30 -48 CURVE SMOOTH",
"30 -52 OFFCURVE",
"31 -55 OFFCURVE",
"34 -55 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"17 42 OFFCURVE",
"41 44 OFFCURVE",
"58 45 CURVE SMOOTH",
"97 48 OFFCURVE",
"135 51 OFFCURVE",
"173 51 CURVE SMOOTH",
"176 51 OFFCURVE",
"179 52 OFFCURVE",
"179 56 CURVE SMOOTH",
"179 58 OFFCURVE",
"178 59 OFFCURVE",
"176 60 CURVE SMOOTH",
"154 71 OFFCURVE",
"102 71 OFFCURVE",
"79 71 CURVE SMOOTH",
"49 71 OFFCURVE",
"19 70 OFFCURVE",
"-11 66 CURVE",
"-13 64 LINE",
"-12 56 OFFCURVE",
"0 43 OFFCURVE",
"6 40 CURVE"
);
},
{
closed = 1;
nodes = (
"40 131 OFFCURVE",
"63 131 OFFCURVE",
"90 132 CURVE",
"95 156 LINE",
"51 155 OFFCURVE",
"28 154 OFFCURVE",
"23 152 CURVE SMOOTH",
"14 150 OFFCURVE",
"10 146 OFFCURVE",
"10 143 CURVE SMOOTH",
"10 135 OFFCURVE",
"15 131 OFFCURVE",
"35 131 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"118 150 OFFCURVE",
"120 155 OFFCURVE",
"121 161 CURVE SMOOTH",
"128 191 OFFCURVE",
"182 345 OFFCURVE",
"204 383 CURVE",
"255 365 OFFCURVE",
"338 329 OFFCURVE",
"338 261 CURVE SMOOTH",
"338 198 OFFCURVE",
"266 172 OFFCURVE",
"223 162 CURVE SMOOTH",
"193 155 OFFCURVE",
"159 150 OFFCURVE",
"125 150 CURVE SMOOTH"
);
}
);
width = 422;
}
);
unicode = 20BD;
},
{
glyphname = rupeeIndian;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"322 -50 OFFCURVE",
"340 -31 OFFCURVE",
"340 -18 CURVE SMOOTH",
"340 -16 OFFCURVE",
"338 -14 OFFCURVE",
"336 -14 CURVE SMOOTH",
"332 -14 OFFCURVE",
"323 -20 OFFCURVE",
"312 -20 CURVE SMOOTH",
"273 -20 OFFCURVE",
"225 27 OFFCURVE",
"199 50 CURVE SMOOTH",
"164 83 OFFCURVE",
"134 123 OFFCURVE",
"107 164 CURVE",
"225 164 OFFCURVE",
"375 207 OFFCURVE",
"392 294 CURVE SMOOTH",
"393 299 OFFCURVE",
"393 303 OFFCURVE",
"393 308 CURVE SMOOTH",
"393 321 OFFCURVE",
"390 333 OFFCURVE",
"385 344 CURVE SMOOTH",
"372 371 OFFCURVE",
"345 387 OFFCURVE",
"315 398 CURVE",
"265 392 LINE",
"309 378 OFFCURVE",
"350 352 OFFCURVE",
"350 306 CURVE SMOOTH",
"350 301 OFFCURVE",
"350 296 OFFCURVE",
"349 291 CURVE SMOOTH",
"332 207 OFFCURVE",
"206 181 OFFCURVE",
"80 181 CURVE",
"73 179 OFFCURVE",
"69 169 OFFCURVE",
"69 163 CURVE SMOOTH",
"69 136 OFFCURVE",
"119 73 OFFCURVE",
"151 43 CURVE SMOOTH",
"186 8 OFFCURVE",
"237 -50 OFFCURVE",
"292 -50 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"110 275 OFFCURVE",
"213 277 OFFCURVE",
"251 277 CURVE SMOOTH",
"288 277 OFFCURVE",
"407 278 OFFCURVE",
"443 283 CURVE",
"443 294 OFFCURVE",
"432 298 OFFCURVE",
"411 299 CURVE SMOOTH",
"371 300 OFFCURVE",
"254 300 OFFCURVE",
"203 300 CURVE SMOOTH",
"130 300 OFFCURVE",
"94 298 OFFCURVE",
"87 296 CURVE SMOOTH",
"78 294 OFFCURVE",
"74 290 OFFCURVE",
"74 287 CURVE SMOOTH",
"74 279 OFFCURVE",
"79 275 OFFCURVE",
"99 275 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 379 OFFCURVE",
"238 381 OFFCURVE",
"276 381 CURVE SMOOTH",
"313 381 OFFCURVE",
"432 382 OFFCURVE",
"468 387 CURVE",
"468 398 OFFCURVE",
"457 402 OFFCURVE",
"436 403 CURVE SMOOTH",
"396 404 OFFCURVE",
"279 404 OFFCURVE",
"228 404 CURVE SMOOTH",
"155 404 OFFCURVE",
"119 402 OFFCURVE",
"112 400 CURVE SMOOTH",
"103 398 OFFCURVE",
"99 394 OFFCURVE",
"99 391 CURVE SMOOTH",
"99 383 OFFCURVE",
"104 379 OFFCURVE",
"124 379 CURVE SMOOTH"
);
}
);
width = 468;
}
);
unicode = 20B9;
},
{
glyphname = sterling;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"452 -43 OFFCURVE",
"521 6 OFFCURVE",
"521 58 CURVE SMOOTH",
"521 74 OFFCURVE",
"514 90 OFFCURVE",
"500 104 CURVE SMOOTH",
"494 110 OFFCURVE",
"483 104 OFFCURVE",
"483 98 CURVE SMOOTH",
"483 94 LINE",
"497 75 OFFCURVE",
"503 58 OFFCURVE",
"503 45 CURVE SMOOTH",
"503 -1 OFFCURVE",
"433 -14 OFFCURVE",
"375 -14 CURVE SMOOTH",
"297 -14 OFFCURVE",
"226 13 OFFCURVE",
"150 30 CURVE",
"163 53 OFFCURVE",
"170 69 OFFCURVE",
"178 93 CURVE SMOOTH",
"204 170 OFFCURVE",
"304 403 OFFCURVE",
"405 403 CURVE SMOOTH",
"435 403 OFFCURVE",
"450 389 OFFCURVE",
"450 363 CURVE SMOOTH",
"450 334 OFFCURVE",
"429 289 OFFCURVE",
"385 239 CURVE SMOOTH",
"358 209 OFFCURVE",
"322 191 OFFCURVE",
"322 188 CURVE SMOOTH",
"322 185 OFFCURVE",
"322 184 OFFCURVE",
"330 184 CURVE SMOOTH",
"346 184 OFFCURVE",
"375 196 OFFCURVE",
"402 222 CURVE SMOOTH",
"455 272 OFFCURVE",
"482 322 OFFCURVE",
"482 359 CURVE SMOOTH",
"482 395 OFFCURVE",
"458 418 OFFCURVE",
"409 418 CURVE SMOOTH",
"225 418 OFFCURVE",
"186 178 OFFCURVE",
"119 36 CURVE",
"91 44 OFFCURVE",
"59 52 OFFCURVE",
"28 52 CURVE SMOOTH",
"13 52 OFFCURVE",
"-9 41 OFFCURVE",
"-9 25 CURVE SMOOTH",
"-9 -2 OFFCURVE",
"24 -29 OFFCURVE",
"74 -29 CURVE SMOOTH",
"99 -29 OFFCURVE",
"124 -14 OFFCURVE",
"135 3 CURVE",
"205 -14 OFFCURVE",
"296 -43 OFFCURVE",
"370 -43 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"39 -18 OFFCURVE",
"20 3 OFFCURVE",
"20 16 CURVE SMOOTH",
"20 22 OFFCURVE",
"25 28 OFFCURVE",
"34 28 CURVE SMOOTH",
"58 28 OFFCURVE",
"85 19 OFFCURVE",
"108 11 CURVE",
"106 -3 OFFCURVE",
"85 -18 OFFCURVE",
"67 -18 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"125 116 OFFCURVE",
"144 116 OFFCURVE",
"161 117 CURVE SMOOTH",
"200 120 OFFCURVE",
"238 123 OFFCURVE",
"276 123 CURVE SMOOTH",
"279 123 OFFCURVE",
"282 124 OFFCURVE",
"282 128 CURVE SMOOTH",
"282 130 OFFCURVE",
"281 131 OFFCURVE",
"279 132 CURVE SMOOTH",
"257 143 OFFCURVE",
"205 143 OFFCURVE",
"182 143 CURVE SMOOTH",
"152 143 OFFCURVE",
"122 142 OFFCURVE",
"92 138 CURVE",
"90 136 LINE",
"91 128 OFFCURVE",
"103 115 OFFCURVE",
"109 112 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0126 38 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01212 38 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01215 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01250 33 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 586;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = won;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"92 -55 OFFCURVE",
"95 -55 OFFCURVE",
"95 -54 CURVE",
"113 -46 OFFCURVE",
"110 -35 OFFCURVE",
"119 -20 CURVE SMOOTH",
"216 126 LINE SMOOTH",
"243 165 OFFCURVE",
"320 288 OFFCURVE",
"340 320 CURVE",
"346 231 OFFCURVE",
"368 -14 OFFCURVE",
"363 -14 CURVE",
"364 -25 OFFCURVE",
"357 -44 OFFCURVE",
"372 -44 CURVE SMOOTH",
"386 -44 OFFCURVE",
"397 -26 OFFCURVE",
"405 -13 CURVE SMOOTH",
"473 114 OFFCURVE",
"629 370 OFFCURVE",
"657 416 CURVE SMOOTH",
"663 426 OFFCURVE",
"669 444 OFFCURVE",
"670 452 CURVE SMOOTH",
"670 458 OFFCURVE",
"668 463 OFFCURVE",
"663 463 CURVE SMOOTH",
"656 463 OFFCURVE",
"652 460 OFFCURVE",
"634 433 CURVE SMOOTH",
"607 389 OFFCURVE",
"499 200 OFFCURVE",
"408 29 CURVE",
"393 106 OFFCURVE",
"385 307 OFFCURVE",
"370 389 CURVE SMOOTH",
"367 402 OFFCURVE",
"351 405 OFFCURVE",
"344 405 CURVE SMOOTH",
"333 405 OFFCURVE",
"322 399 OFFCURVE",
"321 387 CURVE SMOOTH",
"321 384 OFFCURVE",
"321 381 OFFCURVE",
"322 377 CURVE SMOOTH",
"325 362 OFFCURVE",
"325 355 OFFCURVE",
"326 345 CURVE",
"325 336 OFFCURVE",
"263 242 OFFCURVE",
"212 161 CURVE SMOOTH",
"192 126 OFFCURVE",
"133 35 OFFCURVE",
"117 10 CURVE",
"120 46 OFFCURVE",
"132 305 OFFCURVE",
"131 427 CURVE SMOOTH",
"131 430 OFFCURVE",
"129 432 OFFCURVE",
"127 432 CURVE SMOOTH",
"120 432 OFFCURVE",
"90 424 OFFCURVE",
"88 414 CURVE SMOOTH",
"88 413 OFFCURVE",
"89 413 OFFCURVE",
"89 412 CURVE SMOOTH",
"90 379 OFFCURVE",
"78 -19 OFFCURVE",
"75 -51 CURVE",
"74 -54 OFFCURVE",
"88 -55 OFFCURVE",
"91 -55 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"76 210 OFFCURVE",
"238 212 OFFCURVE",
"297 212 CURVE SMOOTH",
"355 212 OFFCURVE",
"541 213 OFFCURVE",
"597 218 CURVE",
"597 229 OFFCURVE",
"580 233 OFFCURVE",
"547 234 CURVE SMOOTH",
"485 235 OFFCURVE",
"302 235 OFFCURVE",
"222 235 CURVE SMOOTH",
"108 235 OFFCURVE",
"51 233 OFFCURVE",
"40 231 CURVE SMOOTH",
"26 229 OFFCURVE",
"20 225 OFFCURVE",
"20 222 CURVE SMOOTH",
"20 214 OFFCURVE",
"28 210 OFFCURVE",
"59 210 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"108 275 OFFCURVE",
"269 277 OFFCURVE",
"328 277 CURVE SMOOTH",
"386 277 OFFCURVE",
"572 278 OFFCURVE",
"629 283 CURVE",
"629 294 OFFCURVE",
"612 298 OFFCURVE",
"579 299 CURVE SMOOTH",
"516 300 OFFCURVE",
"333 300 OFFCURVE",
"253 300 CURVE SMOOTH",
"139 300 OFFCURVE",
"83 298 OFFCURVE",
"72 296 CURVE SMOOTH",
"58 294 OFFCURVE",
"51 290 OFFCURVE",
"51 287 CURVE SMOOTH",
"51 279 OFFCURVE",
"59 275 OFFCURVE",
"90 275 CURVE SMOOTH"
);
}
);
width = 648;
}
);
unicode = 20A9;
},
{
glyphname = yen;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"146 -20 OFFCURVE",
"171 -13 OFFCURVE",
"174 -2 CURVE SMOOTH",
"177 5 OFFCURVE",
"178 11 OFFCURVE",
"178 16 CURVE",
"197 121 LINE",
"198 121 OFFCURVE",
"199 121 OFFCURVE",
"200 122 CURVE",
"203 122 LINE SMOOTH",
"242 125 OFFCURVE",
"270 126 OFFCURVE",
"289 126 CURVE SMOOTH",
"292 126 OFFCURVE",
"294 127 OFFCURVE",
"294 130 CURVE SMOOTH",
"294 132 OFFCURVE",
"293 133 OFFCURVE",
"292 133 CURVE",
"282 138 OFFCURVE",
"252 141 OFFCURVE",
"201 142 CURVE",
"212 202 LINE",
"212 203 LINE",
"247 206 OFFCURVE",
"272 207 OFFCURVE",
"289 207 CURVE SMOOTH",
"292 207 OFFCURVE",
"294 209 OFFCURVE",
"294 212 CURVE",
"292 214 LINE",
"283 218 OFFCURVE",
"253 222 OFFCURVE",
"218 223 CURVE",
"237 248 OFFCURVE",
"255 270 OFFCURVE",
"274 291 CURVE SMOOTH",
"311 333 OFFCURVE",
"390 423 OFFCURVE",
"439 445 CURVE",
"440 446 OFFCURVE",
"439 449 OFFCURVE",
"439 455 CURVE SMOOTH",
"439 456 OFFCURVE",
"440 458 OFFCURVE",
"440 458 CURVE",
"439 459 OFFCURVE",
"436 460 OFFCURVE",
"432 460 CURVE SMOOTH",
"414 460 OFFCURVE",
"394 450 OFFCURVE",
"373 431 CURVE SMOOTH",
"340 398 OFFCURVE",
"317 372 OFFCURVE",
"302 354 CURVE SMOOTH",
"269 315 OFFCURVE",
"236 274 OFFCURVE",
"201 229 CURVE",
"150 302 OFFCURVE",
"110 358 OFFCURVE",
"81 397 CURVE SMOOTH",
"52 436 OFFCURVE",
"33 458 OFFCURVE",
"24 463 CURVE",
"24 464 LINE",
"23 465 OFFCURVE",
"22 465 OFFCURVE",
"20 465 CURVE SMOOTH",
"10 465 OFFCURVE",
"-9 444 OFFCURVE",
"-9 434 CURVE SMOOTH",
"-9 430 OFFCURVE",
"-6 427 OFFCURVE",
"-1 424 CURVE SMOOTH",
"3 422 OFFCURVE",
"14 413 OFFCURVE",
"31 397 CURVE SMOOTH",
"48 381 OFFCURVE",
"70 355 OFFCURVE",
"96 319 CURVE SMOOTH",
"128 275 OFFCURVE",
"150 243 OFFCURVE",
"162 224 CURVE",
"143 223 OFFCURVE",
"127 223 OFFCURVE",
"116 222 CURVE SMOOTH",
"104 221 OFFCURVE",
"96 220 OFFCURVE",
"92 219 CURVE",
"91 218 LINE",
"91 211 OFFCURVE",
"103 199 OFFCURVE",
"107 199 CURVE SMOOTH",
"123 199 OFFCURVE",
"145 200 OFFCURVE",
"173 202 CURVE",
"172 199 OFFCURVE",
"171 194 OFFCURVE",
"170 187 CURVE SMOOTH",
"169 179 OFFCURVE",
"166 168 OFFCURVE",
"163 153 CURVE SMOOTH",
"161 143 LINE",
"142 142 OFFCURVE",
"126 142 OFFCURVE",
"115 141 CURVE SMOOTH",
"103 140 OFFCURVE",
"95 139 OFFCURVE",
"92 138 CURVE",
"91 137 OFFCURVE",
"91 137 OFFCURVE",
"91 136 CURVE SMOOTH",
"91 129 OFFCURVE",
"103 118 OFFCURVE",
"107 118 CURVE SMOOTH",
"128 118 LINE SMOOTH",
"136 118 OFFCURVE",
"145 118 OFFCURVE",
"155 119 CURVE",
"146 71 LINE SMOOTH",
"143 56 OFFCURVE",
"140 42 OFFCURVE",
"138 29 CURVE SMOOTH",
"135 15 OFFCURVE",
"133 4 OFFCURVE",
"132 -4 CURVE SMOOTH",
"130 -17 LINE SMOOTH",
"130 -19 OFFCURVE",
"131 -20 OFFCURVE",
"134 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01214 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01216 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01296 1061 22 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01246 1063 39 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01265 14 59 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01291 39 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 385;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = bulletoperator;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"323 162 OFFCURVE",
"357 194 OFFCURVE",
"357 237 CURVE SMOOTH",
"357 278 OFFCURVE",
"323 311 OFFCURVE",
"282 311 CURVE SMOOTH",
"241 311 OFFCURVE",
"207 278 OFFCURVE",
"207 237 CURVE SMOOTH",
"207 195 OFFCURVE",
"241 162 OFFCURVE",
"282 162 CURVE SMOOTH"
);
}
);
width = 537;
}
);
unicode = 2219;
},
{
glyphname = commercialMinusSign;
lastChange = "2021-12-02 23:34:51 +0000";
layers = (
{
components = (
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 53, 0}";
},
{
name = bulletoperator;
transform = "{1, 0, 0, 1, 107, -102}";
},
{
name = bulletoperator;
transform = "{1, 0, 0, 1, -127, 99}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 593;
}
);
unicode = 2052;
},
{
glyphname = divisionslash;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"117 -16 LINE SMOOTH",
"121 -16 OFFCURVE",
"124 -13 OFFCURVE",
"122 -10 CURVE",
"122 -7 OFFCURVE",
"124 22 OFFCURVE",
"131 42 CURVE SMOOTH",
"136 60 OFFCURVE",
"164 114 OFFCURVE",
"184 150 CURVE SMOOTH",
"237 250 OFFCURVE",
"316 361 OFFCURVE",
"459 508 CURVE",
"460 511 LINE",
"460 513 OFFCURVE",
"455 514 OFFCURVE",
"451 513 CURVE SMOOTH",
"424 509 OFFCURVE",
"379 468 OFFCURVE",
"317 389 CURVE SMOOTH",
"256 314 OFFCURVE",
"205 238 OFFCURVE",
"159 157 CURVE SMOOTH",
"117 82 OFFCURVE",
"96 31 OFFCURVE",
"96 4 CURVE SMOOTH",
"96 0 OFFCURVE",
"97 -4 OFFCURVE",
"98 -7 CURVE SMOOTH",
"100 -12 OFFCURVE",
"109 -16 OFFCURVE",
"115 -16 CURVE SMOOTH"
);
}
);
width = 446;
}
);
unicode = 2215;
},
{
glyphname = plus;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"173 87 OFFCURVE",
"197 97 OFFCURVE",
"200 103 CURVE SMOOTH",
"212 131 OFFCURVE",
"229 177 OFFCURVE",
"252 236 CURVE SMOOTH",
"264 264 OFFCURVE",
"291 335 OFFCURVE",
"304 363 CURVE",
"305 367 OFFCURVE",
"306 371 OFFCURVE",
"306 373 CURVE SMOOTH",
"306 376 OFFCURVE",
"305 378 OFFCURVE",
"304 378 CURVE SMOOTH",
"301 379 OFFCURVE",
"298 377 OFFCURVE",
"296 374 CURVE",
"282 363 OFFCURVE",
"238 274 OFFCURVE",
"216 225 CURVE SMOOTH",
"202 194 OFFCURVE",
"166 107 OFFCURVE",
"165 92 CURVE",
"165 92 OFFCURVE",
"166 90 OFFCURVE",
"167 90 CURVE"
);
},
{
closed = 1;
nodes = (
"136 213 OFFCURVE",
"185 217 OFFCURVE",
"248 219 CURVE SMOOTH",
"278 220 OFFCURVE",
"355 224 OFFCURVE",
"385 224 CURVE",
"393 225 OFFCURVE",
"399 228 OFFCURVE",
"399 230 CURVE SMOOTH",
"399 233 OFFCURVE",
"395 235 OFFCURVE",
"392 235 CURVE",
"376 244 OFFCURVE",
"277 248 OFFCURVE",
"223 248 CURVE SMOOTH",
"189 248 OFFCURVE",
"95 246 OFFCURVE",
"81 240 CURVE",
"81 240 OFFCURVE",
"80 239 OFFCURVE",
"80 238 CURVE SMOOTH",
"80 231 OFFCURVE",
"99 213 OFFCURVE",
"105 213 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01235 1065 26 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01210 26 35 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01225 1064 15 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 439;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = minus;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"136 213 OFFCURVE",
"185 217 OFFCURVE",
"248 219 CURVE SMOOTH",
"278 220 OFFCURVE",
"355 224 OFFCURVE",
"385 224 CURVE",
"393 225 OFFCURVE",
"399 228 OFFCURVE",
"399 230 CURVE SMOOTH",
"399 233 OFFCURVE",
"395 235 OFFCURVE",
"392 235 CURVE",
"376 244 OFFCURVE",
"277 248 OFFCURVE",
"223 248 CURVE SMOOTH",
"189 248 OFFCURVE",
"95 246 OFFCURVE",
"81 240 CURVE",
"81 240 OFFCURVE",
"80 239 OFFCURVE",
"80 238 CURVE SMOOTH",
"80 231 OFFCURVE",
"99 213 OFFCURVE",
"105 213 CURVE SMOOTH"
);
}
);
width = 439;
}
);
unicode = 2212;
},
{
glyphname = multiply;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"118 75 OFFCURVE",
"197 150 OFFCURVE",
"239 192 CURVE SMOOTH",
"266 219 OFFCURVE",
"338 297 OFFCURVE",
"347 314 CURVE",
"347 314 OFFCURVE",
"347 317 OFFCURVE",
"346 318 CURVE",
"344 324 OFFCURVE",
"331 328 OFFCURVE",
"322 328 CURVE SMOOTH",
"318 328 OFFCURVE",
"315 327 OFFCURVE",
"314 326 CURVE SMOOTH",
"290 302 OFFCURVE",
"254 259 OFFCURVE",
"206 205 CURVE SMOOTH",
"182 180 OFFCURVE",
"125 115 OFFCURVE",
"100 91 CURVE",
"96 84 OFFCURVE",
"93 78 OFFCURVE",
"93 74 CURVE SMOOTH",
"93 73 LINE",
"95 70 OFFCURVE",
"98 70 OFFCURVE",
"101 72 CURVE"
);
},
{
closed = 1;
nodes = (
"338 77 OFFCURVE",
"339 77 OFFCURVE",
"339 78 CURVE SMOOTH",
"340 82 OFFCURVE",
"338 87 OFFCURVE",
"336 89 CURVE",
"328 111 OFFCURVE",
"253 187 OFFCURVE",
"211 226 CURVE SMOOTH",
"185 251 OFFCURVE",
"111 316 OFFCURVE",
"97 319 CURVE",
"97 319 OFFCURVE",
"96 319 OFFCURVE",
"95 317 CURVE SMOOTH",
"92 309 OFFCURVE",
"97 274 OFFCURVE",
"102 270 CURVE SMOOTH",
"126 247 OFFCURVE",
"166 217 OFFCURVE",
"216 174 CURVE SMOOTH",
"240 153 OFFCURVE",
"302 103 OFFCURVE",
"325 81 CURVE",
"330 78 OFFCURVE",
"334 77 OFFCURVE",
"336 77 CURVE SMOOTH"
);
}
);
width = 439;
}
);
unicode = 00D7;
},
{
glyphname = divide;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"90 167 OFFCURVE",
"109 168 OFFCURVE",
"134 169 CURVE SMOOTH",
"164 171 OFFCURVE",
"183 172 OFFCURVE",
"192 172 CURVE SMOOTH",
"319 176 OFFCURVE",
"399 178 OFFCURVE",
"433 178 CURVE SMOOTH",
"437 178 OFFCURVE",
"439 180 OFFCURVE",
"439 184 CURVE SMOOTH",
"439 185 OFFCURVE",
"438 186 OFFCURVE",
"436 187 CURVE SMOOTH",
"421 194 OFFCURVE",
"357 198 OFFCURVE",
"243 198 CURVE SMOOTH",
"181 198 OFFCURVE",
"132 197 OFFCURVE",
"96 195 CURVE SMOOTH",
"56 192 LINE",
"56 184 OFFCURVE",
"67 167 OFFCURVE",
"75 167 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"202 65 OFFCURVE",
"213 69 OFFCURVE",
"224 77 CURVE SMOOTH",
"225 78 OFFCURVE",
"232 81 OFFCURVE",
"243 84 CURVE SMOOTH",
"251 87 OFFCURVE",
"255 90 OFFCURVE",
"256 95 CURVE SMOOTH",
"257 109 OFFCURVE",
"246 116 OFFCURVE",
"223 116 CURVE SMOOTH",
"202 116 OFFCURVE",
"188 112 OFFCURVE",
"182 105 CURVE SMOOTH",
"178 100 OFFCURVE",
"176 92 OFFCURVE",
"176 81 CURVE SMOOTH",
"176 68 OFFCURVE",
"184 65 OFFCURVE",
"193 65 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"280 248 OFFCURVE",
"291 252 OFFCURVE",
"302 260 CURVE SMOOTH",
"303 261 OFFCURVE",
"310 264 OFFCURVE",
"321 267 CURVE SMOOTH",
"329 270 OFFCURVE",
"333 273 OFFCURVE",
"334 278 CURVE SMOOTH",
"335 292 OFFCURVE",
"324 299 OFFCURVE",
"301 299 CURVE SMOOTH",
"280 299 OFFCURVE",
"266 295 OFFCURVE",
"260 288 CURVE SMOOTH",
"256 283 OFFCURVE",
"254 275 OFFCURVE",
"254 264 CURVE SMOOTH",
"254 251 OFFCURVE",
"262 248 OFFCURVE",
"271 248 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01234 1064 13 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01245 1063 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 450;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = equal;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"135 106 OFFCURVE",
"172 108 OFFCURVE",
"221 112 CURVE SMOOTH",
"270 116 OFFCURVE",
"306 118 OFFCURVE",
"330 118 CURVE SMOOTH",
"334 118 OFFCURVE",
"336 120 OFFCURVE",
"336 123 CURVE SMOOTH",
"336 125 OFFCURVE",
"335 126 OFFCURVE",
"333 126 CURVE",
"320 134 OFFCURVE",
"276 138 OFFCURVE",
"201 138 CURVE SMOOTH",
"139 138 OFFCURVE",
"102 136 OFFCURVE",
"92 131 CURVE",
"92 131 OFFCURVE",
"91 130 OFFCURVE",
"91 129 CURVE SMOOTH",
"91 123 OFFCURVE",
"106 106 OFFCURVE",
"111 106 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"124 209 OFFCURVE",
"139 210 OFFCURVE",
"157 211 CURVE SMOOTH",
"221 214 LINE SMOOTH",
"270 218 OFFCURVE",
"306 220 OFFCURVE",
"330 220 CURVE SMOOTH",
"334 220 OFFCURVE",
"336 222 OFFCURVE",
"336 226 CURVE SMOOTH",
"336 227 OFFCURVE",
"335 228 OFFCURVE",
"333 229 CURVE SMOOTH",
"319 237 OFFCURVE",
"275 240 OFFCURVE",
"201 240 CURVE SMOOTH",
"141 240 OFFCURVE",
"104 238 OFFCURVE",
"92 234 CURVE",
"92 234 OFFCURVE",
"91 233 OFFCURVE",
"91 232 CURVE SMOOTH",
"91 226 OFFCURVE",
"106 209 OFFCURVE",
"111 209 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01231 1064 24 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 1063 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 348;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = notequal;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"71 4 OFFCURVE",
"83 13 OFFCURVE",
"98 30 CURVE",
"126 68 LINE",
"186 73 OFFCURVE",
"243 76 OFFCURVE",
"296 76 CURVE",
"300 77 OFFCURVE",
"302 78 OFFCURVE",
"302 79 CURVE SMOOTH",
"302 81 OFFCURVE",
"301 83 OFFCURVE",
"299 84 CURVE SMOOTH",
"284 92 OFFCURVE",
"239 96 OFFCURVE",
"164 96 CURVE SMOOTH",
"147 96 LINE",
"211 177 LINE",
"220 178 OFFCURVE",
"232 178 OFFCURVE",
"246 178 CURVE SMOOTH",
"296 178 LINE",
"300 179 OFFCURVE",
"302 180 OFFCURVE",
"302 182 CURVE SMOOTH",
"302 187 OFFCURVE",
"276 191 OFFCURVE",
"225 195 CURVE",
"252 227 OFFCURVE",
"267 248 OFFCURVE",
"270 258 CURVE",
"270 261 OFFCURVE",
"268 262 OFFCURVE",
"265 262 CURVE SMOOTH",
"256 262 OFFCURVE",
"244 253 OFFCURVE",
"229 235 CURVE SMOOTH",
"201 197 LINE",
"177 198 OFFCURVE",
"156 199 OFFCURVE",
"137 199 CURVE SMOOTH",
"102 199 OFFCURVE",
"75 197 OFFCURVE",
"56 192 CURVE SMOOTH",
"55 192 OFFCURVE",
"55 192 OFFCURVE",
"55 191 CURVE SMOOTH",
"55 184 OFFCURVE",
"70 167 OFFCURVE",
"75 167 CURVE SMOOTH",
"88 167 OFFCURVE",
"107 168 OFFCURVE",
"130 170 CURVE SMOOTH",
"184 175 LINE",
"120 94 LINE",
"76 91 LINE SMOOTH",
"65 90 OFFCURVE",
"59 90 OFFCURVE",
"56 89 CURVE SMOOTH",
"55 89 OFFCURVE",
"55 89 OFFCURVE",
"55 88 CURVE SMOOTH",
"55 81 OFFCURVE",
"70 64 OFFCURVE",
"75 64 CURVE SMOOTH",
"79 64 OFFCURVE",
"83 64 OFFCURVE",
"86 65 CURVE",
"97 65 LINE",
"84 50 OFFCURVE",
"75 38 OFFCURVE",
"68 29 CURVE SMOOTH",
"61 20 OFFCURVE",
"57 13 OFFCURVE",
"56 9 CURVE SMOOTH",
"56 6 OFFCURVE",
"58 4 OFFCURVE",
"63 4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0129 1062 15 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1064 41 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01226 21 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01238 41 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01246 41 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 348;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = greater;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"98 129 OFFCURVE",
"105 133 OFFCURVE",
"110 140 CURVE SMOOTH",
"121 155 OFFCURVE",
"133 170 OFFCURVE",
"144 185 CURVE SMOOTH",
"177 230 LINE SMOOTH",
"212 277 OFFCURVE",
"229 306 OFFCURVE",
"229 315 CURVE SMOOTH",
"229 318 OFFCURVE",
"228 320 OFFCURVE",
"226 321 CURVE SMOOTH",
"167 364 OFFCURVE",
"127 401 OFFCURVE",
"105 431 CURVE",
"97 435 LINE",
"90 435 OFFCURVE",
"86 431 OFFCURVE",
"86 422 CURVE SMOOTH",
"86 410 OFFCURVE",
"119 365 OFFCURVE",
"184 288 CURVE",
"118 197 OFFCURVE",
"85 146 OFFCURVE",
"85 135 CURVE SMOOTH",
"85 131 OFFCURVE",
"87 129 OFFCURVE",
"91 129 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 318;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = less;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"224 136 OFFCURVE",
"227 140 OFFCURVE",
"227 149 CURVE SMOOTH",
"227 157 OFFCURVE",
"195 202 OFFCURVE",
"130 283 CURVE",
"196 374 OFFCURVE",
"229 425 OFFCURVE",
"229 436 CURVE SMOOTH",
"229 440 OFFCURVE",
"227 442 OFFCURVE",
"222 442 CURVE SMOOTH",
"215 442 OFFCURVE",
"208 438 OFFCURVE",
"203 431 CURVE SMOOTH",
"137 341 LINE SMOOTH",
"102 294 OFFCURVE",
"85 265 OFFCURVE",
"85 256 CURVE SMOOTH",
"85 254 OFFCURVE",
"86 252 OFFCURVE",
"88 250 CURVE",
"143 211 OFFCURVE",
"183 174 OFFCURVE",
"209 140 CURVE",
"217 136 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 318;
}
);
note = less;
unicode = 003C;
},
{
glyphname = greaterequal;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"224 136 OFFCURVE",
"227 140 OFFCURVE",
"227 149 CURVE SMOOTH",
"227 157 OFFCURVE",
"195 202 OFFCURVE",
"130 283 CURVE",
"196 374 OFFCURVE",
"229 425 OFFCURVE",
"229 436 CURVE SMOOTH",
"229 440 OFFCURVE",
"227 442 OFFCURVE",
"222 442 CURVE SMOOTH",
"215 442 OFFCURVE",
"208 438 OFFCURVE",
"203 431 CURVE SMOOTH",
"137 341 LINE SMOOTH",
"102 294 OFFCURVE",
"85 265 OFFCURVE",
"85 256 CURVE SMOOTH",
"85 254 OFFCURVE",
"86 252 OFFCURVE",
"88 250 CURVE",
"143 211 OFFCURVE",
"183 174 OFFCURVE",
"209 140 CURVE",
"217 136 LINE"
);
},
{
closed = 1;
nodes = (
"99 61 OFFCURVE",
"129 63 OFFCURVE",
"169 67 CURVE SMOOTH",
"209 71 OFFCURVE",
"239 73 OFFCURVE",
"260 73 CURVE SMOOTH",
"264 73 OFFCURVE",
"266 75 OFFCURVE",
"266 78 CURVE SMOOTH",
"266 79 OFFCURVE",
"265 80 OFFCURVE",
"263 81 CURVE SMOOTH",
"250 89 OFFCURVE",
"214 93 OFFCURVE",
"157 93 CURVE SMOOTH",
"104 93 OFFCURVE",
"72 91 OFFCURVE",
"60 86 CURVE",
"59 86 OFFCURVE",
"59 86 OFFCURVE",
"58 85 CURVE",
"58 78 OFFCURVE",
"74 61 OFFCURVE",
"79 61 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 318;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = lessequal;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"98 129 OFFCURVE",
"105 133 OFFCURVE",
"110 140 CURVE SMOOTH",
"121 155 OFFCURVE",
"133 170 OFFCURVE",
"144 185 CURVE SMOOTH",
"177 230 LINE SMOOTH",
"212 277 OFFCURVE",
"229 306 OFFCURVE",
"229 315 CURVE SMOOTH",
"229 318 OFFCURVE",
"228 320 OFFCURVE",
"226 321 CURVE SMOOTH",
"167 364 OFFCURVE",
"127 401 OFFCURVE",
"105 431 CURVE",
"97 435 LINE",
"90 435 OFFCURVE",
"86 431 OFFCURVE",
"86 422 CURVE SMOOTH",
"86 410 OFFCURVE",
"119 365 OFFCURVE",
"184 288 CURVE",
"118 197 OFFCURVE",
"85 146 OFFCURVE",
"85 135 CURVE SMOOTH",
"85 131 OFFCURVE",
"87 129 OFFCURVE",
"91 129 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"81 61 OFFCURVE",
"111 63 OFFCURVE",
"151 67 CURVE SMOOTH",
"192 71 OFFCURVE",
"222 73 OFFCURVE",
"243 73 CURVE SMOOTH",
"247 73 OFFCURVE",
"249 75 OFFCURVE",
"249 78 CURVE SMOOTH",
"249 79 OFFCURVE",
"248 80 OFFCURVE",
"246 81 CURVE SMOOTH",
"233 89 OFFCURVE",
"197 93 OFFCURVE",
"140 93 CURVE SMOOTH",
"87 93 OFFCURVE",
"55 91 OFFCURVE",
"43 86 CURVE",
"42 86 OFFCURVE",
"42 86 OFFCURVE",
"41 85 CURVE",
"41 78 OFFCURVE",
"57 61 OFFCURVE",
"62 61 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 318;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = plusminus;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"231 138 OFFCURVE",
"234 140 OFFCURVE",
"237 144 CURVE",
"242 154 OFFCURVE",
"244 203 OFFCURVE",
"244 291 CURVE",
"276 291 LINE SMOOTH",
"288 291 OFFCURVE",
"303 291 OFFCURVE",
"320 292 CURVE SMOOTH",
"395 292 LINE",
"404 298 LINE",
"404 302 LINE SMOOTH",
"404 305 OFFCURVE",
"402 307 OFFCURVE",
"398 308 CURVE",
"388 313 OFFCURVE",
"337 315 OFFCURVE",
"244 315 CURVE",
"244 363 LINE SMOOTH",
"244 407 OFFCURVE",
"243 441 OFFCURVE",
"240 466 CURVE",
"235 471 LINE",
"227 471 OFFCURVE",
"213 461 OFFCURVE",
"213 453 CURVE SMOOTH",
"213 436 OFFCURVE",
"214 413 OFFCURVE",
"216 384 CURVE SMOOTH",
"218 351 OFFCURVE",
"219 328 OFFCURVE",
"219 315 CURVE",
"179 315 OFFCURVE",
"146 315 OFFCURVE",
"121 314 CURVE SMOOTH",
"96 313 OFFCURVE",
"77 312 OFFCURVE",
"66 311 CURVE",
"61 306 LINE",
"62 298 OFFCURVE",
"72 285 OFFCURVE",
"80 285 CURVE SMOOTH",
"97 285 OFFCURVE",
"121 286 OFFCURVE",
"150 287 CURVE SMOOTH",
"184 289 OFFCURVE",
"207 290 OFFCURVE",
"219 290 CURVE",
"219 191 OFFCURVE",
"222 141 OFFCURVE",
"229 138 CURVE"
);
},
{
closed = 1;
nodes = (
"152 65 OFFCURVE",
"182 67 OFFCURVE",
"222 71 CURVE SMOOTH",
"263 75 OFFCURVE",
"293 77 OFFCURVE",
"314 77 CURVE SMOOTH",
"318 77 OFFCURVE",
"320 79 OFFCURVE",
"320 82 CURVE SMOOTH",
"320 83 OFFCURVE",
"319 84 OFFCURVE",
"317 85 CURVE SMOOTH",
"304 93 OFFCURVE",
"268 97 OFFCURVE",
"211 97 CURVE SMOOTH",
"158 97 OFFCURVE",
"126 95 OFFCURVE",
"114 90 CURVE",
"113 90 OFFCURVE",
"113 90 OFFCURVE",
"112 89 CURVE",
"112 82 OFFCURVE",
"128 65 OFFCURVE",
"133 65 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01251 1065 42 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 51 22 51 38 51 54 51 70 51 86 51 102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 51 22 51 38 51 54 51 70 51 86 51 102 51 118 51 134 51 150 51 166 51 182 51 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 51 213 51 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01230 13 13 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01240 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 438;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = approxequal;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"239 241 OFFCURVE",
"245 242 OFFCURVE",
"251 244 CURVE SMOOTH",
"262 247 OFFCURVE",
"275 254 OFFCURVE",
"290 267 CURVE SMOOTH",
"309 281 OFFCURVE",
"317 293 OFFCURVE",
"316 302 CURVE SMOOTH",
"316 303 LINE",
"313 305 LINE",
"296 288 LINE SMOOTH",
"285 277 OFFCURVE",
"270 271 OFFCURVE",
"251 271 CURVE SMOOTH",
"234 271 OFFCURVE",
"211 277 OFFCURVE",
"180 289 CURVE SMOOTH",
"151 302 OFFCURVE",
"128 308 OFFCURVE",
"111 308 CURVE SMOOTH",
"98 308 OFFCURVE",
"83 301 OFFCURVE",
"64 288 CURVE SMOOTH",
"46 275 OFFCURVE",
"37 262 OFFCURVE",
"37 250 CURVE SMOOTH",
"37 247 OFFCURVE",
"38 246 OFFCURVE",
"41 246 CURVE SMOOTH",
"42 246 OFFCURVE",
"47 251 OFFCURVE",
"55 262 CURVE SMOOTH",
"64 273 OFFCURVE",
"77 278 OFFCURVE",
"95 278 CURVE SMOOTH",
"113 278 OFFCURVE",
"137 272 OFFCURVE",
"166 259 CURVE SMOOTH",
"196 247 OFFCURVE",
"218 241 OFFCURVE",
"233 241 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"239 145 OFFCURVE",
"245 146 OFFCURVE",
"251 148 CURVE SMOOTH",
"262 151 OFFCURVE",
"275 158 OFFCURVE",
"290 171 CURVE SMOOTH",
"309 185 OFFCURVE",
"317 197 OFFCURVE",
"316 206 CURVE SMOOTH",
"316 207 LINE",
"313 209 LINE",
"296 192 LINE SMOOTH",
"285 181 OFFCURVE",
"270 175 OFFCURVE",
"251 175 CURVE SMOOTH",
"234 175 OFFCURVE",
"211 181 OFFCURVE",
"180 193 CURVE SMOOTH",
"151 206 OFFCURVE",
"128 212 OFFCURVE",
"111 212 CURVE SMOOTH",
"98 212 OFFCURVE",
"83 205 OFFCURVE",
"64 192 CURVE SMOOTH",
"46 179 OFFCURVE",
"37 166 OFFCURVE",
"37 154 CURVE SMOOTH",
"37 151 OFFCURVE",
"38 150 OFFCURVE",
"41 150 CURVE SMOOTH",
"42 150 OFFCURVE",
"47 155 OFFCURVE",
"55 166 CURVE SMOOTH",
"64 177 OFFCURVE",
"77 182 OFFCURVE",
"95 182 CURVE SMOOTH",
"113 182 OFFCURVE",
"137 176 OFFCURVE",
"166 163 CURVE SMOOTH",
"196 151 OFFCURVE",
"218 145 OFFCURVE",
"233 145 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01220 1064 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 485;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = asciitilde;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"355 279 OFFCURVE",
"366 283 OFFCURVE",
"378 292 CURVE SMOOTH",
"391 301 OFFCURVE",
"399 311 OFFCURVE",
"406 320 CURVE SMOOTH",
"409 323 OFFCURVE",
"410 327 OFFCURVE",
"410 330 CURVE SMOOTH",
"410 333 OFFCURVE",
"408 335 OFFCURVE",
"403 334 CURVE SMOOTH",
"399 333 OFFCURVE",
"394 328 OFFCURVE",
"389 320 CURVE SMOOTH",
"382 311 OFFCURVE",
"374 306 OFFCURVE",
"365 306 CURVE SMOOTH",
"362 306 OFFCURVE",
"360 306 OFFCURVE",
"357 307 CURVE SMOOTH",
"345 310 OFFCURVE",
"329 318 OFFCURVE",
"310 331 CURVE SMOOTH",
"287 348 OFFCURVE",
"268 359 OFFCURVE",
"255 364 CURVE SMOOTH",
"246 368 OFFCURVE",
"237 370 OFFCURVE",
"230 370 CURVE SMOOTH",
"215 370 OFFCURVE",
"201 363 OFFCURVE",
"188 349 CURVE SMOOTH",
"173 333 LINE SMOOTH",
"168 327 OFFCURVE",
"164 321 OFFCURVE",
"159 316 CURVE SMOOTH",
"153 310 OFFCURVE",
"150 305 OFFCURVE",
"150 302 CURVE SMOOTH",
"150 300 OFFCURVE",
"151 299 OFFCURVE",
"153 299 CURVE SMOOTH",
"156 299 OFFCURVE",
"161 302 OFFCURVE",
"166 307 CURVE SMOOTH",
"187 328 OFFCURVE",
"204 338 OFFCURVE",
"219 338 CURVE SMOOTH",
"228 338 OFFCURVE",
"237 335 OFFCURVE",
"248 330 CURVE SMOOTH",
"258 325 OFFCURVE",
"274 315 OFFCURVE",
"295 300 CURVE SMOOTH",
"315 287 OFFCURVE",
"332 279 OFFCURVE",
"345 279 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 367;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = logicalnot;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"106 -77 OFFCURVE",
"116 -75 OFFCURVE",
"127 -72 CURVE SMOOTH",
"148 -65 OFFCURVE",
"170 -55 OFFCURVE",
"191 -42 CURVE",
"245 -2 LINE SMOOTH",
"251 3 OFFCURVE",
"255 8 OFFCURVE",
"258 14 CURVE SMOOTH",
"260 19 OFFCURVE",
"259 22 OFFCURVE",
"256 22 CURVE SMOOTH",
"253 22 OFFCURVE",
"250 21 OFFCURVE",
"247 18 CURVE",
"195 -21 LINE SMOOTH",
"175 -34 OFFCURVE",
"151 -43 OFFCURVE",
"124 -48 CURVE SMOOTH",
"121 -49 OFFCURVE",
"117 -49 OFFCURVE",
"112 -49 CURVE SMOOTH",
"88 -49 OFFCURVE",
"76 -33 OFFCURVE",
"76 -1 CURVE SMOOTH",
"76 14 OFFCURVE",
"78 28 OFFCURVE",
"83 43 CURVE SMOOTH",
"98 91 OFFCURVE",
"124 147 OFFCURVE",
"161 212 CURVE",
"167 216 LINE",
"170 217 OFFCURVE",
"172 218 OFFCURVE",
"173 219 CURVE",
"439 354 LINE",
"564 425 OFFCURVE",
"632 497 OFFCURVE",
"643 570 CURVE SMOOTH",
"648 609 OFFCURVE",
"626 637 OFFCURVE",
"590 637 CURVE SMOOTH",
"485 637 OFFCURVE",
"359 540 OFFCURVE",
"213 347 CURVE SMOOTH",
"184 308 OFFCURVE",
"156 266 OFFCURVE",
"127 217 CURVE",
"102 194 LINE SMOOTH",
"89 182 OFFCURVE",
"83 174 OFFCURVE",
"83 170 CURVE SMOOTH",
"83 166 OFFCURVE",
"85 164 OFFCURVE",
"89 164 CURVE SMOOTH",
"91 164 OFFCURVE",
"94 165 OFFCURVE",
"98 166 CURVE",
"56 87 OFFCURVE",
"35 30 OFFCURVE",
"35 -3 CURVE SMOOTH",
"35 -52 OFFCURVE",
"56 -77 OFFCURVE",
"98 -77 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"195 267 OFFCURVE",
"216 297 OFFCURVE",
"237 325 CURVE SMOOTH",
"275 374 OFFCURVE",
"307 414 OFFCURVE",
"332 445 CURVE SMOOTH",
"357 476 OFFCURVE",
"375 497 OFFCURVE",
"387 510 CURVE SMOOTH",
"458 583 OFFCURVE",
"524 620 OFFCURVE",
"583 620 CURVE SMOOTH",
"606 620 OFFCURVE",
"615 590 OFFCURVE",
"612 569 CURVE SMOOTH",
"605 519 OFFCURVE",
"572 471 OFFCURVE",
"513 424 CURVE SMOOTH",
"472 390 OFFCURVE",
"413 353 OFFCURVE",
"335 314 CURVE SMOOTH",
"255 275 LINE SMOOTH",
"228 262 OFFCURVE",
"202 248 OFFCURVE",
"175 235 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 1070 30 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 10 213 10 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01232 28 42 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01256 28 42 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 249;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = asciicircum;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"313 360 OFFCURVE",
"322 363 OFFCURVE",
"334 372 CURVE SMOOTH",
"347 381 OFFCURVE",
"353 388 OFFCURVE",
"354 395 CURVE",
"340 391 OFFCURVE",
"320 405 OFFCURVE",
"293 438 CURVE SMOOTH",
"266 471 OFFCURVE",
"250 487 OFFCURVE",
"244 487 CURVE SMOOTH",
"242 487 OFFCURVE",
"241 487 OFFCURVE",
"240 486 CURVE SMOOTH",
"219 471 OFFCURVE",
"179 444 OFFCURVE",
"120 405 CURVE SMOOTH",
"105 395 OFFCURVE",
"95 385 OFFCURVE",
"90 376 CURVE SMOOTH",
"87 368 OFFCURVE",
"88 364 OFFCURVE",
"95 364 CURVE SMOOTH",
"98 364 OFFCURVE",
"103 366 OFFCURVE",
"108 370 CURVE SMOOTH",
"160 412 OFFCURVE",
"196 433 OFFCURVE",
"213 433 CURVE SMOOTH",
"221 433 OFFCURVE",
"237 422 OFFCURVE",
"261 399 CURVE SMOOTH",
"272 388 OFFCURVE",
"282 379 OFFCURVE",
"290 373 CURVE SMOOTH",
"298 367 OFFCURVE",
"304 363 OFFCURVE",
"307 362 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 459;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = infinity;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"170 154 OFFCURVE",
"210 165 OFFCURVE",
"251 187 CURVE",
"280 207 OFFCURVE",
"309 227 OFFCURVE",
"340 246 CURVE SMOOTH",
"353 255 OFFCURVE",
"364 263 OFFCURVE",
"373 271 CURVE",
"373 229 OFFCURVE",
"385 201 OFFCURVE",
"409 186 CURVE SMOOTH",
"424 177 OFFCURVE",
"442 172 OFFCURVE",
"461 172 CURVE SMOOTH",
"500 172 OFFCURVE",
"541 187 OFFCURVE",
"586 218 CURVE SMOOTH",
"667 274 OFFCURVE",
"704 340 OFFCURVE",
"704 389 CURVE SMOOTH",
"704 394 OFFCURVE",
"703 399 OFFCURVE",
"702 406 CURVE SMOOTH",
"690 457 OFFCURVE",
"665 482 OFFCURVE",
"628 482 CURVE SMOOTH",
"577 482 OFFCURVE",
"505 436 OFFCURVE",
"412 343 CURVE",
"411 395 OFFCURVE",
"396 430 OFFCURVE",
"366 449 CURVE SMOOTH",
"343 463 OFFCURVE",
"316 470 OFFCURVE",
"287 470 CURVE SMOOTH",
"228 470 OFFCURVE",
"170 447 OFFCURVE",
"112 401 CURVE SMOOTH",
"51 352 OFFCURVE",
"21 298 OFFCURVE",
"21 239 CURVE SMOOTH",
"21 196 OFFCURVE",
"38 171 OFFCURVE",
"72 162 CURVE SMOOTH",
"93 157 OFFCURVE",
"113 154 OFFCURVE",
"131 154 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"65 171 OFFCURVE",
"42 190 OFFCURVE",
"42 227 CURVE SMOOTH",
"42 252 OFFCURVE",
"54 285 OFFCURVE",
"78 324 CURVE SMOOTH",
"99 357 OFFCURVE",
"126 384 OFFCURVE",
"160 406 CURVE SMOOTH",
"199 431 OFFCURVE",
"236 443 OFFCURVE",
"272 443 CURVE SMOOTH",
"297 443 OFFCURVE",
"320 437 OFFCURVE",
"339 424 CURVE SMOOTH",
"357 413 OFFCURVE",
"368 396 OFFCURVE",
"372 371 CURVE SMOOTH",
"374 362 OFFCURVE",
"375 349 OFFCURVE",
"375 333 CURVE SMOOTH",
"375 324 OFFCURVE",
"374 315 OFFCURVE",
"374 305 CURVE",
"331 264 OFFCURVE",
"285 230 OFFCURVE",
"235 205 CURVE SMOOTH",
"189 182 OFFCURVE",
"148 171 OFFCURVE",
"112 171 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"473 204 OFFCURVE",
"459 208 OFFCURVE",
"446 216 CURVE SMOOTH",
"424 229 OFFCURVE",
"413 259 OFFCURVE",
"412 305 CURVE",
"447 338 OFFCURVE",
"481 370 OFFCURVE",
"516 402 CURVE SMOOTH",
"551 435 OFFCURVE",
"580 451 OFFCURVE",
"603 451 CURVE SMOOTH",
"652 451 OFFCURVE",
"676 425 OFFCURVE",
"676 373 CURVE SMOOTH",
"676 348 OFFCURVE",
"671 327 OFFCURVE",
"662 312 CURVE SMOOTH",
"645 285 OFFCURVE",
"621 262 OFFCURVE",
"590 241 CURVE SMOOTH",
"555 216 OFFCURVE",
"521 204 OFFCURVE",
"490 204 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01230 1066 59 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1070 47 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 1065 2 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 2 218 2 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 47 218 47 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 47 121 47 137 47 153 47 169 47 185 47 201 47 217 47 233 47 249 47 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 47 25 47 41 47 57 47 73 47 89 47 105 47 121 47 137 47 153 47 169 47 185 47 201 47 217 47 233 47 249 47 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 47 25 47 41 47 57 47 73 47 89 47 105 47 121 47 137 47 153 47 169 47 185 47 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01213 1064 43 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 1063 24 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01269 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 728;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = integral;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-238 -300 OFFCURVE",
"-183 -272 OFFCURVE",
"-129 -221 CURVE SMOOTH",
"-81 -173 OFFCURVE",
"-20 -93 OFFCURVE",
"19 -20 CURVE SMOOTH",
"55 49 OFFCURVE",
"103 135 OFFCURVE",
"170 235 CURVE SMOOTH",
"245 346 OFFCURVE",
"374 486 OFFCURVE",
"443 486 CURVE SMOOTH",
"465 486 OFFCURVE",
"485 478 OFFCURVE",
"504 461 CURVE",
"511 458 OFFCURVE",
"516 456 OFFCURVE",
"521 456 CURVE SMOOTH",
"537 456 OFFCURVE",
"538 476 OFFCURVE",
"538 491 CURVE SMOOTH",
"538 494 OFFCURVE",
"536 496 OFFCURVE",
"533 497 CURVE SMOOTH",
"514 506 OFFCURVE",
"494 511 OFFCURVE",
"473 511 CURVE SMOOTH",
"420 511 OFFCURVE",
"367 490 OFFCURVE",
"313 448 CURVE SMOOTH",
"265 411 OFFCURVE",
"216 359 OFFCURVE",
"169 290 CURVE SMOOTH",
"104 194 OFFCURVE",
"39 103 OFFCURVE",
"-14 -5 CURVE SMOOTH",
"-74 -126 OFFCURVE",
"-185 -265 OFFCURVE",
"-254 -271 CURVE SMOOTH",
"-275 -274 OFFCURVE",
"-297 -268 OFFCURVE",
"-317 -252 CURVE",
"-323 -250 OFFCURVE",
"-328 -249 OFFCURVE",
"-332 -249 CURVE SMOOTH",
"-351 -249 OFFCURVE",
"-348 -270 OFFCURVE",
"-348 -286 CURVE SMOOTH",
"-348 -289 OFFCURVE",
"-346 -291 OFFCURVE",
"-343 -291 CURVE",
"-328 -297 OFFCURVE",
"-312 -300 OFFCURVE",
"-296 -300 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01232 1063 43 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 239;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = Omega;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"364 -8 OFFCURVE",
"366 -7 OFFCURVE",
"368 -6 CURVE",
"368 -5 LINE SMOOTH",
"368 -4 OFFCURVE",
"368 -4 OFFCURVE",
"369 -4 CURVE",
"378 2 OFFCURVE",
"388 4 OFFCURVE",
"397 4 CURVE SMOOTH",
"420 4 OFFCURVE",
"443 -8 OFFCURVE",
"473 -8 CURVE SMOOTH",
"500 -8 OFFCURVE",
"527 4 OFFCURVE",
"547 60 CURVE",
"548 65 OFFCURVE",
"549 69 OFFCURVE",
"549 72 CURVE SMOOTH",
"549 76 OFFCURVE",
"548 78 OFFCURVE",
"546 78 CURVE SMOOTH",
"543 78 OFFCURVE",
"538 72 OFFCURVE",
"534 62 CURVE SMOOTH",
"521 27 OFFCURVE",
"503 17 OFFCURVE",
"480 17 CURVE SMOOTH",
"467 17 OFFCURVE",
"453 19 OFFCURVE",
"439 24 CURVE SMOOTH",
"424 29 OFFCURVE",
"410 32 OFFCURVE",
"397 33 CURVE",
"410 54 OFFCURVE",
"425 77 OFFCURVE",
"442 101 CURVE SMOOTH",
"458 124 OFFCURVE",
"472 149 OFFCURVE",
"483 174 CURVE SMOOTH",
"500 210 OFFCURVE",
"516 264 OFFCURVE",
"527 305 CURVE SMOOTH",
"534 337 OFFCURVE",
"537 369 OFFCURVE",
"537 398 CURVE SMOOTH",
"537 485 OFFCURVE",
"507 550 OFFCURVE",
"460 587 CURVE SMOOTH",
"429 612 OFFCURVE",
"389 625 OFFCURVE",
"349 625 CURVE SMOOTH",
"274 625 OFFCURVE",
"197 584 OFFCURVE",
"150 516 CURVE SMOOTH",
"115 465 OFFCURVE",
"104 406 OFFCURVE",
"104 342 CURVE SMOOTH",
"104 230 OFFCURVE",
"146 109 OFFCURVE",
"202 26 CURVE",
"185 26 OFFCURVE",
"99 55 OFFCURVE",
"67 55 CURVE SMOOTH",
"37 55 OFFCURVE",
"15 45 OFFCURVE",
"15 16 CURVE SMOOTH",
"15 -3 OFFCURVE",
"33 -12 OFFCURVE",
"33 1 CURVE SMOOTH",
"33 8 OFFCURVE",
"35 21 OFFCURVE",
"44 24 CURVE SMOOTH",
"50 25 OFFCURVE",
"56 26 OFFCURVE",
"62 26 CURVE SMOOTH",
"101 26 OFFCURVE",
"143 7 OFFCURVE",
"184 7 CURVE SMOOTH",
"195 7 OFFCURVE",
"206 8 OFFCURVE",
"217 12 CURVE",
"223 16 OFFCURVE",
"226 21 OFFCURVE",
"226 27 CURVE SMOOTH",
"226 31 OFFCURVE",
"224 36 OFFCURVE",
"221 40 CURVE SMOOTH",
"174 110 OFFCURVE",
"143 230 OFFCURVE",
"143 326 CURVE SMOOTH",
"143 378 OFFCURVE",
"151 426 OFFCURVE",
"170 462 CURVE SMOOTH",
"207 533 OFFCURVE",
"273 566 OFFCURVE",
"334 566 CURVE SMOOTH",
"404 566 OFFCURVE",
"468 523 OFFCURVE",
"486 448 CURVE SMOOTH",
"491 425 OFFCURVE",
"494 402 OFFCURVE",
"494 375 CURVE SMOOTH",
"494 251 OFFCURVE",
"431 83 OFFCURVE",
"353 21 CURVE",
"352 17 OFFCURVE",
"351 13 OFFCURVE",
"351 10 CURVE SMOOTH",
"351 0 OFFCURVE",
"355 -8 OFFCURVE",
"362 -8 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01259 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01264 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01266 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01247 1061 0 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01250 1062 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 567;
}
);
note = Omega;
unicode = 2126;
},
{
glyphname = Delta;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"427 -4 LINE",
"444 7 OFFCURVE",
"465 28 OFFCURVE",
"465 55 CURVE SMOOTH",
"465 57 OFFCURVE",
"464 59 OFFCURVE",
"463 60 CURVE",
"300 440 LINE",
"299 441 OFFCURVE",
"297 442 OFFCURVE",
"295 442 CURVE SMOOTH",
"288 442 OFFCURVE",
"273 426 OFFCURVE",
"268 413 CURVE",
"267 412 LINE",
"80 31 LINE",
"78 29 OFFCURVE",
"77 26 OFFCURVE",
"77 23 CURVE SMOOTH",
"77 12 OFFCURVE",
"85 -4 OFFCURVE",
"92 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"275 374 LINE",
"418 35 LINE",
"108 35 LINE"
);
}
);
width = 553;
}
);
note = Delta;
unicode = 2206;
},
{
glyphname = product;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"297 -23 OFFCURVE",
"305 -21 OFFCURVE",
"315 -18 CURVE SMOOTH",
"330 -14 OFFCURVE",
"351 6 OFFCURVE",
"380 41 CURVE SMOOTH",
"407 78 OFFCURVE",
"420 103 OFFCURVE",
"420 117 CURVE SMOOTH",
"420 118 OFFCURVE",
"419 119 OFFCURVE",
"417 120 CURVE",
"414 120 OFFCURVE",
"411 116 OFFCURVE",
"408 109 CURVE SMOOTH",
"380 58 OFFCURVE",
"358 26 OFFCURVE",
"343 15 CURVE SMOOTH",
"325 1 OFFCURVE",
"310 -6 OFFCURVE",
"298 -6 CURVE SMOOTH",
"279 -6 OFFCURVE",
"270 13 OFFCURVE",
"270 51 CURVE SMOOTH",
"270 82 OFFCURVE",
"274 116 OFFCURVE",
"285 156 CURVE",
"329 356 LINE",
"373 353 OFFCURVE",
"410 366 OFFCURVE",
"440 394 CURVE SMOOTH",
"448 401 OFFCURVE",
"452 408 OFFCURVE",
"452 415 CURVE SMOOTH",
"452 419 OFFCURVE",
"450 421 OFFCURVE",
"447 421 CURVE",
"413 398 OFFCURVE",
"385 386 OFFCURVE",
"362 386 CURVE SMOOTH",
"340 386 OFFCURVE",
"307 393 OFFCURVE",
"264 406 CURVE SMOOTH",
"222 420 OFFCURVE",
"190 427 OFFCURVE",
"167 427 CURVE SMOOTH",
"124 427 OFFCURVE",
"83 408 OFFCURVE",
"42 369 CURVE SMOOTH",
"35 362 OFFCURVE",
"32 355 OFFCURVE",
"32 348 CURVE SMOOTH",
"32 345 OFFCURVE",
"34 344 OFFCURVE",
"37 344 CURVE SMOOTH",
"38 344 OFFCURVE",
"41 345 OFFCURVE",
"44 347 CURVE SMOOTH",
"75 374 OFFCURVE",
"112 388 OFFCURVE",
"155 388 CURVE SMOOTH",
"158 388 LINE",
"158 308 OFFCURVE",
"137 132 OFFCURVE",
"126 81 CURVE",
"115 49 LINE SMOOTH",
"108 32 OFFCURVE",
"105 20 OFFCURVE",
"105 15 CURVE SMOOTH",
"105 12 OFFCURVE",
"108 11 OFFCURVE",
"114 11 CURVE SMOOTH",
"117 11 OFFCURVE",
"120 12 OFFCURVE",
"122 15 CURVE SMOOTH",
"160 88 OFFCURVE",
"191 279 OFFCURVE",
"194 385 CURVE",
"215 380 OFFCURVE",
"234 375 OFFCURVE",
"250 372 CURVE SMOOTH",
"265 369 OFFCURVE",
"278 365 OFFCURVE",
"289 362 CURVE",
"268 301 OFFCURVE",
"241 126 OFFCURVE",
"241 48 CURVE SMOOTH",
"241 1 OFFCURVE",
"257 -23 OFFCURVE",
"290 -23 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1065 30 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 30 218 30 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01226 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01228 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01266 1064 55 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01214 1062 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 14 119 14 135 14 151 14 167 14 183 14 199 14 215 14 231 14 247 14 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 14 23 14 39 14 55 14 71 14 87 14 103 14 119 14 135 14 151 14 167 14 183 14 199 14 215 14 231 14 247 14 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 14 23 14 39 14 55 14 71 14 87 14 103 14 119 14 135 14 151 14 167 14 183 14 199 14 215 14 231 14 247 14 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 495;
}
);
note = product;
unicode = 220F;
},
{
glyphname = summation;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"371 0 LINE",
"345 31 LINE",
"78 25 LINE",
"281 226 LINE",
"131 411 LINE",
"353 402 LINE",
"371 433 LINE",
"53 433 LINE",
"232 214 LINE",
"21 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0125 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\0123 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 452;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = radical;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"282 152 LINE SMOOTH",
"302 187 OFFCURVE",
"324 224 OFFCURVE",
"348 265 CURVE SMOOTH",
"386 329 OFFCURVE",
"447 430 OFFCURVE",
"479 484 CURVE SMOOTH",
"521 556 LINE",
"518 559 OFFCURVE",
"512 561 OFFCURVE",
"508 561 CURVE SMOOTH",
"505 561 OFFCURVE",
"503 560 OFFCURVE",
"502 557 CURVE",
"458 494 OFFCURVE",
"401 407 OFFCURVE",
"347 321 CURVE SMOOTH",
"293 235 OFFCURVE",
"242 151 OFFCURVE",
"210 95 CURVE",
"197 115 OFFCURVE",
"176 235 OFFCURVE",
"160 254 CURVE",
"158 253 LINE",
"158 250 OFFCURVE",
"59 159 OFFCURVE",
"59 153 CURVE",
"58 150 OFFCURVE",
"62 145 OFFCURVE",
"64 145 CURVE SMOOTH",
"65 145 OFFCURVE",
"66 146 OFFCURVE",
"66 146 CURVE",
"78 154 OFFCURVE",
"91 165 OFFCURVE",
"106 180 CURVE SMOOTH",
"121 195 OFFCURVE",
"134 207 OFFCURVE",
"147 216 CURVE",
"148 218 LINE",
"199 12 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0125 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01224 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 527;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = mu;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"-125 -362 OFFCURVE",
"-125 -360 OFFCURVE",
"-126 -357 CURVE SMOOTH",
"-127 -354 OFFCURVE",
"-128 -351 OFFCURVE",
"-129 -350 CURVE SMOOTH",
"-130 -349 OFFCURVE",
"-130 -348 OFFCURVE",
"-130 -347 CURVE SMOOTH",
"-131 -335 OFFCURVE",
"-132 -326 OFFCURVE",
"-132 -315 CURVE SMOOTH",
"-132 -219 OFFCURVE",
"-81 -120 OFFCURVE",
"3 15 CURVE",
"6 8 OFFCURVE",
"11 5 OFFCURVE",
"17 5 CURVE SMOOTH",
"19 5 LINE SMOOTH",
"37 6 OFFCURVE",
"69 20 OFFCURVE",
"114 47 CURVE SMOOTH",
"190 97 LINE SMOOTH",
"212 112 OFFCURVE",
"232 127 OFFCURVE",
"249 140 CURVE SMOOTH",
"266 153 OFFCURVE",
"282 164 OFFCURVE",
"295 173 CURVE",
"266 116 OFFCURVE",
"240 66 OFFCURVE",
"213 25 CURVE",
"211 17 LINE",
"211 4 OFFCURVE",
"218 -2 OFFCURVE",
"233 -2 CURVE SMOOTH",
"238 -2 OFFCURVE",
"248 3 OFFCURVE",
"261 12 CURVE SMOOTH",
"270 19 OFFCURVE",
"276 24 OFFCURVE",
"281 27 CURVE SMOOTH",
"286 30 OFFCURVE",
"289 31 OFFCURVE",
"290 32 CURVE",
"313 45 OFFCURVE",
"333 57 OFFCURVE",
"356 69 CURVE SMOOTH",
"381 82 OFFCURVE",
"407 92 OFFCURVE",
"433 99 CURVE SMOOTH",
"443 102 OFFCURVE",
"448 106 OFFCURVE",
"448 112 CURVE SMOOTH",
"448 116 OFFCURVE",
"445 118 OFFCURVE",
"440 118 CURVE SMOOTH",
"438 118 OFFCURVE",
"435 117 OFFCURVE",
"431 116 CURVE SMOOTH",
"362 89 OFFCURVE",
"312 69 OFFCURVE",
"277 54 CURVE",
"329 158 LINE SMOOTH",
"342 183 OFFCURVE",
"364 213 OFFCURVE",
"395 250 CURVE SMOOTH",
"398 253 OFFCURVE",
"399 256 OFFCURVE",
"399 259 CURVE SMOOTH",
"399 265 OFFCURVE",
"394 268 OFFCURVE",
"385 268 CURVE SMOOTH",
"378 268 OFFCURVE",
"372 265 OFFCURVE",
"365 260 CURVE",
"321 218 OFFCURVE",
"267 176 OFFCURVE",
"203 133 CURVE SMOOTH",
"176 114 OFFCURVE",
"148 96 OFFCURVE",
"120 77 CURVE SMOOTH",
"87 56 OFFCURVE",
"65 45 OFFCURVE",
"55 45 CURVE SMOOTH",
"50 45 OFFCURVE",
"47 48 OFFCURVE",
"47 53 CURVE SMOOTH",
"47 71 OFFCURVE",
"63 101 OFFCURVE",
"95 142 CURVE SMOOTH",
"131 189 OFFCURVE",
"167 232 OFFCURVE",
"203 275 CURVE",
"204 278 OFFCURVE",
"205 280 OFFCURVE",
"205 282 CURVE SMOOTH",
"205 289 OFFCURVE",
"201 292 OFFCURVE",
"194 292 CURVE SMOOTH",
"191 292 OFFCURVE",
"187 291 OFFCURVE",
"182 288 CURVE SMOOTH",
"171 282 OFFCURVE",
"155 276 OFFCURVE",
"136 270 CURVE SMOOTH",
"119 265 OFFCURVE",
"111 261 OFFCURVE",
"110 258 CURVE SMOOTH",
"107 249 OFFCURVE",
"105 242 OFFCURVE",
"104 236 CURVE SMOOTH",
"103 229 OFFCURVE",
"101 224 OFFCURVE",
"100 219 CURVE",
"91 203 OFFCURVE",
"82 189 OFFCURVE",
"74 177 CURVE SMOOTH",
"-17 54 OFFCURVE",
"-74 -48 OFFCURVE",
"-109 -129 CURVE SMOOTH",
"-144 -210 OFFCURVE",
"-156 -272 OFFCURVE",
"-156 -315 CURVE SMOOTH",
"-156 -346 OFFCURVE",
"-146 -362 OFFCURVE",
"-127 -362 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 1067 38 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01217 36 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01225 36 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01282 36 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 381;
}
);
note = mu;
unicode = 00B5;
},
{
glyphname = partialdiff;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"209 -19 OFFCURVE",
"375 252 OFFCURVE",
"395 394 CURVE SMOOTH",
"398 412 OFFCURVE",
"399 430 OFFCURVE",
"399 446 CURVE SMOOTH",
"399 555 OFFCURVE",
"342 615 OFFCURVE",
"251 615 CURVE SMOOTH",
"226 615 OFFCURVE",
"217 604 OFFCURVE",
"190 595 CURVE SMOOTH",
"142 580 OFFCURVE",
"133 560 OFFCURVE",
"130 544 CURVE SMOOTH",
"129 534 OFFCURVE",
"135 531 OFFCURVE",
"140 531 CURVE",
"150 544 OFFCURVE",
"163 560 OFFCURVE",
"184 573 CURVE SMOOTH",
"207 586 OFFCURVE",
"228 591 OFFCURVE",
"243 591 CURVE SMOOTH",
"318 591 OFFCURVE",
"348 530 OFFCURVE",
"348 447 CURVE SMOOTH",
"348 272 OFFCURVE",
"213 0 OFFCURVE",
"70 0 CURVE SMOOTH",
"55 0 OFFCURVE",
"47 8 OFFCURVE",
"47 25 CURVE SMOOTH",
"47 27 OFFCURVE",
"48 31 OFFCURVE",
"48 34 CURVE SMOOTH",
"59 113 OFFCURVE",
"165 211 OFFCURVE",
"218 239 CURVE SMOOTH",
"267 265 OFFCURVE",
"281 274 OFFCURVE",
"281 288 CURVE SMOOTH",
"281 294 OFFCURVE",
"279 299 OFFCURVE",
"272 299 CURVE SMOOTH",
"235 299 OFFCURVE",
"158 255 OFFCURVE",
"97 192 CURVE SMOOTH",
"51 144 OFFCURVE",
"10 77 OFFCURVE",
"10 32 CURVE SMOOTH",
"10 2 OFFCURVE",
"28 -19 OFFCURVE",
"74 -19 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1068 27 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 27 218 27 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01223 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01243 1061 31 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 339;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = percent;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"23 -26 OFFCURVE",
"34 -13 OFFCURVE",
"34 0 CURVE SMOOTH",
"34 80 OFFCURVE",
"92 186 OFFCURVE",
"208 317 CURVE SMOOTH",
"268 385 OFFCURVE",
"357 469 OFFCURVE",
"478 577 CURVE SMOOTH",
"480 579 OFFCURVE",
"481 581 OFFCURVE",
"481 584 CURVE SMOOTH",
"481 593 OFFCURVE",
"465 603 OFFCURVE",
"452 603 CURVE SMOOTH",
"447 603 OFFCURVE",
"443 602 OFFCURVE",
"440 599 CURVE SMOOTH",
"336 507 OFFCURVE",
"249 415 OFFCURVE",
"174 322 CURVE SMOOTH",
"65 185 OFFCURVE",
"10 72 OFFCURVE",
"10 -17 CURVE SMOOTH",
"10 -23 OFFCURVE",
"12 -26 OFFCURVE",
"16 -26 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"187 21 OFFCURVE",
"182 26 OFFCURVE",
"182 33 CURVE SMOOTH",
"182 36 LINE SMOOTH",
"185 55 OFFCURVE",
"200 80 OFFCURVE",
"225 111 CURVE SMOOTH",
"244 134 OFFCURVE",
"260 151 OFFCURVE",
"271 164 CURVE SMOOTH",
"282 176 OFFCURVE",
"290 183 OFFCURVE",
"293 186 CURVE",
"298 188 OFFCURVE",
"303 189 OFFCURVE",
"309 189 CURVE SMOOTH",
"319 189 OFFCURVE",
"351 178 OFFCURVE",
"357 178 CURVE",
"360 175 OFFCURVE",
"362 170 OFFCURVE",
"362 165 CURVE SMOOTH",
"362 154 OFFCURVE",
"354 139 OFFCURVE",
"339 120 CURVE SMOOTH",
"326 104 OFFCURVE",
"313 91 OFFCURVE",
"300 80 CURVE SMOOTH",
"264 53 OFFCURVE",
"230 34 OFFCURVE",
"199 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"186 0 OFFCURVE",
"194 1 OFFCURVE",
"203 4 CURVE SMOOTH",
"239 15 OFFCURVE",
"278 37 OFFCURVE",
"320 68 CURVE SMOOTH",
"338 82 OFFCURVE",
"355 99 OFFCURVE",
"372 120 CURVE SMOOTH",
"391 145 OFFCURVE",
"400 165 OFFCURVE",
"400 181 CURVE SMOOTH",
"400 184 OFFCURVE",
"399 187 OFFCURVE",
"398 191 CURVE",
"391 194 OFFCURVE",
"384 198 OFFCURVE",
"377 201 CURVE SMOOTH",
"355 210 LINE SMOOTH",
"332 220 OFFCURVE",
"315 225 OFFCURVE",
"304 225 CURVE SMOOTH",
"289 225 OFFCURVE",
"269 211 OFFCURVE",
"243 182 CURVE SMOOTH",
"193 121 LINE SMOOTH",
"167 90 OFFCURVE",
"151 59 OFFCURVE",
"151 28 CURVE SMOOTH",
"151 9 OFFCURVE",
"160 0 OFFCURVE",
"177 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"43 396 OFFCURVE",
"40 400 OFFCURVE",
"40 407 CURVE SMOOTH",
"40 417 OFFCURVE",
"46 433 OFFCURVE",
"58 455 CURVE SMOOTH",
"69 474 OFFCURVE",
"76 486 OFFCURVE",
"83 493 CURVE SMOOTH",
"110 525 OFFCURVE",
"130 545 OFFCURVE",
"141 553 CURVE",
"173 560 OFFCURVE",
"197 562 OFFCURVE",
"214 561 CURVE",
"217 558 OFFCURVE",
"219 553 OFFCURVE",
"219 547 CURVE SMOOTH",
"219 534 OFFCURVE",
"212 518 OFFCURVE",
"198 497 CURVE SMOOTH",
"185 479 OFFCURVE",
"172 465 OFFCURVE",
"159 455 CURVE SMOOTH",
"120 425 OFFCURVE",
"86 406 OFFCURVE",
"58 397 CURVE SMOOTH",
"56 396 OFFCURVE",
"53 396 OFFCURVE",
"50 396 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"40 376 OFFCURVE",
"49 378 OFFCURVE",
"61 381 CURVE SMOOTH",
"99 392 OFFCURVE",
"140 414 OFFCURVE",
"183 447 CURVE SMOOTH",
"243 493 OFFCURVE",
"273 530 OFFCURVE",
"273 559 CURVE SMOOTH",
"273 563 OFFCURVE",
"273 566 OFFCURVE",
"272 568 CURVE",
"394 575 LINE SMOOTH",
"402 576 OFFCURVE",
"406 579 OFFCURVE",
"406 586 CURVE SMOOTH",
"406 593 OFFCURVE",
"401 597 OFFCURVE",
"392 597 CURVE SMOOTH",
"213 592 LINE",
"210 593 OFFCURVE",
"207 595 OFFCURVE",
"203 597 CURVE SMOOTH",
"198 599 OFFCURVE",
"193 602 OFFCURVE",
"188 605 CURVE SMOOTH",
"181 609 OFFCURVE",
"174 612 OFFCURVE",
"167 612 CURVE SMOOTH",
"154 612 OFFCURVE",
"140 602 OFFCURVE",
"129 594 CURVE SMOOTH",
"120 589 OFFCURVE",
"106 587 OFFCURVE",
"87 587 CURVE SMOOTH",
"79 587 OFFCURVE",
"75 584 OFFCURVE",
"75 578 CURVE SMOOTH",
"75 573 OFFCURVE",
"78 569 OFFCURVE",
"85 567 CURVE",
"93 563 OFFCURVE",
"98 561 OFFCURVE",
"99 561 CURVE",
"78 537 OFFCURVE",
"62 517 OFFCURVE",
"51 502 CURVE SMOOTH",
"21 467 OFFCURVE",
"7 436 OFFCURVE",
"7 407 CURVE SMOOTH",
"7 386 OFFCURVE",
"16 376 OFFCURVE",
"34 376 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01242 1067 47 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01242 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01267 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01269 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01224 1063 1 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 433;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = perthousand;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"16 -116 OFFCURVE",
"18 -113 OFFCURVE",
"18 -107 CURVE SMOOTH",
"19 -102 OFFCURVE",
"19 -98 OFFCURVE",
"19 -95 CURVE SMOOTH",
"19 -90 LINE",
"37 -27 OFFCURVE",
"81 50 OFFCURVE",
"152 141 CURVE SMOOTH",
"274 298 OFFCURVE",
"467 486 OFFCURVE",
"730 704 CURVE",
"735 710 LINE",
"734 713 OFFCURVE",
"729 715 OFFCURVE",
"722 715 CURVE SMOOTH",
"715 715 OFFCURVE",
"710 715 OFFCURVE",
"708 714 CURVE",
"697 741 OFFCURVE",
"651 755 OFFCURVE",
"570 755 CURVE SMOOTH",
"537 755 OFFCURVE",
"499 752 OFFCURVE",
"454 746 CURVE SMOOTH",
"415 739 OFFCURVE",
"377 734 OFFCURVE",
"338 729 CURVE",
"309 735 LINE",
"310 731 OFFCURVE",
"314 726 OFFCURVE",
"321 721 CURVE SMOOTH",
"328 716 OFFCURVE",
"331 711 OFFCURVE",
"332 707 CURVE",
"339 696 OFFCURVE",
"342 684 OFFCURVE",
"342 670 CURVE SMOOTH",
"342 627 OFFCURVE",
"330 582 OFFCURVE",
"307 533 CURVE SMOOTH",
"284 486 OFFCURVE",
"255 447 OFFCURVE",
"221 417 CURVE SMOOTH",
"203 401 OFFCURVE",
"188 393 OFFCURVE",
"176 393 CURVE SMOOTH",
"165 393 OFFCURVE",
"160 399 OFFCURVE",
"160 410 CURVE SMOOTH",
"160 425 OFFCURVE",
"170 452 OFFCURVE",
"189 493 CURVE SMOOTH",
"208 531 OFFCURVE",
"223 557 OFFCURVE",
"235 571 CURVE",
"262 597 LINE SMOOTH",
"275 610 OFFCURVE",
"281 619 OFFCURVE",
"281 626 CURVE SMOOTH",
"281 636 OFFCURVE",
"274 641 OFFCURVE",
"260 641 CURVE SMOOTH",
"240 641 OFFCURVE",
"214 610 OFFCURVE",
"181 548 CURVE SMOOTH",
"150 489 OFFCURVE",
"135 448 OFFCURVE",
"135 423 CURVE SMOOTH",
"135 393 OFFCURVE",
"148 378 OFFCURVE",
"175 378 CURVE SMOOTH",
"217 378 OFFCURVE",
"262 416 OFFCURVE",
"311 493 CURVE SMOOTH",
"356 564 OFFCURVE",
"379 623 OFFCURVE",
"379 668 CURVE SMOOTH",
"379 694 OFFCURVE",
"371 712 OFFCURVE",
"355 721 CURVE",
"470 737 OFFCURVE",
"541 745 OFFCURVE",
"570 745 CURVE SMOOTH",
"645 745 OFFCURVE",
"687 734 OFFCURVE",
"698 711 CURVE",
"687 708 OFFCURVE",
"678 703 OFFCURVE",
"669 696 CURVE SMOOTH",
"570 621 OFFCURVE",
"450 507 OFFCURVE",
"310 355 CURVE SMOOTH",
"159 191 OFFCURVE",
"60 62 OFFCURVE",
"15 -32 CURVE SMOOTH",
"-1 -65 OFFCURVE",
"-9 -87 OFFCURVE",
"-9 -97 CURVE SMOOTH",
"-9 -106 OFFCURVE",
"3 -116 OFFCURVE",
"12 -116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"381 -19 OFFCURVE",
"422 18 OFFCURVE",
"465 92 CURVE SMOOTH",
"504 161 OFFCURVE",
"524 216 OFFCURVE",
"524 258 CURVE SMOOTH",
"524 303 OFFCURVE",
"502 326 OFFCURVE",
"458 326 CURVE SMOOTH",
"427 326 OFFCURVE",
"396 311 OFFCURVE",
"365 282 CURVE SMOOTH",
"334 253 OFFCURVE",
"319 224 OFFCURVE",
"319 193 CURVE SMOOTH",
"319 188 OFFCURVE",
"321 180 OFFCURVE",
"324 170 CURVE",
"329 170 LINE",
"329 199 OFFCURVE",
"342 230 OFFCURVE",
"369 263 CURVE SMOOTH",
"396 296 OFFCURVE",
"424 312 OFFCURVE",
"453 312 CURVE SMOOTH",
"478 312 OFFCURVE",
"490 293 OFFCURVE",
"490 256 CURVE SMOOTH",
"490 215 OFFCURVE",
"480 172 OFFCURVE",
"459 128 CURVE SMOOTH",
"439 83 OFFCURVE",
"414 47 OFFCURVE",
"384 18 CURVE SMOOTH",
"368 2 OFFCURVE",
"355 -6 OFFCURVE",
"344 -6 CURVE SMOOTH",
"331 -6 OFFCURVE",
"324 2 OFFCURVE",
"324 17 CURVE SMOOTH",
"324 38 OFFCURVE",
"343 76 OFFCURVE",
"380 131 CURVE SMOOTH",
"418 186 OFFCURVE",
"437 215 OFFCURVE",
"437 218 CURVE SMOOTH",
"437 228 OFFCURVE",
"431 233 OFFCURVE",
"419 233 CURVE SMOOTH",
"400 233 OFFCURVE",
"377 203 OFFCURVE",
"348 142 CURVE SMOOTH",
"321 84 OFFCURVE",
"307 44 OFFCURVE",
"307 23 CURVE SMOOTH",
"307 -5 OFFCURVE",
"319 -19 OFFCURVE",
"343 -19 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"621 -19 OFFCURVE",
"662 18 OFFCURVE",
"705 92 CURVE SMOOTH",
"744 161 OFFCURVE",
"764 216 OFFCURVE",
"764 258 CURVE SMOOTH",
"764 303 OFFCURVE",
"742 326 OFFCURVE",
"698 326 CURVE SMOOTH",
"667 326 OFFCURVE",
"636 311 OFFCURVE",
"605 282 CURVE SMOOTH",
"574 253 OFFCURVE",
"559 224 OFFCURVE",
"559 193 CURVE SMOOTH",
"559 188 OFFCURVE",
"561 180 OFFCURVE",
"564 170 CURVE",
"569 170 LINE",
"569 199 OFFCURVE",
"582 230 OFFCURVE",
"609 263 CURVE SMOOTH",
"636 296 OFFCURVE",
"664 312 OFFCURVE",
"693 312 CURVE SMOOTH",
"718 312 OFFCURVE",
"730 293 OFFCURVE",
"730 256 CURVE SMOOTH",
"730 215 OFFCURVE",
"720 172 OFFCURVE",
"699 128 CURVE SMOOTH",
"679 83 OFFCURVE",
"654 47 OFFCURVE",
"624 18 CURVE SMOOTH",
"608 2 OFFCURVE",
"595 -6 OFFCURVE",
"584 -6 CURVE SMOOTH",
"571 -6 OFFCURVE",
"564 2 OFFCURVE",
"564 17 CURVE SMOOTH",
"564 38 OFFCURVE",
"583 76 OFFCURVE",
"620 131 CURVE SMOOTH",
"658 186 OFFCURVE",
"677 215 OFFCURVE",
"677 218 CURVE SMOOTH",
"677 228 OFFCURVE",
"671 233 OFFCURVE",
"659 233 CURVE SMOOTH",
"640 233 OFFCURVE",
"617 203 OFFCURVE",
"588 142 CURVE SMOOTH",
"561 84 OFFCURVE",
"547 44 OFFCURVE",
"547 23 CURVE SMOOTH",
"547 -5 OFFCURVE",
"559 -19 OFFCURVE",
"583 -19 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012110 1068 134 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012140 1066 116 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01271 1068 95 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01217 1069 44 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012101 1066 77 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 17 213 17 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01215 44 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 101 118 101 134 101 150 101 166 101 182 101 198 101 214 101 230 101 246 101 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 101 22 101 38 101 54 101 70 101 86 101 102 101 118 101 134 101 150 101 166 101 182 101 198 101 214 101 230 101 246 101 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 101 22 101 38 101 54 101 70 101 86 101 102 101 118 101 134 101 150 101 166 101 182 101 198 101 214 101 230 101 246 101 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01249 77 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012202 134 218 134 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 134 121 134 137 134 153 134 169 134 185 134 201 134 217 134 233 134 249 134 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 134 25 134 41 134 57 134 73 134 89 134 105 134 121 134 137 134 153 134 169 134 185 134 201 134 217 134 233 134 249 134 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 134 25 134 41 134 57 134 73 134 89 134 105 134 121 134 137 134 153 134 169 134 185 134 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01261 134 110 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012101 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012202 95 218 95 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 95 121 95 137 95 153 95 169 95 185 95 201 95 217 95 233 95 249 95 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 95 25 95 41 95 57 95 73 95 89 95 105 95 121 95 137 95 153 95 169 95 185 95 201 95 217 95 233 95 249 95 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 95 25 95 41 95 57 95 73 95 89 95 105 95 121 95 137 95 153 95 169 95 185 95 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 116 121 116 137 116 153 116 169 116 185 116 201 116 217 116 233 116 249 116 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 116 25 116 41 116 57 116 73 116 89 116 105 116 121 116 137 116 153 116 169 116 185 116 201 116 217 116 233 116 249 116 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 116 25 116 41 116 57 116 73 116 89 116 105 116 121 116 137 116 153 116 169 116 185 116 201 116 217 116 233 116 249 116 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012140 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012150 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01297 1075 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012136 1075 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01275 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012114 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012114 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01289 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012128 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01215 0 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01249 0 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01261 0 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012102 0 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012141 0 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 792;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = lozenge;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"189 20 OFFCURVE",
"194 24 OFFCURVE",
"198 32 CURVE SMOOTH",
"279 185 LINE SMOOTH",
"321 266 OFFCURVE",
"343 315 OFFCURVE",
"344 334 CURVE SMOOTH",
"344 337 OFFCURVE",
"343 340 OFFCURVE",
"342 347 CURVE",
"277 468 LINE SMOOTH",
"252 518 OFFCURVE",
"233 564 OFFCURVE",
"220 605 CURVE SMOOTH",
"217 615 OFFCURVE",
"213 620 OFFCURVE",
"208 620 CURVE SMOOTH",
"203 620 OFFCURVE",
"198 615 OFFCURVE",
"193 606 CURVE SMOOTH",
"112 452 LINE SMOOTH",
"70 371 OFFCURVE",
"48 322 OFFCURVE",
"47 303 CURVE SMOOTH",
"47 300 OFFCURVE",
"48 297 OFFCURVE",
"49 290 CURVE",
"110 178 OFFCURVE",
"150 93 OFFCURVE",
"171 32 CURVE SMOOTH",
"174 24 OFFCURVE",
"178 20 OFFCURVE",
"183 20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"149 187 OFFCURVE",
"119 275 OFFCURVE",
"95 342 CURVE",
"123 399 OFFCURVE",
"146 446 OFFCURVE",
"165 483 CURVE SMOOTH",
"183 520 OFFCURVE",
"196 548 OFFCURVE",
"205 567 CURVE",
"242 452 OFFCURVE",
"272 364 OFFCURVE",
"296 296 CURVE",
"227 156 LINE SMOOTH",
"208 119 OFFCURVE",
"195 90 OFFCURVE",
"186 71 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0120 30 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0126 30 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 408;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = apple;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"205 0 OFFCURVE",
"220 5 OFFCURVE",
"231 14 CURVE SMOOTH",
"242 21 OFFCURVE",
"256 24 OFFCURVE",
"272 24 CURVE SMOOTH",
"289 24 OFFCURVE",
"303 21 OFFCURVE",
"314 14 CURVE SMOOTH",
"327 5 OFFCURVE",
"343 0 OFFCURVE",
"361 0 CURVE SMOOTH",
"380 0 OFFCURVE",
"404 17 OFFCURVE",
"432 51 CURVE SMOOTH",
"456 80 OFFCURVE",
"473 108 OFFCURVE",
"482 137 CURVE",
"435 156 OFFCURVE",
"410 192 OFFCURVE",
"410 245 CURVE SMOOTH",
"410 291 OFFCURVE",
"429 325 OFFCURVE",
"468 348 CURVE",
"445 383 OFFCURVE",
"413 401 OFFCURVE",
"372 401 CURVE SMOOTH",
"361 401 OFFCURVE",
"354 400 OFFCURVE",
"350 399 CURVE",
"337 392 OFFCURVE",
"320 387 OFFCURVE",
"295 382 CURVE SMOOTH",
"285 379 OFFCURVE",
"276 378 OFFCURVE",
"268 378 CURVE SMOOTH",
"262 378 OFFCURVE",
"256 379 OFFCURVE",
"251 380 CURVE SMOOTH",
"230 387 OFFCURVE",
"212 392 OFFCURVE",
"196 399 CURVE SMOOTH",
"193 400 OFFCURVE",
"187 400 OFFCURVE",
"179 400 CURVE SMOOTH",
"135 400 OFFCURVE",
"100 377 OFFCURVE",
"73 330 CURVE SMOOTH",
"58 303 OFFCURVE",
"50 271 OFFCURVE",
"50 234 CURVE SMOOTH",
"50 164 OFFCURVE",
"71 103 OFFCURVE",
"113 51 CURVE SMOOTH",
"141 17 OFFCURVE",
"165 0 OFFCURVE",
"185 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"303 392 OFFCURVE",
"326 404 OFFCURVE",
"347 429 CURVE SMOOTH",
"366 454 OFFCURVE",
"375 480 OFFCURVE",
"375 507 CURVE SMOOTH",
"375 515 OFFCURVE",
"374 520 OFFCURVE",
"373 522 CURVE",
"366 525 OFFCURVE",
"355 522 OFFCURVE",
"340 515 CURVE SMOOTH",
"329 509 OFFCURVE",
"319 502 OFFCURVE",
"312 494 CURVE SMOOTH",
"287 469 OFFCURVE",
"274 440 OFFCURVE",
"274 406 CURVE SMOOTH",
"274 402 OFFCURVE",
"275 398 OFFCURVE",
"277 393 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 2 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\01258 2 74 2 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 21 values pushed */\012105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 7 values pushed */\0129 2 25 2 41 2 3 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 532;
}
);
note = apple;
unicode = F8FF;
},
{
glyphname = at;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"384 -10 OFFCURVE",
"442 11 OFFCURVE",
"487 52 CURVE",
"497 49 OFFCURVE",
"508 48 OFFCURVE",
"519 48 CURVE SMOOTH",
"567 48 OFFCURVE",
"607 73 OFFCURVE",
"638 123 CURVE SMOOTH",
"667 168 OFFCURVE",
"681 222 OFFCURVE",
"681 283 CURVE SMOOTH",
"681 320 OFFCURVE",
"675 353 OFFCURVE",
"663 383 CURVE SMOOTH",
"646 425 OFFCURVE",
"618 459 OFFCURVE",
"580 486 CURVE SMOOTH",
"537 515 OFFCURVE",
"487 530 OFFCURVE",
"430 530 CURVE SMOOTH",
"413 530 OFFCURVE",
"397 529 OFFCURVE",
"378 526 CURVE SMOOTH",
"286 511 OFFCURVE",
"214 466 OFFCURVE",
"162 393 CURVE SMOOTH",
"119 332 OFFCURVE",
"98 266 OFFCURVE",
"98 195 CURVE SMOOTH",
"98 132 OFFCURVE",
"118 83 OFFCURVE",
"159 46 CURVE SMOOTH",
"200 9 OFFCURVE",
"252 -10 OFFCURVE",
"315 -10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"242 152 OFFCURVE",
"238 155 OFFCURVE",
"238 166 CURVE SMOOTH",
"238 175 OFFCURVE",
"241 185 OFFCURVE",
"247 196 CURVE SMOOTH",
"264 227 OFFCURVE",
"301 265 OFFCURVE",
"360 310 CURVE SMOOTH",
"411 349 OFFCURVE",
"447 369 OFFCURVE",
"470 369 CURVE SMOOTH",
"482 369 OFFCURVE",
"490 363 OFFCURVE",
"494 352 CURVE",
"475 331 OFFCURVE",
"436 297 OFFCURVE",
"375 246 CURVE SMOOTH",
"343 221 OFFCURVE",
"317 200 OFFCURVE",
"296 185 CURVE SMOOTH",
"275 170 OFFCURVE",
"259 160 OFFCURVE",
"249 155 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259 23 OFFCURVE",
"212 38 OFFCURVE",
"177 67 CURVE SMOOTH",
"139 98 OFFCURVE",
"120 141 OFFCURVE",
"120 198 CURVE SMOOTH",
"120 263 OFFCURVE",
"140 323 OFFCURVE",
"179 378 CURVE SMOOTH",
"226 445 OFFCURVE",
"292 485 OFFCURVE",
"377 498 CURVE SMOOTH",
"392 501 OFFCURVE",
"408 502 OFFCURVE",
"424 502 CURVE SMOOTH",
"514 502 OFFCURVE",
"581 459 OFFCURVE",
"624 374 CURVE SMOOTH",
"628 366 LINE",
"614 369 OFFCURVE",
"606 365 OFFCURVE",
"605 356 CURVE SMOOTH",
"602 321 OFFCURVE",
"594 284 OFFCURVE",
"579 241 CURVE SMOOTH",
"556 175 OFFCURVE",
"526 123 OFFCURVE",
"489 84 CURVE",
"484 100 OFFCURVE",
"481 117 OFFCURVE",
"481 135 CURVE SMOOTH",
"481 180 OFFCURVE",
"494 233 OFFCURVE",
"521 294 CURVE SMOOTH",
"542 344 OFFCURVE",
"561 379 OFFCURVE",
"580 400 CURVE SMOOTH",
"581 401 OFFCURVE",
"582 403 OFFCURVE",
"582 404 CURVE SMOOTH",
"582 406 OFFCURVE",
"580 407 OFFCURVE",
"577 407 CURVE SMOOTH",
"560 407 OFFCURVE",
"544 401 OFFCURVE",
"529 390 CURVE",
"519 400 OFFCURVE",
"501 405 OFFCURVE",
"475 405 CURVE SMOOTH",
"434 405 OFFCURVE",
"380 377 OFFCURVE",
"313 321 CURVE SMOOTH",
"257 274 OFFCURVE",
"218 229 OFFCURVE",
"195 185 CURVE SMOOTH",
"186 166 OFFCURVE",
"181 150 OFFCURVE",
"181 136 CURVE SMOOTH",
"181 118 OFFCURVE",
"189 109 OFFCURVE",
"204 109 CURVE SMOOTH",
"211 109 OFFCURVE",
"220 112 OFFCURVE",
"232 117 CURVE SMOOTH",
"267 133 OFFCURVE",
"318 167 OFFCURVE",
"383 220 CURVE SMOOTH",
"405 237 OFFCURVE",
"423 252 OFFCURVE",
"437 264 CURVE SMOOTH",
"451 276 OFFCURVE",
"461 285 OFFCURVE",
"468 290 CURVE",
"452 257 OFFCURVE",
"444 214 OFFCURVE",
"444 161 CURVE SMOOTH",
"444 120 OFFCURVE",
"452 88 OFFCURVE",
"467 67 CURVE",
"430 38 OFFCURVE",
"380 23 OFFCURVE",
"318 23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"520 73 OFFCURVE",
"515 74 OFFCURVE",
"508 75 CURVE",
"543 114 OFFCURVE",
"573 163 OFFCURVE",
"598 221 CURVE SMOOTH",
"611 252 OFFCURVE",
"623 289 OFFCURVE",
"636 334 CURVE",
"638 321 OFFCURVE",
"639 305 OFFCURVE",
"639 288 CURVE SMOOTH",
"639 235 OFFCURVE",
"631 189 OFFCURVE",
"616 149 CURVE SMOOTH",
"595 98 OFFCURVE",
"566 73 OFFCURVE",
"527 73 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 1066 21 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01289 1069 58 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1070 37 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 37 218 37 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 37 121 37 137 37 153 37 169 37 185 37 201 37 217 37 233 37 249 37 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 153 37 169 37 185 37 201 37 217 37 233 37 249 37 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 153 37 169 37 185 37 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01241 21 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 50 118 50 134 50 150 50 166 50 182 50 198 50 214 50 230 50 246 50 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 50 22 50 38 50 54 50 70 50 86 50 102 50 118 50 134 50 150 50 166 50 182 50 198 50 214 50 230 50 246 50 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 50 22 50 38 50 54 50 70 50 86 50 102 50 118 50 134 50 150 50 166 50 182 50 198 50 214 50 230 50 246 50 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012202 58 218 58 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01260 58 89 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01285 21 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01291 21 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01217 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0123 1064 44 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01233 1063 13 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01277 1064 98 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01254 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012103 54 119 54 135 54 151 54 167 54 183 54 199 54 215 54 231 54 247 54 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 54 23 54 39 54 55 54 71 54 87 54 103 54 119 54 135 54 151 54 167 54 183 54 199 54 215 54 231 54 247 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0127 54 23 54 39 54 55 54 71 54 87 54 103 54 119 54 135 54 151 54 167 54 183 54 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012198 54 214 54 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01285 98 77 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 722;
}
);
note = at;
unicode = 0040;
},
{
glyphname = ampersand;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"645 -73 OFFCURVE",
"676 -60 OFFCURVE",
"706 -35 CURVE SMOOTH",
"741 -6 OFFCURVE",
"759 28 OFFCURVE",
"759 71 CURVE SMOOTH",
"759 103 OFFCURVE",
"744 132 OFFCURVE",
"715 159 CURVE SMOOTH",
"710 164 OFFCURVE",
"707 164 OFFCURVE",
"704 159 CURVE SMOOTH",
"702 154 OFFCURVE",
"703 150 OFFCURVE",
"707 145 CURVE SMOOTH",
"726 117 OFFCURVE",
"736 88 OFFCURVE",
"736 57 CURVE SMOOTH",
"736 -12 OFFCURVE",
"700 -47 OFFCURVE",
"627 -47 CURVE SMOOTH",
"525 -47 OFFCURVE",
"452 -5 OFFCURVE",
"401 86 CURVE",
"416 92 OFFCURVE",
"431 99 OFFCURVE",
"446 106 CURVE SMOOTH",
"566 161 OFFCURVE",
"631 225 OFFCURVE",
"642 300 CURVE SMOOTH",
"643 305 OFFCURVE",
"643 311 OFFCURVE",
"643 316 CURVE SMOOTH",
"643 327 OFFCURVE",
"642 337 OFFCURVE",
"639 348 CURVE",
"639 351 OFFCURVE",
"638 352 OFFCURVE",
"636 352 CURVE SMOOTH",
"630 352 OFFCURVE",
"619 334 OFFCURVE",
"619 323 CURVE SMOOTH",
"619 314 OFFCURVE",
"621 308 OFFCURVE",
"621 301 CURVE SMOOTH",
"621 297 OFFCURVE",
"620 293 OFFCURVE",
"620 289 CURVE",
"612 230 OFFCURVE",
"551 177 OFFCURVE",
"438 131 CURVE SMOOTH",
"421 124 OFFCURVE",
"405 118 OFFCURVE",
"388 112 CURVE",
"368 158 OFFCURVE",
"359 213 OFFCURVE",
"359 270 CURVE SMOOTH",
"359 311 OFFCURVE",
"364 354 OFFCURVE",
"373 395 CURVE",
"410 417 LINE SMOOTH",
"528 488 OFFCURVE",
"589 539 OFFCURVE",
"589 566 CURVE SMOOTH",
"589 583 OFFCURVE",
"569 591 OFFCURVE",
"528 592 CURVE SMOOTH",
"511 593 OFFCURVE",
"498 593 OFFCURVE",
"488 593 CURVE SMOOTH",
"478 592 OFFCURVE",
"472 592 OFFCURVE",
"468 591 CURVE SMOOTH",
"457 589 OFFCURVE",
"451 582 OFFCURVE",
"451 572 CURVE SMOOTH",
"451 567 OFFCURVE",
"454 565 OFFCURVE",
"458 565 CURVE SMOOTH",
"460 565 OFFCURVE",
"461 566 OFFCURVE",
"463 566 CURVE SMOOTH",
"471 567 OFFCURVE",
"478 568 OFFCURVE",
"484 568 CURVE SMOOTH",
"489 568 LINE SMOOTH",
"498 567 OFFCURVE",
"504 567 OFFCURVE",
"508 567 CURVE SMOOTH",
"512 566 OFFCURVE",
"514 566 OFFCURVE",
"515 566 CURVE SMOOTH",
"534 565 OFFCURVE",
"544 560 OFFCURVE",
"544 552 CURVE SMOOTH",
"544 539 OFFCURVE",
"518 516 OFFCURVE",
"466 482 CURVE SMOOTH",
"432 461 LINE",
"381 430 LINE",
"394 475 OFFCURVE",
"410 519 OFFCURVE",
"431 556 CURVE",
"436 563 OFFCURVE",
"431 567 OFFCURVE",
"416 567 CURVE SMOOTH",
"394 567 OFFCURVE",
"381 562 OFFCURVE",
"377 551 CURVE",
"352 498 OFFCURVE",
"331 444 OFFCURVE",
"317 391 CURVE",
"109 262 OFFCURVE",
"1 168 OFFCURVE",
"-7 107 CURVE SMOOTH",
"-14 58 OFFCURVE",
"15 19 OFFCURVE",
"114 19 CURVE SMOOTH",
"187 19 OFFCURVE",
"269 37 OFFCURVE",
"346 65 CURVE",
"349 60 LINE SMOOTH",
"401 -26 OFFCURVE",
"496 -73 OFFCURVE",
"614 -73 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"64 70 OFFCURVE",
"25 86 OFFCURVE",
"25 118 CURVE SMOOTH",
"25 156 OFFCURVE",
"82 214 OFFCURVE",
"197 289 CURVE SMOOTH",
"309 356 LINE",
"302 321 OFFCURVE",
"298 287 OFFCURVE",
"298 252 CURVE SMOOTH",
"298 199 OFFCURVE",
"308 146 OFFCURVE",
"331 95 CURVE",
"267 78 OFFCURVE",
"205 70 OFFCURVE",
"143 70 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 1070 10 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01232 1066 72 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 1066 24 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 18 213 18 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 24 25 24 41 24 57 24 73 24 89 24 105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012105 72 121 72 137 72 153 72 169 72 185 72 201 72 217 72 233 72 249 72 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 72 25 72 41 72 57 72 73 72 89 72 105 72 121 72 137 72 153 72 169 72 185 72 201 72 217 72 233 72 249 72 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 72 25 72 41 72 57 72 73 72 89 72 105 72 121 72 137 72 153 72 169 72 185 72 201 72 217 72 233 72 249 72 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01222 1063 6 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01268 1064 36 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 712;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = paragraph;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"14 -177 OFFCURVE",
"68 -134 OFFCURVE",
"127 -47 CURVE SMOOTH",
"172 18 OFFCURVE",
"206 84 OFFCURVE",
"229 152 CURVE SMOOTH",
"332 445 OFFCURVE",
"419 592 OFFCURVE",
"488 592 CURVE SMOOTH",
"498 592 LINE",
"463 549 OFFCURVE",
"430 487 OFFCURVE",
"399 408 CURVE",
"399 406 OFFCURVE",
"377 339 OFFCURVE",
"332 208 CURVE SMOOTH",
"319 169 OFFCURVE",
"302 125 OFFCURVE",
"281 78 CURVE SMOOTH",
"253 16 OFFCURVE",
"230 -23 OFFCURVE",
"212 -39 CURVE",
"204 -44 OFFCURVE",
"199 -50 OFFCURVE",
"198 -55 CURVE SMOOTH",
"198 -58 OFFCURVE",
"200 -59 OFFCURVE",
"204 -59 CURVE SMOOTH",
"233 -59 OFFCURVE",
"273 0 OFFCURVE",
"325 118 CURVE SMOOTH",
"348 173 OFFCURVE",
"372 228 OFFCURVE",
"395 283 CURVE SMOOTH",
"464 448 LINE",
"520 567 OFFCURVE",
"567 628 OFFCURVE",
"606 630 CURVE SMOOTH",
"617 631 OFFCURVE",
"623 633 OFFCURVE",
"625 635 CURVE",
"624 644 OFFCURVE",
"614 648 OFFCURVE",
"593 648 CURVE SMOOTH",
"564 648 OFFCURVE",
"536 634 OFFCURVE",
"508 606 CURVE",
"500 609 OFFCURVE",
"487 610 OFFCURVE",
"469 610 CURVE SMOOTH",
"457 610 OFFCURVE",
"439 609 OFFCURVE",
"415 608 CURVE SMOOTH",
"391 607 OFFCURVE",
"373 606 OFFCURVE",
"361 606 CURVE SMOOTH",
"301 606 OFFCURVE",
"242 587 OFFCURVE",
"183 549 CURVE SMOOTH",
"118 506 OFFCURVE",
"86 456 OFFCURVE",
"86 398 CURVE SMOOTH",
"86 331 OFFCURVE",
"137 294 OFFCURVE",
"240 285 CURVE",
"192 152 OFFCURVE",
"157 64 OFFCURVE",
"136 20 CURVE SMOOTH",
"76 -101 OFFCURVE",
"17 -162 OFFCURVE",
"-42 -162 CURVE SMOOTH",
"-47 -162 OFFCURVE",
"-50 -164 OFFCURVE",
"-52 -168 CURVE",
"-52 -174 OFFCURVE",
"-47 -177 OFFCURVE",
"-36 -177 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01221 28 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01237 28 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 548;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = section;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"150 -37 OFFCURVE",
"174 -34 OFFCURVE",
"197 -27 CURVE SMOOTH",
"231 -18 OFFCURVE",
"248 -5 OFFCURVE",
"248 13 CURVE SMOOTH",
"248 29 OFFCURVE",
"237 49 OFFCURVE",
"216 74 CURVE",
"288 83 OFFCURVE",
"324 102 OFFCURVE",
"324 133 CURVE SMOOTH",
"324 156 OFFCURVE",
"297 193 OFFCURVE",
"243 242 CURVE SMOOTH",
"190 291 OFFCURVE",
"163 328 OFFCURVE",
"163 352 CURVE SMOOTH",
"163 405 OFFCURVE",
"191 452 OFFCURVE",
"247 493 CURVE SMOOTH",
"298 530 OFFCURVE",
"351 549 OFFCURVE",
"406 549 CURVE SMOOTH",
"445 549 OFFCURVE",
"465 536 OFFCURVE",
"465 509 CURVE SMOOTH",
"465 488 OFFCURVE",
"451 461 OFFCURVE",
"424 428 CURVE SMOOTH",
"393 392 OFFCURVE",
"375 370 OFFCURVE",
"372 362 CURVE",
"376 360 LINE",
"397 361 OFFCURVE",
"422 380 OFFCURVE",
"451 415 CURVE SMOOTH",
"480 452 OFFCURVE",
"494 481 OFFCURVE",
"494 503 CURVE SMOOTH",
"494 527 OFFCURVE",
"481 545 OFFCURVE",
"456 557 CURVE SMOOTH",
"438 566 OFFCURVE",
"415 570 OFFCURVE",
"387 570 CURVE SMOOTH",
"330 570 OFFCURVE",
"277 555 OFFCURVE",
"228 525 CURVE SMOOTH",
"171 491 OFFCURVE",
"141 448 OFFCURVE",
"138 395 CURVE",
"87 359 OFFCURVE",
"62 315 OFFCURVE",
"62 264 CURVE SMOOTH",
"62 232 OFFCURVE",
"75 199 OFFCURVE",
"100 166 CURVE SMOOTH",
"114 148 OFFCURVE",
"138 124 OFFCURVE",
"171 93 CURVE SMOOTH",
"196 69 OFFCURVE",
"209 53 OFFCURVE",
"209 45 CURVE SMOOTH",
"209 26 OFFCURVE",
"193 11 OFFCURVE",
"161 1 CURVE SMOOTH",
"138 -6 OFFCURVE",
"114 -10 OFFCURVE",
"89 -10 CURVE SMOOTH",
"82 -10 OFFCURVE",
"73 -9 OFFCURVE",
"63 -6 CURVE SMOOTH",
"48 -3 OFFCURVE",
"39 -1 OFFCURVE",
"36 -1 CURVE",
"29 -6 LINE",
"30 -27 OFFCURVE",
"61 -37 OFFCURVE",
"123 -37 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"131 155 LINE",
"102 186 OFFCURVE",
"87 212 OFFCURVE",
"87 231 CURVE SMOOTH",
"87 261 OFFCURVE",
"90 284 OFFCURVE",
"97 300 CURVE SMOOTH",
"105 319 OFFCURVE",
"120 338 OFFCURVE",
"141 356 CURVE",
"149 323 OFFCURVE",
"177 281 OFFCURVE",
"226 228 CURVE SMOOTH",
"272 178 OFFCURVE",
"295 150 OFFCURVE",
"295 145 CURVE SMOOTH",
"295 116 OFFCURVE",
"263 98 OFFCURVE",
"199 91 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01262 1067 44 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 1067 46 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01223 1070 38 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1065 9 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0125 44 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012202 9 218 9 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 150 23 166 23 182 23 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 23 213 23 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01221 38 23 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01258 46 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01230 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01232 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0121060 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 1071 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01234 1063 27 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 1061 11 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 491;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = copyright;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"297 29 OFFCURVE",
"377 65 OFFCURVE",
"458 138 CURVE SMOOTH",
"540 211 OFFCURVE",
"581 286 OFFCURVE",
"581 364 CURVE SMOOTH",
"581 411 OFFCURVE",
"564 449 OFFCURVE",
"531 478 CURVE SMOOTH",
"498 507 OFFCURVE",
"457 522 OFFCURVE",
"410 522 CURVE SMOOTH",
"331 522 OFFCURVE",
"250 486 OFFCURVE",
"168 414 CURVE SMOOTH",
"83 340 OFFCURVE",
"41 264 OFFCURVE",
"41 185 CURVE SMOOTH",
"41 138 OFFCURVE",
"59 100 OFFCURVE",
"95 71 CURVE SMOOTH",
"129 43 OFFCURVE",
"170 29 OFFCURVE",
"217 29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"242 115 OFFCURVE",
"281 125 OFFCURVE",
"331 144 CURVE SMOOTH",
"388 166 OFFCURVE",
"416 188 OFFCURVE",
"416 211 CURVE SMOOTH",
"416 213 OFFCURVE",
"415 214 OFFCURVE",
"413 214 CURVE SMOOTH",
"414 214 OFFCURVE",
"403 206 OFFCURVE",
"378 191 CURVE SMOOTH",
"349 174 OFFCURVE",
"323 161 OFFCURVE",
"299 150 CURVE SMOOTH",
"264 135 OFFCURVE",
"235 127 OFFCURVE",
"212 127 CURVE SMOOTH",
"181 127 OFFCURVE",
"165 143 OFFCURVE",
"165 175 CURVE SMOOTH",
"165 228 OFFCURVE",
"194 285 OFFCURVE",
"252 347 CURVE SMOOTH",
"310 410 OFFCURVE",
"365 441 OFFCURVE",
"417 441 CURVE SMOOTH",
"441 441 OFFCURVE",
"453 429 OFFCURVE",
"453 406 CURVE SMOOTH",
"453 403 OFFCURVE",
"452 399 OFFCURVE",
"451 394 CURVE SMOOTH",
"449 388 OFFCURVE",
"448 384 OFFCURVE",
"448 382 CURVE",
"453 378 LINE",
"465 378 OFFCURVE",
"471 389 OFFCURVE",
"471 410 CURVE SMOOTH",
"471 437 OFFCURVE",
"455 450 OFFCURVE",
"422 450 CURVE SMOOTH",
"359 450 OFFCURVE",
"296 421 OFFCURVE",
"231 362 CURVE SMOOTH",
"164 302 OFFCURVE",
"131 241 OFFCURVE",
"131 179 CURVE SMOOTH",
"131 157 OFFCURVE",
"140 141 OFFCURVE",
"158 130 CURVE SMOOTH",
"173 120 OFFCURVE",
"192 115 OFFCURVE",
"215 115 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"189 50 OFFCURVE",
"154 62 OFFCURVE",
"125 86 CURVE SMOOTH",
"93 111 OFFCURVE",
"77 143 OFFCURVE",
"77 184 CURVE SMOOTH",
"77 258 OFFCURVE",
"112 330 OFFCURVE",
"182 399 CURVE SMOOTH",
"253 468 OFFCURVE",
"325 502 OFFCURVE",
"400 502 CURVE SMOOTH",
"484 502 OFFCURVE",
"543 441 OFFCURVE",
"543 356 CURVE SMOOTH",
"543 285 OFFCURVE",
"509 217 OFFCURVE",
"440 150 CURVE SMOOTH",
"371 83 OFFCURVE",
"302 50 OFFCURVE",
"231 50 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 1069 8 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 1068 37 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 45 13 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 20 213 20 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01228 1070 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 55 213 55 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01266 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01224 1061 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1062 16 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 638;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = registered;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"297 29 OFFCURVE",
"377 65 OFFCURVE",
"458 138 CURVE SMOOTH",
"540 211 OFFCURVE",
"581 286 OFFCURVE",
"581 364 CURVE SMOOTH",
"581 411 OFFCURVE",
"564 449 OFFCURVE",
"531 478 CURVE SMOOTH",
"498 507 OFFCURVE",
"457 522 OFFCURVE",
"410 522 CURVE SMOOTH",
"331 522 OFFCURVE",
"250 486 OFFCURVE",
"168 414 CURVE SMOOTH",
"83 340 OFFCURVE",
"41 264 OFFCURVE",
"41 185 CURVE SMOOTH",
"41 138 OFFCURVE",
"59 100 OFFCURVE",
"95 71 CURVE SMOOTH",
"129 43 OFFCURVE",
"170 29 OFFCURVE",
"217 29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"153 76 OFFCURVE",
"154 80 OFFCURVE",
"154 87 CURVE SMOOTH",
"157 115 OFFCURVE",
"176 157 OFFCURVE",
"211 212 CURVE SMOOTH",
"234 248 OFFCURVE",
"266 292 OFFCURVE",
"307 344 CURVE SMOOTH",
"341 387 OFFCURVE",
"358 409 OFFCURVE",
"358 410 CURVE",
"357 412 OFFCURVE",
"349 416 OFFCURVE",
"336 421 CURVE",
"304 390 OFFCURVE",
"266 341 OFFCURVE",
"219 273 CURVE SMOOTH",
"166 194 OFFCURVE",
"139 141 OFFCURVE",
"139 112 CURVE SMOOTH",
"139 88 OFFCURVE",
"143 76 OFFCURVE",
"150 76 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"189 50 OFFCURVE",
"154 62 OFFCURVE",
"125 86 CURVE SMOOTH",
"93 111 OFFCURVE",
"77 143 OFFCURVE",
"77 184 CURVE SMOOTH",
"77 246 OFFCURVE",
"103 309 OFFCURVE",
"156 372 CURVE",
"181 385 OFFCURVE",
"213 397 OFFCURVE",
"252 408 CURVE SMOOTH",
"294 421 OFFCURVE",
"327 427 OFFCURVE",
"351 427 CURVE SMOOTH",
"426 427 OFFCURVE",
"464 408 OFFCURVE",
"464 370 CURVE SMOOTH",
"464 322 OFFCURVE",
"406 290 OFFCURVE",
"289 273 CURVE",
"280 276 LINE",
"273 271 LINE",
"270 272 OFFCURVE",
"267 270 OFFCURVE",
"262 267 CURVE",
"262 265 OFFCURVE",
"266 264 OFFCURVE",
"274 264 CURVE",
"283 233 OFFCURVE",
"298 202 OFFCURVE",
"317 173 CURVE SMOOTH",
"341 136 OFFCURVE",
"365 114 OFFCURVE",
"389 108 CURVE",
"336 69 OFFCURVE",
"283 50 OFFCURVE",
"231 50 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"383 124 OFFCURVE",
"361 142 OFFCURVE",
"340 176 CURVE SMOOTH",
"325 201 OFFCURVE",
"313 229 OFFCURVE",
"304 261 CURVE",
"342 261 OFFCURVE",
"380 269 OFFCURVE",
"418 284 CURVE SMOOTH",
"465 303 OFFCURVE",
"489 330 OFFCURVE",
"489 363 CURVE SMOOTH",
"489 390 OFFCURVE",
"472 411 OFFCURVE",
"439 424 CURVE SMOOTH",
"414 434 OFFCURVE",
"386 439 OFFCURVE",
"355 439 CURVE SMOOTH",
"303 439 OFFCURVE",
"247 427 OFFCURVE",
"186 404 CURVE",
"257 469 OFFCURVE",
"329 502 OFFCURVE",
"400 502 CURVE SMOOTH",
"484 502 OFFCURVE",
"543 441 OFFCURVE",
"543 356 CURVE SMOOTH",
"543 273 OFFCURVE",
"498 195 OFFCURVE",
"408 123 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01259 1069 8 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 1070 32 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01222 1067 51 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01216 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01226 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012202 32 218 32 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 32 121 32 137 32 153 32 169 32 185 32 201 32 217 32 233 32 249 32 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 32 25 32 41 32 57 32 73 32 89 32 105 32 121 32 137 32 153 32 169 32 185 32 201 32 217 32 233 32 249 32 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 32 25 32 41 32 57 32 73 32 89 32 105 32 121 32 137 32 153 32 169 32 185 32 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01239 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01245 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 21 values pushed */\012105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 51 25 51 41 51 57 51 73 51 89 51 105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 51 25 51 41 51 57 51 73 51 89 51 105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012102 59 118 59 134 59 150 59 166 59 182 59 198 59 214 59 230 59 246 59 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 59 22 59 38 59 54 59 70 59 86 59 102 59 118 59 134 59 150 59 166 59 182 59 198 59 214 59 230 59 246 59 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 59 22 59 38 59 54 59 70 59 86 59 102 59 118 59 134 59 150 59 166 59 182 59 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 59 213 59 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01263 1061 4 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 1062 37 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 638;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = trademark;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"277 328 OFFCURVE",
"286 333 OFFCURVE",
"292 344 CURVE SMOOTH",
"301 361 OFFCURVE",
"312 390 OFFCURVE",
"323 431 CURVE SMOOTH",
"335 476 OFFCURVE",
"345 506 OFFCURVE",
"352 522 CURVE",
"377 432 OFFCURVE",
"406 387 OFFCURVE",
"441 387 CURVE SMOOTH",
"473 387 OFFCURVE",
"524 432 OFFCURVE",
"594 522 CURVE",
"579 449 OFFCURVE",
"569 394 OFFCURVE",
"562 357 CURVE",
"561 356 OFFCURVE",
"561 354 OFFCURVE",
"561 349 CURVE SMOOTH",
"561 343 OFFCURVE",
"565 340 OFFCURVE",
"572 340 CURVE SMOOTH",
"583 340 OFFCURVE",
"603 349 OFFCURVE",
"607 357 CURVE",
"614 421 OFFCURVE",
"618 475 OFFCURVE",
"621 526 CURVE",
"633 586 LINE",
"634 587 OFFCURVE",
"634 591 OFFCURVE",
"634 597 CURVE SMOOTH",
"634 615 OFFCURVE",
"630 624 OFFCURVE",
"622 624 CURVE SMOOTH",
"621 624 OFFCURVE",
"597 588 OFFCURVE",
"550 516 CURVE SMOOTH",
"504 444 OFFCURVE",
"471 408 OFFCURVE",
"451 408 CURVE SMOOTH",
"431 408 OFFCURVE",
"416 427 OFFCURVE",
"405 466 CURVE SMOOTH",
"403 473 OFFCURVE",
"401 486 OFFCURVE",
"398 505 CURVE SMOOTH",
"386 575 LINE SMOOTH",
"380 614 OFFCURVE",
"373 633 OFFCURVE",
"366 633 CURVE SMOOTH",
"353 633 OFFCURVE",
"345 621 OFFCURVE",
"342 597 CURVE SMOOTH",
"341 581 OFFCURVE",
"340 565 OFFCURVE",
"337 549 CURVE",
"294 438 LINE SMOOTH",
"267 371 OFFCURVE",
"254 336 OFFCURVE",
"254 335 CURVE SMOOTH",
"254 330 OFFCURVE",
"258 328 OFFCURVE",
"265 328 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"80 322 OFFCURVE",
"87 324 OFFCURVE",
"90 328 CURVE SMOOTH",
"98 337 OFFCURVE",
"114 378 OFFCURVE",
"137 452 CURVE SMOOTH",
"150 493 OFFCURVE",
"161 526 OFFCURVE",
"170 549 CURVE SMOOTH",
"178 572 OFFCURVE",
"184 587 OFFCURVE",
"187 594 CURVE SMOOTH",
"191 603 OFFCURVE",
"218 610 OFFCURVE",
"267 615 CURVE SMOOTH",
"314 620 OFFCURVE",
"337 626 OFFCURVE",
"337 635 CURVE SMOOTH",
"337 640 OFFCURVE",
"330 643 OFFCURVE",
"315 643 CURVE SMOOTH",
"279 643 OFFCURVE",
"229 641 OFFCURVE",
"162 636 CURVE SMOOTH",
"76 629 OFFCURVE",
"31 621 OFFCURVE",
"27 613 CURVE",
"28 604 OFFCURVE",
"36 600 OFFCURVE",
"52 600 CURVE SMOOTH",
"61 600 OFFCURVE",
"115 605 OFFCURVE",
"124 605 CURVE SMOOTH",
"143 605 OFFCURVE",
"152 602 OFFCURVE",
"152 596 CURVE SMOOTH",
"152 587 OFFCURVE",
"135 544 OFFCURVE",
"102 466 CURVE SMOOTH",
"69 390 OFFCURVE",
"53 346 OFFCURVE",
"53 335 CURVE SMOOTH",
"53 326 OFFCURVE",
"59 322 OFFCURVE",
"71 322 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01235 1061 9 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0127 63 50 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01211 63 50 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01276 1064 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 656;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = degree;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"205 368 OFFCURVE",
"235 397 OFFCURVE",
"235 432 CURVE SMOOTH",
"235 467 OFFCURVE",
"205 496 OFFCURVE",
"168 496 CURVE SMOOTH",
"132 496 OFFCURVE",
"102 467 OFFCURVE",
"102 432 CURVE SMOOTH",
"102 397 OFFCURVE",
"132 368 OFFCURVE",
"168 368 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"143 389 OFFCURVE",
"124 408 OFFCURVE",
"124 432 CURVE SMOOTH",
"124 455 OFFCURVE",
"143 474 OFFCURVE",
"167 474 CURVE SMOOTH",
"192 474 OFFCURVE",
"211 455 OFFCURVE",
"211 432 CURVE SMOOTH",
"211 408 OFFCURVE",
"192 389 OFFCURVE",
"167 389 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 21 values pushed */\012105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 1067 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01218 1066 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 21 values pushed */\012102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01221 1061 3 14 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0129 1061 15 14 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 312;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = minute;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"94 518 OFFCURVE",
"150 604 OFFCURVE",
"166 628 CURVE SMOOTH",
"170 634 OFFCURVE",
"152 642 OFFCURVE",
"146 642 CURVE SMOOTH",
"139 642 OFFCURVE",
"134 634 OFFCURVE",
"130 625 CURVE SMOOTH",
"121 604 OFFCURVE",
"82 524 OFFCURVE",
"81 519 CURVE",
"80 517 LINE",
"80 516 OFFCURVE",
"86 515 OFFCURVE",
"87 515 CURVE"
);
}
);
width = 187;
}
);
unicode = 2032;
},
{
glyphname = second;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"94 518 OFFCURVE",
"150 604 OFFCURVE",
"166 628 CURVE SMOOTH",
"170 634 OFFCURVE",
"152 642 OFFCURVE",
"146 642 CURVE SMOOTH",
"139 642 OFFCURVE",
"134 634 OFFCURVE",
"130 625 CURVE SMOOTH",
"121 604 OFFCURVE",
"82 524 OFFCURVE",
"81 519 CURVE",
"80 517 LINE",
"80 516 OFFCURVE",
"86 515 OFFCURVE",
"87 515 CURVE"
);
},
{
closed = 1;
nodes = (
"168 518 OFFCURVE",
"223 604 OFFCURVE",
"239 628 CURVE SMOOTH",
"243 634 OFFCURVE",
"225 642 OFFCURVE",
"219 642 CURVE SMOOTH",
"212 642 OFFCURVE",
"207 634 OFFCURVE",
"204 625 CURVE",
"194 604 OFFCURVE",
"155 524 OFFCURVE",
"154 519 CURVE SMOOTH",
"154 517 LINE SMOOTH",
"154 516 OFFCURVE",
"161 515 OFFCURVE",
"162 515 CURVE"
);
}
);
width = 260;
}
);
unicode = 2033;
},
{
glyphname = bar;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"115 196 OFFCURVE",
"110 156 OFFCURVE",
"106 117 CURVE SMOOTH",
"100 55 OFFCURVE",
"95 -35 OFFCURVE",
"117 -57 CURVE SMOOTH",
"119 -59 OFFCURVE",
"124 -60 OFFCURVE",
"129 -60 CURVE SMOOTH",
"135 -60 OFFCURVE",
"140 -59 OFFCURVE",
"140 -55 CURVE SMOOTH",
"140 -52 OFFCURVE",
"137 -47 OFFCURVE",
"133 -35 CURVE SMOOTH",
"120 11 OFFCURVE",
"130 146 OFFCURVE",
"145 235 CURVE",
"122 235 LINE"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"135 -60 OFFCURVE",
"140 -59 OFFCURVE",
"140 -55 CURVE SMOOTH",
"140 -52 OFFCURVE",
"136 -47 OFFCURVE",
"133 -35 CURVE SMOOTH",
"127 -15 OFFCURVE",
"125 10 OFFCURVE",
"125 40 CURVE SMOOTH",
"125 175 OFFCURVE",
"178 400 OFFCURVE",
"237 558 CURVE",
"237 561 OFFCURVE",
"237 563 OFFCURVE",
"231 563 CURVE SMOOTH",
"227 563 OFFCURVE",
"222 560 OFFCURVE",
"218 558 CURVE SMOOTH",
"205 550 OFFCURVE",
"180 491 OFFCURVE",
"156 393 CURVE SMOOTH",
"132 306 OFFCURVE",
"101 132 OFFCURVE",
"101 26 CURVE SMOOTH",
"101 -15 OFFCURVE",
"105 -45 OFFCURVE",
"117 -57 CURVE SMOOTH",
"119 -59 OFFCURVE",
"124 -60 OFFCURVE",
"129 -60 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01219 1070 8 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012202 8 218 8 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 21 values pushed */\012105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0129 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 250;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = brokenbar;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"158 299 LINE",
"174 373 OFFCURVE",
"200 458 OFFCURVE",
"237 560 CURVE",
"237 563 LINE",
"236 565 OFFCURVE",
"231 564 OFFCURVE",
"228 561 CURVE",
"205 547 OFFCURVE",
"180 491 OFFCURVE",
"156 393 CURVE SMOOTH",
"148 361 OFFCURVE",
"140 330 OFFCURVE",
"134 299 CURVE"
);
},
{
closed = 1;
nodes = (
"135 -60 OFFCURVE",
"140 -59 OFFCURVE",
"140 -55 CURVE SMOOTH",
"140 -52 OFFCURVE",
"137 -47 OFFCURVE",
"133 -35 CURVE SMOOTH",
"129 -20 OFFCURVE",
"127 4 OFFCURVE",
"127 33 CURVE SMOOTH",
"127 94 OFFCURVE",
"135 175 OFFCURVE",
"145 235 CURVE",
"122 235 LINE",
"115 196 OFFCURVE",
"110 156 OFFCURVE",
"106 117 CURVE SMOOTH",
"103 90 OFFCURVE",
"101 57 OFFCURVE",
"101 26 CURVE SMOOTH",
"101 -11 OFFCURVE",
"105 -45 OFFCURVE",
"117 -57 CURVE SMOOTH",
"119 -59 OFFCURVE",
"124 -60 OFFCURVE",
"129 -60 CURVE SMOOTH"
);
}
);
width = 250;
}
);
unicode = 00A6;
},
{
glyphname = dagger;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"38 -267 OFFCURVE",
"39 -265 OFFCURVE",
"37 -260 CURVE SMOOTH",
"34 -251 OFFCURVE",
"32 -247 OFFCURVE",
"32 -247 CURVE",
"30 -232 OFFCURVE",
"29 -218 OFFCURVE",
"29 -205 CURVE SMOOTH",
"29 -76 OFFCURVE",
"97 96 OFFCURVE",
"234 311 CURVE",
"287 318 OFFCURVE",
"323 324 OFFCURVE",
"344 331 CURVE SMOOTH",
"353 334 OFFCURVE",
"359 338 OFFCURVE",
"362 343 CURVE",
"362 347 OFFCURVE",
"356 349 OFFCURVE",
"344 349 CURVE SMOOTH",
"317 349 OFFCURVE",
"286 346 OFFCURVE",
"253 339 CURVE",
"294 398 OFFCURVE",
"327 445 OFFCURVE",
"354 482 CURVE SMOOTH",
"381 518 OFFCURVE",
"400 544 OFFCURVE",
"413 559 CURVE",
"413 562 OFFCURVE",
"408 564 OFFCURVE",
"399 564 CURVE SMOOTH",
"388 564 OFFCURVE",
"377 561 OFFCURVE",
"368 556 CURVE SMOOTH",
"355 549 OFFCURVE",
"339 532 OFFCURVE",
"320 505 CURVE",
"317 502 OFFCURVE",
"313 495 OFFCURVE",
"306 486 CURVE SMOOTH",
"299 476 OFFCURVE",
"290 462 OFFCURVE",
"279 445 CURVE SMOOTH",
"256 412 OFFCURVE",
"232 373 OFFCURVE",
"207 330 CURVE",
"139 318 LINE",
"94 313 OFFCURVE",
"71 304 OFFCURVE",
"71 293 CURVE SMOOTH",
"71 282 OFFCURVE",
"78 276 OFFCURVE",
"92 276 CURVE SMOOTH",
"99 276 OFFCURVE",
"108 278 OFFCURVE",
"119 282 CURVE SMOOTH",
"127 286 OFFCURVE",
"135 290 OFFCURVE",
"144 293 CURVE SMOOTH",
"158 298 OFFCURVE",
"174 302 OFFCURVE",
"192 305 CURVE",
"65 84 OFFCURVE",
"2 -86 OFFCURVE",
"2 -204 CURVE SMOOTH",
"2 -246 OFFCURVE",
"13 -267 OFFCURVE",
"35 -267 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01232 1065 40 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 32 118 32 134 32 150 32 166 32 182 32 198 32 214 32 230 32 246 32 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 32 22 32 38 32 54 32 70 32 86 32 102 32 118 32 134 32 150 32 166 32 182 32 198 32 214 32 230 32 246 32 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 32 22 32 38 32 54 32 70 32 86 32 102 32 118 32 134 32 150 32 166 32 182 32 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 32 213 32 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01220 38 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01242 38 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 446;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = daggerdbl;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"35 -268 OFFCURVE",
"35 -268 OFFCURVE",
"35 -267 CURVE SMOOTH",
"35 -258 OFFCURVE",
"29 -216 OFFCURVE",
"29 -205 CURVE SMOOTH",
"29 -94 OFFCURVE",
"76 43 OFFCURVE",
"171 208 CURVE",
"252 222 LINE SMOOTH",
"295 231 OFFCURVE",
"318 239 OFFCURVE",
"323 246 CURVE",
"323 250 OFFCURVE",
"317 252 OFFCURVE",
"305 252 CURVE SMOOTH",
"280 252 OFFCURVE",
"241 247 OFFCURVE",
"187 237 CURVE",
"204 267 OFFCURVE",
"219 291 OFFCURVE",
"232 309 CURVE",
"301 321 LINE SMOOTH",
"336 328 OFFCURVE",
"357 336 OFFCURVE",
"362 343 CURVE",
"362 347 OFFCURVE",
"356 349 OFFCURVE",
"344 349 CURVE SMOOTH",
"325 349 OFFCURVE",
"295 345 OFFCURVE",
"251 338 CURVE",
"292 399 OFFCURVE",
"327 449 OFFCURVE",
"358 488 CURVE SMOOTH",
"369 503 OFFCURVE",
"380 515 OFFCURVE",
"389 526 CURVE SMOOTH",
"411 553 LINE",
"413 557 OFFCURVE",
"414 559 OFFCURVE",
"414 558 CURVE SMOOTH",
"414 562 OFFCURVE",
"409 564 OFFCURVE",
"399 564 CURVE SMOOTH",
"380 564 OFFCURVE",
"365 558 OFFCURVE",
"354 545 CURVE SMOOTH",
"328 517 OFFCURVE",
"302 483 OFFCURVE",
"275 442 CURVE SMOOTH",
"260 419 OFFCURVE",
"238 382 OFFCURVE",
"207 331 CURVE",
"131 319 LINE SMOOTH",
"91 311 OFFCURVE",
"71 302 OFFCURVE",
"71 293 CURVE SMOOTH",
"71 282 OFFCURVE",
"78 276 OFFCURVE",
"92 276 CURVE SMOOTH",
"96 276 OFFCURVE",
"111 280 OFFCURVE",
"137 288 CURVE SMOOTH",
"152 292 OFFCURVE",
"164 295 OFFCURVE",
"173 298 CURVE SMOOTH",
"182 300 OFFCURVE",
"188 301 OFFCURVE",
"191 302 CURVE",
"176 277 OFFCURVE",
"162 253 OFFCURVE",
"151 231 CURVE",
"140 230 OFFCURVE",
"129 228 OFFCURVE",
"118 226 CURVE SMOOTH",
"84 220 LINE SMOOTH",
"49 213 OFFCURVE",
"32 205 OFFCURVE",
"32 196 CURVE SMOOTH",
"32 185 OFFCURVE",
"39 179 OFFCURVE",
"53 179 CURVE SMOOTH",
"62 179 OFFCURVE",
"76 182 OFFCURVE",
"94 189 CURVE SMOOTH",
"105 192 OFFCURVE",
"114 195 OFFCURVE",
"121 198 CURVE",
"137 202 LINE",
"47 30 OFFCURVE",
"2 -105 OFFCURVE",
"2 -204 CURVE SMOOTH",
"2 -247 OFFCURVE",
"13 -268 OFFCURVE",
"34 -268 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 1065 64 14 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 21 values pushed */\012102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 10 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 25 values pushed */\0126 55 22 55 38 55 54 55 70 55 86 55 102 55 118 55 134 55 150 55 166 55 182 55 12 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012197 55 213 55 2 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01236 62 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01241 62 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01246 62 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01250 62 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 446;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = numero;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
background = {
paths = (
{
closed = 1;
nodes = (
"547 454 OFFCURVE",
"536 452 OFFCURVE",
"527 436 CURVE SMOOTH",
"477 343 OFFCURVE",
"419 123 OFFCURVE",
"393 16 CURVE",
"322 54 OFFCURVE",
"260 305 OFFCURVE",
"240 398 CURVE",
"237 402 OFFCURVE",
"221 421 OFFCURVE",
"215 421 CURVE SMOOTH",
"207 421 OFFCURVE",
"188 414 OFFCURVE",
"187 405 CURVE SMOOTH",
"186 401 OFFCURVE",
"187 397 OFFCURVE",
"187 392 CURVE SMOOTH",
"187 391 OFFCURVE",
"187 390 OFFCURVE",
"186 388 CURVE SMOOTH",
"135 258 OFFCURVE",
"70 76 OFFCURVE",
"50 11 CURVE SMOOTH",
"46 -3 OFFCURVE",
"34 -35 OFFCURVE",
"34 -38 CURVE SMOOTH",
"34 -43 OFFCURVE",
"39 -47 OFFCURVE",
"45 -47 CURVE SMOOTH",
"58 -47 OFFCURVE",
"66 -34 OFFCURVE",
"70 -23 CURVE SMOOTH",
"103 86 OFFCURVE",
"200 374 OFFCURVE",
"202 380 CURVE",
"256 164 OFFCURVE",
"314 21 OFFCURVE",
"362 -14 CURVE",
"363 -28 OFFCURVE",
"367 -50 OFFCURVE",
"386 -50 CURVE SMOOTH",
"400 -50 OFFCURVE",
"416 -17 OFFCURVE",
"417 -7 CURVE SMOOTH",
"418 -1 OFFCURVE",
"417 -2 OFFCURVE",
"414 0 CURVE",
"411 5 OFFCURVE",
"416 34 OFFCURVE",
"418 39 CURVE SMOOTH",
"454 152 OFFCURVE",
"507 312 OFFCURVE",
"545 393 CURVE SMOOTH",
"554 412 OFFCURVE",
"562 434 OFFCURVE",
"562 444 CURVE SMOOTH",
"562 448 OFFCURVE",
"559 454 OFFCURVE",
"553 454 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"109 172 OFFCURVE",
"237 174 OFFCURVE",
"284 174 CURVE SMOOTH",
"329 174 OFFCURVE",
"476 175 OFFCURVE",
"521 180 CURVE",
"521 191 OFFCURVE",
"507 195 OFFCURVE",
"481 196 CURVE SMOOTH",
"432 197 OFFCURVE",
"287 197 OFFCURVE",
"224 197 CURVE SMOOTH",
"134 197 OFFCURVE",
"90 195 OFFCURVE",
"81 193 CURVE SMOOTH",
"70 191 OFFCURVE",
"65 187 OFFCURVE",
"65 184 CURVE SMOOTH",
"65 176 OFFCURVE",
"71 172 OFFCURVE",
"96 172 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"140 276 OFFCURVE",
"268 278 OFFCURVE",
"314 278 CURVE SMOOTH",
"360 278 OFFCURVE",
"507 279 OFFCURVE",
"552 284 CURVE",
"552 295 OFFCURVE",
"538 299 OFFCURVE",
"512 300 CURVE SMOOTH",
"463 301 OFFCURVE",
"318 301 OFFCURVE",
"255 301 CURVE SMOOTH",
"165 301 OFFCURVE",
"121 299 OFFCURVE",
"112 297 CURVE SMOOTH",
"101 295 OFFCURVE",
"96 291 OFFCURVE",
"96 288 CURVE SMOOTH",
"96 280 OFFCURVE",
"102 276 OFFCURVE",
"127 276 CURVE SMOOTH"
);
}
);
};
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"37 -35 OFFCURVE",
"42 -23 OFFCURVE",
"46 -4 CURVE SMOOTH",
"70 103 OFFCURVE",
"89 183 OFFCURVE",
"121 280 CURVE SMOOTH",
"145 352 LINE",
"152 371 LINE",
"155 362 OFFCURVE",
"165 333 OFFCURVE",
"171 311 CURVE SMOOTH",
"204 190 OFFCURVE",
"273 -19 OFFCURVE",
"318 -19 CURVE SMOOTH",
"329 -19 OFFCURVE",
"340 2 OFFCURVE",
"341 11 CURVE SMOOTH",
"342 17 OFFCURVE",
"342 25 OFFCURVE",
"340 27 CURVE",
"337 32 OFFCURVE",
"342 58 OFFCURVE",
"343 62 CURVE SMOOTH",
"359 157 OFFCURVE",
"402 330 OFFCURVE",
"447 417 CURVE SMOOTH",
"450 422 OFFCURVE",
"452 426 OFFCURVE",
"452 429 CURVE SMOOTH",
"452 433 OFFCURVE",
"445 435 OFFCURVE",
"441 435 CURVE SMOOTH",
"431 435 OFFCURVE",
"424 428 OFFCURVE",
"419 418 CURVE SMOOTH",
"373 330 OFFCURVE",
"333 131 OFFCURVE",
"318 48 CURVE",
"285 57 OFFCURVE",
"212 307 OFFCURVE",
"192 393 CURVE SMOOTH",
"187 414 OFFCURVE",
"173 417 OFFCURVE",
"158 418 CURVE SMOOTH",
"144 418 OFFCURVE",
"137 408 OFFCURVE",
"136 401 CURVE SMOOTH",
"135 396 OFFCURVE",
"136 390 OFFCURVE",
"136 386 CURVE SMOOTH",
"136 385 OFFCURVE",
"136 380 OFFCURVE",
"135 376 CURVE SMOOTH",
"105 294 OFFCURVE",
"29 54 OFFCURVE",
"21 -26 CURVE SMOOTH",
"21 -29 OFFCURVE",
"20 -35 OFFCURVE",
"25 -35 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"450 244 OFFCURVE",
"448 245 OFFCURVE",
"448 250 CURVE SMOOTH",
"448 253 LINE SMOOTH",
"449 260 OFFCURVE",
"453 270 OFFCURVE",
"463 285 CURVE SMOOTH",
"471 298 OFFCURVE",
"479 309 OFFCURVE",
"486 318 CURVE SMOOTH",
"508 344 OFFCURVE",
"525 362 OFFCURVE",
"537 370 CURVE SMOOTH",
"545 374 OFFCURVE",
"557 377 OFFCURVE",
"574 377 CURVE SMOOTH",
"600 377 LINE",
"603 374 OFFCURVE",
"604 371 OFFCURVE",
"604 368 CURVE SMOOTH",
"604 359 OFFCURVE",
"597 345 OFFCURVE",
"584 328 CURVE SMOOTH",
"573 314 OFFCURVE",
"562 302 OFFCURVE",
"550 294 CURVE SMOOTH",
"518 270 OFFCURVE",
"488 253 OFFCURVE",
"461 245 CURVE SMOOTH",
"459 244 OFFCURVE",
"457 244 OFFCURVE",
"455 244 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"454 225 OFFCURVE",
"463 227 OFFCURVE",
"470 229 CURVE SMOOTH",
"499 237 OFFCURVE",
"531 255 OFFCURVE",
"565 281 CURVE SMOOTH",
"580 292 OFFCURVE",
"596 307 OFFCURVE",
"608 324 CURVE SMOOTH",
"623 345 OFFCURVE",
"631 362 OFFCURVE",
"631 374 CURVE SMOOTH",
"631 378 LINE",
"630 378 OFFCURVE",
"630 379 OFFCURVE",
"630 380 CURVE",
"636 380 OFFCURVE",
"643 381 OFFCURVE",
"651 382 CURVE SMOOTH",
"658 383 OFFCURVE",
"663 386 OFFCURVE",
"663 390 CURVE SMOOTH",
"663 394 OFFCURVE",
"659 397 OFFCURVE",
"651 397 CURVE SMOOTH",
"587 396 LINE",
"587 396 OFFCURVE",
"585 397 OFFCURVE",
"584 398 CURVE",
"568 406 LINE SMOOTH",
"564 408 OFFCURVE",
"559 411 OFFCURVE",
"553 412 CURVE SMOOTH",
"548 412 OFFCURVE",
"542 411 OFFCURVE",
"537 408 CURVE SMOOTH",
"521 398 LINE",
"507 394 OFFCURVE",
"497 393 OFFCURVE",
"490 393 CURVE SMOOTH",
"482 393 OFFCURVE",
"478 389 OFFCURVE",
"478 383 CURVE SMOOTH",
"478 378 OFFCURVE",
"481 375 OFFCURVE",
"487 373 CURVE SMOOTH",
"491 372 OFFCURVE",
"494 371 OFFCURVE",
"496 370 CURVE SMOOTH",
"498 369 OFFCURVE",
"500 373 OFFCURVE",
"499 373 CURVE",
"497 372 LINE",
"481 353 OFFCURVE",
"469 338 OFFCURVE",
"460 326 CURVE SMOOTH",
"437 300 OFFCURVE",
"425 275 OFFCURVE",
"425 250 CURVE SMOOTH",
"425 234 OFFCURVE",
"434 225 OFFCURVE",
"449 225 CURVE SMOOTH"
);
}
);
width = 613;
}
);
unicode = 2116;
},
{
glyphname = apostrophemod;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"3 515 LINE",
"8 518 OFFCURVE",
"18 529 OFFCURVE",
"21 533 CURVE SMOOTH",
"49 562 OFFCURVE",
"89 610 OFFCURVE",
"102 648 CURVE",
"104 651 LINE",
"104 663 OFFCURVE",
"80 674 OFFCURVE",
"70 674 CURVE SMOOTH",
"66 674 OFFCURVE",
"61 672 OFFCURVE",
"59 669 CURVE",
"60 666 OFFCURVE",
"60 663 OFFCURVE",
"60 660 CURVE SMOOTH",
"60 609 OFFCURVE",
"0 532 OFFCURVE",
"0 517 CURVE SMOOTH",
"0 515 OFFCURVE",
"0 515 OFFCURVE",
"2 515 CURVE SMOOTH"
);
}
);
width = 104;
}
);
unicode = 02BC;
},
{
glyphname = doubleprimemod;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"3 515 LINE",
"7 518 OFFCURVE",
"15 527 OFFCURVE",
"19 530 CURVE",
"43 555 OFFCURVE",
"79 597 OFFCURVE",
"90 630 CURVE",
"93 632 LINE",
"93 643 OFFCURVE",
"71 652 OFFCURVE",
"63 652 CURVE SMOOTH",
"59 652 OFFCURVE",
"54 651 OFFCURVE",
"53 648 CURVE",
"60 604 OFFCURVE",
"0 530 OFFCURVE",
"0 516 CURVE SMOOTH",
"0 515 OFFCURVE",
"0 515 OFFCURVE",
"2 515 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 518 OFFCURVE",
"107 527 OFFCURVE",
"111 530 CURVE",
"135 555 OFFCURVE",
"171 597 OFFCURVE",
"182 630 CURVE",
"184 632 LINE",
"184 643 OFFCURVE",
"162 652 OFFCURVE",
"154 652 CURVE SMOOTH",
"150 652 OFFCURVE",
"146 651 OFFCURVE",
"144 648 CURVE",
"151 604 OFFCURVE",
"92 530 OFFCURVE",
"92 516 CURVE SMOOTH",
"92 515 OFFCURVE",
"92 515 OFFCURVE",
"94 515 CURVE"
);
}
);
width = 184;
}
);
unicode = 02BA;
},
{
glyphname = primemod;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"3 521 LINE",
"6 523 OFFCURVE",
"15 532 OFFCURVE",
"18 536 CURVE",
"42 559 OFFCURVE",
"77 600 OFFCURVE",
"87 631 CURVE",
"88 631 OFFCURVE",
"88 632 OFFCURVE",
"88 633 CURVE SMOOTH",
"88 643 OFFCURVE",
"68 652 OFFCURVE",
"60 652 CURVE SMOOTH",
"56 652 OFFCURVE",
"53 651 OFFCURVE",
"50 648 CURVE",
"57 606 OFFCURVE",
"0 536 OFFCURVE",
"0 522 CURVE SMOOTH",
"0 521 OFFCURVE",
"0 521 OFFCURVE",
"2 521 CURVE SMOOTH"
);
}
);
width = 88;
}
);
unicode = 02B9;
},
{
color = 0;
glyphname = dieresiscomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = dotaccentcomb;
transform = "{1.10917, 0, 0, 1.10917, 109, -63}";
},
{
name = dotaccentcomb;
transform = "{1.10917, 0, 0, 1.10917, 0, -63}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 167;
}
);
unicode = 0308;
},
{
color = 0;
glyphname = dotaccentcomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"36 538 OFFCURVE",
"36 558 OFFCURVE",
"43 566 CURVE",
"49 576 OFFCURVE",
"53 583 OFFCURVE",
"53 590 CURVE SMOOTH",
"53 592 OFFCURVE",
"51 593 OFFCURVE",
"47 593 CURVE SMOOTH",
"34 593 OFFCURVE",
"0 575 OFFCURVE",
"0 560 CURVE SMOOTH",
"0 553 OFFCURVE",
"8 538 OFFCURVE",
"15 538 CURVE SMOOTH"
);
}
);
width = 53;
}
);
unicode = 0307;
},
{
color = 0;
glyphname = gravecomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"121 515 OFFCURVE",
"122 516 OFFCURVE",
"122 517 CURVE SMOOTH",
"122 522 OFFCURVE",
"115 529 OFFCURVE",
"111 531 CURVE",
"97 547 OFFCURVE",
"62 587 OFFCURVE",
"48 604 CURVE SMOOTH",
"42 612 OFFCURVE",
"36 618 OFFCURVE",
"26 618 CURVE SMOOTH",
"17 618 OFFCURVE",
"0 608 OFFCURVE",
"0 598 CURVE SMOOTH",
"0 590 OFFCURVE",
"26 574 OFFCURVE",
"36 566 CURVE SMOOTH",
"60 550 OFFCURVE",
"109 515 OFFCURVE",
"120 515 CURVE SMOOTH"
);
}
);
width = 122;
}
);
note = gravecomb;
unicode = 0300;
},
{
color = 0;
glyphname = acutecomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"14 515 OFFCURVE",
"62 550 OFFCURVE",
"87 566 CURVE",
"97 574 OFFCURVE",
"122 590 OFFCURVE",
"122 598 CURVE SMOOTH",
"122 608 OFFCURVE",
"105 618 OFFCURVE",
"97 618 CURVE SMOOTH",
"87 618 OFFCURVE",
"81 612 OFFCURVE",
"75 604 CURVE SMOOTH",
"60 587 OFFCURVE",
"26 547 OFFCURVE",
"11 531 CURVE",
"8 529 OFFCURVE",
"0 522 OFFCURVE",
"0 517 CURVE SMOOTH",
"0 516 OFFCURVE",
"2 515 OFFCURVE",
"3 515 CURVE SMOOTH"
);
}
);
width = 122;
}
);
note = acutecomb;
unicode = 0301;
},
{
color = 0;
glyphname = hungarumlautcomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"87 518 OFFCURVE",
"108 559 OFFCURVE",
"121 579 CURVE",
"124 587 OFFCURVE",
"135 604 OFFCURVE",
"135 614 CURVE SMOOTH",
"135 624 OFFCURVE",
"121 632 OFFCURVE",
"114 632 CURVE SMOOTH",
"107 632 OFFCURVE",
"105 624 OFFCURVE",
"102 615 CURVE SMOOTH",
"97 594 OFFCURVE",
"85 551 OFFCURVE",
"80 532 CURVE",
"80 530 OFFCURVE",
"77 524 OFFCURVE",
"77 519 CURVE SMOOTH",
"77 517 LINE SMOOTH",
"77 516 OFFCURVE",
"78 515 OFFCURVE",
"80 515 CURVE"
);
},
{
closed = 1;
nodes = (
"9 518 OFFCURVE",
"31 559 OFFCURVE",
"43 579 CURVE SMOOTH",
"47 587 OFFCURVE",
"58 604 OFFCURVE",
"58 614 CURVE SMOOTH",
"58 624 OFFCURVE",
"43 632 OFFCURVE",
"37 632 CURVE SMOOTH",
"30 632 OFFCURVE",
"27 624 OFFCURVE",
"25 615 CURVE SMOOTH",
"20 594 OFFCURVE",
"8 551 OFFCURVE",
"3 532 CURVE",
"2 530 OFFCURVE",
"0 524 OFFCURVE",
"0 519 CURVE SMOOTH",
"0 517 LINE SMOOTH",
"0 516 OFFCURVE",
"1 515 OFFCURVE",
"2 515 CURVE"
);
}
);
width = 135;
}
);
unicode = 030B;
},
{
color = 0;
glyphname = caroncomb.alt;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"3 470 LINE",
"6 473 OFFCURVE",
"15 482 OFFCURVE",
"17 485 CURVE",
"39 509 OFFCURVE",
"70 550 OFFCURVE",
"79 581 CURVE",
"80 582 OFFCURVE",
"80 583 OFFCURVE",
"80 584 CURVE SMOOTH",
"80 593 OFFCURVE",
"60 601 OFFCURVE",
"53 601 CURVE",
"48 600 OFFCURVE",
"45 599 OFFCURVE",
"43 597 CURVE",
"43 586 LINE SMOOTH",
"43 545 OFFCURVE",
"0 483 OFFCURVE",
"0 472 CURVE",
"1 470 OFFCURVE",
"1 470 OFFCURVE",
"2 470 CURVE SMOOTH"
);
}
);
width = 80;
}
);
},
{
color = 0;
glyphname = circumflexcomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"14 515 OFFCURVE",
"73 549 OFFCURVE",
"119 575 CURVE",
"133 559 OFFCURVE",
"185 515 OFFCURVE",
"194 515 CURVE SMOOTH",
"195 515 OFFCURVE",
"196 516 OFFCURVE",
"197 517 CURVE",
"199 522 OFFCURVE",
"194 529 OFFCURVE",
"192 531 CURVE",
"182 547 OFFCURVE",
"162 587 OFFCURVE",
"153 604 CURVE SMOOTH",
"149 614 OFFCURVE",
"141 617 OFFCURVE",
"133 617 CURVE SMOOTH",
"125 617 OFFCURVE",
"116 614 OFFCURVE",
"106 604 CURVE",
"85 587 OFFCURVE",
"37 547 OFFCURVE",
"16 531 CURVE",
"12 529 OFFCURVE",
"2 522 OFFCURVE",
"0 517 CURVE",
"0 516 OFFCURVE",
"2 515 OFFCURVE",
"2 515 CURVE"
);
}
);
width = 197;
}
);
unicode = 0302;
},
{
color = 0;
glyphname = caroncomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"73 515 OFFCURVE",
"82 519 OFFCURVE",
"92 527 CURVE SMOOTH",
"113 546 OFFCURVE",
"162 584 OFFCURVE",
"182 600 CURVE SMOOTH",
"186 604 OFFCURVE",
"196 610 OFFCURVE",
"197 615 CURVE",
"198 616 OFFCURVE",
"196 617 OFFCURVE",
"196 617 CURVE",
"184 617 OFFCURVE",
"124 583 OFFCURVE",
"79 558 CURVE",
"64 573 OFFCURVE",
"14 617 OFFCURVE",
"3 617 CURVE",
"0 615 LINE",
"-2 610 OFFCURVE",
"4 604 OFFCURVE",
"6 600 CURVE SMOOTH",
"15 584 OFFCURVE",
"37 546 OFFCURVE",
"45 527 CURVE SMOOTH",
"49 519 OFFCURVE",
"56 515 OFFCURVE",
"64 515 CURVE SMOOTH"
);
}
);
width = 197;
}
);
unicode = 030C;
},
{
color = 0;
glyphname = brevecomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"109 538 OFFCURVE",
"152 562 OFFCURVE",
"167 607 CURVE",
"167 611 OFFCURVE",
"164 614 OFFCURVE",
"161 614 CURVE SMOOTH",
"158 614 OFFCURVE",
"155 613 OFFCURVE",
"151 609 CURVE SMOOTH",
"131 589 OFFCURVE",
"99 570 OFFCURVE",
"71 570 CURVE SMOOTH",
"40 570 OFFCURVE",
"27 589 OFFCURVE",
"20 609 CURVE",
"17 614 OFFCURVE",
"13 618 OFFCURVE",
"9 618 CURVE SMOOTH",
"5 618 OFFCURVE",
"0 615 OFFCURVE",
"0 604 CURVE SMOOTH",
"0 600 OFFCURVE",
"1 595 OFFCURVE",
"2 589 CURVE SMOOTH",
"10 554 OFFCURVE",
"39 538 OFFCURVE",
"70 538 CURVE SMOOTH"
);
}
);
width = 167;
}
);
unicode = 0306;
},
{
color = 0;
glyphname = ringcomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"80 516 OFFCURVE",
"116 549 OFFCURVE",
"116 583 CURVE SMOOTH",
"116 592 LINE",
"113 609 OFFCURVE",
"97 626 OFFCURVE",
"74 626 CURVE SMOOTH",
"35 626 OFFCURVE",
"0 589 OFFCURVE",
"0 551 CURVE SMOOTH",
"0 528 OFFCURVE",
"18 516 OFFCURVE",
"40 516 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"31 536 OFFCURVE",
"26 544 OFFCURVE",
"26 559 CURVE SMOOTH",
"26 585 OFFCURVE",
"46 608 OFFCURVE",
"66 608 CURVE SMOOTH",
"82 608 OFFCURVE",
"92 592 OFFCURVE",
"92 580 CURVE SMOOTH",
"92 559 OFFCURVE",
"74 536 OFFCURVE",
"45 536 CURVE SMOOTH"
);
}
);
width = 116;
}
);
unicode = 030A;
},
{
color = 0;
glyphname = tildecomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"151 543 OFFCURVE",
"165 565 OFFCURVE",
"172 584 CURVE",
"172 590 OFFCURVE",
"172 595 OFFCURVE",
"168 595 CURVE",
"164 593 OFFCURVE",
"152 575 OFFCURVE",
"134 575 CURVE SMOOTH",
"94 575 OFFCURVE",
"80 599 OFFCURVE",
"51 599 CURVE SMOOTH",
"21 599 OFFCURVE",
"0 561 OFFCURVE",
"0 550 CURVE SMOOTH",
"0 548 OFFCURVE",
"2 546 OFFCURVE",
"3 546 CURVE SMOOTH",
"9 546 OFFCURVE",
"26 570 OFFCURVE",
"48 570 CURVE SMOOTH",
"77 570 OFFCURVE",
"96 543 OFFCURVE",
"128 543 CURVE SMOOTH"
);
}
);
width = 172;
}
);
note = tildecomb;
unicode = 0303;
},
{
color = 0;
glyphname = tildecomb_dotaccentcomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = tildecomb;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 94, 111}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 215;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = tildecomb;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 78, 89}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 195;
}
);
},
{
color = 0;
glyphname = tildecomb_macroncomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = tildecomb;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 26, 90}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 215;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = tildecomb;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -2, 89}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 218;
}
);
},
{
color = 0;
glyphname = macroncomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"59 561 OFFCURVE",
"115 564 OFFCURVE",
"175 563 CURVE",
"183 562 OFFCURVE",
"189 562 OFFCURVE",
"193 562 CURVE SMOOTH",
"202 562 LINE SMOOTH",
"208 562 OFFCURVE",
"211 564 OFFCURVE",
"211 569 CURVE SMOOTH",
"211 572 OFFCURVE",
"208 575 OFFCURVE",
"203 576 CURVE SMOOTH",
"180 580 LINE SMOOTH",
"151 585 OFFCURVE",
"119 588 OFFCURVE",
"82 588 CURVE SMOOTH",
"61 588 OFFCURVE",
"38 587 OFFCURVE",
"14 585 CURVE",
"1 575 OFFCURVE",
"-5 565 OFFCURVE",
"-5 556 CURVE SMOOTH",
"-5 552 OFFCURVE",
"-3 550 OFFCURVE",
"2 550 CURVE"
);
}
);
width = 179;
}
);
unicode = 0304;
},
{
color = 0;
glyphname = hookabovecomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"38 521 OFFCURVE",
"41 523 OFFCURVE",
"41 527 CURVE",
"65 553 OFFCURVE",
"70 558 OFFCURVE",
"89 574 CURVE SMOOTH",
"114 593 OFFCURVE",
"125 613 OFFCURVE",
"125 633 CURVE SMOOTH",
"125 659 OFFCURVE",
"100 671 OFFCURVE",
"76 671 CURVE SMOOTH",
"21 671 OFFCURVE",
"0 645 OFFCURVE",
"0 622 CURVE SMOOTH",
"0 604 OFFCURVE",
"18 640 OFFCURVE",
"56 640 CURVE SMOOTH",
"73 640 OFFCURVE",
"82 635 OFFCURVE",
"82 622 CURVE SMOOTH",
"82 611 OFFCURVE",
"75 597 OFFCURVE",
"60 578 CURVE SMOOTH",
"49 566 OFFCURVE",
"37 555 OFFCURVE",
"31 538 CURVE SMOOTH",
"30 536 OFFCURVE",
"29 533 OFFCURVE",
"29 530 CURVE SMOOTH",
"29 524 OFFCURVE",
"33 521 OFFCURVE",
"37 521 CURVE SMOOTH"
);
}
);
width = 125;
}
);
note = hookabovecomb;
unicode = 0309;
},
{
color = 0;
glyphname = dblgravecomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = grave;
transform = "{0.84294, -0.10937, 0.10937, 0.84294, 26, 21}";
},
{
name = grave;
transform = "{0.85, 0, 0, 0.85, 0, 0}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 245;
}
);
unicode = 030F;
},
{
color = 0;
glyphname = breveinvertedcomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = brevecomb;
transform = "{-1, 0, 0, -1, 208, 1175}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 208;
}
);
unicode = 0311;
},
{
color = 0;
glyphname = commaturnedabovecomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"42 524 OFFCURVE",
"51 536 OFFCURVE",
"51 544 CURVE SMOOTH",
"51 553 OFFCURVE",
"44 560 OFFCURVE",
"44 569 CURVE SMOOTH",
"44 586 OFFCURVE",
"59 614 OFFCURVE",
"76 634 CURVE SMOOTH",
"86 647 OFFCURVE",
"92 655 OFFCURVE",
"102 666 CURVE",
"102 670 OFFCURVE",
"102 677 OFFCURVE",
"95 677 CURVE",
"84 668 OFFCURVE",
"71 654 OFFCURVE",
"67 650 CURVE SMOOTH",
"41 624 OFFCURVE",
"0 581 OFFCURVE",
"0 547 CURVE SMOOTH",
"0 533 OFFCURVE",
"5 524 OFFCURVE",
"26 524 CURVE SMOOTH"
);
}
);
width = 102;
}
);
unicode = 0312;
},
{
color = 0;
glyphname = horncomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"87 530 OFFCURVE",
"118 558 OFFCURVE",
"130 601 CURVE SMOOTH",
"134 615 OFFCURVE",
"139 632 OFFCURVE",
"139 645 CURVE SMOOTH",
"139 658 OFFCURVE",
"134 667 OFFCURVE",
"123 667 CURVE SMOOTH",
"112 667 OFFCURVE",
"105 660 OFFCURVE",
"102 648 CURVE SMOOTH",
"94 602 OFFCURVE",
"79 557 OFFCURVE",
"46 553 CURVE SMOOTH",
"41 552 OFFCURVE",
"36 552 OFFCURVE",
"31 552 CURVE SMOOTH",
"20 552 OFFCURVE",
"11 553 OFFCURVE",
"6 555 CURVE SMOOTH",
"2 556 OFFCURVE",
"0 554 OFFCURVE",
"0 552 CURVE SMOOTH",
"0 537 OFFCURVE",
"22 530 OFFCURVE",
"48 530 CURVE SMOOTH"
);
}
);
width = 139;
}
);
unicode = 031B;
},
{
color = 0;
glyphname = dotbelowcomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"45 -183 OFFCURVE",
"45 -157 OFFCURVE",
"53 -147 CURVE SMOOTH",
"61 -134 OFFCURVE",
"65 -126 OFFCURVE",
"65 -118 CURVE SMOOTH",
"65 -114 OFFCURVE",
"63 -113 OFFCURVE",
"59 -113 CURVE SMOOTH",
"43 -113 OFFCURVE",
"0 -135 OFFCURVE",
"0 -156 CURVE SMOOTH",
"0 -164 OFFCURVE",
"9 -183 OFFCURVE",
"20 -183 CURVE SMOOTH"
);
}
);
width = 65;
}
);
note = dotbelowcomb;
unicode = 0323;
},
{
color = 0;
glyphname = dieresisbelowcomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 0, -704}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 208;
}
);
unicode = 0324;
},
{
color = 0;
glyphname = commaaccentcomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"8 -241 LINE",
"18 -232 OFFCURVE",
"30 -217 OFFCURVE",
"34 -213 CURVE SMOOTH",
"59 -186 OFFCURVE",
"96 -142 OFFCURVE",
"96 -109 CURVE SMOOTH",
"96 -94 OFFCURVE",
"92 -85 OFFCURVE",
"72 -85 CURVE SMOOTH",
"55 -85 OFFCURVE",
"45 -98 OFFCURVE",
"45 -106 CURVE SMOOTH",
"46 -115 OFFCURVE",
"53 -122 OFFCURVE",
"54 -131 CURVE SMOOTH",
"54 -148 OFFCURVE",
"41 -176 OFFCURVE",
"25 -197 CURVE SMOOTH",
"15 -211 OFFCURVE",
"9 -218 OFFCURVE",
"0 -231 CURVE",
"0 -235 OFFCURVE",
"1 -241 OFFCURVE",
"7 -241 CURVE SMOOTH"
);
}
);
width = 96;
}
);
unicode = 0326;
},
{
color = 0;
glyphname = cedillacomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"42 -168 OFFCURVE",
"103 -148 OFFCURVE",
"103 -103 CURVE SMOOTH",
"103 -76 OFFCURVE",
"73 -55 OFFCURVE",
"73 -38 CURVE SMOOTH",
"73 -20 OFFCURVE",
"87 -1 OFFCURVE",
"105 2 CURVE",
"105 6 OFFCURVE",
"101 6 OFFCURVE",
"98 6 CURVE SMOOTH",
"61 6 OFFCURVE",
"39 -24 OFFCURVE",
"39 -50 CURVE SMOOTH",
"39 -73 OFFCURVE",
"65 -93 OFFCURVE",
"65 -114 CURVE SMOOTH",
"65 -146 OFFCURVE",
"36 -152 OFFCURVE",
"6 -156 CURVE SMOOTH",
"4 -156 OFFCURVE",
"0 -158 OFFCURVE",
"0 -162 CURVE SMOOTH",
"0 -164 OFFCURVE",
"2 -168 OFFCURVE",
"6 -168 CURVE SMOOTH"
);
}
);
width = 105;
}
);
unicode = 0327;
},
{
color = 0;
glyphname = ogonekcomb;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"82 -129 OFFCURVE",
"139 -110 OFFCURVE",
"139 -94 CURVE SMOOTH",
"139 -90 OFFCURVE",
"136 -85 OFFCURVE",
"133 -85 CURVE",
"133 -85 OFFCURVE",
"132 -85 OFFCURVE",
"131 -86 CURVE",
"112 -97 OFFCURVE",
"88 -101 OFFCURVE",
"68 -101 CURVE SMOOTH",
"52 -101 OFFCURVE",
"37 -92 OFFCURVE",
"37 -72 CURVE SMOOTH",
"37 -50 OFFCURVE",
"56 -14 OFFCURVE",
"71 2 CURVE",
"62 4 LINE",
"36 3 OFFCURVE",
"0 -73 OFFCURVE",
"0 -97 CURVE SMOOTH",
"0 -122 OFFCURVE",
"30 -129 OFFCURVE",
"50 -129 CURVE SMOOTH"
);
}
);
width = 139;
}
);
unicode = 0328;
},
{
color = 0;
glyphname = brevebelowcomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = brevecomb;
transform = "{1, 0, 0, 1, 0, -740}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 208;
}
);
unicode = 032E;
},
{
color = 0;
glyphname = macronbelowcomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = macroncomb;
transform = "{1, 0, 0, 1, 0, -717}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 211;
}
);
unicode = 0331;
},
{
color = 0;
glyphname = strokeshortcomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = macroncomb;
transform = "{1, 0, 0, 1, 0, -501}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 179;
}
);
unicode = 0335;
},
{
color = 0;
glyphname = dieresis;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = dieresiscomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 196;
}
);
unicode = 00A8;
},
{
color = 0;
glyphname = dotaccent;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = dotaccentcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 62;
}
);
unicode = 02D9;
},
{
color = 0;
glyphname = grave;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = gravecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 144;
}
);
unicode = 0060;
},
{
color = 0;
glyphname = acute;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = acutecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 144;
}
);
unicode = 00B4;
},
{
color = 0;
glyphname = hungarumlaut;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = hungarumlautcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 159;
}
);
unicode = 02DD;
},
{
color = 0;
glyphname = circumflex;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 232;
}
);
unicode = 02C6;
},
{
color = 0;
glyphname = caron;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = caroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 232;
}
);
unicode = 02C7;
},
{
color = 0;
glyphname = breve;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = brevecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 196;
}
);
unicode = 02D8;
},
{
color = 0;
glyphname = ring;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = ringcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 137;
}
);
unicode = 02DA;
},
{
color = 0;
glyphname = tilde;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = tildecomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 202;
}
);
unicode = 02DC;
},
{
color = 0;
glyphname = macron;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = macroncomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 211;
}
);
unicode = 00AF;
},
{
color = 0;
glyphname = cedilla;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = cedillacomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 123;
}
);
unicode = 00B8;
},
{
color = 0;
glyphname = ogonek;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = ogonekcomb;
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 163;
}
);
unicode = 02DB;
},
{
color = 0;
glyphname = brevecomb_acutecomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 83, 113}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 236;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 57, 113}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 181;
}
);
},
{
color = 0;
glyphname = brevecomb_gravecomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = brevecomb;
transform = "{1, 0, 0, 1, 36, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 0, 113}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 244;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -14, 113}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 181;
}
);
},
{
color = 0;
glyphname = brevecomb_hookabovecomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 58, 94}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 208;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 33, 113}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 181;
}
);
},
{
color = 0;
glyphname = brevecomb_tildecomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 8, 111}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 223;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 8, 113}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 181;
}
);
},
{
color = 0;
glyphname = circumflexcomb_acutecomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 233, 92}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 386;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = circumflexcomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 215, 91}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 220;
}
);
},
{
color = 0;
glyphname = circumflexcomb_gravecomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 165, 85}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 318;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = circumflexcomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 144, 91}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 220;
}
);
},
{
color = 0;
glyphname = circumflexcomb_hookabovecomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 207, 82}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 332;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = circumflexcomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 168, 66}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 220;
}
);
},
{
color = 0;
glyphname = circumflexcomb_tildecomb;
lastChange = "2022-01-10 17:27:48 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 78, 114}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 293;
},
{
associatedMasterId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 52, 130}";
}
);
layerId = "4BAAD733-1765-45F1-B85E-2B4DED8D21F0";
name = Medium;
width = 220;
}
);
},
{
glyphname = robbie;
lastChange = "2022-03-18 06:00:18 +0000";
layers = (
{
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
paths = (
{
closed = 1;
nodes = (
"221 1 LINE",
"221 7 LINE",
"223 7 LINE",
"223 9 LINE",
"227 9 LINE",
"227 10 LINE",
"230 10 LINE SMOOTH",
"231 10 OFFCURVE",
"233 11 OFFCURVE",
"234 13 CURVE",
"233 13 OFFCURVE",
"233 15 OFFCURVE",
"233 16 CURVE",
"234 18 OFFCURVE",
"235 18 OFFCURVE",
"235 18 CURVE",
"236 18 OFFCURVE",
"237 19 OFFCURVE",
"238 19 CURVE",
"238 20 OFFCURVE",
"241 20 OFFCURVE",
"241 20 CURVE",
"242 21 LINE",
"241 21 OFFCURVE",
"241 21 OFFCURVE",
"241 22 CURVE",
"245 22 OFFCURVE",
"247 23 OFFCURVE",
"249 24 CURVE",
"253 28 LINE",
"254 30 OFFCURVE",
"255 30 OFFCURVE",
"255 32 CURVE",
"256 33 OFFCURVE",
"258 35 OFFCURVE",
"258 36 CURVE SMOOTH",
"258 38 OFFCURVE",
"258 39 OFFCURVE",
"259 39 CURVE",
"260 40 OFFCURVE",
"260 41 OFFCURVE",
"260 41 CURVE",
"261 44 OFFCURVE",
"262 44 OFFCURVE",
"262 43 CURVE",
"263 42 OFFCURVE",
"263 41 OFFCURVE",
"263 41 CURVE",
"263 46 LINE",
"266 46 LINE",
"266 47 LINE",
"267 47 LINE",
"267 48 LINE",
"268 49 OFFCURVE",
"268 49 OFFCURVE",
"268 50 CURVE SMOOTH",
"268 52 LINE",
"271 52 LINE",
"272 53 OFFCURVE",
"272 54 OFFCURVE",
"272 54 CURVE",
"274 55 OFFCURVE",
"274 56 OFFCURVE",
"274 56 CURVE",
"277 56 LINE SMOOTH",
"278 56 OFFCURVE",
"278 57 OFFCURVE",
"278 58 CURVE SMOOTH",
"278 59 OFFCURVE",
"278 59 OFFCURVE",
"277 60 CURVE",
"278 60 OFFCURVE",
"278 60 OFFCURVE",
"280 61 CURVE",
"284 61 LINE",
"284 64 LINE",
"286 64 LINE",
"286 67 OFFCURVE",
"287 68 OFFCURVE",
"289 69 CURVE SMOOTH",
"292 70 OFFCURVE",
"292 70 OFFCURVE",
"295 70 CURVE",
"295 72 OFFCURVE",
"295 73 OFFCURVE",
"293 73 CURVE",
"295 75 LINE",
"295 79 LINE SMOOTH",
"295 80 OFFCURVE",
"293 81 OFFCURVE",
"292 83 CURVE",
"289 83 OFFCURVE",
"287 82 OFFCURVE",
"289 81 CURVE",
"289 80 OFFCURVE",
"288 79 OFFCURVE",
"286 79 CURVE SMOOTH",
"271 79 LINE SMOOTH",
"269 79 OFFCURVE",
"269 80 OFFCURVE",
"268 81 CURVE SMOOTH",
"267 82 OFFCURVE",
"266 84 OFFCURVE",
"263 84 CURVE",
"261 86 LINE",
"261 87 LINE",
"260 87 OFFCURVE",
"260 87 OFFCURVE",
"260 88 CURVE",
"235 88 LINE",
"234 91 LINE",
"231 91 LINE",
"231 92 LINE",
"231 92 OFFCURVE",
"230 92 OFFCURVE",
"230 93 CURVE",
"227 93 LINE",
"227 94 LINE",
"226 95 OFFCURVE",
"224 95 OFFCURVE",
"222 94 CURVE SMOOTH",
"220 93 OFFCURVE",
"219 93 OFFCURVE",
"218 93 CURVE SMOOTH",
"216 93 OFFCURVE",
"213 94 OFFCURVE",
"212 94 CURVE SMOOTH",
"207 94 LINE",
"207 96 LINE",
"205 97 OFFCURVE",
"203 97 OFFCURVE",
"202 96 CURVE SMOOTH",
"200 95 OFFCURVE",
"200 95 OFFCURVE",
"200 96 CURVE",
"190 105 LINE",
"190 106 LINE",
"189 105 OFFCURVE",
"188 105 OFFCURVE",
"187 107 CURVE SMOOTH",
"186 110 OFFCURVE",
"186 110 OFFCURVE",
"185 110 CURVE",
"185 118 LINE SMOOTH",
"185 121 OFFCURVE",
"186 122 OFFCURVE",
"186 124 CURVE SMOOTH",
"186 127 LINE",
"185 129 OFFCURVE",
"184 130 OFFCURVE",
"183 130 CURVE SMOOTH",
"169 130 LINE",
"169 132 OFFCURVE",
"169 133 OFFCURVE",
"168 134 CURVE SMOOTH",
"167 135 OFFCURVE",
"166 136 OFFCURVE",
"166 138 CURVE",
"169 138 LINE",
"169 168 LINE",
"166 170 LINE",
"169 173 OFFCURVE",
"169 173 OFFCURVE",
"169 174 CURVE",
"171 175 OFFCURVE",
"171 176 OFFCURVE",
"171 176 CURVE",
"171 178 LINE",
"175 178 LINE",
"175 180 LINE",
"177 180 OFFCURVE",
"180 179 OFFCURVE",
"180 178 CURVE",
"183 179 OFFCURVE",
"183 180 OFFCURVE",
"183 181 CURVE",
"183 181 OFFCURVE",
"184 182 OFFCURVE",
"185 185 CURVE",
"185 188 LINE",
"187 188 LINE SMOOTH",
"186 188 OFFCURVE",
"187 189 OFFCURVE",
"189 189 CURVE",
"189 191 LINE",
"194 191 OFFCURVE",
"199 190 OFFCURVE",
"201 187 CURVE SMOOTH",
"203 185 OFFCURVE",
"206 182 OFFCURVE",
"208 178 CURVE",
"209 177 OFFCURVE",
"211 177 OFFCURVE",
"213 177 CURVE",
"216 176 OFFCURVE",
"219 176 OFFCURVE",
"222 176 CURVE SMOOTH",
"229 176 LINE",
"231 177 OFFCURVE",
"233 177 OFFCURVE",
"234 178 CURVE",
"234 180 LINE",
"231 181 LINE",
"216 181 LINE",
"216 183 OFFCURVE",
"216 185 OFFCURVE",
"214 187 CURVE",
"213 187 OFFCURVE",
"212 189 OFFCURVE",
"212 189 CURVE",
"212 199 LINE SMOOTH",
"212 200 OFFCURVE",
"212 201 OFFCURVE",
"213 202 CURVE",
"216 202 LINE",
"216 203 LINE",
"227 203 LINE",
"227 202 LINE",
"231 202 LINE",
"233 200 OFFCURVE",
"234 198 OFFCURVE",
"234 198 CURVE",
"235 197 OFFCURVE",
"236 196 OFFCURVE",
"236 194 CURVE",
"258 194 LINE",
"258 195 LINE",
"260 195 LINE",
"260 196 OFFCURVE",
"261 196 OFFCURVE",
"263 196 CURVE",
"263 195 OFFCURVE",
"266 195 OFFCURVE",
"266 195 CURVE",
"267 195 OFFCURVE",
"268 196 OFFCURVE",
"268 197 CURVE",
"269 198 OFFCURVE",
"269 198 OFFCURVE",
"271 198 CURVE SMOOTH",
"266 198 LINE",
"266 198 OFFCURVE",
"263 199 OFFCURVE",
"262 201 CURVE",
"260 203 LINE",
"260 208 LINE",
"263 208 OFFCURVE",
"266 208 OFFCURVE",
"268 210 CURVE",
"269 210 OFFCURVE",
"272 210 OFFCURVE",
"277 209 CURVE",
"278 210 LINE",
"277 210 OFFCURVE",
"277 210 OFFCURVE",
"277 211 CURVE",
"281 211 LINE",
"281 214 OFFCURVE",
"284 216 OFFCURVE",
"284 217 CURVE SMOOTH",
"284 218 OFFCURVE",
"286 219 OFFCURVE",
"292 219 CURVE",
"293 220 OFFCURVE",
"294 219 OFFCURVE",
"295 219 CURVE",
"295 221 LINE SMOOTH",
"295 222 OFFCURVE",
"295 222 OFFCURVE",
"297 223 CURVE",
"297 231 LINE",
"295 231 LINE",
"295 235 LINE",
"292 235 OFFCURVE",
"289 234 OFFCURVE",
"286 233 CURVE",
"286 233 OFFCURVE",
"284 232 OFFCURVE",
"281 232 CURVE SMOOTH",
"263 232 LINE",
"260 235 LINE",
"258 235 LINE",
"258 236 LINE",
"253 236 LINE",
"253 239 LINE",
"250 239 LINE",
"250 240 LINE",
"244 240 LINE",
"244 242 LINE",
"239 242 LINE",
"236 240 LINE",
"223 240 LINE",
"221 242 LINE",
"220 242 LINE",
"220 253 LINE SMOOTH",
"220 258 OFFCURVE",
"219 262 OFFCURVE",
"218 264 CURVE",
"217 264 OFFCURVE",
"216 264 OFFCURVE",
"214 263 CURVE SMOOTH",
"213 262 OFFCURVE",
"213 263 OFFCURVE",
"213 264 CURVE",
"212 263 LINE",
"212 262 LINE",
"208 261 OFFCURVE",
"205 259 OFFCURVE",
"204 256 CURVE",
"203 255 OFFCURVE",
"202 253 OFFCURVE",
"200 251 CURVE",
"197 251 LINE",
"197 250 LINE",
"193 250 LINE",
"190 248 LINE",
"186 249 OFFCURVE",
"183 248 OFFCURVE",
"177 246 CURVE SMOOTH",
"171 245 OFFCURVE",
"166 245 OFFCURVE",
"161 246 CURVE SMOOTH",
"160 246 OFFCURVE",
"160 247 OFFCURVE",
"158 248 CURVE",
"157 248 OFFCURVE",
"157 249 OFFCURVE",
"155 250 CURVE",
"153 250 LINE",
"152 249 OFFCURVE",
"152 249 OFFCURVE",
"151 249 CURVE",
"149 248 OFFCURVE",
"149 248 OFFCURVE",
"148 248 CURVE SMOOTH",
"146 248 OFFCURVE",
"146 248 OFFCURVE",
"144 249 CURVE SMOOTH",
"143 250 OFFCURVE",
"143 250 OFFCURVE",
"142 250 CURVE SMOOTH",
"140 250 LINE SMOOTH",
"138 250 OFFCURVE",
"138 252 OFFCURVE",
"137 253 CURVE SMOOTH",
"134 256 LINE",
"132 263 LINE",
"132 266 OFFCURVE",
"130 270 OFFCURVE",
"129 273 CURVE",
"129 282 LINE",
"128 284 OFFCURVE",
"129 286 OFFCURVE",
"129 287 CURVE SMOOTH",
"129 288 LINE",
"132 288 LINE SMOOTH",
"137 288 OFFCURVE",
"140 289 OFFCURVE",
"142 291 CURVE",
"143 294 OFFCURVE",
"143 296 OFFCURVE",
"142 298 CURVE",
"141 298 OFFCURVE",
"140 299 OFFCURVE",
"140 299 CURVE",
"136 299 LINE",
"135 300 OFFCURVE",
"134 301 OFFCURVE",
"132 302 CURVE",
"129 302 LINE",
"129 304 OFFCURVE",
"128 305 OFFCURVE",
"127 305 CURVE",
"126 306 OFFCURVE",
"126 307 OFFCURVE",
"126 309 CURVE SMOOTH",
"126 312 OFFCURVE",
"126 315 OFFCURVE",
"128 316 CURVE",
"129 316 OFFCURVE",
"132 319 OFFCURVE",
"134 322 CURVE",
"138 322 LINE",
"140 321 OFFCURVE",
"141 322 OFFCURVE",
"143 324 CURVE",
"152 324 LINE",
"152 323 OFFCURVE",
"154 322 OFFCURVE",
"155 319 CURVE",
"157 316 OFFCURVE",
"157 315 OFFCURVE",
"157 314 CURVE",
"169 314 LINE",
"170 313 OFFCURVE",
"171 312 OFFCURVE",
"170 312 CURVE",
"169 311 OFFCURVE",
"170 310 OFFCURVE",
"171 309 CURVE",
"174 309 LINE",
"174 307 LINE",
"175 305 LINE",
"177 305 LINE",
"177 304 LINE",
"178 304 OFFCURVE",
"179 303 OFFCURVE",
"179 302 CURVE",
"189 302 LINE",
"189 302 OFFCURVE",
"190 302 OFFCURVE",
"190 301 CURVE",
"193 301 LINE",
"193 300 OFFCURVE",
"193 300 OFFCURVE",
"194 299 CURVE",
"194 296 LINE",
"211 296 LINE",
"212 298 OFFCURVE",
"213 299 OFFCURVE",
"214 299 CURVE",
"216 300 OFFCURVE",
"217 302 OFFCURVE",
"218 302 CURVE SMOOTH",
"244 302 LINE SMOOTH",
"247 302 OFFCURVE",
"249 303 OFFCURVE",
"252 304 CURVE",
"252 304 OFFCURVE",
"254 305 OFFCURVE",
"254 307 CURVE",
"255 309 OFFCURVE",
"255 311 OFFCURVE",
"255 313 CURVE SMOOTH",
"255 315 OFFCURVE",
"256 316 OFFCURVE",
"258 319 CURVE",
"258 317 OFFCURVE",
"260 318 OFFCURVE",
"261 320 CURVE SMOOTH",
"263 323 OFFCURVE",
"263 325 OFFCURVE",
"263 325 CURVE",
"263 330 OFFCURVE",
"261 334 OFFCURVE",
"258 338 CURVE SMOOTH",
"254 342 OFFCURVE",
"251 345 OFFCURVE",
"249 348 CURVE",
"244 348 LINE",
"241 351 LINE",
"234 353 OFFCURVE",
"226 353 OFFCURVE",
"217 353 CURVE SMOOTH",
"207 353 OFFCURVE",
"196 353 OFFCURVE",
"183 351 CURVE",
"183 351 OFFCURVE",
"176 351 OFFCURVE",
"175 349 CURVE",
"175 348 LINE",
"163 348 LINE",
"163 351 OFFCURVE",
"163 352 OFFCURVE",
"162 352 CURVE",
"161 351 OFFCURVE",
"161 352 OFFCURVE",
"161 353 CURVE SMOOTH",
"161 371 LINE",
"163 371 LINE",
"163 372 LINE",
"166 372 LINE",
"166 374 OFFCURVE",
"167 374 OFFCURVE",
"169 374 CURVE",
"171 376 LINE",
"172 378 OFFCURVE",
"172 379 OFFCURVE",
"172 383 CURVE SMOOTH",
"172 384 OFFCURVE",
"173 385 OFFCURVE",
"174 386 CURVE",
"174 388 OFFCURVE",
"173 390 OFFCURVE",
"172 393 CURVE",
"170 396 OFFCURVE",
"169 399 OFFCURVE",
"169 399 CURVE",
"166 399 LINE",
"166 417 LINE",
"163 417 LINE",
"163 421 LINE",
"157 421 LINE",
"158 420 OFFCURVE",
"157 418 OFFCURVE",
"155 416 CURVE SMOOTH",
"153 413 LINE",
"153 409 LINE SMOOTH",
"153 408 OFFCURVE",
"153 408 OFFCURVE",
"152 408 CURVE",
"152 406 LINE",
"150 406 OFFCURVE",
"149 405 OFFCURVE",
"148 404 CURVE",
"143 404 OFFCURVE",
"140 404 OFFCURVE",
"140 405 CURVE",
"134 409 LINE",
"134 413 LINE SMOOTH",
"134 414 OFFCURVE",
"133 414 OFFCURVE",
"132 416 CURVE",
"132 429 LINE",
"134 429 LINE",
"135 430 OFFCURVE",
"135 431 OFFCURVE",
"135 432 CURVE",
"133 434 OFFCURVE",
"132 435 OFFCURVE",
"132 437 CURVE",
"130 437 OFFCURVE",
"129 436 OFFCURVE",
"129 435 CURVE",
"124 440 LINE",
"124 442 OFFCURVE",
"123 442 OFFCURVE",
"124 443 CURVE",
"124 446 LINE",
"125 446 OFFCURVE",
"126 446 OFFCURVE",
"127 448 CURVE",
"128 448 OFFCURVE",
"129 449 OFFCURVE",
"129 449 CURVE",
"132 449 OFFCURVE",
"132 448 OFFCURVE",
"132 447 CURVE SMOOTH",
"132 446 OFFCURVE",
"133 446 OFFCURVE",
"134 446 CURVE SMOOTH",
"135 446 OFFCURVE",
"137 446 OFFCURVE",
"140 447 CURVE",
"141 448 OFFCURVE",
"143 448 OFFCURVE",
"143 449 CURVE SMOOTH",
"143 447 LINE",
"144 446 OFFCURVE",
"146 446 OFFCURVE",
"146 446 CURVE",
"148 449 LINE",
"151 449 LINE",
"152 448 OFFCURVE",
"152 448 OFFCURVE",
"152 446 CURVE",
"154 448 OFFCURVE",
"155 448 OFFCURVE",
"155 448 CURVE",
"155 449 OFFCURVE",
"157 449 OFFCURVE",
"157 450 CURVE",
"161 451 OFFCURVE",
"160 456 OFFCURVE",
"160 455 CURVE",
"160 456 OFFCURVE",
"160 458 OFFCURVE",
"161 460 CURVE",
"161 461 OFFCURVE",
"161 463 OFFCURVE",
"163 463 CURVE",
"163 463 OFFCURVE",
"163 465 OFFCURVE",
"166 466 CURVE",
"185 466 LINE",
"185 468 LINE",
"189 468 LINE",
"192 471 OFFCURVE",
"194 472 OFFCURVE",
"195 474 CURVE",
"197 475 OFFCURVE",
"200 476 OFFCURVE",
"202 476 CURVE",
"202 480 LINE",
"203 479 OFFCURVE",
"205 477 OFFCURVE",
"207 477 CURVE",
"207 480 LINE",
"209 481 OFFCURVE",
"211 483 OFFCURVE",
"211 484 CURVE",
"212 485 OFFCURVE",
"213 487 OFFCURVE",
"216 488 CURVE",
"221 488 LINE",
"221 484 LINE",
"222 485 OFFCURVE",
"222 483 OFFCURVE",
"223 482 CURVE",
"235 482 LINE",
"235 485 LINE",
"236 483 OFFCURVE",
"237 483 OFFCURVE",
"238 484 CURVE",
"239 488 LINE",
"243 488 LINE SMOOTH",
"241 488 OFFCURVE",
"241 488 OFFCURVE",
"242 489 CURVE SMOOTH",
"243 491 OFFCURVE",
"244 491 OFFCURVE",
"244 491 CURVE",
"247 493 OFFCURVE",
"251 494 OFFCURVE",
"255 495 CURVE SMOOTH",
"258 496 OFFCURVE",
"262 496 OFFCURVE",
"268 496 CURVE",
"268 492 LINE",
"269 493 OFFCURVE",
"269 492 OFFCURVE",
"271 491 CURVE",
"272 491 LINE",
"272 488 OFFCURVE",
"274 485 OFFCURVE",
"277 483 CURVE",
"277 483 OFFCURVE",
"276 481 OFFCURVE",
"275 481 CURVE",
"275 480 OFFCURVE",
"274 480 OFFCURVE",
"274 477 CURVE",
"277 477 LINE",
"277 474 LINE",
"278 474 LINE",
"278 472 LINE",
"286 472 LINE",
"286 468 LINE",
"287 468 LINE SMOOTH",
"289 468 OFFCURVE",
"289 467 OFFCURVE",
"289 466 CURVE",
"292 466 LINE",
"292 464 LINE",
"295 464 OFFCURVE",
"298 464 OFFCURVE",
"304 463 CURVE SMOOTH",
"309 463 OFFCURVE",
"312 463 OFFCURVE",
"313 464 CURVE",
"314 464 OFFCURVE",
"314 465 OFFCURVE",
"314 465 CURVE",
"314 466 LINE",
"319 466 LINE",
"319 468 LINE",
"325 468 LINE",
"328 471 OFFCURVE",
"329 471 OFFCURVE",
"331 470 CURVE",
"332 468 OFFCURVE",
"333 468 OFFCURVE",
"333 468 CURVE",
"335 467 OFFCURVE",
"336 467 OFFCURVE",
"335 468 CURVE",
"336 468 LINE",
"337 467 OFFCURVE",
"338 465 OFFCURVE",
"339 463 CURVE",
"341 461 OFFCURVE",
"342 459 OFFCURVE",
"344 458 CURVE",
"346 458 LINE",
"346 457 LINE",
"355 457 LINE",
"356 454 LINE",
"357 454 LINE",
"357 454 OFFCURVE",
"357 453 OFFCURVE",
"356 454 CURVE",
"357 453 LINE SMOOTH",
"358 451 OFFCURVE",
"360 450 OFFCURVE",
"360 450 CURVE",
"361 449 OFFCURVE",
"361 448 OFFCURVE",
"361 446 CURVE",
"367 446 LINE SMOOTH",
"369 446 OFFCURVE",
"370 447 OFFCURVE",
"371 449 CURVE",
"371 447 OFFCURVE",
"372 446 OFFCURVE",
"372 445 CURVE",
"373 445 LINE",
"373 440 LINE",
"375 440 LINE",
"375 434 LINE",
"378 434 LINE",
"378 429 LINE",
"379 429 LINE",
"379 427 LINE",
"381 427 LINE",
"381 425 LINE",
"384 425 LINE SMOOTH",
"385 425 OFFCURVE",
"386 425 OFFCURVE",
"387 424 CURVE",
"387 422 LINE",
"389 422 LINE",
"389 420 LINE",
"392 420 LINE",
"392 385 LINE",
"390 384 OFFCURVE",
"390 383 OFFCURVE",
"389 382 CURVE",
"389 379 LINE",
"387 379 LINE",
"386 377 OFFCURVE",
"384 373 OFFCURVE",
"384 367 CURVE SMOOTH",
"384 288 LINE",
"381 288 OFFCURVE",
"381 288 OFFCURVE",
"381 287 CURVE",
"384 287 OFFCURVE",
"384 285 OFFCURVE",
"384 282 CURVE",
"379 282 LINE",
"379 280 LINE SMOOTH",
"379 279 OFFCURVE",
"378 278 OFFCURVE",
"378 278 CURVE",
"376 276 OFFCURVE",
"376 275 OFFCURVE",
"377 275 CURVE",
"378 274 OFFCURVE",
"378 273 OFFCURVE",
"378 273 CURVE",
"376 273 OFFCURVE",
"375 272 OFFCURVE",
"375 272 CURVE",
"373 271 OFFCURVE",
"373 271 OFFCURVE",
"373 270 CURVE",
"375 268 OFFCURVE",
"376 268 OFFCURVE",
"378 268 CURVE",
"375 264 LINE",
"378 264 LINE",
"378 262 LINE SMOOTH",
"378 261 OFFCURVE",
"379 261 OFFCURVE",
"379 261 CURVE",
"379 262 OFFCURVE",
"380 262 OFFCURVE",
"381 259 CURVE",
"381 261 OFFCURVE",
"382 262 OFFCURVE",
"381 262 CURVE",
"382 262 OFFCURVE",
"383 263 OFFCURVE",
"384 264 CURVE",
"387 264 LINE",
"387 264 OFFCURVE",
"388 265 OFFCURVE",
"389 265 CURVE",
"389 270 LINE SMOOTH",
"389 271 OFFCURVE",
"390 271 OFFCURVE",
"390 271 CURVE",
"392 272 LINE",
"392 282 LINE",
"395 282 LINE",
"395 292 LINE SMOOTH",
"395 296 OFFCURVE",
"396 298 OFFCURVE",
"398 301 CURVE",
"401 301 LINE",
"401 303 OFFCURVE",
"403 306 OFFCURVE",
"405 309 CURVE",
"405 311 LINE",
"403 311 LINE",
"403 316 LINE",
"401 316 LINE",
"401 356 LINE SMOOTH",
"401 358 OFFCURVE",
"401 359 OFFCURVE",
"402 358 CURVE SMOOTH",
"403 357 OFFCURVE",
"403 358 OFFCURVE",
"403 359 CURVE",
"404 360 OFFCURVE",
"404 362 OFFCURVE",
"403 364 CURVE SMOOTH",
"402 365 OFFCURVE",
"402 368 OFFCURVE",
"401 370 CURVE",
"401 375 LINE SMOOTH",
"401 377 OFFCURVE",
"401 379 OFFCURVE",
"403 379 CURVE",
"403 382 LINE",
"406 382 LINE",
"406 382 OFFCURVE",
"406 383 OFFCURVE",
"405 384 CURVE",
"406 384 OFFCURVE",
"406 384 OFFCURVE",
"406 385 CURVE SMOOTH",
"406 394 LINE",
"411 394 LINE",
"411 407 LINE SMOOTH",
"411 415 OFFCURVE",
"411 422 OFFCURVE",
"410 429 CURVE SMOOTH",
"410 435 OFFCURVE",
"409 440 OFFCURVE",
"405 445 CURVE",
"405 446 LINE",
"398 453 LINE",
"398 466 LINE SMOOTH",
"398 467 OFFCURVE",
"398 468 OFFCURVE",
"400 468 CURVE SMOOTH",
"401 468 LINE",
"401 480 LINE",
"403 480 LINE",
"404 481 OFFCURVE",
"404 483 OFFCURVE",
"404 487 CURVE",
"401 494 LINE",
"401 494 OFFCURVE",
"401 496 OFFCURVE",
"398 497 CURVE",
"398 499 OFFCURVE",
"397 500 OFFCURVE",
"397 500 CURVE",
"395 502 OFFCURVE",
"395 504 OFFCURVE",
"395 505 CURVE",
"394 506 OFFCURVE",
"393 508 OFFCURVE",
"392 508 CURVE",
"392 512 OFFCURVE",
"392 514 OFFCURVE",
"389 517 CURVE",
"388 519 OFFCURVE",
"387 520 OFFCURVE",
"387 522 CURVE SMOOTH",
"387 524 OFFCURVE",
"387 525 OFFCURVE",
"384 527 CURVE",
"384 529 OFFCURVE",
"381 530 OFFCURVE",
"380 531 CURVE",
"378 531 OFFCURVE",
"375 532 OFFCURVE",
"373 534 CURVE",
"372 534 OFFCURVE",
"372 534 OFFCURVE",
"372 537 CURVE",
"371 538 OFFCURVE",
"371 539 OFFCURVE",
"371 540 CURVE",
"364 543 LINE",
"362 543 OFFCURVE",
"361 546 OFFCURVE",
"360 547 CURVE",
"360 555 LINE",
"359 555 OFFCURVE",
"359 555 OFFCURVE",
"359 556 CURVE",
"358 557 OFFCURVE",
"358 557 OFFCURVE",
"357 557 CURVE",
"347 560 LINE",
"343 560 OFFCURVE",
"339 562 OFFCURVE",
"336 563 CURVE",
"336 566 LINE",
"335 566 OFFCURVE",
"332 567 OFFCURVE",
"329 569 CURVE SMOOTH",
"320 574 LINE",
"301 574 LINE",
"298 576 LINE SMOOTH",
"297 577 OFFCURVE",
"296 577 OFFCURVE",
"295 579 CURVE",
"295 580 OFFCURVE",
"293 581 OFFCURVE",
"289 583 CURVE",
"287 586 OFFCURVE",
"285 587 OFFCURVE",
"284 587 CURVE SMOOTH",
"281 588 OFFCURVE",
"278 588 OFFCURVE",
"272 588 CURVE",
"269 586 OFFCURVE",
"266 586 OFFCURVE",
"263 584 CURVE",
"263 584 OFFCURVE",
"262 584 OFFCURVE",
"261 583 CURVE",
"258 583 LINE",
"256 582 OFFCURVE",
"255 582 OFFCURVE",
"253 582 CURVE",
"252 583 OFFCURVE",
"251 583 OFFCURVE",
"249 583 CURVE",
"247 582 OFFCURVE",
"246 581 OFFCURVE",
"243 581 CURVE",
"241 580 OFFCURVE",
"238 580 OFFCURVE",
"236 580 CURVE SMOOTH",
"235 580 OFFCURVE",
"235 581 OFFCURVE",
"234 582 CURVE SMOOTH",
"231 584 LINE SMOOTH",
"229 586 OFFCURVE",
"227 586 OFFCURVE",
"225 587 CURVE SMOOTH",
"223 588 OFFCURVE",
"222 589 OFFCURVE",
"221 589 CURVE SMOOTH",
"217 590 OFFCURVE",
"211 589 OFFCURVE",
"205 586 CURVE SMOOTH",
"194 579 LINE",
"192 577 OFFCURVE",
"191 577 OFFCURVE",
"189 576 CURVE",
"189 575 OFFCURVE",
"187 574 OFFCURVE",
"186 574 CURVE SMOOTH",
"157 574 LINE",
"157 571 LINE",
"157 571 OFFCURVE",
"155 571 OFFCURVE",
"155 569 CURVE",
"152 569 LINE",
"150 568 OFFCURVE",
"149 566 OFFCURVE",
"149 566 CURVE",
"148 564 OFFCURVE",
"146 563 OFFCURVE",
"146 563 CURVE",
"144 563 OFFCURVE",
"143 562 OFFCURVE",
"141 562 CURVE",
"140 560 LINE",
"138 560 OFFCURVE",
"138 559 OFFCURVE",
"138 557 CURVE SMOOTH",
"138 554 LINE",
"137 554 OFFCURVE",
"136 554 OFFCURVE",
"135 552 CURVE SMOOTH",
"134 551 LINE",
"134 551 OFFCURVE",
"134 549 OFFCURVE",
"133 548 CURVE",
"132 548 OFFCURVE",
"132 547 OFFCURVE",
"132 546 CURVE SMOOTH",
"132 544 OFFCURVE",
"132 543 OFFCURVE",
"130 543 CURVE",
"129 542 OFFCURVE",
"129 541 OFFCURVE",
"129 540 CURVE SMOOTH",
"129 538 LINE",
"127 537 OFFCURVE",
"126 537 OFFCURVE",
"126 537 CURVE",
"124 538 OFFCURVE",
"124 537 OFFCURVE",
"124 537 CURVE",
"116 530 LINE SMOOTH",
"113 528 OFFCURVE",
"111 526 OFFCURVE",
"109 524 CURVE",
"109 523 OFFCURVE",
"109 522 OFFCURVE",
"108 522 CURVE",
"107 521 OFFCURVE",
"106 519 OFFCURVE",
"105 519 CURVE SMOOTH",
"102 519 LINE SMOOTH",
"101 519 OFFCURVE",
"101 518 OFFCURVE",
"101 517 CURVE",
"98 513 LINE SMOOTH",
"96 511 OFFCURVE",
"94 511 OFFCURVE",
"93 511 CURVE",
"92 510 OFFCURVE",
"92 509 OFFCURVE",
"92 509 CURVE",
"91 509 OFFCURVE",
"91 510 OFFCURVE",
"88 511 CURVE",
"86 511 LINE",
"86 508 LINE",
"84 507 OFFCURVE",
"82 505 OFFCURVE",
"80 502 CURVE",
"77 500 OFFCURVE",
"75 499 OFFCURVE",
"74 497 CURVE",
"74 496 LINE",
"73 495 OFFCURVE",
"71 494 OFFCURVE",
"70 492 CURVE SMOOTH",
"69 491 OFFCURVE",
"68 491 OFFCURVE",
"68 490 CURVE SMOOTH",
"68 488 LINE",
"66 487 OFFCURVE",
"66 485 OFFCURVE",
"66 484 CURVE",
"64 483 OFFCURVE",
"63 483 OFFCURVE",
"63 482 CURVE SMOOTH",
"63 463 LINE",
"58 454 LINE",
"57 451 OFFCURVE",
"56 449 OFFCURVE",
"56 446 CURVE SMOOTH",
"56 431 LINE SMOOTH",
"56 423 OFFCURVE",
"57 416 OFFCURVE",
"58 409 CURVE",
"64 390 LINE SMOOTH",
"65 387 OFFCURVE",
"65 385 OFFCURVE",
"64 383 CURVE SMOOTH",
"63 382 OFFCURVE",
"63 381 OFFCURVE",
"63 379 CURVE SMOOTH",
"63 361 LINE",
"68 361 LINE SMOOTH",
"69 361 OFFCURVE",
"71 360 OFFCURVE",
"72 359 CURVE",
"72 356 LINE",
"75 356 LINE",
"76 355 OFFCURVE",
"77 354 OFFCURVE",
"77 353 CURVE",
"79 353 LINE",
"79 345 LINE",
"82 345 LINE",
"82 342 LINE",
"84 342 OFFCURVE",
"86 342 OFFCURVE",
"86 341 CURVE",
"87 340 OFFCURVE",
"88 339 OFFCURVE",
"88 337 CURVE SMOOTH",
"88 336 LINE",
"92 336 LINE",
"92 320 LINE",
"88 320 LINE",
"88 316 LINE",
"86 316 LINE",
"86 314 LINE",
"81 314 LINE SMOOTH",
"82 314 OFFCURVE",
"81 313 OFFCURVE",
"79 312 CURVE SMOOTH",
"78 311 OFFCURVE",
"77 311 OFFCURVE",
"77 311 CURVE",
"77 306 LINE",
"86 306 LINE",
"86 309 LINE",
"96 309 LINE",
"96 307 OFFCURVE",
"97 307 OFFCURVE",
"99 307 CURVE",
"99 306 OFFCURVE",
"100 305 OFFCURVE",
"100 305 CURVE",
"100 300 LINE",
"99 298 OFFCURVE",
"99 296 OFFCURVE",
"99 295 CURVE",
"98 293 OFFCURVE",
"98 291 OFFCURVE",
"97 289 CURVE SMOOTH",
"96 287 OFFCURVE",
"96 287 OFFCURVE",
"96 286 CURVE",
"95 286 LINE",
"95 278 LINE",
"96 278 LINE",
"99 274 OFFCURVE",
"99 273 OFFCURVE",
"99 273 CURVE",
"100 274 OFFCURVE",
"100 273 OFFCURVE",
"101 273 CURVE",
"100 273 OFFCURVE",
"100 271 OFFCURVE",
"100 268 CURVE SMOOTH",
"100 265 OFFCURVE",
"100 265 OFFCURVE",
"101 262 CURVE",
"100 261 OFFCURVE",
"99 259 OFFCURVE",
"96 259 CURVE",
"96 256 LINE",
"95 256 LINE",
"95 253 LINE",
"96 253 OFFCURVE",
"94 253 OFFCURVE",
"93 251 CURVE",
"93 246 LINE",
"92 246 OFFCURVE",
"91 246 OFFCURVE",
"90 248 CURVE",
"89 248 OFFCURVE",
"88 248 OFFCURVE",
"87 246 CURVE",
"86 246 LINE",
"86 250 LINE",
"84 250 LINE",
"83 249 OFFCURVE",
"83 250 OFFCURVE",
"82 251 CURVE",
"79 251 LINE",
"79 250 OFFCURVE",
"79 248 OFFCURVE",
"78 248 CURVE SMOOTH",
"77 248 OFFCURVE",
"77 246 OFFCURVE",
"77 245 CURVE",
"74 245 LINE",
"74 235 LINE",
"77 235 LINE",
"77 236 LINE SMOOTH",
"77 237 OFFCURVE",
"78 238 OFFCURVE",
"80 237 CURVE SMOOTH",
"82 236 LINE",
"83 236 OFFCURVE",
"84 236 OFFCURVE",
"86 235 CURVE",
"86 228 LINE",
"87 228 LINE",
"87 223 LINE",
"86 223 LINE",
"86 204 LINE",
"87 203 OFFCURVE",
"88 202 OFFCURVE",
"88 199 CURVE SMOOTH",
"88 189 LINE",
"91 184 OFFCURVE",
"92 178 OFFCURVE",
"93 172 CURVE SMOOTH",
"94 166 OFFCURVE",
"95 159 OFFCURVE",
"95 151 CURVE SMOOTH",
"95 138 LINE",
"94 136 OFFCURVE",
"93 133 OFFCURVE",
"91 130 CURVE SMOOTH",
"89 128 OFFCURVE",
"88 126 OFFCURVE",
"87 124 CURVE SMOOTH",
"86 122 OFFCURVE",
"86 119 OFFCURVE",
"86 117 CURVE",
"85 115 OFFCURVE",
"85 113 OFFCURVE",
"83 111 CURVE",
"83 87 LINE",
"85 86 OFFCURVE",
"86 84 OFFCURVE",
"90 82 CURVE",
"92 80 OFFCURVE",
"94 79 OFFCURVE",
"95 79 CURVE",
"95 75 LINE SMOOTH",
"95 73 OFFCURVE",
"96 72 OFFCURVE",
"96 70 CURVE",
"99 69 OFFCURVE",
"100 68 OFFCURVE",
"100 66 CURVE",
"101 64 OFFCURVE",
"102 63 OFFCURVE",
"102 61 CURVE",
"118 61 LINE",
"118 60 LINE",
"124 55 LINE SMOOTH",
"125 54 OFFCURVE",
"127 53 OFFCURVE",
"129 52 CURVE",
"129 47 LINE",
"132 46 OFFCURVE",
"134 44 OFFCURVE",
"135 43 CURVE SMOOTH",
"137 41 OFFCURVE",
"138 39 OFFCURVE",
"140 38 CURVE",
"140 27 LINE",
"142 27 LINE",
"142 24 LINE",
"145 24 OFFCURVE",
"149 24 OFFCURVE",
"155 25 CURVE SMOOTH",
"160 25 OFFCURVE",
"163 24 OFFCURVE",
"166 22 CURVE",
"166 1 LINE"
);
},
{
closed = 1;
nodes = (
"68 250 LINE",
"69 252 OFFCURVE",
"69 253 OFFCURVE",
"69 255 CURVE SMOOTH",
"69 256 OFFCURVE",
"69 256 OFFCURVE",
"68 256 CURVE",
"66 257 OFFCURVE",
"66 260 OFFCURVE",
"65 262 CURVE SMOOTH",
"64 264 OFFCURVE",
"64 266 OFFCURVE",
"64 270 CURVE",
"63 270 LINE",
"63 274 LINE",
"60 274 LINE",
"60 276 OFFCURVE",
"60 279 OFFCURVE",
"59 279 CURVE",
"56 282 LINE",
"50 282 LINE",
"50 279 OFFCURVE",
"50 276 OFFCURVE",
"51 273 CURVE",
"51 265 LINE",
"56 265 LINE SMOOTH",
"54 265 OFFCURVE",
"54 262 OFFCURVE",
"54 259 CURVE",
"56 259 LINE",
"57 256 OFFCURVE",
"59 255 OFFCURVE",
"60 254 CURVE SMOOTH",
"62 253 OFFCURVE",
"63 252 OFFCURVE",
"63 250 CURVE"
);
},
{
closed = 1;
nodes = (
"77 266 OFFCURVE",
"79 267 OFFCURVE",
"79 267 CURVE",
"80 268 OFFCURVE",
"82 268 OFFCURVE",
"83 268 CURVE",
"83 270 LINE",
"79 270 LINE",
"78 271 OFFCURVE",
"77 272 OFFCURVE",
"77 273 CURVE",
"77 273 OFFCURVE",
"75 274 OFFCURVE",
"74 274 CURVE",
"74 271 LINE SMOOTH",
"74 269 OFFCURVE",
"74 267 OFFCURVE",
"77 265 CURVE"
);
},
{
closed = 1;
nodes = (
"227 132 OFFCURVE",
"229 133 OFFCURVE",
"230 133 CURVE",
"231 135 OFFCURVE",
"233 134 OFFCURVE",
"235 133 CURVE",
"235 138 LINE",
"237 138 OFFCURVE",
"238 138 OFFCURVE",
"238 139 CURVE",
"239 139 LINE SMOOTH",
"241 139 OFFCURVE",
"241 139 OFFCURVE",
"241 138 CURVE",
"243 139 OFFCURVE",
"243 139 OFFCURVE",
"243 142 CURVE",
"253 142 LINE",
"253 143 LINE",
"259 143 LINE",
"259 144 LINE",
"260 144 LINE",
"260 147 OFFCURVE",
"258 150 OFFCURVE",
"255 153 CURVE",
"255 154 LINE",
"253 154 LINE",
"254 155 OFFCURVE",
"253 156 OFFCURVE",
"252 156 CURVE",
"252 157 OFFCURVE",
"251 157 OFFCURVE",
"250 158 CURVE",
"249 158 LINE",
"247 157 LINE",
"246 156 LINE",
"241 156 LINE",
"239 154 LINE",
"230 154 LINE",
"230 156 LINE",
"227 156 LINE",
"224 157 OFFCURVE",
"222 157 OFFCURVE",
"222 156 CURVE SMOOTH",
"222 155 OFFCURVE",
"222 154 OFFCURVE",
"221 154 CURVE SMOOTH",
"217 154 LINE SMOOTH",
"216 154 OFFCURVE",
"216 153 OFFCURVE",
"216 153 CURVE",
"210 153 LINE SMOOTH",
"208 153 OFFCURVE",
"207 153 OFFCURVE",
"207 154 CURVE",
"202 154 OFFCURVE",
"200 153 OFFCURVE",
"198 153 CURVE",
"198 147 LINE",
"197 145 OFFCURVE",
"198 144 OFFCURVE",
"200 144 CURVE",
"200 143 LINE",
"202 142 OFFCURVE",
"203 142 OFFCURVE",
"203 142 CURVE",
"211 142 LINE",
"211 139 OFFCURVE",
"211 139 OFFCURVE",
"212 138 CURVE",
"212 139 OFFCURVE",
"213 139 OFFCURVE",
"216 139 CURVE",
"216 139 OFFCURVE",
"217 138 OFFCURVE",
"218 138 CURVE",
"219 136 OFFCURVE",
"220 136 OFFCURVE",
"222 135 CURVE SMOOTH",
"223 134 OFFCURVE",
"224 133 OFFCURVE",
"226 130 CURVE"
);
},
{
closed = 1;
nodes = (
"64 293 LINE",
"64 296 LINE",
"67 296 OFFCURVE",
"68 297 OFFCURVE",
"67 297 CURVE",
"67 298 OFFCURVE",
"68 298 OFFCURVE",
"69 296 CURVE",
"69 305 LINE",
"68 307 OFFCURVE",
"68 310 OFFCURVE",
"68 314 CURVE",
"66 314 LINE",
"67 315 OFFCURVE",
"66 315 OFFCURVE",
"64 316 CURVE",
"64 320 LINE",
"63 320 LINE",
"63 324 LINE",
"60 324 LINE",
"60 332 LINE",
"54 332 LINE",
"54 322 LINE",
"56 322 LINE",
"56 319 LINE",
"60 319 LINE",
"60 315 LINE",
"59 314 OFFCURVE",
"59 312 OFFCURVE",
"59 311 CURVE",
"63 311 LINE",
"63 305 OFFCURVE",
"60 302 OFFCURVE",
"56 301 CURVE",
"56 299 OFFCURVE",
"57 297 OFFCURVE",
"57 297 CURVE",
"58 296 OFFCURVE",
"60 295 OFFCURVE",
"60 293 CURVE"
);
},
{
closed = 1;
nodes = (
"79 325 LINE",
"80 326 OFFCURVE",
"80 327 OFFCURVE",
"82 328 CURVE",
"82 329 OFFCURVE",
"82 329 OFFCURVE",
"80 329 CURVE",
"80 330 OFFCURVE",
"78 331 OFFCURVE",
"77 332 CURVE",
"77 325 LINE"
);
},
{
closed = 1;
nodes = (
"255 165 LINE SMOOTH",
"258 165 OFFCURVE",
"259 165 OFFCURVE",
"260 166 CURVE",
"263 166 OFFCURVE",
"266 166 OFFCURVE",
"269 167 CURVE",
"272 167 OFFCURVE",
"275 169 OFFCURVE",
"277 170 CURVE",
"278 170 OFFCURVE",
"277 172 OFFCURVE",
"274 174 CURVE",
"253 174 LINE",
"253 170 LINE",
"252 171 OFFCURVE",
"251 172 OFFCURVE",
"251 171 CURVE",
"250 170 OFFCURVE",
"249 171 OFFCURVE",
"249 172 CURVE",
"246 172 LINE",
"246 167 LINE",
"247 167 OFFCURVE",
"249 165 OFFCURVE",
"250 165 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"309 94 OFFCURVE",
"310 94 OFFCURVE",
"311 96 CURVE",
"313 98 LINE",
"319 98 LINE",
"319 101 LINE",
"323 101 LINE",
"323 103 OFFCURVE",
"323 104 OFFCURVE",
"324 106 CURVE SMOOTH",
"325 107 OFFCURVE",
"324 109 OFFCURVE",
"323 110 CURVE",
"323 112 OFFCURVE",
"323 114 OFFCURVE",
"322 117 CURVE",
"322 119 OFFCURVE",
"322 122 OFFCURVE",
"327 122 CURVE SMOOTH",
"328 122 LINE",
"328 122 OFFCURVE",
"329 122 OFFCURVE",
"331 124 CURVE",
"331 127 LINE",
"332 128 OFFCURVE",
"333 130 OFFCURVE",
"333 131 CURVE SMOOTH",
"333 133 OFFCURVE",
"333 134 OFFCURVE",
"334 135 CURVE",
"335 135 OFFCURVE",
"336 136 OFFCURVE",
"336 136 CURVE",
"337 136 OFFCURVE",
"337 137 OFFCURVE",
"338 138 CURVE SMOOTH",
"339 139 OFFCURVE",
"342 140 OFFCURVE",
"344 142 CURVE SMOOTH",
"346 144 OFFCURVE",
"348 146 OFFCURVE",
"350 147 CURVE",
"351 147 OFFCURVE",
"352 148 OFFCURVE",
"354 148 CURVE",
"357 151 LINE",
"357 154 LINE",
"360 154 LINE",
"361 156 LINE",
"360 156 OFFCURVE",
"361 157 OFFCURVE",
"361 158 CURVE SMOOTH",
"361 162 LINE SMOOTH",
"361 163 OFFCURVE",
"361 164 OFFCURVE",
"360 165 CURVE",
"356 167 OFFCURVE",
"355 167 OFFCURVE",
"355 165 CURVE",
"352 164 OFFCURVE",
"350 163 OFFCURVE",
"349 162 CURVE",
"348 162 OFFCURVE",
"347 161 OFFCURVE",
"347 159 CURVE SMOOTH",
"347 156 LINE",
"346 156 OFFCURVE",
"345 155 OFFCURVE",
"344 154 CURVE",
"338 154 LINE",
"338 153 LINE",
"334 153 LINE",
"334 152 LINE SMOOTH",
"334 151 OFFCURVE",
"333 151 OFFCURVE",
"333 151 CURVE",
"332 151 OFFCURVE",
"331 150 OFFCURVE",
"331 148 CURVE",
"328 148 LINE",
"328 144 LINE",
"327 144 LINE",
"327 142 LINE SMOOTH",
"327 139 OFFCURVE",
"326 139 OFFCURVE",
"326 139 CURVE",
"325 139 LINE",
"325 139 OFFCURVE",
"325 137 OFFCURVE",
"326 136 CURVE",
"326 136 OFFCURVE",
"326 135 OFFCURVE",
"325 135 CURVE",
"325 134 OFFCURVE",
"324 133 OFFCURVE",
"323 133 CURVE",
"323 125 LINE",
"321 125 LINE",
"320 124 LINE",
"323 122 LINE",
"321 121 OFFCURVE",
"320 119 OFFCURVE",
"318 117 CURVE SMOOTH",
"316 115 OFFCURVE",
"314 113 OFFCURVE",
"313 111 CURVE SMOOTH",
"312 110 LINE",
"311 110 LINE",
"311 107 LINE",
"309 107 LINE",
"309 106 LINE",
"305 106 LINE",
"306 104 OFFCURVE",
"306 103 OFFCURVE",
"306 102 CURVE SMOOTH",
"306 101 OFFCURVE",
"304 99 OFFCURVE",
"304 98 CURVE SMOOTH",
"304 97 OFFCURVE",
"304 96 OFFCURVE",
"305 96 CURVE SMOOTH",
"306 96 OFFCURVE",
"306 95 OFFCURVE",
"308 95 CURVE"
);
},
{
closed = 1;
nodes = (
"324 178 OFFCURVE",
"325 178 OFFCURVE",
"326 179 CURVE",
"328 179 OFFCURVE",
"329 179 OFFCURVE",
"331 178 CURVE",
"332 179 OFFCURVE",
"333 179 OFFCURVE",
"332 179 CURVE",
"331 178 OFFCURVE",
"332 179 OFFCURVE",
"333 181 CURVE",
"335 181 OFFCURVE",
"336 181 OFFCURVE",
"335 182 CURVE",
"335 182 OFFCURVE",
"335 184 OFFCURVE",
"336 186 CURVE",
"338 185 LINE",
"338 189 LINE",
"341 189 LINE",
"341 190 OFFCURVE",
"341 190 OFFCURVE",
"340 191 CURVE",
"339 191 OFFCURVE",
"339 193 OFFCURVE",
"339 193 CURVE",
"338 194 OFFCURVE",
"338 195 OFFCURVE",
"338 195 CURVE",
"339 196 OFFCURVE",
"341 197 OFFCURVE",
"341 198 CURVE",
"342 198 OFFCURVE",
"342 199 OFFCURVE",
"342 199 CURVE",
"344 199 LINE SMOOTH",
"345 199 OFFCURVE",
"346 200 OFFCURVE",
"346 202 CURVE",
"355 202 LINE",
"355 199 LINE",
"357 199 LINE",
"358 198 LINE SMOOTH",
"359 197 OFFCURVE",
"360 196 OFFCURVE",
"360 195 CURVE",
"367 195 LINE",
"372 196 OFFCURVE",
"375 196 OFFCURVE",
"375 198 CURVE",
"376 199 LINE SMOOTH",
"378 200 OFFCURVE",
"378 202 OFFCURVE",
"378 202 CURVE",
"378 203 OFFCURVE",
"379 205 OFFCURVE",
"378 206 CURVE",
"378 211 LINE",
"356 211 LINE",
"356 214 OFFCURVE",
"355 216 OFFCURVE",
"353 216 CURVE SMOOTH",
"352 216 OFFCURVE",
"352 218 OFFCURVE",
"352 221 CURVE",
"348 221 OFFCURVE",
"347 222 OFFCURVE",
"347 223 CURVE",
"345 225 OFFCURVE",
"345 226 OFFCURVE",
"344 227 CURVE",
"343 227 OFFCURVE",
"342 228 OFFCURVE",
"342 228 CURVE",
"338 231 LINE",
"337 232 LINE",
"336 232 LINE",
"336 235 LINE",
"335 236 OFFCURVE",
"334 236 OFFCURVE",
"334 236 CURVE",
"333 235 OFFCURVE",
"333 236 OFFCURVE",
"333 236 CURVE",
"332 236 OFFCURVE",
"331 236 OFFCURVE",
"331 239 CURVE",
"331 239 OFFCURVE",
"330 241 OFFCURVE",
"330 242 CURVE",
"328 243 OFFCURVE",
"328 244 OFFCURVE",
"328 244 CURVE",
"327 245 OFFCURVE",
"326 245 OFFCURVE",
"325 245 CURVE",
"325 246 LINE SMOOTH",
"325 248 OFFCURVE",
"323 248 OFFCURVE",
"320 250 CURVE",
"320 253 OFFCURVE",
"317 256 OFFCURVE",
"313 258 CURVE",
"313 259 OFFCURVE",
"312 259 OFFCURVE",
"311 257 CURVE SMOOTH",
"310 256 OFFCURVE",
"309 256 OFFCURVE",
"309 256 CURVE",
"309 246 LINE",
"311 245 LINE",
"311 242 LINE",
"312 240 OFFCURVE",
"314 239 OFFCURVE",
"314 235 CURVE",
"318 235 LINE",
"318 203 LINE",
"316 203 OFFCURVE",
"314 202 OFFCURVE",
"314 199 CURVE",
"300 199 LINE",
"300 198 LINE",
"293 198 LINE",
"291 199 OFFCURVE",
"288 198 OFFCURVE",
"286 198 CURVE SMOOTH",
"281 198 LINE",
"281 199 LINE",
"278 201 OFFCURVE",
"278 201 OFFCURVE",
"277 199 CURVE SMOOTH",
"276 198 OFFCURVE",
"275 198 OFFCURVE",
"274 198 CURVE SMOOTH",
"271 198 LINE",
"272 195 LINE",
"278 195 LINE",
"278 194 LINE",
"286 194 LINE",
"286 191 LINE",
"292 191 LINE",
"292 189 LINE",
"295 189 LINE",
"295 188 LINE",
"304 188 LINE",
"304 185 LINE",
"304 185 OFFCURVE",
"304 186 OFFCURVE",
"306 186 CURVE SMOOTH",
"309 186 LINE",
"309 185 OFFCURVE",
"309 185 OFFCURVE",
"310 185 CURVE SMOOTH",
"311 185 LINE",
"312 182 OFFCURVE",
"314 182 OFFCURVE",
"317 182 CURVE",
"318 184 OFFCURVE",
"320 183 OFFCURVE",
"320 181 CURVE",
"322 181 OFFCURVE",
"323 179 OFFCURVE",
"323 178 CURVE"
);
},
{
closed = 1;
nodes = (
"327 286 LINE SMOOTH",
"328 286 OFFCURVE",
"328 286 OFFCURVE",
"328 287 CURVE",
"331 287 LINE",
"331 288 OFFCURVE",
"333 290 OFFCURVE",
"336 293 CURVE",
"336 296 LINE",
"341 296 LINE",
"341 299 LINE",
"342 299 OFFCURVE",
"342 300 OFFCURVE",
"343 300 CURVE",
"344 301 OFFCURVE",
"344 302 OFFCURVE",
"344 302 CURVE",
"350 302 OFFCURVE",
"354 302 OFFCURVE",
"357 304 CURVE",
"360 304 OFFCURVE",
"362 306 OFFCURVE",
"364 309 CURVE",
"364 311 LINE",
"362 311 OFFCURVE",
"362 312 OFFCURVE",
"364 314 CURVE",
"364 314 OFFCURVE",
"365 315 OFFCURVE",
"365 316 CURVE",
"367 317 OFFCURVE",
"367 318 OFFCURVE",
"367 318 CURVE",
"367 319 OFFCURVE",
"367 319 OFFCURVE",
"368 320 CURVE",
"368 323 LINE",
"367 325 OFFCURVE",
"367 325 OFFCURVE",
"365 325 CURVE SMOOTH",
"364 325 LINE",
"364 328 LINE",
"360 328 LINE",
"360 331 LINE",
"359 331 OFFCURVE",
"358 331 OFFCURVE",
"356 332 CURVE SMOOTH",
"355 333 OFFCURVE",
"355 334 OFFCURVE",
"355 336 CURVE",
"353 336 OFFCURVE",
"351 336 OFFCURVE",
"348 334 CURVE SMOOTH",
"347 333 OFFCURVE",
"344 333 OFFCURVE",
"342 334 CURVE",
"341 336 LINE",
"336 336 LINE",
"336 337 OFFCURVE",
"336 337 OFFCURVE",
"335 338 CURVE",
"335 339 OFFCURVE",
"335 339 OFFCURVE",
"334 340 CURVE",
"333 340 OFFCURVE",
"333 341 OFFCURVE",
"333 342 CURVE",
"323 342 LINE",
"323 343 LINE",
"322 344 OFFCURVE",
"322 345 OFFCURVE",
"320 345 CURVE",
"313 343 LINE",
"313 342 LINE",
"305 342 LINE",
"304 340 LINE",
"305 339 OFFCURVE",
"304 339 OFFCURVE",
"304 339 CURVE",
"304 336 LINE",
"302 336 OFFCURVE",
"300 336 OFFCURVE",
"298 335 CURVE SMOOTH",
"296 334 OFFCURVE",
"295 334 OFFCURVE",
"295 334 CURVE",
"295 332 LINE",
"294 331 OFFCURVE",
"293 331 OFFCURVE",
"292 329 CURVE",
"289 329 LINE",
"289 329 OFFCURVE",
"289 328 OFFCURVE",
"291 328 CURVE SMOOTH",
"292 328 OFFCURVE",
"291 327 OFFCURVE",
"289 325 CURVE",
"289 324 OFFCURVE",
"288 324 OFFCURVE",
"287 324 CURVE",
"287 322 LINE SMOOTH",
"287 320 OFFCURVE",
"286 320 OFFCURVE",
"286 320 CURVE",
"286 312 LINE SMOOTH",
"286 311 OFFCURVE",
"289 309 OFFCURVE",
"292 307 CURVE",
"293 305 OFFCURVE",
"293 302 OFFCURVE",
"289 299 CURVE",
"291 298 OFFCURVE",
"292 297 OFFCURVE",
"291 297 CURVE",
"289 296 OFFCURVE",
"291 296 OFFCURVE",
"292 296 CURVE SMOOTH",
"309 296 LINE",
"309 294 LINE",
"310 293 OFFCURVE",
"311 293 OFFCURVE",
"313 293 CURVE",
"313 291 OFFCURVE",
"314 289 OFFCURVE",
"316 289 CURVE",
"319 286 LINE"
);
}
);
width = 461;
}
);
},
{
glyphname = ringacute;
lastChange = "2021-12-23 19:26:23 +0000";
layers = (
{
components = (
{
name = ringcomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 60, 119}";
}
);
layerId = "16A236A6-57F5-4152-84D1-48D854BBAFA9";
width = 116;
}
);
}
);
instances = (
{
interpolationWeight = 400;
instanceInterpolations = {
"16A236A6-57F5-4152-84D1-48D854BBAFA9" = 1;
};
name = Regular;
weightClass = Normal;
}
);
manufacturer = "Robert E. Leuschke";
manufacturerURL = www.typesetit.com;
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 3;
}
